(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1522991,      30327]
NotebookOptionsPosition[   1516457,      30213]
NotebookOutlinePosition[   1516831,      30229]
CellTagsIndexPosition[   1516788,      30226]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ol500c24h", ",", "ol500c24hkeep", ",", "ol500c24hkill", ",", 
     "ol500c24hmem", ",", "oltyp"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\ol500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.919858710179872*^9, 3.919858883409314*^9}, {
   3.920030931496378*^9, 3.920030961691174*^9}, 3.920030992870123*^9, {
   3.920031037905022*^9, 3.920031057945324*^9}, {3.922197748471878*^9, 
   3.9221978304647274`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ol500c24h", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "4", "]"}], "]"}], "/", 
    RowBox[{
     RowBox[{"ol500c24h", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "6", "]"}], "]"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922290509588751*^9, 3.922290586419569*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"edbc8ee2-eb33-4bfb-835c-6f859f57c7e0"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{500., 0}, {550., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{48.729423538831036`, 79.02750200160125}, {
           120.21727866446373`, 123.16994487172815`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{550., 0}, {600., 13.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{78.32750200160126, 108.62558046437148`}, {
           93.18528417729094, 123.16994487172815`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13]& ,
        TagBoxNote->"13"],
       StyleBox["13", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{600., 0}, {650., 30.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{107.92558046437148`, 138.22365892714163`}, {
           54.889958653796114`, 123.16994487172815`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{650., 0}, {700., 66.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{137.52365892714164`, 
           167.82173738991185`}, {-26.206024807722287`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 66]& ,
        TagBoxNote->"66"],
       StyleBox["66", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[66, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{700., 0}, {750., 102.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{167.12173738991186`, 
           197.41981585268206`}, {-107.30200826924073`, 123.16994487172815`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 102]& ,
        TagBoxNote->"102"],
       StyleBox["102", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[102, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{750., 0}, {800., 118.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{196.71981585268207`, 
           227.01789431545228`}, {-143.34466758547114`, 123.16994487172815`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 118]& ,
        TagBoxNote->"118"],
       StyleBox["118", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[118, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{800., 0}, {850., 83.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{226.31789431545226`, 
           256.6159727782225}, {-64.50135033121714, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 83]& ,
        TagBoxNote->"83"],
       StyleBox["83", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[83, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{850., 0}, {900., 56.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{255.91597277822245`, 
           286.2140512409927}, {-3.6793627350783282`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 56]& ,
        TagBoxNote->"56"],
       StyleBox["56", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[56, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{900., 0}, {950., 16.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{285.51405124099267`, 315.8121297037629}, {
           86.4272855554977, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16]& ,
        TagBoxNote->"16"],
       StyleBox["16", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{950., 0}, {1000., 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{315.1121297037629, 345.4102081665331}, {
           108.9539476281417, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1000., 0}, {1050., 4.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{344.7102081665331, 375.0082866293033}, {
           113.45928004267051`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1050., 0}, {1100., 2.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{374.3082866293033, 404.60636509207353`}, {
           117.96461245719932`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1100., 0}, {1150., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{403.90636509207354`, 434.20444355484375`}, {
           120.21727866446372`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1150., 0}, {1200., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{433.50444355484376`, 463.80252201761397`}, {
           120.21727866446372`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1200., 0}, {1250., 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{463.102522017614, 493.40060048038407`}, {
           120.21727866446372`, 123.16994487172818`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{485., 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotRange->{{500., 1250.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9222905594846835`*^9, 3.9222905887174296`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"dad54e30-1c72-45d1-9a0c-bd470a6c1bcf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hmu400gen", ",", "hmu800gen", ",", "hmu1400gen", ",", "hmu400keep", ",", 
     "hmu800keep", ",", "hmu1400keep", ",", "hmu400kill", ",", "hmu800kill", 
     ",", "hmu1400kill", ",", "hmu400mem", ",", "hmu800mem", ",", 
     "hmu1400mem", ",", "hmu400typ", ",", "hmu800typ", ",", "hmu1400typ"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hmu500c24htest.mx\
\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222879675124087`*^9, 3.922288001068795*^9}, {
   3.9222880446961937`*^9, 3.9222880473636737`*^9}, 3.9222884366430645`*^9},
 CellLabel->
  "In[237]:=",ExpressionUUID->"f49add46-0c0c-4aa5-93a1-ab0a3cdbab10"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hmutyp500", ",", "hmutyp600", ",", "hmutyp700", ",", "hmutyp900", ",", 
     "hmutyp1000", ",", "hmutyp1100", ",", "hmutyp1200", ",", "hmutyp1300"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hmutyp.mx\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222029260436487`*^9, 3.922202984742193*^9}, {
  3.9222886866167965`*^9, 3.9222886963895054`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"d8d44def-109e-478a-a035-d77f46188e91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu800gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu800gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu1400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu1400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.004"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865638775331*^9, 3.919865653417479*^9}, {
   3.9198656920748906`*^9, 3.919865862016964*^9}, {3.919865896111528*^9, 
   3.919865896198881*^9}, {3.919865944347963*^9, 3.919865969655102*^9}, {
   3.9198744084680824`*^9, 3.919874414900755*^9}, {3.9199563079197483`*^9, 
   3.919956308160919*^9}, {3.9200327682100925`*^9, 3.9200327837821712`*^9}, {
   3.9202155250876503`*^9, 3.920215530210655*^9}, {3.922198412463546*^9, 
   3.922198513159134*^9}, {3.922199062205219*^9, 3.9221990990213785`*^9}, {
   3.922199200987693*^9, 3.9221992284686203`*^9}, {3.9221992681337147`*^9, 
   3.922199273579796*^9}, {3.9221993610836105`*^9, 3.9221993961636305`*^9}, {
   3.922199709818567*^9, 3.922199723451556*^9}, {3.922199822361055*^9, 
   3.922199885044804*^9}, {3.9221999688566213`*^9, 3.9221999990238132`*^9}, {
   3.9222000610905027`*^9, 3.922200117581193*^9}, {3.922200156498107*^9, 
   3.9222001706071496`*^9}, {3.9222003620451374`*^9, 
   3.9222004084106283`*^9}, {3.9222004715143747`*^9, 3.922200556041106*^9}, {
   3.9222005886864185`*^9, 3.9222006548595834`*^9}, {3.9222006905286813`*^9, 
   3.922200748508935*^9}, {3.9222009315457373`*^9, 3.922200980334428*^9}, 
   3.922201092411462*^9, {3.9222012027600536`*^9, 3.92220124017941*^9}, {
   3.9222012733955107`*^9, 3.922201346545119*^9}, {3.9222017311377716`*^9, 
   3.9222019320602217`*^9}, {3.9222019662801476`*^9, 3.922202016578907*^9}, 
   3.922204738327344*^9, 3.9222048022033854`*^9, 3.9222887759467583`*^9, {
   3.9222888131057158`*^9, 3.9222889141850777`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxle3c0l2/8vhkSWRmFCqFhSyTP62WPkL33Xm97773TLjSEjD4hSSFUZmSF
FJWyKjJDUsLX75/fOd/zvf95zutcz32/7us617me+/njPuzgY+BMQUZGxk9J
Rvb/nv9nmHzJp6fpgfe0Jj1abnVEbNAZscs8axCYLiHNKFRPkMXyBh3WocLU
ZzIuz8kbidi2OwNhGQwoYugpV/XnOWGXtJdzxokVr35UlfZOfUmQlfap7aPi
xH42r3HZe03Ey9cXghQLubE44HKXd38zUbkmNCCTfwi3xU9UVzG1EmS0qTPd
S3yo6MVnRuXYRthxTZM54hH8fea+XUxnO1F5TIPzzwUhNBh1iKBV7SCYzpSK
XfhyFH+qVmdXvOsk7HRo1Y+IncDtxMivbTFdRKWNm019tCieEkhRDFLsIWhl
p54Ju4rjZ49Hqz3cfUQlXm1fyZLA9tnNtrtpbwgzTZWB508lsZDLXGTzcj9B
a7A6mvZZCh/OJv8xfjBAVFrcmzHadRKZJEpitAcHCTNHo18HRWXw+VZUwVP6
IYLWi4p81vgUVslXx9gbvyMqA6v3PI2SxbnsY8kble8JsygnzrgiOaS696XO
9OAIQZvMJqDdcxpNGryyfPI/EJVZrWIcv+SxvbytR032E2F2I1B+glsBI6kn
g3qmRgnauwLq5SoEdjm+PjZc8oWoLH1rEOoFaMeQT1JuGiMqzZQeHtZCrKbw
KNl8Nk5QWe8/SfMZ0a/ha0Bm0wRhZr/8bM5PEZ+HVN6NHZokKp1f4wC1EsrQ
BVkl/Z4iqDwK2mtylFAxQScOhb8RZt7h2rdFlLHupvNdTbfvRKW/wUB8kzKW
yah2q9VOE1Qhx8zcjFXwav5tk6+cPwizCIrPOjMquFn0nr05fZaojPngKBWl
inlx6w+KGecJqsSqGU5mNXSkG551LlogzFLTfbbuqWFLaeHqF6ElojLT4dek
rDpW/2VvkKD5SVBdOh3R2a2OD++WbjH+/EmYXWMhf2ingZxUR14ufF0mKnN+
JF9d1UCmwtfNxLcVgupO857wVE2Urdmr5rW8SpgV5F625dbC2z8eFy/uXiMq
i/05VSu1sPuFlYWG+G+C6oHWnWMqZ/HmQBv1mMM6YfWQT4Bp+CzKFGl8UC/8
Q1Q+/nv/l6c2plTlvSRf/ktQ1Q6IfdzWxqfX9xZfOfePsGr478nLKzoopxT0
PaRhk6h8GS9fLKSLTo+/UWvJbRNUbRZNGfW6WFThrX3OkQysOiXV/c6dw3c5
bM+iJMmhsmd3j8nkOUzk9BuP300BFO5+R+/I66G3vs7DB7MUIOppPXcxSQ+N
ew60qb+jBDOS5sOEPj3UcNdjL3lNBfE+J/2DufRxoqZ438FOaqjwO3zS3VEf
/c++Its1sAuGAxjWLcv1UWzW2LzqKw1QBP95pvtbH4u/pEaGU9GBaOjXKEVF
A5TdFXm1XnQ3mIX3o3SGARpZcT4ecaKHxMhGSqEhA7wfS0kIleyBiuj77VwH
DZGMRYOGfo0BhmOvpe1xN0TdFY2z3/T3AlVCnPZ2lSGeH3yTfMGaCUSTSHuX
/xkirUGC1G4uZjBLMR+YUjPCK7y5DDc+MkNimuq19xeN0EbuuoZnEQtUZEiY
vf5ghH89gg2fB7PC8HmeA40CxviiruxG+zk2oLpI9/mhtzGWUjanPxXfB6KX
f90tqDVGl1HGX6+42MHs6rjjNQoTfP7zwxkpeg5IvN4jmKptgoKiva2S1JxQ
kV03E37dBPf0hVpv0XDBcG5RGWnMBNfYSKJvWPcD1e1LPnbHTHHli9O/ceED
IJoXJWkYaIoBl3bv8lPnBot891+qz01x0WPSqdaHBxILjWtlac1QOKljaSWf
FyqKFCOOG5ih1INgHofPB+FDiQjBe8sM10pVGPMuHwKq/7jImb+Z4cyTCR4n
+cMgWkbdSilujvXiInx5M4fBouJn8lqYORquk+8l3eaDxMpRzZkWc+TSYJ1b
MOGHiqrOPZ8YLPCvlZ+hKrsAfKh+0tdraoG3o1Ytsz4KAFVN/uWmfAss1C0M
mCk+AqJ1542rZy0w0CfPMThUECzqwzhLTlqiZXdTq4GeECQ2On/MibHEiZz4
zTxRYah4oX8ns9MS35XvCY5iPQofmhTsY1itUNK4v3X39lGgaj0q4G9thQYH
/uq6/DwGou37vjuVWOFkSh175Y/jYNFB/p/pTytkpA9wopk9AYmv57205K1R
/MuVxrRlEajsHhFTSLJGTRAXNSYXgw+9bctifdaYPH4moZVeHKj6Hz3h47JB
EX/PovxccRAfvB26z9EG2TXMy86JSIDFUJo8bbkNauus/x5tkYDE90Fbf9ds
0PU0cdHSRhIqR+yb5tEWvS0SRob+ScKHjzqJY+m2eLyvrMAiTwqoPsupD761
xW5CUGhdVRo4l1ioHffaodjriBf1S9Ig8jPVxUraDj1Tl3yr8k6C8vLWK2Nz
O7yzQB0yYyADpiuBR89F22HwazEk7T4FpNUf6RqFdijtonBCq/0UJPyym1Ps
sMOxQqekzGRZuLH2Tkd+3g6HAjxeEGfloPy39kNpFnvMzPryx4vtNLSsNzOJ
nrLHpA+dnw5PnIb3f2T9hazs0fsvmZ9btTzM/60YPBRnjzfflXRoZpwByn8C
J/cX2+OwbUZbn4sCcGzmXmftsse9d3IvUaoTILLFtL5nyR47/l7KWDgOoLyd
bL5rnwOWvx0f7tqNYEq2+WxbzgGh7dsDyngEEnkA9x8bB1x8wFBesIGQQDET
tZzggC85cepBiCLkUNp+mS11wEfMnZl8a4pQTjWEX3scMMmzSJYuRAlaqM8W
fF52wIpnWTcd/irByK4mymEOR5yqqCckYpVhnuaUc/+Znbr5HoTQqgAlXXn7
a3tHHEm+yiBzRQW4dvMLtyY7IimzzMbnkCqI0OekNT5wxHD576cFKlVBec/e
2advHJElINvRWEkNzBmStCt/OeJn/25xyvdqQGLcKL+/3wn/vX3LK+qtDgl7
/fYWghN67muXfUejATlM331vOTlhOekn50ahBpQzWw9cS3NC7SyDdzeVNKGF
ZVDqQoUTXhlgKKiZ1IQRVs1rqYNO+MXr+5J2ihbMs71Yi1vfqWkUZs1FzgIl
+0mzCB5n7Mn8cPnT0Fng4nhQF6jkjCuBAaEDsdogwnn4gLerM64lyn6WFdUB
Za4bka6Zznh5fN+bPZ91wHw/w2e7R87YMpl8S+uiLpAOJIDFO2c8eO+/0AWV
c5DA/eeu4YYz3iXFHl3dOAc5PD4UOodckEeJvPiBhR6U8351VFN1QY/aWK+0
Wj1oOWjZBh4uaHlp/6uLHPowcqhfUO6CC046Rk89D9GH+cPqqZLVLmiuNV7O
NKIPlPyNM8dHXPA+6epGvLwBcAlInT2y5YL+Tv1qLHkGIHLkfhkvvysKOEoz
11MagrLgQUZODVe8Jnz6Tpi7IZgLXfNhJrki41e9Ac03hkASpu/ffdkVraTv
BgjJGkHC0ThJqhpXFJm7JMeYbwQ5x35f2fzoii20TZ5/dhvDw+OkX2tkbnhr
9pvmVJAxtJyYNFk64oYXxKaHOseNYUTEvHZGyw0r72/P3dM1gUXRPq5JHzcs
lz8n7ttgApTiqhGfrrqhZuV285HjpsAlUf9pqM4NDY2FVl/kmoKYpATR99kN
/0s++EyW3gyUpUryOijdcSImqzEt0gzMpXnIm4XdkXL02Z2yBTPwOXnFoV7H
HUudBK/m2ptDggxda7W/Oz7GqF7tIXPIORVzpOKGO9I4fDnWoGkBD2V/JZc0
uKNnmkvw+HMLaJHznL477o7C7PsOPJG2hJHT45q5uzzw9O0DIPbAEhblTR9c
Oe6BrDzb/ep8VkCp0LPnvJ4HFj2dbVrLsQIuQtk7OcgDyw4aP5disQYxqOuL
yfXAx8E/j62lW4MyikmEvfDAM3RjfCepbMBcseiy/5QHnqgtvvs9ygZ8lA6s
etJ5olvK9XSqdRtIUL5k7CzqiZqSRnbx/raQo0JTY2PoiaHeH6JN523hoWoU
p1moJ371271HQdoOWtRWwvRve6LSdWXyJT87GFF3/6jV7IlMNnkXXzy0g0WN
L2dUvnuiEO255OJ5O6DUMr6jsMcL2YP338g7bg9cZ7u2ZSS8UENPza3I3R7E
tBXtxU288IIIc1RViT0o69Q0H43wwu7+G0TTV3sw1xUR4L/rhQNs1szd/A7g
c64wibvNC4fe/VHrsXeABD2u7/t+eGHwXR+GF3kOkKN/QWPvXhJqU/ln3hx1
gIcG1P/RSpPwUVPihNUBR2gzjKCnMCfhmV5Jlk0zRxgx+um1EUVC0eknDMHX
HWHR2LV3tYCETKvXXjQNOgK16ajYwisS9jX40H9gcgIuM8NL3+dIeD5VvqVW
xwnEzDuXx5i90TI7odY03QlULcDog4w3Hqp2zq9sdwJzyydPBi298eRwjXIj
hTP4WB3n6In1xtBLp9xDCGdIss4PbS/yxn8FW0+Hw5whx4bjw4vX3rjX8vT4
h2pneGh7Xr5u0RujQ62KQhadoc2O8nYVmw/qKpS1lx51gRH7sK0Hcj7IzCW8
y83RBRYdFm2LbHzQ6Km9wMNbLkDt5Nx0J8EHKYTDR0OGXIDL+SNfdqkPkgsk
czYwuIKYi37ipR4fFKqKrg5SdQVV11df05d98A121t6JdIUT1Xf4m+l98af9
5b0Sj12httr8LcHri0N9mROCM66g9IQtqV7cF5V0N8zDed2g+0nfSVllX+SY
P1BwxNANzJ6mf6s29sX60y0C/CluMPFU9YaEmy8qfDeyJj1zA68aMo2KcF+8
5Sz/dmvODdZr6tePnffFJvkO5QFed4ivDb5fkueLlfssfSfOucOeOgkLgSpf
9KOONT0W6w7ZdXO781t3cPpotqKH7sD3rKSe570vuiiETOl8doeyZw5euTO+
qBLGeeLQHg+Qrefh4fjniw2v90ZyyHlAc/1wzxVGP+z/V5Yr5uwB2g1XopkO
+6EBc66700UPGG7QFTsv5Yd/1Lxoq555gEMj3Ridmh+KH6tuZpvygIXG1ovJ
Zn7op5bNkrbHE0KfxyhSevrhs2CTu/TSnkDx4vRyTJQfZidRGudYeELWi18F
/y744X/haXpisZ7A+bLSMKzAD4nZkPev73lCwUtPqrXqnf512uHuHZ4g2iT4
xP+VH+pdkZuhnfWE2qZx58URP6RpXjxSsscLlJpvsXvN+WGJk5mlkogX9Dab
vpre8sMj+XILw9peYNbCEurM7I+s3zYS3D29YKKlR3iC3x+z2Td+L6d6gXdr
6oiNjD/SE6y2gUVesN6qnP5Rwx8ZFE7un3/pBfFtW6fNLP3xn0DXVauPXsDY
Xjf7luSPSzzHcppXvSC7PfCWfqw/Ot3J4jrIQAK+V2I6vZf9UcB+VNtfgAQV
r35sahX543Zm14WG0ySQ7SiqeFXjj5P2FvFb50jQ3GFnq/LaH88YCmzIOpFA
t/MAU9Mnf5yiolr0CiHBcOe7lwqL/ihInnf9ZhoJHF5f8ntGHoCHmp+ZtOeS
YOG1Nt8ptgA0lu9tWviPBKFdNIOPBQNwz3WhG+zPSEDR3ZwgLheAv0y4mqCD
BFndUdLlZwNQ+seAkdcQCTh7ZL8etQlAD6GO7DvjJCjoWblW7BuA36iPDg3P
kUC0t0KNPyEAbdzUb/D8JkFtr/vvvGsB2M2aHelD5g1KfQKl3KUBSIpU0+qn
9Ybevi9mOc8C8GvwkVFVJm8we5NLx94TgDwd7sffsHvDxBvjZ5e/BKD9KXGl
AG5v8O5n8ty7HIBhLBtKkoe9Yb2/60AmVSDSWR21ZzriDfEDyd20HIF4kMd9
jEnYGxgHFaOSjgaiW9vAvlPHvCF78J8IxZlAVLHu0Ek+7g18b2s+R+sGYuRD
7SXyE95Q8db/woZdIPpV9jqW7+CyQyIYGhCI9TO2zJk785uHppdWkwJRUwoc
8nfW131XmO+XHYhntXwal3b6D7+zMVj4LxCzgiyTovi8weE9F6VnYyDOmmfu
O8vrDQvv3z7+3heINcw+L624vCF0+IKT00QgvksV73nC6g0UI1r7xlcD8eru
h0HmDN6QNULdbk0ThFue36a1dnkD54eXwR+4gtAiSubM+a0d/T9ECJmeCELh
bWN//rUd/T/KDA8SQdgavyuOaX5H/48/U/X0g7CSNVDDdJIESp/K5Hocg5Cx
oint7zAJej+5/tAMDsKaGfW5fz0kMBvlu9meGoSH+eep7ZtJMDE6elb5ZhCS
fr3TOfqUBN6fs/+9KA9CXnX/g2b3SbD+2bD8zMsgDAx4Vrd4kwTxXxht6gaC
cC9nEbF8ngSMY52MMl+D8O9wVZV9DAmyxxJfVP0Owji1on/gu+P/cfAV2x2M
/TPmX7Psdvw//vdQGXcw5pm85tDT2/H/xJN+YbFgrP0jfjgJdvw/4RtfpBiM
kjIGfmKiO/6fPC7FZxSMUQozFnrcO/6f/DZ5xyUY786cYpuhI4HTVP7VA2HB
ONZQW/N3zQsWpqxUszOCkYNmWSV50gtCv3Kssd0JRqG97vmZfV5A9W2g+FJl
MFpvPc5hrPeCrG/nTRlbgtHtxP2JPcVewPldgzZjKBjVdP7bn3rRC+59p6yj
mQ7GwG90XbHhXiA6/dw98e9OP5M099+OXlA7HbafnCEE+Yvmzed28kVlRror
6mAIakncX7Q9uZM/M4sRfyVCkMIo28eAZyd/fvx3IkQlBFkme5lbqbxg6ofz
6IpJCEapRpA92ckz79lDWb7uIWjHbuVxZMAT1mc/EvMRIfhAf5/DvlpPSJy7
vuieFYK7zz/anXTbExjn9e9+uxuCPdQ8HoHxnpA9v0ff8XEI8oRO5066eILA
wivysbYQfKynXjWg5QkVC/FVVsMhWAuHOhRFPUF2UcFx5EcIviiz+SPO7Amt
i+usJpsh2E750/3uigfoLj1uHdgbijIVL9QuDu3k/5J30Dm+UFS5kfuKrGYn
/38eFeyWDsUK4QMSyzd28v/n1DsN9VA81RD6zinUA0KX81LazEOR/qLOAXMz
D6BYsZBV8grFTVutoL5THpC1sm/meXQo3jU449vB7gGcq29y5C+F4idunzKV
X+5QsJqhVVsYitneU0Mqg+4g+kttQ/ppKFK/zHzRWekOtb/Iyx51hGL6Y3m9
t+fdQWmtwUr0Yyi+rlNPc/Zwh961EIYH86Fo0n0jJVrNHcx+Sz4XIgtD2smr
8Yf43GHi97z3PZYwXLXK7dPedAPv9dKDh4+Eodybf9+phne+v+uOb26fCsPW
yM92WlVuEP+HN26/VhhOUl2Y4810A8a/IxI3rMKwei+HRaKzG2T/vTrB6hOG
Rdd33Ywk3IBv49yVi3FhKJzUXE/H4QYVG7tVGK6GIbvZx1WRRVeQ/de2mlYc
hoslu27MtrtC87/Yol11Ych6bZFR9Y4r6G7KmyR07eCqB2bPBLnC8ObaLrLP
Yeh0wGR46KwrOGw9qolcCkPSfoZ8Fj5XWNjycvtDEY7TU5xia79dIHRbiCt4
Xzh2EDPJCT0uQEE22bksFI5Gd981Nha4QBbZnXCf0+Eo99mJuTTEBTjJzY/P
aYejV0fsgKq2CxSQs31ysw3HlrY099xDLiBK0Zf51S8cE4tWjO6vOkMtRbqC
Q2I4JhsOCgV3OIMKperC5+vhmLlqmkp1yxl6KcnyLO+H420ySVEzH2cwo6o/
N1wfjs1dtMM7/30wRRVMZtwbjvVxS642+5zBm1riUf9YOLKyKjVyTjvBOvWc
ve5KODZ2FXSUPHOCxF0lLF3UEciXUhu+97wTMNI4tKhzRiBF+Finoa0TZNPw
BLYei8D7lv0NoRJOIEA7LKCoEIFXzBOM4ymdoIL2ylDjuQh8MqZ6J3DIEWTp
dJNPO0Tg5HW+HMMSR2iloztVExiBHny16vxhjqC7u/W7VEoE/vAKuvZdyxGG
d8dkV+ZEoLbX29x73I7gRH9aU6QsAj9yh4vbLDjAAv2vP/efR2CJHNnOWcYB
QvdU/ifYH4Hv5aZz311yACoGT8vCyQhcJrGy3HZ0gCwGwT2H1iJw6YKDhc9J
B+BkHG+4RRuJEvwb3Po0DnCP8RaJ60AkykWcW1IdsQfRvaa810Ui0avilon+
A3uo3cvSx4KRKNYU3hAcZQ8qTD0xFwwiMe3OQGDdOXvoZUoV3+MciQPUZY3c
fPZgxqw8nhoSiSUuf6oLV+1ginnrEnV6JEaEznjrv7IDb5Y6pfhbkcjyr2tQ
ONcO1lkCV7YqIpGBzOrlCZIdJLKK3YtoisTtapGvtmgHjGw/jNYHI1GSWv99
K6sdZLMVUQd9i8TuTN9dDb22ILDP7unP9Uhcnr/lZRlsCxX7Drh600dh/yXn
OC9eW5Blf8cxyxOFz5V7nFbabaCV/VKHq3gUsoRMLa342IAuh3bYlFIUpms+
+eDHZQPDHDTH7I2j8Nd07g3fFmtw4mz+MOoahc0W4mYrJGtY4IzKsAiPQqlh
QdpNTmsI5ZI98z4zCmfWbfgutloB1f6VOcO8KOQZk1N56GsFWfsrbr95FIUX
1y5etuKxAs4D7ro6rVHY6mPPmPvaEu4dENjufBeFV08FnXUPtQRR7i8P1Wai
8OanXfVdgpZQy51r17IRhdQiu5ObhyxAhceYGRmjUapJoFE3yQJ6eZiaGw5F
I1M4hbLfSQsw4+3yl5OKRlEK/Ypj38xhijeZ/6lqNGYVZzlF3DAH74OKbyXN
ovFiAOUlR01zWD/4L/GhRzQS7NKKkxtmkHio5uSJqGicbVkV/FthBoyH/b+V
XohGx6M6ayUOZpB9WOTGkYJorLeLtp9jNwMBvmn1guporPNTKW7vMoUKvsJ1
3lfRuHn99RGZOFOQ5be5f3MkGieav27InTKFVn4uC865aNT0cqDonzcBXYG3
u69tRePiuQT8e88EhgUu1DMzx+CnVNP4aisTcDqi5ZXFH4M2aBK7xWYCC0eo
eehlYjB9+emPdz3GECr4sidFIwbtapqMz6QYA5VQRDSVZQzu2r5rKaJoDFlC
MmJxpBgMcN7tVLphBJzCP79sxsTgeAn56oOnRnBPuOxi+OUYvJXh5y7jbwSi
R10Vf9+LwcDMYwZqokbw7CjfckBNDIpNPlgZ+WEIKsdGC5Y6Y3D+3PfJxRJD
6D2WbUj6FIMaX65cSHY2BIvjhlQ/FmKwZmrE4Ra/ISzvS7F4TBaLz++wLotN
GMCp61NVP+liUV8qoBPyDSCKXYlenDUWC63uuby2M4Dm63mO3tyx6JtbHdB7
yABoODbry47EomhIR43WuD7o3LBgmxWNxT+GU2MKBfpwmaPW66hsLF4ckBgp
dtSH9zf2tbkqxqJAja1D4hF94OEM4CnW2lmvv+jK0Hc9cMh+EzRlGIsh+m89
c/7TgxJO0V4+61jk2L3N0kfSg/nsDEF7l539DvDPBknogSTXTHSeTyzSBcvm
7p89ByE5au9HQ2NR8MhH7qOB56CR654Yd3wstgonKbFv6QJFLnmqRUYsWlZy
2I6n6oL6ftux7Kux6M6mfSqdTRfO5zbIvr8di64uRfJM+TowsH//pX0lsZj+
rV04QFQHOG6GzBhWxqJYYlbQ4wZtsD4wpHi5LhZTAq1M+s9qQ8FNydw3zbGo
a9zwtfvjWfh+4OIyY3csqt41Ki72Ogsit+a1dIZikXTF4obtlhb4c58tzPgc
iwyG1A3rF7Wg5lbpRuf3WDz1uP9MgIAWbHLvMqL9GYvPohUb3tRqgtJtxzK1
v7F4j+W1G4uuJqTwNFElUcZh3HHuW3JTGtBzm9e6ZU8cmiXsIjQiNICFN/IJ
OXscHlIcKEZWDTC9M8KAB3fwCKExgTJ1uM17yiVaOA5Pz6pWramqw8Sdq88b
JOLw4PY3Uu2YGggdXGbfOB2Hq9SNV70i1YCUd85HTiUOZ7iko/dxqUHVwfJX
ITpxOFdtH/PkqSr8ztt96KlJHM5L3+04Z6wKCofcQldt47CercX126oKxN9t
eyPpHod1wb5bEddU4NUh/qN+/nFoshFuy3pKBRjyY+MeRsQhnLxY+3BEGQwO
fx6ZT4xDvqMuZw2jlOFGvrzkiaw4PGwm00DGpwyjh3PSPW7EoXX5F8n6V0rA
V7A2UXo3DkfZapcSvZXAlc9I/vv9OFQXDa6wY1eC8oJHV448jsNFSy4a/ReK
sMy3d86xIQ57yf/LNXNXhFOFXioFbXEY9eJPQxibIkTxv7411huHtVbfm5++
RGguFPrFO7yjx4IMJYs3Ao1Ako71eByerIt5e54bQefeRNHNH3EY+shU2Swb
4LIAbo2sxGFLlOLipz8EvL9324RzMw7lHeMmKqwJ4DmyUWGyKx4NzYuK37Qo
gEORGc21vfG4VdserXpCAUqOPLUd5IzHrodRu5hunIH5ItZaZr54/OelfFGK
6gxICvox6R2Px/Li1WNVAfIQUtzrliUdj2k+GHX+62loFDzR1K0Qj4sDLFfb
zU8DRUkaF716POZte/xn80YO1IW++2nqxaMBh1aVqaYcnC9ReZ1iHo/7D1ld
fNQqCwNCBXztDvEofl3a1UtJFjhKt8OpvOJRV87gSUrzKbAWth5UCopHQTWS
K6XqKSgofXY8LjoeSebJlz53ysC0MGfii5R4JGMpO8ypLwMi94M+bV6MR71b
s6vlH06C/9FB6TO58aiWuqFwx+Uk1N4XPx9eGI/vJx/VfluVhs2jWV9ry+Lx
6+EOpcQkaVD6b1bh95N43F5RUgvklIbUY5rXT76Ix4GHEqVV5VLQ81/xQkBH
PJ7OlW6QV5UCluNU6lX98Xg1MMV1zxdJMHtgn7f0IR6psgLkD0ZIwu3jL36L
TsXjLyf7r95ckjDxgFuPNB+Pt+t1aH/XSYDwifDSB2vxWK1KrVBlJQGksvdk
P7bj8UopqTSXXAKqTpw0F6ZLQB46ccEHpeKwXnb5kQtLAt7ZznX4pC8OCiJL
dEUHEjC9zbz63F8xiC/XcZgUSECtQQM9BmMx6BB58OywaAKeVdQzmnosCgwV
tKx2pxIwhfu+ahu7KBiIunjewQT8xr38426UCGRXtLR80kzAX4GM+9ynT8Co
6GHuA4YJyKnCoshoegL4HkYHmlsloE1JJ29M53FwE/vUfcM5AWWyh44/gONQ
/lDuyDvvBPz3aawsoe4YLIvdiGILTcCZUJv+XzLHQLZydcggLgF9GNoEF2uO
QpS4geil9ARM8DzXY3vmKDRXPkzuu5KAK2t/xGRahYFWguELw+0d/F2Oru05
YdB55HFKuzgBgW7aonNUCC5LdFxIf7jDb8zFx8FHCIYfHZnuqE3AnGPfr3FQ
CQGPZALSNCdgqFl/17ubguBQNZat2pWA9548DjovIwilksTPhLcJuEjekSr8
9gjMV93UbB5NwD063C03Ao+ApNSffLLvCXhjWryzneMIhD42+Uss7fBxPZxf
2CgAjVLVBlF/EvAi/ZOZ/S4CQFHN/KCeIhFZSu3NuZkFQEPah/IvfSK6fFI7
dO05P5yv7raU3ZeI7MstogHe/DAgfaw6mDcRE+P+eBUe4gfOJyl7ngglIo3u
f9nsQ3xgffKr04p4IvK1vR6qy+CDgidKjRKnE7GyfvxhuAofTJ+8u89XORGX
9J8FaG4fBpGnm6QK7UR86b74iK3hMPjLWLbPGSeiVS1zXXf4Yah9Wst73DYR
qZ6bu9vJH4ZNGfYQd7dEbGR4f/v55iFQqgnoK/FLxC+moYLvmw5B6ql+oW/h
ifjjguOFmymHoKdGNFYgMRFnxrLsNnQPAYts5rDD+URcZKOjmuY4BGa1M+L5
1xMxz8Jlraj1INyWVU/7kpeIrdP2L62sDsJE7b1xnvuJmF1LVTG0xgvCchSn
raoS8Sy7G83qFV4g1dlezq1PxI7H/J23pHihSq7xx3BrIj46ePLH0yEeWK/b
r8zRm4iZUqR7guE8oHA69Kbx+x29zFMF3x7igfhnQytXxhLRvL+jrqSTGzpO
S2kPzCRi1GOP9tRAbmCov3iPaSURDYOOy9gd5gYD+YV/uv8S0bJUSYvjzQHI
rj9rfJ46CRveZf29HnsARuXvl3cxJqHbeYW5LskDwNewa9duziQsI0rE8r/t
B7czTjYah5NQh6KLm/LWfihvaHqafCwJJRYDhEcN9sPKmYN726SS0PoCfRkP
/X6QbYx0pVRIwpIm++CqVi6IUvjwQlEtCY+ok+1Nj+GClsZTnLHnkpDH1uzT
VXkuoCWu+T43S0KTypnvTeucoPN8ueOffRKej9fJp6zhhCuE3mF5zyRcT80K
1gzmhOHn5WFhgUmomXU1MVGGE3iAfqAmKgmtgoQk7//mAMcXbsfWkpPw+ZLq
6n91HFAK7fHSF5MwkuRSGxHJAfMv+D/65yRh23jSC2bkACmMk3pUkIQM5MUb
dlQcEPryc8bigyTMubddbNPJDo14ZkrkSRIuZpo+2s5iB8qmnDNez5Ow6JXT
6dPG7KCh+Pvqf6+SMGtAjYOOmx3ONxnNT79Jwvm6cAf7yX0wqFilKvQhCRcK
zCTkH+wDzua9d5wnk7AlLMX7YsA+sFYirRXOJeHv6OD7Zmf2QWHza92JX0no
EtXCfYF6H0wrCZcc2k7CDN1l5xN9bCDSkrRtQ5uMHXRNMcdz2CBAedL0NnMy
xsiMXUlyZIPaFqz8uD8ZX58W239KlA02le/Q7hdIRl1rg3CFP6yg3LphZyaS
jNJKvcLXW1khVcW87rpMMs7MFdTIX2SFntanzEOQjL3X2P4ctWIFVlU2D1bN
ZLy/mHHZRpgVzNr8mvUNkvE/BvX44VUWuK3at/+iZTIymPz871oTC0y2nQjo
dUpG9XvMAZezWEBYLb1rj3cyXt/M7O61ZAFS+3f+syHJKEd247nmURZ4rKYa
mRabjD+7J/gpfjPDenvB21dpyXhHKjT6TyszKKiTiey6kow39f+UiVxhhoRX
1kkqt5IRuBXv37Fnhg71+tH4oh1+mZFF2uLMwNDBKdNUkYzBZ0PkTm0zgaFG
cNZ2TTJyZRlU2fYyQXbH4DeFpmRs3Suw+Oo2E4xqSEDk62SMfTyx7ENiAv7O
rBvPBpPxdncDuZkCE7hpzi2uf0rGg+Jbl+MZmKC8U1Pj1LdkPFfg6zRevxdW
NEvuBi0mY+58f5Sq9V6QfU315/F6MvrR6N49uc0IUVoO+svkKXhqyNryaT4j
tLx+cV+cPgVv1smNvVZhBNqzPBQ+bCl4wuWXW9A0A+h0hVuU86Rgjjc//7NM
BrhydrhqVjAFryRFEzclGGC46yT9MfEUbNsWenzw/R7g0b7i6CaXgitRt79r
RO0Bx+6l+mKlFDxn8OADu8AeKNXWZft6NgVtaDImL3XRw3z3Ay9+4xTU1t73
qDGAHqR06NrsbVLwb+Xa5E1uegjtceG565qCHx+SFYu074ZGndagz74pyHI2
ZDPIdzdQ9h7u5Q5PQXWqCoewA7tBQzdG0DIhBR0s6h8Rr+jgfO+n6JzMFGTm
EXFtDaCDQd3T799fS8G8OKOTjIfpgLPvhhh7Xgoq+VpEc/XRgvW5XylGpSl4
v3awZCGKFgr7DMYuP0pBGc8rnukitDB9rlK2/1kK/ufAeGZxlAZE3zBc2tua
gqg7qMh/gQYC9DxndHpSkHfKg45fkQZq33QoZr5LwXjerq75lV2wpSeY+/pL
Cpq4TOoll+wC5f6EZdqZFKxyadb/YbkLUvXHtdSXU1DZnO0tN/Mu6O0nCpM2
UjChhnds/ytqYDW4tdFClYqc0+Nqk1HUYDbwx5CCMRVPFZfUBJ2khjsGpmXI
kYo/Su0L++epYHKgmirmUCo+Pspy+1cxFQgbslg3Hk3FXPWx6lE7KvAe9Hmy
IZmKwxUc0ukHqOCxYQ/D6TOpGJvAp/n7HSWsDx5zCVVNRYqfhDjfFUogjFKf
P9VNRY0P3WW0epSQ8PYr+y/TVHSiGFK9z0AJHUbKPlL2qfglz+/wdhcFMA7d
feXnkYpHjN+JU2dQgKHx1sHKgFRkCpyMf6ZFAdlDlqELkam4/LKujZOeAj4b
1705kZyKrZwOfge7yYH/HftRzwup6CGmn/bqPDm4mQTG3c9ORbHNPjZGPXKo
eNc/8j0/FV9FlOcvspDDiomYpOCDVMzM8p5weUcGsu8z052qU1FifD7SJ5cM
ok1/TBQ0puLd5gd7qG3JoOW9uvx4eyrmUbb+4RUgA1qzoisH36SiGY/pdszg
NqE7TDFnPZKKFk4qF5pst4krZnYqtyZS0ZDH1Onf3BYxPNx468NsKv418uni
j9gieM0P/OL8lYrm5TkBUru3CMeRUB3TrVSs5Ly971DuJlFq/q7oGk0aRgdS
in4+tkksjEhtDTKl4YRKTIRXwz9CyuKSCcv+NMx91BL8UvcfEfphoUKPPw1p
s3yVBsY3iOcW2jQXTqQhGP3tzg3aICg/3rftOZmGDzYmLVh3bxAaljS19JCG
Vi2fMk/m/SWyPjoxaWmk4XT7nZt/pf8Sg5bNbqn6acgcGddl2vWH4Px0sKnd
Ig0Dan9WGzr8IWysoriondLwkL5m0uSfdaLw0wc/ZVIahrtMeFNfXiemrWRf
xwWnoe2/A7qPj60ToqPX+F7GpOGGgl/vTMtvIsB6JXwrNQ0fN5izF1v/JmpH
9QbPXN7h09nT8fX3GrFlXXE84mYappgTu0ourxHKn+kT6+6l4UV5ctK0yBqR
auP+6Xd5GiYzJpeUdv4iej+3S8vUpGFMk/jUlPMvgtVW4HzgyzRcyTnTXUjx
izD7Eve1qjMNjXgiT0zkrRJ3bL8o/BxIwzcPixnyFVaJyS9nrot9SsM9Ad3z
4x9XCGG73AXS1zSUMVdoLA5fIbzHfquVLaSh6tz2h59cK8RjO+O8H7/TkK5i
lKm9bplYH6v6LUyejr009BcELZYJwp5Jz3V3Oko4+31n3/hJJIyTSotY0/Gx
YAHtzVs/iQ77LrIp7nQ8eCNMtob4STBOCJvzCaZj+MOQ/d7jS4ShQ/IjO7F0
fKJpNdyeuERkT0zS5cmmYyTFB90O4SXis4Oiw6hiOt7iEPhvNneR4J+88+zA
2XSkYopzKf66QLg5/mOxMEpHAV1B5zcSC0TFpLlntvXO+3r/noTFzBMrjjUt
71zSMTBLV+W/3jlCboqNe59vOl6jWLrmfXCOiHbyDzQMS0dnAx2bQb9ZomWq
r/tSfDrK6b72/dr2g6BzFjnyJiMd+8pPPn504Aeh+zU9ivFaOpocsGdSDZgh
rjhPD2nfSUcj2VmPsu5pYuSrqmhGSTrq39C4uCo0TfC6FCZ3VqZjoQzniWNJ
3wnHb2RfaJ6lo9jpvnrzqW/EfRebU2ot6TjL/Cr+guo3YuFb/YXE7nRMM6iN
fl/6lZBy5ZpuHkrHJuoyKwXGr0TY92Ak/5KOGiJe3t1BU8Rz17fZMJ2OBhkR
dy98mSQopyV+Rv1Mx7/fb/peOjtJaLpd0Gz4m45K8jNTH+smiKzpufy/lBlI
z3chIfTYBDHopvVXliEDeS7xnPW9PU5wzZQYhLBn4BPt2AddLOOEjTv1gycH
M/Bc7K2Yy+ljROGMA+WqcAbOGl2n6aYaI2bcX1pKSmZgllnsq02KL4ToD55q
X/kMFJ5wPeRA/pkI8IjY81AlA+e7TzT3UY0SdT+GneZ1MnAm8lK9NsMnYstD
pvG4aQYm5cWtf9z/kVCevbLPwy4DR03aruSIfCDSPH+SSt135tv2vvFWHSF6
Z3Xbv/lnYMCr9Kooh2GC1auM90hkBvK9Lrhbl/ieMJ+jC3FMysDqyRRa/rJ3
xB0v1778rAxsDtxfWjc8REzOtQqN3cjAq64nJiJ2DxFHSXyxvPkZyBYk1OKi
+Jbwno8ZtvovA3MPP9wVHDVIPCaNit98nIET5BK8954PEH/mT6eNNGRg+Hlj
2R9UAwThnT3O0Z6BcceUNVGvn0hY+CVn0peBc2n3WG/ffUN0ehtevjqcgU/1
XjnNzfYRjIuVPwbGM1D9yMGGkLu9hKEPozLz7I7eqvaiL2x6iJxFz5vnVjNQ
cbSDpluwm/js07lyfjMDX760uuO2/prgXxLU7t6Vie+7pZaCBjsJN9/Ee7uZ
MnHsUoXMYE0HUbE0/k+DKxNdaZLJbIpeEau+YJzCl4klF3S1l2+2E7I/b5W3
Hc/E5xQGhR4324hov7/UVCcz8bx+sfTdwlai9aepjRKRiYzBTkse1S0Erf+T
p7Hqmegs870gv6eZ0F1m2ftCLxPTr/7eu3+xibjq7+u6aZ6Jvp5vGO5zNhHD
yz0v5B0zkbg+nsen9ZLgDTjOGe6ViffMI/mqd70gnFZSfWuDMpFeRYlHJbWR
KA341rEWnYlmK7MxOZwNxMKK8uGTqZn4KLek2bTmGSEdmB8WcCkTU+8/eXrY
qY4IXd3qf5SbiQWGXU9yeGuJ54FWx5YKM1HvuM7Vc9+eElS/6uJFyzPxWdcl
yfFnTwiNII6PXk93+P+jGz15q5rI+hUo9eBFJm72rvC8THtMvA0ayJjpyMSj
OrS3+BKqCM41sSmhgUwUoSmNIUt9RNgEnz/j8jET35YWXt+8UUncW/tx9d5U
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
0XsHXzwhBNddrdQ7svB/XKrRu/z/8f8BiGWMVA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
wpuJkoHFyyuFefj//JRikP9/7f8BB9AgUg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
usHAFNNN58Fk/BnQ5sEd5QZR3VZjd2eS8SVTd6l9mxtw3DrJyr6ZjAume9Ti
mY5Cc8UHrRDmFLy5JdIW43QUrBOFYrqEUlCfFtqNrh6FH+6+V/crpWBis+C+
lR9H4bjejdEUgxSs4FCWUhR0B0WpJYZ3zinIqBEsZKnnDgNsSoRSWApy9MuG
WwS7Q9R6QjgpIwVP8w5EyJS5A8fHxxe+V6Rg3ojd2dkWd2h+tnNI71oKjvqt
BSV9dAebWoNdFx5uj0+Z8Jyh9IDV4mLVv29S8HpZBpe4hAeUR/UHOXxOwVnz
9v2qph5wyJGrunktBVmv7+beF+kBg4RLHzN9Kr67b3C5+4QHRIucpwzkS8Wk
Qfck3QcesJt++lC7XCrKT8qY5I97wO3Fg36COqm4KP9p8PhOT7AZCqtMtE/F
ABeVWU9xT1i9f/vVcGAq8sles1k18oTyml9/5VNSUSjLf1431BMO5RByxeRU
1KHJP2tL9oTBoEzP2Uup6ODwT0votidEW3aVa7emIs3Yg94rw56w5zBTZ/Wr
VNS2Z9Sc2vCEO7xWv36NpeLxvCektzxeYEt5UtJ2JRUTom/2pqh7we8f8zIj
lGlY5EnLMuLqBd2+rF3ZjGm4W/mBzacUL6gaVfBQ5ExD+6f8b06d84JAE9vf
EwJpGNj7s/DPEy9QexJ3vORAGqbWCj2nn/ACeoUqKXXFNKzRrjv59J8XvLv0
sP2rehoOzdDbCwh4w3WucbeTemkofIdDSpjwhmMFOzZ0LNKwILvTpMvFG4z+
7ievOKahhVQ2LWuiN/CE6x2s8UrDuS+pl9ZPecP3Sf/npiFpeJGOJyD5rjc8
sC102YxNwxvu003nBryhsKvuZ21aGhopPH/nsuQNzkf6SuwK0rBU3hSbGX1A
sn5FnKo8DVuPplqel/CBTcE9TxvPpqHDCWMXUR0feHX8sNPRq9s8lgKfNY76
wGkapx+MjWnYya2v9TXBB4ISkoru309Dk08JP0XLfeDIXLWo/4s0nIpuT1up
8wGGo08f7+lNQ8onAo6mnT7w/r/P9s/fpuEsnyi10oQP3NChWQ7/lIaZ3Aqs
tRs+kNgiUcD/PQ0vte9jvszqC8YHjff3rKah7kx84UEJX+A9G/IwYSsNwSqL
7zD4whwLyVacNh0lFB8EvLT1hYcZTQuDbOlIq1zDMRHkC0U/B3Mz9qWj6bXD
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

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.004}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.919865873592553*^9, 3.9198658977953587`*^9}, {
   3.919865962839588*^9, 3.919865971870208*^9}, {3.919956296496107*^9, 
   3.919956310435951*^9}, 3.920032786396912*^9, 3.920215531785618*^9, 
   3.9221985156235657`*^9, 3.9221991021128283`*^9, 3.922199277540761*^9, {
   3.9221993860299187`*^9, 3.9221993970586233`*^9}, {3.9221997145045977`*^9, 
   3.922199732132682*^9}, {3.922199854588046*^9, 3.9221998857355623`*^9}, {
   3.922199972125082*^9, 3.9221999993237*^9}, {3.922200093204537*^9, 
   3.9222001192485065`*^9}, {3.9222001639239993`*^9, 3.922200172685025*^9}, {
   3.9222003674581804`*^9, 3.922200408707637*^9}, {3.922200484041415*^9, 
   3.9222005092145586`*^9}, 3.9222005576195917`*^9, {3.922200594790656*^9, 
   3.9222006564575167`*^9}, {3.922200705926675*^9, 3.92220075177526*^9}, {
   3.9222009335972605`*^9, 3.9222009451667843`*^9}, 3.922200981697082*^9, 
   3.9222010940756726`*^9, 3.922201246400755*^9, {3.922201287962843*^9, 
   3.92220130174265*^9}, 3.922201366566373*^9, {3.9222018468521967`*^9, 
   3.92220185866032*^9}, {3.9222019193040676`*^9, 3.922201933623185*^9}, {
   3.922201986789386*^9, 3.922202017930416*^9}, 3.9222048029496784`*^9, 
   3.9222889163149195`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"407d81cf-8f8d-46f4-97d8-23bb61df234a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu800gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu800gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmu1400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmu1400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "40", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865997697145*^9, 3.9198660281221437`*^9}, {
   3.919874417909031*^9, 3.919874425750944*^9}, {3.9200328049280014`*^9, 
   3.920032805144869*^9}, {3.920215544823908*^9, 3.9202155501520004`*^9}, {
   3.9222010809426775`*^9, 3.922201085878107*^9}, {3.922201439188493*^9, 
   3.9222014829861526`*^9}, 3.922204741866678*^9, 3.9222047960996904`*^9, {
   3.922288952730687*^9, 3.9222890509987435`*^9}, {3.9222891107022333`*^9, 
   3.9222891107895966`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
jKAzTHHLxP/x01HAlf+P/w/voiBg
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
vRoISSW2N6VFOfj//FQSkPd/6/8Bq1MsJQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
ubxdqwm3bdeYUh7m4//4KSvs3P+3/w+3prN6
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1500}, {0., 0.0055456140395874175`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866034057536*^9, 3.9199563708126717`*^9, 3.9200328072877254`*^9, {
   3.9202155459588585`*^9, 3.9202155511452065`*^9}, {3.922201473620805*^9, 
   3.922201483362195*^9}, 3.922204797374789*^9, {3.9222889936845136`*^9, 
   3.922289051860219*^9}, 3.9222891115576315`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"43c1e747-3bfe-4af0-9911-716959e9afef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmu400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmu800gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmu1400gen", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.2", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<doubling\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9198662963389387`*^9, 3.919866350738162*^9}, {
   3.9198663926309724`*^9, 3.9198664727187824`*^9}, {3.919866507086978*^9, 
   3.9198665133816967`*^9}, {3.919866544130741*^9, 3.9198666316374264`*^9}, {
   3.9198744298274*^9, 3.9198744333564644`*^9}, {3.9200328131036205`*^9, 
   3.9200328133501587`*^9}, {3.9202155607111244`*^9, 
   3.9202155629445896`*^9}, {3.9222020664404073`*^9, 3.922202098413243*^9}, 
   3.922204746574091*^9, 3.9222047886511097`*^9, {3.9222891326410494`*^9, 
   3.9222892140763717`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
Qn+/9Iu4az9guvHt9R3d6/bzDCYdVnLxlv24SChlFYrMnbfa/XPRsHm0k49u
DT/wu7FeJBccfK9CX29eA+8quXDux3dobIf+FqE19GstGV8w+A6vXQMcgTJr
0LmgN906lYN8If8KdpU1bN2nfrrRLwcr/x3x8tNbw2z0xu2q4jk4tK/72EbL
NRRGDb3eXZ6N21LPln0c1vB4msPayjobH2VlvjB6r6F+/qc2B2s2Bo+03/II
XkO4vVg4b8o37IaXOG3iGgbvlqs4nf0GU2XJfreva4ijOn7/wOJXvFFtilwt
XUPJdfbyw5Ff0aDhbuTSvAbNcL4BP/Wv2KS9l2dxaA1ZEt88xSlZ0DhbX+Ow
tIZefjsntvAsKCUp/lqkpyLplOJSyZNZuLgvMPowGxVpFron+HzuC+6n9Ls5
clORJ1k0q0JxXxAqJW/yZQcVmXvIspVy7guyMl4cnRWmIi3KzTJTDF/wR7aX
V2b/+vnC3MsdXz9jOuvw7O1DVOTBIzEFh+ufwX7Ury4NVGR8ylh/XuAz9n3v
SplUXffH2V8Z/icTp3DIT1KbinhEVEda+mbiWv5T65sGVMRVrmlV+0QmPJU7
1JIvUpF4i/bL+qsZiPkpLTxqRUUWP/Ly3cvKQIGqD634LSpy39uHMf12BjpK
2zqu3aMiKgomadSSGVjWkMpNfEhFruxdxZXRdGz97fl2wIeKFAZc3NP4IR1y
2i2OIgFUJGNwMueCdTr0avfrWYRQkbT8i75De9Nhd/bxwdgoKiKf2VP0eDQN
L/40sve8pyJx8XZqoilpSDaQGBNMpyISN41oa2+noaL5YfmlbCpib9PM5yaX
hgGjPwkRhet8Go3zH1hNBcM/Mc9/5VQEz2T5u4tSsefSA7Md9VTE7VzS7ZfP
UqHUXUeMW6kIdcoZJuVzqTAxF90R2kNFYtlOVI3sSIVLv8tS8wgVaeiIj3s+
mIKQqzWNfDNUZGHLG2uxzBR8Hhb6bLBCRbLHTIW+PUxB/Q2nwNf01OQStRWb
4ukUTI3/tv3DSk2SeLmi07engN1ut9YWbmoy096nc6D5E8SnHfae3UFN6hVH
Bv46fcJJ+wqmQGFqEqDvbK+3/ROs5gX6avZRk5Tjq6IJ+cnwdLpbyH6ImrAG
pleVWCYjark04jSoiWZQoW/6pmTk3d9x30+VmrjNFf62+PoR7VS3DStPU5M9
x49QtV35iGX3YrmNBtQkdzQ/jZ3zI3jp+bk1LlKTuZfaUct5SZD1sqX4WFET
Z0m+B6G3knCW+Wd1iS01OWi6Gju0Owl2T/mSGe9RE3tZZ5Oevx/gx2rzVOUh
NSlWt2166PsBSc8LrDx8qMm51JfKecc/oIyDR6XIn5p0taR4v155j4FA6920
IdTk/MEvL2iz3oOOO49KKYqaHDh7cXjl9nsIBm9ud3u/fu5zxPThgfcgW69m
/0ijJlb70oI8JxJhFPo9ePUbNRFg4+FhTE2E0w5Oe4VCapL/wODOil0igiMs
zriUUxPePw8vXJFNxGfBbMnsOmqiEPY26uBSAmpjNrEttlCTkuVXaub5CZgQ
vjIs10NNEgqeNk56J4AtMavEYYSaWKyWNtbqJEB8L2vc52lq8uTc84C1bQlQ
+3jp0cwyNfFvSv50qz8eFvs/X5SmpyEk+3m+YEY8HqeyKN5mpSGaZz9eZ3GP
R9RB021pW2jInpLmFAGdeORmps9PbKchVyLoLU12xaP1ENOf/cI05Mx/v9y/
TcVh8atRus0+GhJBYf5v/8848MqnvvgoS0Ne+hfkpAXHQTqX3mZEkYZcT+A8
qHgjDrrkgsZeVRqia6JqUKoUB9uCZNFrp2kIe2Dsdg2+OPgdp2VI1KchOx37
+rMnYvH+l353vykNcaa5Fra5NBYlakl5wlY0xKhR996pqFj0lVGFm9vSkP/a
xIwuuMSCRvOcc4wjDeESUf4sqx8LgapEg243GvKR9dFgk1QsFHVWZQR9aIhM
2nzQkU2xMKrT5brkT0OuPlb0Pz0SA8dz8RPv3tAQjwu3N3GUxeDV36XK9kga
clNcat4xIQYZ57U/bH+/zs+bGA9XrxjUtsR4G6XREBc/usfcljEYM14wf/tt
3Z8li4q8agw2dmgqNxfQkNDJz2l9IjEQuxwlwFdOQyqWZ76yMsdArWd2Rb+O
hsTu/3ktcSgaVyw0Wl610JCprLvFaRXRcB94l9XQTUN2bznLIPgpGhHXpoM2
j9CQTfr0TOP+0cgdUbt9ZpqGGM7/rue8G41mmzDtgGUacsrk/jkPg2jMT0xK
1NDRkilLJlUiHw3u2yob2FlpSSbLmLyCQDSkZ0IGtLbQErM34Y/v0EVD22H8
p+92WjK7tTO1fSAKNgvK0RVCtEQ66+tT+8ooPHMOdtuwj5b4mJd+kE6LQsLK
iPFJWVpiMlSlz/U6Cr8eHDvqo0hLaqhZTm90iUIP9SveEhVakhR3KYvvUhRo
Hg/NMJymJcE6hwNlVKKwgwF1J/RpiWRrzakLe6Mg7x2Y8tiUlpxQ3Sr9iD0K
F1gGfAstaYnXFuL7fiYSjs/krWlsaUmsard3eXMkXrL5qx1zpCVPHw2sdf6I
RNqLXiE3N1oiaMDgNhATiWrOI7Q/vGkJw1LrXJNPJMZe+nWsvKAloUFZn9Jt
IsHC0/1d/g0tcY09r3nrTCRE3xx66xxJS/gDDLBJLhIq2545fktct6/hGO3D
H4krYR3nFlJpyUykdXgrVSTcdsoclPtGS6Jzk3fS90YgPNKH3aGAlsjemHGh
Ko1Azu720cyydX48S8wqkiLQHCtVPl1LS4b8jJPNX0RgVsQr4WALLen7ab1U
ejsCm9+3eNh105LWxKzJWb0ISIlLmqUO0xLxPMPywcMR0Ep+TCYo69/jj4pe
FH8Erks2bd+/TEvirIT+Kay+w5M0iaUbdHSkvm9/wreCd0iQdm9M2khH8tMj
2rM836Ho85/M4c105PSrzC7Zk+/QJbc3UGw7HdHV0nc/wPoOVNkPbK8K0ZGg
xubm+Kpw7FCo10yQoCMblDl3v/UPx5Efonv7ZeiIP/fZt4xnwmFwzJVJWJGO
rNkXT45xhcO+sKb3igodCdtPl6FdH4aXJ4QLo7XoiP2xvDbxl2FIKXaK6NKj
I3xFSxnuZ8LwW73KdZcpHRm9RbdblzMMI+W7DS9a0hGLnZGbo6pDwaLlKPfu
Jh1JtX/0xNYvFMLVFVvaHejIzj2XOr9rhOK47i4Kvxsd+WL5Js+PKRSX6+9W
G3rTkYtb8uK7i97CTa/sY8gLOlI5qbk31+0tQht3PG0KpiNnD/qXCsq/xbcL
t614I+nI7vOaU5xzIWhsLT6hn0hHHl8J+BqQGoJpE/7dr1LpCNW48M1Y6xBw
dtpSNXylIyda901rCoVA0uxnG1cBHbkuIxr1vP0NtHr5snXL6EgJl8Wvm6/f
4JqlTbB/LR3R9Kf+Nnn6DbwHC+5WN9ORf+dZtmxleoM4a54zm7rpiMKjpIaR
H8EoGrWW1BqmI/uD3kvYOASv71F5rL4UOvIgM35/1L5grE5uHi5foiOm3he2
+Pe+Bv+dqyUsdPTkAvdmN4XQ1zgy+z1WfSM98Wu5uDVJ9zX0HDkfeW+mJ8Hk
KV8X02vcWbS4WMxPT25OXQ3vzX2FAJdsBQYhenL8nqnHtzuvkLK6adsJCXrC
0nRYzlLsFSrcrsw/kqEnIpGkcPJfEIZovjYUKNCTQ0qZm02DgsDkwZpOrUJP
Qh59ccw4GQRhxssviBY9mYv9eXd27SWUfD7feKBHT2SkPmpIZL7ExQ0bNHJN
6MlyA3e68bWXuO9rKrpiQU+6YyJMnu18idBNGfTyN+nJ/QM1V/PqA5Hlz9Tt
5EBPvFS3iKz5BOIPl3He1wf05K7H7WuaCMR0UGrYvBc9iT34PjdtOgDsvAzO
h17QE/oNz04efB+AfSEXDOyD1/FuX5lsMA3AKf5PMpkR9CR6fPBkxJYAXAun
5ZpOoCeGLUfPvi73h6eAwYRUKj0xcRzQynvoj5iopMpbX+nJW49nBwXl/FGw
h/pDSj49uWLGrF049gIdcee8x0vpSWYaD2tC7Assi74331e77m9qgqvB6AW2
flhVutFMT3g2G+fpbH4BOYkzAkld9OTesZtuysHPofcpfmVoiJ6cSFy79prp
OewOLDf/R6EnC4UyOxLv+eFFunaW1dI6HvfhR+7DvkiWiQ2Kp2UgR+osGiVM
fFHxZcGubwMDkS+bFs+seYaBw1raQpsZiPXz3+aCKs/AkBMlcYWfgTB70b10
zX6KPYpzLNF7GEibJufN2gNPoZSnMdApzkC4DCgHxBKfwEQp4qeADANRixq8
7rfrCVyKpqNMFRhIF4cRO+NbH4SoqLuFn2AgjRqyZaFbfPC5JMy4TZOB7LK8
yGbg7436k1NH+PUYiKbd/i3H2LwxVaHCa2jCQNjjom6aPPMC++m3M28sGAif
kKPRtw1eEK8Zr220YSD7Y+1yDZ954uSZ4yk8Dgzk3sD0aXU2T1g1BPvqPWAg
d18Nszzx94Cn/ui1IC8GclzJOno3tweimo6p1T9nIC4TleXbQx8jz/CVEFfw
erybpi4/2P0Y7W1DNLoRDGTELuuCZtIjLJui40UCA6EKCtL1lX0E3q7A71Up
DOR17bao4wXukL0yEML2lYH43jAwcDztjrN98o6a+QxkLOvEUYn2h7Cz8j/3
rJSB9G24ymdh8xB+Q71S5TXr8f6MdRSjeoik60fYWZoZCE/n498ugW4oG/Mb
VetiIA5fxd0virphwLa7zGuIgTyvtP6d6voAdJRDCb+mGAhd8m7W2o/3IXj3
mQf9EgMx5RZXEOl0BZnruHyclpEg4IjKZx5XGN2TIY82MJLzdq7Oj3Rc4LTk
s72Ai5EIfJYJDfBzRrBr+yIVPyNRYww92vvbCZ/XpBqxh5FM5QgIP+B0Qu1D
r8z74uv6YYmC5ufvYYK2NeC79Lr9B1tPvop2BJunpO2yPCMZlcj04pp0gDiT
h+bRE4zkXFNAYOsxB6g9aRJz0mQkHMKneIeC7GGxcR/T13OM5EC8qfeJ0bt4
7OfeO2fMSCbqB09OqN5FFPvfAlkLRlIuKebeE3sHuQF7I+7aMJLf0ybjOxjv
oHWzm2uGPSNJDddoD7e+jcVX9Rco9xmJ9b/WEZM6O/Dy/Scn5cVIaodCLxkq
2kH6reuWW8/X5YqcG8+SbkF3e+3Up9eMRDLkdsv09luwfSdcPfaOkShmKbQ8
DbCF3y7njxIJjGR6TTlPg8UW76OrnlxPYSTRpwf2G7PcRInQHqsPWYzE6M/8
P0MGG/TFO54YymMkboMMQg+YboBGrFLwv9J1vO3ibcXs1yGQtIvKqoaRHG7d
Ob9jpzUU99m3xTUxEguef8V3Dl6DUUrZt95ORhJx/tRUluZVOErtDN4zxEgW
m387Nt+wwquM23fNphiJlgTDjvxAS2TIluhGLTISfo8DOZY/LFCbxS/ZScNE
Nqb8x/55whxjR26xCmxgIq/LI3pei5hj4/efQyZcTGQo0Npj2uwKxLC1JGwb
E6HvNwn5EWsGtXyb2NbdTMT8zAf9npHLuKJc6L5NnIlE7bEfPHn4Mtx/8ly8
IM1EjOcXh9ueXEKE6nWFN/JMRPGEWaxX50XkluZtbTzORKijA1ilFC6iWWPL
PLcmE9ngX/DB96gp5iuvNpw7x0Qev33UacJgAm7t3LSXxkyEYTlM6n2zEaRr
OV/UmTMRqh33M49lGUL7rOUNThsmMqZit38u/AJs/mSf1LFnIgbyW3aH+p3H
MwN20Rf3mQg5erud2ssACc1X6Ks8mchtpx7vBS99/DL62sX6nInQjf/t0vXX
Q087a96p10xkSkVvsS7qHGguXQ57+o6JRO/T5LyacxY7uj87lcUzEZl30dvq
285A3nyDAXMKE5ELClfuYziDC/2mMmpZTMS2MLLV9pAuHK9mcHrlMRHdsZdX
T9zUwcthpomfJUzkQExngkyyNtJuGFfS1TCR9iNsiiIDp1E9nvpeuYmJmCQ8
Pmb2UAtjtxi83TuZSLis/9ciEU2wTF8wzx9kIiOOc4mdzRoQtf+kRDXFRBx4
9KnvhpyEyjytABaZyL8jC20HLNRxxclgxZWGmeyVrK1JVVCD23JScw4LM1H7
T7Q0XEAV4feps5Y4mYnRLPuvaDYV5FDpBR3ZxkyMuctGrzOeQLP7e7t7u5lJ
qtj+oHiW45ilWzudtZeZPA/WPkXDq4zNXmck5g4yEykl8UHx/UqQYk5gkZVn
JkepsuhqTx+D1tPl/jvHmcncV+FrIfcIrrPq/Ew/xUy6R2fSig2AJ89jo6bO
MpOmP8U2gVUKSOBYfHDAmJlsFfN7SK8vj6JALWNbc2Zykt5D02/sCLq2RB/5
dIOZaFHfE4kMOgyq4DmesbvM5JCuhWmGhhx2bD01I36fmfw0j1I9xn4IR0Ij
aq09mcn/vBXB/v/l/wObOY26
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde3c4l2/0/9t+2yMhKqFIkqyM4twSIQlllU+EqEQ2kfG2R0YiI3tvsouQ
ZGfvvfde2X5+1/X9/vN9/nmu13XOfc7ruc+5zznPHzeb3jvVl/gYDIaIAIP5
/+//+/Q9uCLdddIA/4vz3hh8gPhGiMPfX67KugC+PolFGXebQP1n0plq8Uug
lzaxcnaqCfI8Pkt1VbDBnTq2qziPZshu32JV1+cA+hndF0ucf+FnmafY1PUr
sEIYF6lR/xfeiJ+9k3CeC2o5RjurX7dA/U2Be0XC3BB39yLlDfJWSNM32/rP
kQfsXvwnG5HVCro+BcRd27zAjVoAn6sNrstVubcp34QvrSZDJbZtMLs3QV9R
zQ/4OpTvTerb4OZGPf/Vx4LwbiXrLMe5duB/F6kYSiAMg46K+X2v2+E8f5Ls
l95bIEe5pBTwox28XTl6NttFoTDKb1GavAN86Ze4SrfEge06j/fesw541N/K
c0VKAvzLGi/nZnVA7g/Ryv1ygH2FN78MjjogjihPjlVYCgwHSJ8zK3UC/qea
1K7ku9D5On2/NaYTmjjOX0gQuAewJxfmsdoJ/m62vQPDMpDlPSd4G3XBx+6A
etr0+8DE5N22FtQFt6mPVYjC5MEjlcskZbwLTl7RZRynP4CNW3Wk2gLdwCGM
Nyc69RCe1xqm0Lp1Q31O4+4/DmVoUiOWruvsholgMl7ityogMp08+uFyD3Da
2A3jNatCkpXMBwHrHggaU9kFmSdAQzjNNPenB4KNrppc71eDD5/di6IZeqHd
+Uekr48GLLBfVn1s1AsCWo1eSFML1PN/r2BLeyFRkJzp8f1nUC2l71eB7QNE
W+T3VfM/uNGOf9VKqw+yUEcULkAHonQTargz+kAxP+lAaFsXsGtSL0b3+yCi
jfHYTUQPrJzHj0Ie9MOe5iatd6A+jFHhIhWi+sFI+djy3bEBKMVcEsEs94M9
5Vz1Iw9D+MFb1VkkMQDK+JbpLVdeAedPHTPjgAGIjly7Kjz+GkIUTyjYRgcg
q2+CT+i7MWCGYtJ7+AZhMpaxkTPXBN4aS8p+dBkEB167W6s176Bvf3hCqn0Q
2J5FCDAem4Gsr6PzP7YheJ5nTq3OYwH55y6cz7YYglfyvxK4jS3hYnp5qd7v
IdhTo+P2r7ACX1FtNSb6YciSiul14rSB3bqD9b8Gw9DOJdB9NskWDDS+BrgV
DQNnLC+dpeh7aJsR5xEjHoF7JeY9RVP2cMdmoG5FfQS+3PwpRZ7xATKI7A2S
UkdgL13KP9vHCRhCz+E93R0BnQjbFIe7LuB6+Xs0tfwonJsO4ApWwsFagab4
n4hRKGUwut3y2hW0pXd77BdGYTZmqmspxA0M5pvEwi+MwQMU/SC/zR2Yv7Fg
N2XGwH6lmbTtgie02xn3PDQdg9vlSUOMjl7ghcqS0r6MgRmxGrn+qjdIYMkt
CSrHQIhD/6+9tS9stj6Vej47BhTreh9kaT5CRlgG9XfqceCy9QhLrPIHXZ39
4TOi4xA1FKzr4hUIDFwKWaa64/BpPmV+IT8Imlci7Bu8x8FXwTpNIecTuBXP
y13+Ng4ZnV+TdIqDQcxJjNG5fxzeS+c/yGn6DKsyPtP9eBOgUPH5Q+VKCKRQ
9hcIXZuAuWuTw4yXvoB291XXQNUJ+Jh4UCyrGwZ00XbKC/YTIPOyWW40Nxzq
DeovyiROgDaNOJ4ldSQ4X2dajm2aABX8Dp0w568gvGVUtr85ARkaPirzmGhY
LCvxUTs/CWlN2W+wITEQ70aimXdvEgbVzU7qzseB5gMNTnKTSTDzsP5ItxcH
VGdSt16GTsJlFvNLIqPxUDOwU131cxIypEU5/VoTwD5B9hPLzCRc/1bvoteY
CPxvvujYUE3BfH9WzZm2JJjln+FtvzUFSdTGT3bHkiF6T/iQR2cKblhmRrw6
SoHHvzwaPb2mYNVCYq3yShqQ+XSHj+dOQdvSQKjm03SoUr5idKdvChqbyAcC
vmaADZO1cBhmGijIPcYr5jOBd6yGYOPqNDDVKCTKyGTDZCp9h6LKNCjpkvq5
5ORAxDuDuNT30xC/VGA0S5cHj0QKTfETpiGOnlq9vjsPiE8IJP5rnAahX34r
NHHfoLz2MXnpxjTYEDt+XTfPB4uAxH46lhk4E5ozGfGgAK6qb6aaSM8Aoz+e
oihvIYxekLapN54Bt/BPewcMRRA6HXyPI2QGBL6rxtCTFsOD7Ak6p/IZ6Gn0
bsklKAE8a4HxvqkZ8I+QOXtIXAqld1xzBSlngbaceYnzzHcwJexwDBCehRfb
Rwr/Xf0Bl5vZFOf/mwXXcWPVJtkyGPxsznzPcxY0rOuEok3L4dOzX3MxObNA
pOFNdBT7E+5z0Jbs9ZzKoVnz7GAFHC3oejw5mYWjRl15EpoqKMzPe5zLNQdX
uqcYvUuq4I09hp1MeQ4cmG87XDL4BZfuKq8Z2M2Bfb3U2MTZaughjauojJsD
/qlF5vHmavBvX/3I3DAHYsaHStd9foN0BDyzXp+DcMvXM10KNbCnG8jddm4e
DHfG+RZo/0Du1dF/1+7OA0OasIH9yB8wXLtR6/FmHjZE71//nFcL50udQsaC
58EyZZFMyrsOOpxb9G6XzUPFbU9c4Mt68Ll/kf/L5DyIuRd1e8s1AFCbnqyR
L4B6Irv4Lf5G2O75+feB0ALc4npiFMvaBJkxlFEp2guQz6BytelMM+gZ/vcG
z2MBJB8+W66g/AtMN7JFtbMXIMGb3suJsgVatg+JS7oXQEH0ZgTFmVZw/6nY
TXu8AC0bbkrC1G1w2yMq8S3nIhxujYw0hbXBuuKSeZ3SIozLT7LLc7RDKv0d
xG67CJ8T1pQyv7XDf0N+VI6xi5DhUdW3ercDziQNDvXWLQKeQZfemd4OaDDm
yRRYWwSCl29raU07ASfo8N6faQlCrTnapkm6QOSg8f4cWgLiHI0Mn6QuWK5m
ZpB+vQTn38e67Uh3Q6Lvm6noT0vQGEwffnmmG7RUf+Tvfl8Cp2FeaXK/HqBm
JsM9nliCCh6muTiBXvgzrvUoh2wZaPVMuE6ZgGN6+gVSwWUoCBj/mOPTB4Lm
e4v6z5YhOf9DApVYP8yLyv+ocFuG+mtOHCsL/RCLifA+l7UM3kSSvyRjB0Ct
fk7dqmsZnusmqK2rDQJ5kOiV1sNlOMy7Wb5NNQS/NLw3ua+swID+0zXxxiGw
Ze375f5wBYqjRLpzvIaBb5YraNR6BXaEmQwl74/AdI7tc/GYFci0H6ntxo7C
V5u666G1KyCH58yn2zwKKpKMB6srK7A7HbM9KTcGJMRGDQqMqzDkMnLTIWsM
fv4tDkuGVZgtNadcoBkHy1BiQ8yrVdBZ/Priss048PynLvQsaBXk/6THXRga
h/HLKfjFpasgK362ov7uBIQtbbfRjK9CwuLSa6aMCeAcSGgtIlyDCtmjhmPa
ScCvaLw1ybQGHrn6FSb2kzAUvxFNw7sGNSemf9UnJ6HUg5lIUmoNHi8HMWYq
TkHw67tvjdXWgDtrwehZ8RSYPnzTGf56DWIja2U1L02DAn+weK3jGswo9M9/
8p2Gy2d/xG9+WgMtUy3Y3ZoGzN44li1lDfA6EzbsdWZgYIjUTOnHGnwzJTAn
bZyB4ir+XoeWNXBCeSvBQrMQlKQlmT6xBkyFo8bEsbPw1huX3LOzBqaMJD9U
SedA7m06BSH5Oph2FvsYWs4Bu3K7JT/rOvyQr3p0c3gOjgX3Bp4LrsMZZU+7
GNl56GNku/vx/jpEL1SqxObOQ+GBXPr3Z+tgFt92lo1pAQJGzWhm363DjTSm
DVqXBXjzO9yW3n0dGmWGKHRnF0A2tWpEKnwdiuolA/ceLsIlvzmZd1nrYHIl
I6654PQcmdJkR1WtQ6oZh1ndad73qIrSN3atg4RI/f2+D0uQf0vX4d/cOni4
Crkvjy7BR2bvictH6/AuazNmW2oZXh3nyqvSbgCm1lloNGEZ7k305jlf2YBN
KlGyCPwVuFh7wpgttgFFZg/o6V6swH46l/PAw1P9f58dxCpWoMv/0QyJ3gZY
KegmHp9bhTxz24fCNhsQLnGVT8VqFXzVYgv1fDfAwJcby/Z3FQzF6liCYjbg
3D8rfj66NUAXVl1/5m/Ax/WHE4d31uA8HuPCQu0GQBI/4YbhGuxOSaowDW5A
bN5tAZKgNeioNyyVWd2AuPZAEeHSNcjJCmC1JNiEXusaWuvRNfAOKvaMY9yE
0Beim5VE62BgNbL8l2cTPt5WlaHmWQdJTWK1A9iEqM20DO1H68B850b51Seb
4IRHj5dgsQ47rOoc6q82od4zQb8/ZB3aCJx83T5swk2GwptHReuQNZu8nhe0
CTEtcQckPevg2fRXcyRpE370sSRvba2DXu52Jfn3TdjTmVWqoNuAO58vcIn9
3YTpoQMdXb4NYLKVCTAc3wS/NE+fHoUN2Hpqsv15exNkVrx+nn+5AS2Sodq/
SLeAQyL4Np/TBmSw//y9cmELUoXe+ZB92QB34ulr5wW2YIvxjmNm1gboLlAE
y8tugWIF/S3q6g0QbxHas3m6dRpvAVbBng1gyNfWTTLdgsSvL9bo5zdgI9S9
rt11C6TeqOfk729A8/usGydftuBN8UQGGfkmpP3XFXo9cwvM58k8WJg3wVXq
8FCrcgt6dQ6uTnFtwvMrlw28OreA7WS4VV9oE0RJFZsKZ7cg5EHQScTpvtIv
WwpMHGzBC3lxX0/5TVhp+xpBTbMNwe61/tyqm9BY+BsjcXkbODNuW7ppbUJK
+KLRG9Ft4Lu+uxyiswkuH860hilug/X7tv3nBpugrXv71h/dbdjVoRmdMNqE
W/f0ozestmEPdLnY32wC3VU/wks+23Djd0DKReNNWCIvMH4YvQ31/WA1cCqv
Xx3osP+2DfuOY4sarzchqRNfPO3PNuhV9GVHGJ7GveRafHf/NojeOwxM0NuE
p19VsQQr29CY3fzN+r9NEHK2f3cTfwdeyq4aM2hsAo1+Qs9/DDsQ+i/vsfej
TViQbZTwu7YDl1KEhFtlN6H22kZSqeQOTDc/olm9swkJVMwUM6o7EFA2wbrE
vwkfNqQszxjtgIYZZWvjlU3Q7Hk9gBx2QFfZ7Hsg0yYI/PgkZRq4A35rM6fD
2yZQxXxP+5q4A1Ictz6PnsZrDjdO3VCyA/YxOWFWCxtQ85LUdqdpByQ//zkk
6N+AGHn+EY6xHWAJTeL9fHqO7Hm1ZFS2TvkJ5ZdwFWyAOi0uywn7D0pz6eXq
Ts/hze20M1nn/wEzz810W58NoOhvs++/+Q9IW9iqJC03YKZ8d5xY5h+AhJgv
u/YGVMddkhfS+gd73ebM3Pc2IMpdLu+FyT8YZ1j+osmzAXavzBgDcf/gV8y7
WyWndeWJYrhTeeg/MGTnkXrw77TO3ayank//B44v6vFZhtaBjH5OkbHi1F96
bvf10zo29Y+68F7HP7ggHcTilbgOVYMiLBYz/4B/1VTspuc6RFbquMbu/4OG
ZYMvN16tg02i13wz1S4IUqtFeMuvg6pXrvI++y4oDGWn3Lu2DteNe0u4RHYh
CV/84muydcA+Ormo9mAX7rNjtA7n12BCgMvTVWcXsFSCqYQNp32K4dFyruUu
ULsKKnmnrkH4vs2TYa9d6JdJ8vT3WAOrkZgysqhdcI39ZM+svwbK1bXsonm7
ELSSJS2M1uBayorPy5pdMBaMnp88vwbEvgzrwX274CPe9UdzYxXGTCQ1q5Z2
wfQaJTN3xiqUqxhWLmP2QC7ZTf/ei1X4IhzAyXJ2DzQGbh8XnfZli3PF/nLc
e3CuXvuMz98VUDwa3rKW2IOg7vGYetcVuDpOpJ2osgcV+qxGziIrQPiH93fb
yz04yU3eKVlchpE0tWvH7/cg519u9IfYZfjx0fETT8AexIZHm/WqLkOIWfKu
ZsIeJBhGyXYQLYPZk786nsV7wLPtVmpTunQ6x23XFjTuwaDJOGvLmyXgPH/h
xvjIHjwzFPwyfn4J8DEyoVSbe3ADX23re8siDE2+PbxNsg9nfBg7dFwWobQu
RP81yz4M71l8HORfhODM8sYvfPvgXibDJzy5AKaBU/w10vtgO/w60CpkAeQs
KSLWNfahdVHzbrzMAlzWEMKwvt2HQaM/kdU784C5rW2k6LIPQfG4zNHUeRi4
6N7yPmQfmAnvyJ1ozkMxfpZwato+5IU/J75KNg9BM51RXeX7IDpGLalbNgdv
Gw8I8Nv3wZDmMXnO2zmQzeEw5pveB7FcmUeMF0/7efCDDu29U3+2dt/iW2fh
2NpSzJfyAIINX8Sr4mahT+trXAnbAVhUTGnwCc5CocRvkmnhA/jUsdF3Z3oG
AtgWTekUDoBMXXTbOWwG3hCd6YHnB3B7Y+TBkfwM3JsXlzCxOACDsWeK3w+n
4dJfvaRIzwNovacgWpo7Dft5vuT1kQewQ/7oyrHeNPSE5Fts5xyAEzXhSQDD
NOTbDfSz/z6A6Edz3qaNU/BRG19Kufe0ozE81o1zmoJX6Fqa4+IBKC4YHXMJ
TsHdy6rUmSen/AVIf2DnJuEi1t6m78zh6Vxf1yATPQm7i/HDRFcPoeJBs8yE
6iR0tTbcE7xzCA1dZdzj2EnIK1jP1FU+hAKnIHWZygnwDTt3JsDgEN42vQ6h
tZkAQwcp+zK7Q0jofhQixzsBSOf1+NzHQ3DdN/y3NDUO56U/yTHEHwJWdlgS
L3ocdji/50oXHQI1R9mIl9o4dJCNM5g3HIIAsTy4UY1DzgrWKWb4EO5ouBRv
142Bd8fN6ab1QzgY8f44jhsDg2JNxT2iI7AoxDuSuzMGkpEuBZzMR/Bb67WZ
9sooMDulMT+5cQSqCkb1nC9HYetFGw539wh+8VXc3h4agTaZ3bkc9SOgZ8vc
bFIbgSzuS8pDb45gSzWMLLd1GDwp5UpInY+AtDzcP0FhGPTW310U+XwEbh+r
HTNqh+BOd5iHQeoRTBs8/tUoPQRM3yuXPpUdQQHtgSFJ9SBsRM0+rmw9gtRi
jLKB1CC0uFCXLU0egVnc1q3pXwOQZiDCzrx7BP4vY478pQfAXU7H5z7FMUSG
c73Vq+2H59e91qwuHQPlAtwxVOgHcZpcjQShYyCweHQnurUP6Ld6KlrljiF7
LeMMuXofrPUeXznSPobGk7F3BcO90FzG6X/N/BgYSRvWIwx7ISVWaUvD4xgk
3AuEq9d6wNXN5plHxDGo/pGo5PvQA9pGMdX52cdA+DaGagbbA6IParnHfh3D
moxK2NyXbqDjWwmi7DmGW7zvisQ5u2GFjmFXfOEYasMZC0aLu6BxR0Ln1fEx
CFoIkA3KdUHSwMvaULoTELPo7eEb6gSXCn/e35wnMLKqwzFu1glPE4pC1sRP
IHHX4/wGcSfc8hw+uPDoBHIC/VJexnQAzRsi/Qf6J2AMpUGSIh2w9JC30c72
BE7MaL47t7dDPb8af4rfCWyzcfzkMWmHhLOO4Z2xJ/Ctn4VdhqwdnPaSTjCF
J/B1mUapJa0NNIebDW/Un0BA372kBrk2EPq19ffZ0An066bqWXS1AlXyeWGf
tRMoJDDokGBuBet77ErP8DEoooGHZF+vBfRvFeNZUGDQr0PMRnrOX1C+qlDk
zYBBLHNTHspHzSDJPPIq9hIG5V25ybyu1Aw8FBbni69hEOsdwyX/xCY4d0zU
1iyEQWxPu8W4DxqBeC3CbVISgxiHamJq1Bpha5xXZF8OgzK899xeFDTAeOev
BZrHGNRd13WEoW+A1j9qMVz/nfI5O/c90bYefpbMq0gaYZD4GnGT/EgdZKQ7
EqmZY1DYs0cMm/frIPwr7XdjBwyijvd5G1tYCx7+yW9dPTBIlWui5eHlWrB0
FrsUEYhB3nQpTYdf/oCu+d/O3AgM4ojbKsmg+ANK+i+8ahMxCP9xoZ+aRw3c
UdsWH87GINq4NZ99TA1w3/dZ2SzBoNdVP79/cf4NjGIXEsiqMUiIKiWcE+83
EPJ8U2NrxiCXJLnMFI9q2DgvQyrac8qfSneKjrIaRqn6y5XGMGiXOcnGMOwX
/MWYmL1cwCAK/6MnUZd/QdkG5vKHLQy6LudokFtYBWlTIb3BxxgkfFWrIeJ+
FXzpueqXjsVDBw5ZSRk/KsGtvlyyig4P/WL3u1WyWAHmP5Q3es7joWO26JwH
7BXwPGsqeZkTD5W0v+DVev4TFGPstAj58ZCEd8rX9thyEA+ioGS5jYcqm+ek
k2bKgMs1ropfBg8xnpVqrxIog7NWQlZyj/BQYoEDNYP7D8A3rOfS0cJDbjZO
3sED32FNQ3vQWh8P5Yh9d7py6zsMy68FfDTBQ0lnecXLvpRC0233u4m2eCgL
T0UWDkuglJdp5zsOD5XO3AqNMSyBFNas9DY/PFQfhPv8p7sYQmjRf7OheKjN
/L5xrHwx4Ai6aI5j8dDhwiAVY3URvNs2qqHPwEPx0O7GAEWgPXtgy1OIh64M
/9fsVVUICv2BPHcr8BD/7ehANdlCEGniGNWsx0M16tWqr9oK4MrPkuB3HXiI
7UbH9YznBXAm94Gs5xAektRX2CFYzwdM/Ohe1Aweukho4PSfVz6sBFtmF6yd
4o8HlHFs+TDoTvKicR8Pub7sDi6s/AYNNl/pxwnxUQJl0ZDri29Q/Iqv/h8V
Plry5KjcIP4GSU9/O1Cdw0fdtWknS7l5EKyowXeFAx996It00tTOA2fJxYnb
vPjIJ5OY9wJFHpjcdP6iKoKPorx94u475cJT9jMKr6XwkfGcQUXmQg7I0ace
OT/AR2XqUrr8/+WAMPHtb1/U8JES9iMuszsbOHZbDLJ18NG8rWjL4uNsoF3Q
Y6p5fWrPwnb6V28WHA/uNA1Y4iMqjDnPkW4WLP31dV53xEdzkf7lZquZ0F95
URDrjY9ujBVNL7pmQt23/JmLwfjo2rHwEmLJhMJE2UjhKHzEc+3aRenSDEgI
HXiomIKPnF62utVqZUCglymefh4+Uk3ptI4+SQfH9/hF73/gI8XY0MiI9HQw
Nv7yKqgGH42N4pF/0kgHzf+unU9twUe0Kv7Yp6TpIPuoovVnHz56ayyh0lCR
BoJSqm5dE/iIwqfnQqFtGrAJztxaXMJHyy+0tdYE04Dqiv0C3j98VKftU62+
mQqHDFQxTHgEqOscmdrPolRYwCao8JEToOR4GykCh1To3Rcmkj1LgAZT3fyP
76bCn6WGUm1WAiR7kTTSizIV8kf+e2vJTYBulX7SdhhIgbi2dVZfwVN9ATuH
7+kp4F/t0RknQYD8GYfcmR1SwKHwnFfJfQIUMRYw46SUAq9TssVbVAhQkC4x
rpojBdTDpVamnhEg4u5ux/r9ZLjn2x1/8JIAac4qbZt0JgP/h9dqdGYEyPA3
UIVmJwOr6RGW254A4dEtlF7ySQYK3U/l4E6AXmXRv918mQz7KlfM1AMIkE9A
DOe6dDLMSn/nMAknQL/utiWfsCdDt/DDXrcEAkTUy9hMQJAMv7nGfSOzCBDr
oHfl5GQS5J2zlvxWTICK38lzef9Jghhy0o26KgJEe+3cxYHUJPA7ikoeaSRA
DXmWL3/7JsH71Zta210Ep/H+o3ndNAkMx2soKEYJkJZDoBOBahI86dSsYp8n
QE9VRyiFbiXB3T9LlmKbBKi1iqA+nTkJ+EpcuJSPCJC37LStykkiXEinHzQk
IUTTEolNF6cSgexrWoAjLSHq4BoIPqlPhN2Pd+6GsBCi2fWzTRPZiTDt1Lad
cYUQdc8wd/0MToROM4P0X3yE6B7JBYSzTYRfervafWKEiK97l45dOxFynnyk
WZUmRKEejws/o0SIkr1UQ6REiGQSNS42Xk4EH9FC2/OahAivy8HuJzYRbK/J
8QjqEaIvj6/YGCwlgMH5oRH5t4SIfTJIobg1AVSpzIJ1bQiR0rxZTEZ+AiAM
oaytyynWqraVCE0A3o2wPX9fQsSW+azOyDYBWKZ4spNCCFHVSw0+Dq0EwPZU
6pbFEKKm846hb8UTYKfuMX1HGiGyLcHOIpYEmPw+WzeXT4h0Lph/+3pwWtUy
HRxOygnRLSuynPeD8VARTc3HUEeIwl4JZg3+iIeswMSJ6+2E6JKXmltlRDxE
4kS+SA8SouSLolaX7eLBy7JJ/uk0IapJzcsiVY8H65c6R2arhKh6MDHOXDAe
9DQ287z2CFEfe27IfzTxoCzvZRBDQIRExheb/y7FgcRtFqYiSiI0klrB/ac+
Dnh4c5uaGE+x4iKLTFIcnGOVdp5gI0LmP7I/qzjHATFtr8AeDxHC3ieIXNaK
gy184xnqW0SoVcDv/QWhOBjfOo7gREToP9Nqv2nKOGidCX4ooUCE9njvb4e0
xEJ5HyfekydE6Enm6EisSyxkNP4ofPOcCPXp841s8MdCeLnSK9wrIuQYpW8V
MxEDHjkTLOEWRIjxF4l4enAMWMbZtOZ8IEI5d88zX7wbA7rBZG5/PIlQ7sFx
GPl6NCi5x9waCiJCJfcbVj7ERsNtG4GFjUgiJJHg2mL/MBq4X9VGkyYToaW7
9dxnD6KA8elTlUu5REiBqlpDPS0KCBVXCEW+E6HfPVO3H6hFwYaEa+nD30To
ZlKHAQY/Ckb5GN4a/CVCM/tHO645X+EvWwarQy8RetzUsjH09Cv8OCPZ+Wmc
CLn1flC/QPIV0og6PNMWidAaWZniw4JICP33UrxymwhFxn1NsdeJBLf5veXu
EyL0h8ln+Bt5JJgP+scvkRKj9wFU6KgkAp7/ZVMjoCdGQwxqaq8NIkCxsgjL
fJEYyQ+FaeDRRoDYN/nym1eJEZ/Vg/zWn+HAlTj87r4AMVq2yiceeRMO9KHm
HM/vnOLMi3EiTOGA70XUayVLjLquK76f+xMGa3YRvn7KxMhfzXpi1zIMht/w
SiY8JUZn9x6RWbCHQZP2r/VSA2IURqSppd3+BUqV1JJbTYnRihFtc5XLF0hB
85ozdsSIkXFNMvXmF/gs4Ehx5EqMfDRUmM+NhwLuMm3VGX9ilMb0KO58cCi8
Y0i2vBZGjIi/CUuUSoeCNlaMSyqeGLnnKWO2tkNAYb95QCOTGO3xGyV1p4WA
yJJugGkRMRIdwsXoaofAlZEtKY9KYjR6QPI8hiYE6Nq8t782EKPPajQmwX8+
A6b6fHp+JzEqwGm433X4DCsFedoNw8ToDEvFSj7/ZxhMvkczNkuMpgcYM2fn
gqEhrO/3zjoxemwskjgZFwzFPm9tKQ+JEUtQq06WVjAkOWB4LhOToNJMHmnp
M8HwySRkRJyGBP18Pc6f+fcTOOtcDVZhJkHMYWZus96f4K1KucyryyRIOzm6
aP/eJ3gqrbzndIMEfWjmGpnD+wRywlNZoaIkiEWenzqvMgiEuex0s+6SIM9m
/9+PnYKA4xwF/W9FEvSQyetsr0QQ0JDH1fWrk6Bsb79n1oeBcHwo6LCmS4LU
6wRo8ZwDYXGl7gaJMQmyMZPMUSEIhP6xZxMXrEnQHyJLjtc+AVDXsRoq5EyC
MqZNVO7TBkBhjZv8Ax8SJFUdNr4W6Q8JxYxHLz6ToN9YlZ1XnP4QmJaZZxdN
gj5rlI7lFnwEx0gwCEwlQTc8R1Rq736ENx87GVO+kaDLh/vF2Z1+oOlk1FRe
dsr/uruVkaEfyJodOHX+IUFP6I4Wt/Z9QVAvUGChlQSJ8srjND75AtsTjhnM
wKl91vj6AG5foJItiWCcIkFa2azbsb994FDkwcMbKyTIbfZjh5eOD8xzj2Jk
dkmQnEwT08Mjb+hlsSx8ho9FsizkJatR3lBDSfLKggKLTFTTw99JekP+SSSL
DwMWec9/FW4b94K49RutsZewKKbc55Deywv8J6tdi69hET7LdXbJG17g0K1+
668QFrkluHQ97PWEV3UL85OSWDTsIvdU1tUT1L87Re/LYZHUxTzaa3yeIJ1J
p0L7GIs6vY1MD4Y9gD86hfDqf1jEc3DjX3mAB7AGipdKGmGRsv/gXXMpD6DA
tRirmWNRd3nfFvOOO+xb6LG+dcCiC/2WfT+y3GHWYKfD1QOLuJLw32u8dIdu
dV/PiEAs6trqTllndYdquYvieRFYZN26M+835AZ54vnLtYlY9PNB/NjVr24Q
c102fjgbi/IIbzA2PXMDv4sDT7ZKsMj/Tz6e9UU3eE9jiiWvxiLJh8a0Vydd
wRAfv5ytGYu+/2aRmE13hSdboe9Ee7BIbMloqMjCFaRmuDkejWHRG39FpxAJ
V+Dr+9nzcgGLDKuHitzJXOFCo4rvhy0sCkoa7PDqxwFZ+bTE52MsesbBNRCT
gYPd7Pfr6VhSVBrD6tToiIPpWMrkKjpSZMLMyEj+GAedn+I1e8+TIsG9jq+6
13BQ5SZMscJJiojYeSIbCXCQY91QSchPii5/aOeTG3WBr0b/WbLcJkVHVooE
feUu4KO1zikgQ4pilPgk7KJcwPaBx4DcI1K0FhWJ43RyAQOJcwE6WqSoWZB6
YfSFC6jyZUvZ6JOiMOfok7j7LgBsUtsfTUiRw5R90Us+F+A9052WaEuK8t4R
G3CfcwFmotfaP3CkiPebTM0MoQtg/x1St/ud2ntU08s37Qw7c0G/Z0NJUYTc
889va5xhcuCy7XEsKZo/cpKxTnWG9ubSa2czSJFUK8cl8QBnqKhQHOEpJEXK
jaq3U+ycIStv7NPdClIUcsGlPMfQGSISrGS06klRdrwF6R1NZ/AKwe696yBF
z3Uw4aIPncHaMyrLc4gUFfSdb/CXcQY9u5u60TOk6GpzeuQlKWdQflNzpnCN
FN3SRrWD4AwS2pp1jfun2KCoNfFUzqO0ZD9OSIZsx5GjjqwzMCGXG7tUZOgq
a3XHyql9YgH6CapzZEgkw8RJ8NT/Fkda6BUOMrQdMk9E9dIZxs/ekb/DS4Z8
Ax52/mflDK0kbYeqImRolshKGs/TGcr39PNeS5Gh1Jrgou4IZ8hY/Kfv8oAM
9e1SR5XkOkPYsB9jmBoZervuGeBa5wweraxN2TpkSE9jRZt23BksfhU41bwm
Q9lMbRySh86gW3BfYNCSDN3frbppTuECSsmD0+uOZKhy4YqnMYsL3A57F4H1
JkP4jwqf7F9zAW4fgoeswWRosf1lPultF2BwCMPciiJDpnGNIR4PXIDQhKdQ
MYUMORkHDmtpu8D680oj/TwypM0ibWRh4gKjyo9Z7H+QoQ8pj+jKTvPn793Z
lqAaMhTLe66DNcgFfgg5uKa2kCEuG/Wgj/EukMZJfauijwylSf2kXcp3gVCm
xPmuCTKU8IfT7UaNC7iRiUQvLp3qHzd9kex2AbPDRmX8f2ToxjqVIemMCzxf
eU54Do8cnaW7n+6w4wKKYxslfOTkaGgyKsONGAdiHZ7GsmfJEWGFYiAtAw64
aphZ/2MlR9GEASN0V3BAX5zTYclNjp5iXRhtBXGAn3bX01eQHJ3r5Ne4IYWD
1YgesXgJciTn8U6fWwkHw35vlkvuk6OTemyR1lMcNDkex7WokKMnc+64by9x
UPou+Mn0M3IUlyBWw2GGg5QXnNjDl+Qo3/mHbNJ7HHx+/KOMzowcSRCHpXG5
4gAno/SO254cTf57bpjogwNTkQl25E6O7jlPjVIG4UCb26ZHPeBU/6jwv+eh
OJBnIfM1CSdH76irz/pH4ECEMkbCPYEcWd0V5vschYMrJ/zrkVnkyL3h9Z83
MTigW/+T9K2YHOF9xi5QxeIAM6mlWV9FjmSv6wnYn8qXu5bJRxvJka1kIFfW
6frBWlzldhc5QjrM9xJO7deXnrWkGCVHW2v4A09P/RdnpHNyzJMjtYPVpu5A
HCRFSQyIbZIjyQeLS2dO+X8KaPdXPiJHrEdPDxlwOHB2eSllREKBeO5wxI/b
4uCtxd6WIy0FIjHe1rc1wcFTA/+0EBYK5DjTkTb0Agf31dm0M69QoLYXjakM
ajgQliuiruajQPHt/wx47uOAQ1z+d58YBYrKa01lE8UBzfVhm1VpChTLU7mO
uYqD4wvm14iVKNCPTzxW7afxXqQmGjmvSYEcqIeIoghx0I8X8UlQjwItv8re
f7XuArWb12UU3lIgtcPvItLDLlA4XbWra0OBCK0104TqXSCh90mWrQsFCgbK
APnT/AxsmNMJ8KVAEn/x3wR8dQHHsg9nkkMoECdP3HUqdxd4k01TVxZDgULb
H+N1GbuAZmySfUcaBQq/SSm2pOoCMp9Eb8znUyB+OSdNfTEXEHRrHj8pp0Cs
5R5ksqwucMlaN5ShjgKdvRtJF39aL6mMtuR420/52Hx0wu90hkNN70PpQQpE
/9z9+8xXZ5hXOJ/3dJoC9Wu9f4Q1cIbeO3n65qunfFzKXFx4nKHmxj1G7z0K
VF3JdfvVhhPkX+prjCGgRKOHgTzdpU4QS/fWqYiSEg0XtHFPOTmBPyFGoJmR
EulERPZn3nMCh53P0xNslEg2+1KiFJkTvJrjitjjoUSBMiG2Za2OoD5Qpkhz
ixJN+3Sb3gh1BOnmRxguRIno2hsLc546An/FZIGEAiVaNMaze3TJES7m2Ro9
eUKJTJ6k9bPPfACKBHIW4+eUaN98c0Qs6wPsf45twb2iRFGGW/pJFh9g1kPQ
NdyCEqUsbFKbi32Abts64dwPlEiGRO1BNuYDVL9+Nv/HkxI9NSYVeVnvAHnP
VqOGgiiR3ZOo5MQgB4h+6Ka8GUmJQl/1nrXQcgA/YCQkSz7lQ0+Q28fuAHb8
mSWXcinREX615MiSPRhygLHId0q0dc9D1LvEHp6c7byo9JsSaWBCiwdc7UGK
xKjD4O8p36DUD31K9sC3t+/h0EuJCthPDlxZ7OH8YoBY8Dgl6gNCrYG590A2
zL6ctkiJCAdULIaL38O/luK4ym1K5HR0Zd7H4z1MVyk86TmhRKZ+V3mGnryH
zvwRkmVSKnSJz86x9fJ7qEqyKCOgp0KU55ewz7ftIOcL8Tvmi1TI9pzdrEut
HXz1jmTnv3r6b8McK3Az3A587G/03BegQo0xo3T6b+zA5m21z/M7VIjxt7Qe
pYQdGDxXl7CWpUINKu3Xr9LYgarywpqfMhWaS+L+mTZpC3DXKSnhKRVqrarR
wZXYAq8QneZ3AyokTd7wMdnPFpg5U8jbTKkQt/YDEayuLWCZxCtn7KjQZBHV
+FchW9gmbbE4cqVCQOKSo0pqC5MHLzjp/alQjEi3/cURG2hf3u6/FkaF+vdu
La3l20DFqI+/VDwVSrk97FXmZQNZ7RekNDOpkLwWce07bRuI+P1ty7ToVL/r
25WTmzbgVSST5lFJhbROSNAzIhuwSu1/FtVAhXgyNQet+61BL8KEuqDz9PvO
nutH2dag7If3u2GYCq2k7BJmuliDpGOozdgsFdLTH6LPfWwN195xX/u3frqf
6mojtzmtgenFz2HKQyrkqr9+RmbXCogfq3y6TEyN4mMU9isarGDr3vS92zTU
iIz9nE1MpBWM3Xq/q8JMjWjlVc/1v7GClquUWa8uU6PeUXm+l+JWUM4cr+N8
gxqR6jTViZFaQQaF8JkvotTIK4b9l1KvJYQf19dm3aVGqkSU7VFJluC+pm3/
W5Ea1YX6f7xgbgkWE2u8A+rUiKU31rTpjiXodrmPr+lSo4C12uF4EktQqmUK
JTGmRgrTtjej2y1AvDRL7qL16XoJnbwfkRZwNQMdCjlTI95Gt6hdPQtgiOrK
feBDjQIz5K+pX7MAwoBX+nqfqVHUrpZH55o5bDgfMryPpkbNHVYt5sXmMGIe
1BiYSo3UCoTOCTqYQ7P+ZaeUb9RI8ErTK2Ywhx9qpfw/y6iRG21VJg++OaTd
V5zu/EONNDp/FhvXmMEXsbHwhVZq9EzMWnLMwwxceawU8QaokaN7clugrBmY
XcBimKao0VMetWYcsRk8p44quLFyymfuU/4Hv3egiHfTSGaXGlGuBPyMwr77
n3sCNOh/7wv8Pxshwa4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
jbzgus/C7OkgaiRimBFVxOsF+hcoiS0jqVG75Ii37pwn2Pee5y5JpEYHqX+J
F3I94bXvbWmiz9To8tDUd2cnT0gTttDRKDiJv15jgkrWEyr7gmwTKqhRVi/b
XjaRJ/RhM0NmGqlRrxzzqYctHrB2sTldrJMa5YnvF12M8ADKgdkar0Fq1Ohz
nv/MPQ8460821DpFjVjDs6eucnuAnMi57VOr1ChzVobZd9od9AZvMprtUiP3
C9ssJDnuYBfw9GIeMQ2ylg253+DoDsGigbf2aWgQm62X0S9Zd0j5l26mzEaD
ksvbGc6QusOPwEavKD4aRBp/WNTQ/hJ6Lk/HjwrTIKGJpfCqmJewOkRSfEGS
BjU2FZPzmLwE8iD+Thd5GsRR43J1+vxL4LuitFivSoPORpsKsW+4wbURMwy9
Hg1yEexpbKhyA91gP15jExpk0xqQvxTsBjbiqbKZljTI01peNE7XDV6N1t3b
cKRBYdLVKR28bpAcMvECedOgXlpXz9gVVyi/ShQWGkyDArvy1PYqXKF7jDer
P4oGxfpPtO8Hu8Lya/kG/iQa9MXXtTlT3xXIJE1H7TJp0JU64zUyQVc4M+Gz
9+MbDeqPU5vm2XEB6TefWCgqadC3sTH3nWYXuCtVI6r7kwaVO4YGxSe4gNXk
qGryHxq0YXFmgNLaBQLDjp8u/6NBL62SLuogF/gozYOVnqFBboKPRT2ZXaBs
6vqHgLWTfF76Yf1m3hm6wh+U/tmjQTqL4yqh1c6wKOP19zQpLcrOeHXgE+MM
pDMfVizoaFFq4IrHCxtn4H5bSVHCTou4YpJ9zZWdQUp2mJ+Inxaxd0zbPeV1
Bq3ZA9C4RIs8c3F6TgdO8DySyyhBihbRdx4Pxvc7gb+crPOMAi0SFrsjPlDs
BElzRm/F1GnRHU9hHqloJ/ge5Z7tdY8WySYTd5U7OEHn9fc/W01pUdWtAvxj
HSdYmC+fOGVFixa+kIZKSzgB8bvBw0fOtOguPpn4GrsTnEZ7bHk+tKjtshz9
80NHkFhkF98PoUUEj5/kt044wp0YaU3ld7SozuQ3r2GLI1jIG1hGfaRFCXjl
AbYCR/Bbcg0YzaJFDNcs9IgTHCExNu7ThSJapCH0+ByHvyMUK5RWuFTRIpmY
kQQjW0f4vdzXW998YrcS3qwxcoS5uG0c3d+TeJYO+hVvOwKREiuN8TAt8u9R
eDAl6QicqxKCmbO0SKj+3K24c45wNUFPcQNHi86bR5DoszmCxg3nB+iAFkkX
N7BwUjqC+do7t1AMHZrczWHqP3AA3/fF0f30dIhlUSTXf80BEm725PFz0qH0
raR8lmkHKMJttNoJ0KG74joY70EHaE9knvkhQofymu/XFHY6wKyyOCGFDB2i
67/FlfHTAQjW73LpKtGhDguCUOVqB2BPcpBM1qBDkgQVVUHfHeDK7SjtZX06
1Mq8+sUg3wHUNr5ZS5vRofkjpfisLAd4+rErKMCaDjE4u4uapzqAtwo+9Y8L
Hco+L4b1+eAA8ZsM1aexdOjfVCjbZKwDFH66PGgRSofSSD+ReEQ6QJuq1mZx
DB06qxKzLPnGAaa37OiJkukQrb3XGeIgBzhOjrig8ZUOlb/J/dSCdQBW9fyb
CcV0yKY8S8rF0wEu7/w2nak+8b/v+HrbxQFUU1c9xFrpkJOcwn8SLxzgiQZd
nFc3HYq0sYjktnIAz91Lha0jJ/kw9TdPfOIAsWkaHafm6RCVU8799w8coEDT
Zv7ROh3anKh8SHbPAVr23pDkHdKhtcsvP/zScPife9v06H/vb/8/2QnHUw==

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxdenk0lV/Y9jlmx5hKJYmKJskvpZLcmxAZMmTIGJUhQ4WQmYSEzENmMs/z
fMhMRYbM8zw7xzz7fGu97z/v88fzrHvde1/7Wtfe+9n3tdbm0H2r8JoEg8Hg
j17///t/H3ah1EcR6ePwv/F1wZZrQp3j8PJuf/0B33/AL7BybGR3HMT1emZW
LG6B8D3mbeeLE7A7ZdXk9IsPpPkFRi5KTcDG/sCw0707oHJbq6HObAJC2pO9
P1Xwg+4tl0z97xPQ/bllSFH9HhjzJgZRV0/ATUuxdrrjAmDF02yXNjsB2Zl/
vsVMPQAX7qWXMscmobwm9qRW90PwvsYktXxvEtSPBfzbmwIIvcJ/y+/FJHBU
qE750ghDPJfaGT6PSdDV6HFZvi0CmZccMP+yJuHc5Ae+i+8eQcmFuGnL7kk4
5WDuIIcXhVr2+pbTh5NA70ial8UuDi1scwWlXFPwrU5+qDPkMfSy0kdqyE5B
XUDE29OckjDBcsv14MMUnFDPr/zW9ASWTysbxUROgToq/nvRTRp2mG0UROqm
4Mz5gAktDVkgPxl1f2JhCjxWBpV+cskB4/FqdrcT0xBOlGkUvyEPZ49NUV4R
nAayKVyIo4gCcDHglpteTsMGTwa6p68IvHQ8XUZfp8H7A5GVKuIZPKBRqKDL
m4YZmmMilaNKIE5t+SOrbxqQvek87r4KyFN+/ypPMgMD3ji/8ThV0CDHm61e
nYEzF0gxF9jVQJ907HmQ/Aw4/gibSMtRBzMshfDdjzMQtPSykFxVE+wPr17p
jTmKZTpVXE5og8e+DINt4wywmXDJLJu/AP/d9xushBloaHHuCDfUgcjtoEH8
qVlI6g/KXTbSheTNktoXMAsVHLMSUrYvIW99MI1EfxZmeorx7KGvAL+KDfjh
MwtPgi36+WpeQxOR00a8cBYCTEqT6fb1oHNZUmdmcBZowq7rC4gbwPCiiYQn
+Rz83nR5oR5tCHPzfje5b8zBlJpIwn1qI1ibLWBueTYHl7mw7jquxnA43bv/
1m4OCrg96e2OmQJuan/i2I85qK3r1JDPeQsnJzh+5/2aA5+blBaSue+AfUws
T2l1Dv79ZJXGBr+H6yOG3zdZ5uHV36smUq5mwD/k7RwmMg/+0SlW6vbmIDyQ
Y/DgzTxUchxaVThbgHTfv6eDfvNQKi1AN+D3AZR7tvkdS+Yhvke/kTXTEnS6
zrFxjM4DNdf69EGXFRh3CpPXUC2AyUe9nhXaj2DV/nrhFe8C3KumKHaSswGX
v186KFQX4PYLBxLaOFvwbskoTXZcgPtc4SosJPYQ+rst9knSAlSJaxL43jtA
fPO6x0LLApTFtthMLDtCZuOZdz4bC1CsEbimVekExfUPVXjZFqEpLPXJlW/O
UFOrI9Qutgh7uL3kEH0XaKn+zGlhsgjJTCdsVyQ+QW9VCi1z0CKU4crqPPlc
YQL/Z7WofBHEmARs8y5/huVyYt/ziUWoPnkvr4TTDXZKT1bv0iyBVDDtwuoN
dyAvuZ8SybcESUS8ZwnyAMYiTV9QX4KvWr6Jr7S+wNkCZ6tRlyV4p5goJ+fu
CZx5CVqfUpeguYvnQX/ZV+DNaRLjbF+CsogDKe09L3iQtcjdsL0Esvpp+o8k
fUA849gJQ45l4D0T+mw+7hvIp93ZxUkuw928B1LDrr6gkfJ8LP3dMpwtubN3
EvxAP8m+STZ0GQiEWiF5jD+YJcRmEyqXwTSEXruh0R/s4+tC/KeXYTLMdiYr
NABq/1rAd0oCOAY414q/C4SmVgo+o7MEUOp9nt7wNAhaWkK5BG8SYDLlvJjJ
3WDo/HONhe4RAfRxnrsfL4dA3+9yuiFlAli9aBrmZg+F4V+y2Kw3BLBzPs7T
yBEGE80ja44OBPiPWZfoy/0d5prMZuT8CbDenhDRjMKB0Eg2wJFIgAx5xbRy
rQhYawhuXSkhgGC0SmGaWyTs1F+pqflDgGcXsibGiqMAU19aGDhKgMb6N4Vp
69FAXied+nqdAF3UeXfTomIAVzsUyU9NBBHtzrDTErHAWPPOj/IcER54PcCI
bsYCczXJ5x5eIvzUYFtWSo+Dsz8DrVNEifAy0P67tX48sFdxGduoEsH2sllm
15UfwFVZrC1lTIT7szZW3wk/4Dr+iSKrExHea05pL+MTgLdiQHwxgAjHWmi+
kQQmAn+5qQA+iQjyDGJtmHdJIFiG4flWRoQbRk18pxWTQbjUn+NFKxGefGt6
aPUwBcRLLp38b5wIl6Z+fJK9mQrSxYVUJJtEuCx2jazlShooFEnsteNWoJf6
IhfntXRQLuxbjmdbAaa6iM9ufBmgUWA8bnFrBcJdtHQuiWWCbv5Bl5j4CuSn
nhq7pZ0F+nm+zcxqK9BYsXKMiLLBJPcCftpkBTpOsC7ldWWDWU5+TrHzCsiW
XWnffZcDVtniCV+CVmBYY89igiEX7LN6QtVSVsBMtAHrnpcLLplvvK5XrMCP
jnG7Q/U88MjYc9z7uwIbMfZ2BtT54J3uY/5nYgX8MkVvDpblQ0Aau37U1gq4
v5DCfzQvgNDUXLW3tKtg8+TVree8hRCVIiqL2FchrLk8NmSlEOKTu4SP3V4F
j1rlObnSIkhOMrgz9ngVxpu93GPciyEzcedKnvoqKEs4m8WqlUBegher69tV
UJKKZH3HVwolP9gYlT6twu3ZSo0rTGWAj88m5QpZBVr2JwJTG2VQGyeyuZG6
CkPEzMaa0XJoiu2ca8CvwnbclYOB9gpojdEbCm1fhWN6PbEyzXjojN5qM5xa
hZTE86K8jZXQG+VZJ7BzhJebof5UrwqGI1lLaOjX4GG8ak7vfBVMRGSmD3Cs
gZjgzNVai58wF45iMu6sAeGzsMdZbDUsf28PcJBcA22Z8DcLvtWwHvbK/anm
GoToPOkTuVQDO6EbNuzv10CUY6jkWlkNYEI9TImua2D5JLEqS6kWyENYdKtD
14CqWH96YLUWcMHpSgHpa/Bau/ZxRVAdMAYJSb6qWoP3rmEbag/q4WTgX8E7
nUf8bHSeV03Uw9kAXV6KmTWoG3tOsunXAOz+axe7d9fgUnUwLdWjRuDyczuV
zLAOZiY9h7ubjXDd9zTNx4vr4N1nx9Gf3QT/fUs9kLy7DgbeIjXpJs3A7yO4
wiK1DtzhgR1WPL/ggXfL5LzWOuwoSs2LrP4CYa8XveVm63BC0VP6ePlvEP+6
8tvbbR3WRExJljz+gLSna5XW93VICS116n7eAvJfmPNvZq4DiU/r73aeVlDx
SE7CVK/D4YyGFZH0L2i4C4S3/VuHived865mf0HX7bdP3Ow6xPHjr14a/wv6
n7VczPfXwddo1LFVqQ2MXQkfRI9tgH3GipNbcxuYfXIxPMm5Af2eoyAh3A5W
Lic0p+5twPQxum/HS9vB3jlRrkh6A3CZkDt1uwNcnO6JerzYgKXXOm8qczrA
w7H57nOLDbg3RsMYztsJ3g4a1695bMBVGrqHljmdEGC/xLYbvgG+b59ckrn9
D0LtnJh+Z22A8Q9Dw7Ml/yDSlokismYDJGZW7w1AF8Tb/Ng26d6AeZtcBs/G
Lkj+yL8oNL8BhXwDo2yK3ZBp3TjCcLgBUnylXIHD3ZBnpdY5wrQJ46R+QWMm
PVBiudCQw7UJC2IahiQHPYD/4FDmIrAJKmwLEvPfeqHWgjFLUXYTvn65qhp4
sQ+azOPiLulugqdUa+FqcR+0mN0OXv+wCWzAiA6f9kPn+/ov9V824bJMmmj6
TD/0vlO1D4ncBNWyW5eXXQZg+O3cO4OcTSjYPbFWxjYIE6Z2r+7XbYIImcM4
efkgzJnQq+J6NyHeFd9fqTYEy8YxUv0Lm7AiyVvTvzME60a3IB2zBUEceqel
IoZh503tLfsTW/DQ5fVbx/MjcGiozCV7ZQuqH+GCzd+PALnhzJnzgluw63tn
bLtmBHAGNnSEp1vw5WHROPWpUWDUp8X+fLkFjVJo4vubUTipF7XmZ7UFjpM/
6uLxo3D2Ne+M7tctELWofnz2+Biwv6ru54veAsK249Cm/hhwvXzWSpa3BUVb
vzJuVozBdd2p6n/1W4BD9Z7FTOPAq2NdmNi3BacjC9g9DMaB/wUu1WppC/o7
GfsC8OPwQDsiUoJkGww7ZEb/npgAYS0evzPM20As47x+22gCxDWrXOeubsPN
Ukqr3J8TIK2hYF32cBsobmndRqcnQV59wshLfhvcH1yrbjOdBBU1S23N19vw
XstDXL1uEjSeUynyfNwGZ12Gir9np0BH9bv4odc2XP+D5jjNpkBfhVvgb8w2
1EtRusk2ToGxMv5GbP42nNt0wgmxTYOZkhyHWeM2yORXzUybT4PVs7ETjwa2
wYoVYwtN02CvaEF1grANTPe2xu+yzYCLAsXeBOkOkGiHiteazYCHfOhywakd
SLm8XN5dPwPectfG3a7vgDrrluJrllnwf1repQI7cNHMlfaFySyEyso2X1Hc
gTAWgbbSylmIlBmp2NbbgXOV49kGx+YgXtosp9lmBwbGZsI1dOcgWYosIdxn
B/SNCjK+5M5B5pPgUOO4HfA5n7U0hp2HPMkrXg8Lj/p7nfukLjcPJRKljvTN
OxDqYJwxFTkP+MfS5sODO2DAMltjNTcPNeJDetnEHVAYnxYg4V+AJrF3as7k
u3DCki7lo9MCtIiSyCqc2YVHqf6/2poWoPNRoPDFG7vg0M3sd3BsEXpFuO6s
oV3Y9GVnWFNdhGHh4it1z3bBNd3fOTFqESbQE9Zgg134bP7FHDe+CHMwwKBv
twvawROxJ7iWYFnIlPSe7y7QDvyhKtVfgvWHmE2qH7tQ8SJ8ejlpCXYE/ed6
i3bhaW9ba9rUEhw+uDSU+msXYt/4fBq/uAzkDwrbbId3weC+Bbu39jLgBCTq
pFd34eS1adbosGVgvN9XfI5yD1icx4UY25fh5D3j9CWWPdAXVGw3IiPA2bsH
0ZU8e7DLM/xyg40A7Py+Ab4iexByeacy/h4BuO5ccNdRPspzcFK+kyfA9dv5
Nrfe7EG5hfMnFUMC8PKJm5I6HOE1ihYrOxGA/1aPTqffHpxK5H72JpgAD/57
o5SQsAekJ1TEv6URQJh3T8KyZA88KZ9lVVcSQPymj+DjP3tw82bcFLaDANI8
7LynR/fgOsbE9skkAeRv5F6cXdsDnazMu983CKDCLXqqlGofTscun16mIILG
9S7cV9Z9UAr3U3nMTASdawYH6rz70GjoYBB7iQj6V3eI3KL7oB/btbX7HxGM
r3hN7qvsA7NLLUFJiAhml9l6W4z2YfdFhlmmJBGsuLJ/RzvuQyC/VifZMyLY
c4pUvQvYhy//rDNUNYngcqkzTzhpH4RYj7WnvCaCx0W9JKayfehrWEJbR3Wf
94Wt7+Mt+2C4MXhf1JwI/hyePvlj+2DAP8nvY02EUHZWl88b+xCd2j7VZUeE
yPOZH5RxB3AYMsxz/qhOjGdDhpfZDo7m8c9VAxciJJ9r19j67wD0wua48j4R
IZP1lVyT2AG8FidPwboSIe/sxqPvzw9A+16wodJRvoTF466RyQGkPPgpnu1M
BPwZluuCzgeQdXVW/YQjEWpOp7PRBR0AS0kq8ZMtEZpOCTENJR+AbKilKdaK
CC3Mf8mzyg8guDne4tt7InSe1N12/HsAHgVuv3iNiNB7Ym1BbuIAGvaNdWde
EmH4uNsIx9YBjPjLPi1RJ8IE0+nOFZpDwH448ydRgQhzx1Ibas4fwovbmgL5
EkRYZhQsC+Q7hEnoPzP5kAhrDC2Zrx8fQo5eO+nDW0TYoX8Rx69+CDY3/xZX
chLhkG4liPLtITA9GTv2/jQRyOlcv/S4HIJezz0SJRwRcLTM9inBh8BhKRX0
dpcAjDTJ72xSD6Hh0sFC7TwBTuIEXknhD6HIpAGe9x+td+rfKqzth7BK1tvF
23y03qm0pBYnD8H3pjStXDEBOCkJQvjtQ9jkUpQsSyAAM6lwWAMFBs0nvSOz
OvIhoSS449mMGMT0t7DS/cinnCXp8AplwSDNoue0K0f7IQobQeF8CYPMd8at
Sp8d4WNfOxnyYJAEj0j4pBAB4jE8O/L3MKgrY+209ZWj/YXZNBcQwSCF2a4g
y2MESD6sXLwgjUGv8Uzvf60uw/VDD30aZQz6JlckGFizDJkH8qOr2hj06wP7
oJz/kc87YFEfMMSgDf+6ENyLZcjfH++sNcegwIfsKc3cy8C/ny6bYY9BZDfp
RL9vLUHJ3ofGIHcMCr3p+M2lZgkE94REHPwwKD9V4YeX9xLgdynL9cIxKERC
5OtP5SUQ3v1752kCBsnW7AlcO78EtTthWXezMOgehUZw69QiiO/oXmUvwSAx
l4o3pRlHPnr7ejxVDQbF2NmarpovgvT2GivxNwaVbrvBp/uL0LJVEdzbdTRe
HYeu2cECKGy5MVaPHOmzXQRN1Uf/182nnqlzR/oI9nD6ui2AyuZpsoA1DNpZ
kBRrlVyAvo1Re9sDDBq5inJ8aBdAYyN18yUVFtlVJWt1tczD8Lr5e2kmLNI1
uXcx03cedNcF52+zYpH+HeHicwrzMLFG/vocFxatZsfnch+fB4O1liFy3qM8
r+CXsY45mFsNUV26j0Uz6xX+4oFzYLz6or3rERaF5JiTv3g2B4SVq9KVMljk
JHhj886JOTBbWalLUsGi9/8JabZ2zMIasQx8dbBopecrLV/ALFgTXUusjbBI
YyC5RF9hFnYIMnw6H7BoqJ5y3/zYLNgRmDMkHbHIXYdbQuvvDGAIw1y3vmAR
H9Fknfvb0fm6nBzDEoBF+3GpvFMyM0Cx/J6FNBKLKmtO0vnSHp23SwKB84lY
1BBR7877axpwS6T0ndlYVDdj8PHPl2nwWfztXl6KRZe13kUYS0wD42IQNqEW
i9geT3w5TjkN/gtatt4tWETmy1rbUDcFzAuX1z/0HOlplJvj4zoFofMEU60x
LHIwG/Q3eTQFLPMlM+ILWGRjzhRgSDIFUXMuujc3sGjDF4t3/zkJ7HNSA6cw
JOjAfGbzt9Mk/Jg9oYzBkaD8E7fPC6FJ4JodbJ05ToIGol4tDx9OQPJMomTb
ORKUYj2BLaqcAO6ZtzUll0nQsupmT4PjBGRO33sY9x8JKuWa7GdGE8A7jS3y
fECCaujOqiRjJiB/qpnXXIwEzTqI2Tn9PKq3pgJS1Z+SIK0CdfV4l3EontS4
JPqcBNnfWyE7KToOgpOcUdwvSVAVJkWql3wc8BNLp06akCDNt8Ibqw1jgCaK
/PYtj/ifWc028ByD2nEnmiknEpQey0b/QGYMxMclP7d4kiB/V1svU8YxaB5j
OiwMJEG/b3xxoegcBemxfuvoKBKEP+v4H0XoKLSM/lhxTyZBlDp2le80RkFh
1MT4XS4Jmn/w+q4kxyh0jvBPqZaTIAcNvIf/1AgojxxqC9eTIH1fN/en6SPQ
N9zYe/UvCbrly7DgYjYCGsN+ikx9JOh8ZpfCzfsjMDSk9mdnnATNXNYSVMGM
gO7QxcfjiyToSjkDy863YZgYXKj6tUmCnjzypBdnHwaDwQKBfCwpwlhCXnDO
EMwNOORH0JAi2exxXsKjITAeeMzz+SQpinw0bK3cPQiEfsZkk/OkaO90NNcf
o0Ew6+/lUL5Kiorkd8JUsIOw1hcXLsRHis6r3eLcDhkA6z6jk5cfkiI3e5+W
/JsDsNN7+xvDY1KU8DZXxruxH+x696m25EjRAk3Atc+6/YDprXcZUSNFKJ2/
OGq/D1x6vu01viJF4iHPLgyE9QFFj6pljikp+iF4IAR3+8Cjm4MQZk2Kehqu
RDf96wVc95yhiwsp0j6+9tPuQy/4dOWNv/EiRSaB6nRqzL3A2GWnqRhMiuZ9
fMx1i3vA/59Y94MYUlTagMsLVu8B5n/08pdSSdGf+K/qm4fdENrZ3UybT4o8
Ax1HXBO6gaUzRnS9ghR1UIbZgHQ3RHUY4gcbSJHMBcMLl9e6gL3j1r36NlLE
Zv4s9kFkF8S17+Zk9pMirLqUu93jLuBqr70eMkmKLrFfU5xd+QfJbd4Jjsuk
KFGp9rFz9D/gblM+b7BNivSfC3x8JPMPMv+eD5MjJUNnd8q6efY6gffvDNN9
OjJUfCDAKpLeCfmtOV4cp8iQOpNwi61mJ/C32lDgOMiQVrGAZR9DJxS3PHJa
uUaGelQ9tDVqOkCwhXan7zYZutonmXZo1QH4P//Ma4TIkOvXv4rVNzoA/Yla
TJMgQ7PReaJxE+1Q+1tfP1CBDLE8S1OJjGgH8d+8o3YaZEiguJ4tR6kdmn9t
q73WI0Mkbu93+hjaQfpXdafMOzLU/7294PSvNmhp/irLb0OGvo2GpOu7t4FC
87NGNlcy5IlWKOtE26Cz6ZwIpQ8ZSlGyPsVD2gbKTVNlyyFk6PdL7q7o6r/Q
15h1pyeWDO1VtKid+nTk3xuts6rSyNBbMolYP9G/MNQgfDWlgAzFfSoJpqE8
8vMNuHi/SjK0c/GCNVlQK0zUd7DaNJEh2SFvj4lzrWBQHxGs20GGyP59lctJ
boG5uteMUoNkSKnkP7pXd1rAuI7Hk2+aDFWcU0vfqPkDhNpNUlYiGQp1f26q
++wPmNVW2ZPtHuHV6JbGTP2GtZovmwtk5Kj/4pPUVJvfYF2j8P4fPTlikmns
+8j4G3aqz85XnCZHRfoOvpTJv8CueuJV4oWj9lFlljLCvwBTnTHkw02OrqwV
04sNNIPLT0tVK35ytMrW7zRt3QwUP6FdG5Ej1eoEFZ5TzeBRRSUt8YQcSchy
7TIVNQGuqq2O9xk5cg3zIfioNoFP5Xc4o0WO4uxDosN3G4Gx8mUJ1oAc7Wb+
OLwV0wj+eG6+uffkyL5J2FFWvBGY8evp7bbkSGTIPXp6sQFCK/BcZZ/JkRuW
JWwruAFYKtxj4r+Ro/bHeRs2wg0QVS7H4hVGjkKQXarBYj2wl58JtIgnR6aP
OGbKvtdDXNkYnWYGOXr/Av/SVLIeuMrS3MWKyFGnttMjm+06SC61wPL8JEf3
Um9S9qXWAXfpQ1vmX+SI8VdCk7tmHWSWUKwfdJKjVvyzYvtjdcBb0mo6PUSO
khswnoX1tZBfHDrTOkOO3pgaxXLb1wJ/sY5u8Qo50ih92NB3uxaKi64NxOyR
o5G4F8/KFmtAsGhV6QsFBdIZukPflFQD+MLy1veMFEju8mTtgW4NoMLPkmos
FIhxpP+06vkaqC2QrRG5RIFON3/gax2oBvGCUw+v81Cgg2xsmHZ4NTTnjxQe
v0eBzmY2XSNTrwbp/BTePWEK9Er3cmTR2WpoyTNLnZCiQGNnQqY/DP4EhbwH
l/4oUaBusiS8QMxP6MwliyrQpkD5+e9+Yl79BOXcP6eiDCnQEGtrVs2Vn9CX
E+znZk6BNmZXFByXqkAjR5vmrT0F2uNSFbpZUAVD2Vc+q7hToCDn9IgWuyrQ
zSYegB8FahrLy3kuVgUTWaXWV8IpkCxaf/GbvgoMsj6tMCZQoFTOVx9Fcyth
LlPaeDuTAv2oeVqYKVEJxpknp0aLKZAI09eXrSN4IGQMaTdXU6DjwsIQaYMH
s4yk3tzfFKhgWDH4ODMe1tLfKYZ3USB9b12tK3kVYJ1+/8+nEQp05uXszU75
CthJI3lsPEeBpOkHLjOulINd2q+qZ2tH/a1OnOkMKAdMWqDAwwMKZCJzg/XM
3XJwSdXM56SiRJtbn65195cBWSoXDz0TJVLktcdTuZSBR8py0sZZSlRNuPs8
8WoZ4FKKOYY5KdHVSenC5PZS8El2Dm+4SYkulemUUtmXAmPyk5PZ9ykRXLSX
rLxSCv5Jx7+FPqJEpHla+Lp/JcCcNEDlLEOJKlyzIk66lkBoYoKLoQolUvoh
yJHCVwIsiaZ78jqUyLVn69HHiWKISrhrKWBEiTTL6+Qdg4uBPQFDuPCBEp2T
k40rkCyGuB9NhjSOlOiCpmXWyYMi4PrhP77qQYkmY50fhuUVQXK8uuaAPyUK
NnVkE3hTBNzxl7prIyiRz81CvRWOIsiMW5TLSKRElG0Fp8v7CoE3rrA5KJsS
rWDL2PwDCyE/1lHUoZQSdfA/5zB9Wgj8sRJ4vVpK1PtLJfoJTSEUxxy797SF
8mg+NUkuNBaAYExfzt0eSiR7TFNs6XMB4KPjr7OPUSLTG15DKaIFgKKNE6gW
KNEzSqPNp2QFUBt15zxxnRLV02Xh+2vzQTzqILT3kBKFcZ4rfeyWD82RDUzV
1FSIeYNnw0ciH6Qjfb1Sj1Oh25xrHBk0+dAS8Zwi4BwVuhAuZx3RmgcKERec
bC9ToW6qxkDVwDzoDJ/ffvkfFVoVOlE68DwPlMPzzaUfUCGP9ynYS+x50Pfd
fvG2GBXiMSMxuDadCxrfxfXPPaVCwwtGOvOZuTAUxjBK/pwKyXN4ery0ygXd
sB61JV0qFDIVJemDcmEiNLazy5gKcU4IHOrjckEv9I1spSUVgqykqfnOHJgL
4WtMcjpqL/9dlzkmB4xD9oR9PamQDeun2gmjHCAE15VZB1KhP5G3XBTv5YBZ
sM8dnSgqZE/X0KxFngNrQSpZkslUSKyp7CppRzZYB7FfvZVLhRR3gmmEYrNh
J3A2jqWcCj1l5JGmfZcNdoG5rKT1VKhMmq38DWQDJtA2eL6VCr0mT11UZsgG
lwBRxs7eo/xuimVEZRaQBdB5lo9TITp3NecInSzw8O8iTVg8ikU+PEwmywKc
f7S99yYVqr/qFFiWnAk+fgabH7DUKLbpfEOHTCYw+v33XouGGnnhO2vnVzPA
33dnTvwkNRrzm548/J4BzL41r26ep0bGeJFYmkcZEPrNa+jUVWrUUNNygmEh
HVi+Kali+KhRepKaIXlwOkT5sLXPCFKjVAeFpgWUDuw+01Jt4tTIqEDUsmoh
DeK8s+tK5KgRT4PZS+ewNODy/ghxatQo+pet2vXHaZDsJVLi+YoarblElFWs
pwK3Fw2fuSk1asMfP3M3IRUyv3amq1tTo5IP+NxApVTg/RrJJepCjaTc9B27
KFIh31MvhtuLGmVkimXtFKcAv+dNlpPB1CinelQGY5wCxV+2AvajqdGcwbbK
9PkUEPzyk24qhRrduGCam92ZDHgPT/eWPGrE6saiq+aZDMhDEVtUQY2aRpQ7
x1Ey1Lqz2kY3UCMJxdlz0ltJIO4+uebeRo1oiJR/g7KToNEt0/Rd/5FenRck
Kg2TQNrNakZ1khppX35+v+FiErR8RrrCy9SInkRJN3MoERQ+Uw9c3aZGLwpE
b1h+T4RO13YlJlIcav/5lIlNJRGUXcNbd2hxCDcYGZBwIhH6Pr2SHGfGIb9H
k5a0HQmg8elGzS92HFILes2j4J8AQy4bgvnXcKjmfJK2lUIC6LpUFkbcxqH7
zL5btscTYMLZg/ezEA6Ra+DFtf/9AD1n+VQTCRw6iAumuBD6A+acWC4pK+AQ
vf+3jmr1H2DsNB4ppIFD/Te5/ETYfwDBMf3UZT0cindC5NGT8WDm+MGP4R0O
Ja99MetOi4c1ByGarY84ZNGT2DtnFg/WDpSfRz7hUKO0jGiPQDzs2P89aPTG
IR3Gx7aRpPFgZx9mnROCQxW7VyPv/4kDjL3uSlgsDqXXv01ODYkDF7vrxi5p
OHTv9TGdRd04ILNbm3xTgENGM1Sk2Jtx4GFboa1YiUPMF/W8xnZjAWfr1vug
6Wh8TnsDn6ZY8LF5qnipA4dWci7qk4bGAqPN6T+0gzi0RE0yK6gfC/4fR8XX
p3BI8FL7y7t3Y4H5Y2rVIAGHQohktwmUsRBqbS5Qv3Okr9T7dp3eGGCxFszP
JKNB5BdSZz3SYiDKipwnhJ4GXSb9RKXrEAPsVi1JjqdpEJcpwk/Lx0CcZQiH
wQUahCNtOXGSKwa4LF+Ey3HToL22Hsrm9WhI/nD15H1+GnQlxocvPiYauD+s
+HAgGnTyAftaunQ0ZFqUUeGeHOFvX5vv344CXgtXlxVFGjTa9S/rUnIU5JvL
7PVp0iCNhxVPbFSigN+c2bJGnwbl0Ll9baOMgmKz4eW09zSozzfmKVtJJAia
JRsG2tIg6hr2JQWjSMC/fz9u95kGuSUX33jFFgnovYDm6280KMwBNyjaHgG1
70i7ZcJokEEfs/O0WwSIv/stxx9Pg9Y9yvUeCkZA49ugZrYMGjQSpXVcaCUc
pN9qiVIW0SDjJNf/+pPDocX0Mn65igZ5+5tUkL8IBwVTwt2eZhq08Li+Ie9U
OHSalORUddIgJfG6pa7W76Bs4nI9ZYgGJYnjTV95fIc+Y6kEvxkaxK5s+Z+M
8HfQMD5x3mbliB/FiUCPnTAYMhoM1d074nNHPgmXHwa6RolMUhS0qK3z36V6
kzCYePPWi4+RFrFPPZfLuxwGem/uUbCy0KLPN4If1Y+Gwpwh1onsEi2a727O
WQsPBWPD5u2FG7Qo+fEtu9vKoUAwCDD/d5cWERXHcxwZQ8HMQGOxQpgW5ZCI
cP5uDoE1fU79RClaNGPd+vzY5xCw1l8a8VGiRRPdgesSEAI7ekVqVtq0iJPH
xcV0Oxjs9Jw6tQ1p0QfyeGHbvGDA6EnKSpgf8XvVGmVoEgwur5kaee1pUb8z
m/idy8FA9rpf+Iw7LbL2FLzaNxIEHq9+lGH9aNHTF1vdz74HAe6VyZ2577So
86/cnwTFIPB5yZ/V/oMWVSqPrzTRBgHjy8MrZZlH/LSm9KrqAsFftzEuvpgW
3dATmfdwCARmXT9Wr2paZHgCm8p5NxBCddSCLX7Togg6dcvg5QBg0bnIqNlF
i7Z/VcsPJwVA1IuFL2IjtCiuCHeN5EUAsL8oIOWZo0VJStW62NMBEKftYM+8
Rot+VL9dHG/1By7tx5sH+7ToUmlZZKa7PyRrMb6fpqRDF0Tuc+uBP1zT6p1r
PUaHZjMSxBg3/SBTM+5V8Vk6xHsr9k9eph/wahoNxXDSoT11N1E1PT/I17it
+uUmHSqj1kTUbH7Ar7Hf9v4+HUq9VPDw1z9fKFavl1J7RIeyubMWE719QVD9
W52IDB26yzRlnyTmC3g1VbiuQoc6KJa7Mna/AVLjKDmuQ4dGTMcZ7I2/Qe3z
uVt7b+jQz96nAW2DPiD+PC99woIOCSQQ+6ue+kCjqh3XHwc69EskafBFtTdI
q4rFFHjQIaeRq4SGO97QokLPEuVPh+rCHojSpHqBgkp3gFsEHRrUZnsjct4L
OpVj6N4m0qHHA96/3YO+grKyobtKNh3KJU9tWqb9Cn1Kt7ColA5lnUo29Pvs
CRpKuzZXaunQ2k/6kE+HX2DoWe0aYwsdEhlOpB60+QK6z7xNt7vp0POO2IKc
TQ+YUFSeGR2lQ/soLuCspQfoKZ7XbZ6nQ5mDHZq8G+4wpzDTn7tOhwgBtzNJ
rd3BWCFHKfyQDkUzCh5P3XUDgrxN6ydqevTNgMfirrMbmMk/kjQ+To86m6gw
lVRusCZHW/PsHD263yl0TtH/M1jL/RN8eJkemYfyuZOyfYadp1GFnP/Ro+r4
Lo7xNFewe6rPS/+AHnFdVs3CCLoC5ilv6oYoPbKlWdgyafkELrLbF4dl6dGj
bGZq/pefgEy2OrJBlf7IVvWavd5xAQ+Zr6eydekRzej1FMpAF8DJPPMLNT7C
18rb4OJ1AS/pczTOlvTok9FxjV8tzsAoPeVq6ESPAvOuiRy8dQZ/qawDeU96
JMbX31Z/3BmYpaytBQLpUffrsK9XS50g9InwyoUoehRv1BF+7aUTsDzBGdMk
06MDLZzFb3oniJLsmFzNoUdFAk1f2G0cgV0yQnugjB55BInvEfsdIE7idW9t
HT3a9BUGqkcOwCXBo5jRSo9U7o/3Pc+yh+THm7+DeulRnLRh9wy7PVx7XCXu
ME6PTvsHK6eF2EGm+JcqvUV6VPu1lyvguB3wiisIPN2kRzwg6eIfaAv5Ymfz
72IZkKx/qFYYiy3wi03cYKdhQOUuhfZBCTZQLJqRRHWSAd0zJ3cyu2MDgqKW
HEQ2BpRJzrF5pvkj4B9BeO8VBvQmLDnx7cuPgB5Rnay+dRT3MuvpYD9CrUib
T6ogA0rvKnD+E28N4iLfqQLEGZBwhMaU/xNraBR+6WIrx4AgROdW5LoVSAtz
771UY0A2zb9t6n5YQQta/yD9igF9Wtpgn1WxAgWEX75tyoCSh3GJE/RW0Anu
huesGZBQ2qROQJMlKIPcOLkLA3LU14xpdbeEPqEzmktfGdAxDy8dM0lL0BAa
6+oKYkCHjhR28vSWMPQwTa4ymgEl6Dbhpbo+gO5Di+aklKPYVOHT7dgPMCH4
UNQ3jwEtnPsvfMz0A+gJUuCtKxiQ/HaKIzd8gLkHrXd1GhhQ1hXLtzPHPoDx
g9AcyTYGNMV702thygIIAjrXb/UzoJ+dR6rjLcBM4FoCyyQDWovPW+IMsYC1
+6tspMsM6P6y4wylmQVY3y8Pnd9iQHwmOplfZS3+594uI/rf+7v/D6hw2FU=

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"doubling\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4}, {0., 1.264766520097871}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866353530343*^9, {3.919866393202964*^9, 3.919866405744089*^9}, 
   3.919866479681888*^9, 3.919866514386762*^9, {3.919866582076521*^9, 
   3.919866632547553*^9}, 3.919956380786121*^9, 3.920032816012081*^9, 
   3.9202155642022457`*^9, 3.922202101276074*^9, 3.9222047899677696`*^9, {
   3.9222891806847153`*^9, 3.922289215126335*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"73bcb11e-b471-4d4b-8d69-b9a7420f6679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmu400mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmu800mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmu1400mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919867032379788*^9, 3.91986705205376*^9}, {
   3.9198670912371483`*^9, 3.919867179575877*^9}, {3.919867242327884*^9, 
   3.9198672560126486`*^9}, {3.9198744442835865`*^9, 3.919874446724573*^9}, {
   3.9200328238958416`*^9, 3.92003282446961*^9}, 3.920215571663307*^9, {
   3.9222022993509407`*^9, 3.92220235420543*^9}, {3.9222047508985996`*^9, 
   3.922204778648769*^9}, {3.9222892718236594`*^9, 3.922289347539896*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
46yNxrL/AWTconQ=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
VBSbEqsp+j9UCJoL
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919867183642939*^9, 3.919867258542136*^9, 3.920031164279753*^9, 
   3.92003282488887*^9, 3.9202155731779976`*^9, 3.9222023555230703`*^9, 
   3.9222047817478275`*^9, {3.9222893284648595`*^9, 3.9222893487022767`*^9}},
 CellLabel->
  "Out[151]=",ExpressionUUID->"46daedbf-fa5c-4d92-9bbc-e559d310a8d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmu400mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmu800mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmu1400mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9222893894833145`*^9, 3.922289420020547*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"a9f34407-9185-457a-921e-b86ecfecb151"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHk81ekXxy/JKJI9SovdJdx7cbXIPSmNUKkI2YWylKSSkpiEFkRRVFRS
01W29GpkdE+mZSpEUSpNSgo1LdIQ06/flPN8//Hyet7P557v+Z7nLI9OUNSy
EGkOhzNVisP5/tf9+9NqgyYzO088bBCISsTfHxvcq6Nyd3cmiDjfn0QbvH9h
oKTH31r0g3e3QZei5q89E3QlP3gTG+R/MkzzfuQo+cFzbLAhpWztuAY3yYi+
EHN7+42jzAJGeLEQ9e2OKq/WDxzhE4X4V2HL+IeDq0Z4dyHm/fL1wytv4k2E
GGZZt1t8xpf0hRhU59LohIGkb41HZEOitRJDSd8ay29kyKRZrSF9a9SU2mb9
2SuY9K3xTvkd1Ue1y0jfGm8Pr2iJnCEkfWv0fmdQl1u0cOR9W61wdkeuZr2L
E/nHCmU4y1XOT+SRvhX+cTchyTNPRPpWePy2d7W7nQ7pW2GqRl7TaUUz0rfC
q+bTaop7eKRviTtONj+Tn+NL+pbYwH0t7akTQf63xL2/mv5tkbKO/G+JWxML
XWXs1o3wJpaYUemcufFk2AjPsUS+bVu+6zV/0hdgJq+/4vZkB9IX4JNDPce6
diwh+wXoF6EhHVDrR/YLMP0vccCxN8z/AnQuSxamHfMm+wVoVt967xLXi/zP
x5Jkfa0PA97kfz7uOfNMMFUlmPT56N6+Tz/k/RrS56NC8a5DU6SDSZ+PfQ1d
Zoo/uZE+H38Tem17ZGlN+jxsVk1uqGhyIX0eDmTvvK5Qzr4vD/uW5PdKz40k
fR7a/+ulf607gvR52GJbWL2pOIL0eXhfV2/F0MpVpGeBXPnyUbpNnrTfAq/d
XLow4wWLNwtsrn57y1/JnXhz5A4e8GgzNSfeHJ+VyvjZafDI/+b4aNNonbIc
Z+LN8I1GeEfaLYpXdzOM9PuYZVdH9nPM0K2wY8fmrnDip+O4cU8Ckz+tJn46
NuDtntgUf+Kno1TN5XlbdjJ/m+LqJMwcOM3Ojymu9b2Y+ywunHhT7P3cqZ58
NIx4E/Qy9DGqehVCvAlabJ3vtjDAj3gTLOR2tA1qzaV44eKxPvexQjeKJ3cu
FmZpPxEHRtH7cvFj8PS6Q3u2EW+Md07t+I2XtYN4Y4y1cTffcDyReGNMD/uy
9tn+JOKNcPuau1nit0nEG2F2yAOJfXkS8UZoFHs2aXtuIvGGuEApWmroEtM3
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHlYjWkbwE9kiSyjtNK+nE5FZ6km5NyVqI9SWqTQrk0lOm1atFGNylbI
CGkUjbWsg3OrUJJ1QoySIluJj0iN+cbX/bz/nOu93t/zO89+3fetHRC9JHgE
h8PRlOFwfvx6/HhaLDFmb1dGyUFbcdWRH48ljtp2NSv5tauY8+PZYIkPi1dZ
j5FxF/+f97DEzNqhQ1oct2GeZ4mfe/Rt4cLSYZ5jidt1BxJDVD2H+RYLvHuh
b8y3J97k//dd4MKtLF1Ofgt8achVSDTxJ78F8p7Nl/Vq9SO/Bar6TpaXLV1J
fgvsXtmt0PRv+2G/ORo7pe6PubWY/OY4Xc0+LWy/I/nN0e2T6uk0H2fym6Ok
Q+Wu+wdr8puj4tgzc2LL55DfHMeds3hSfMiV/CLs0/7i71ToQn4RFjr6t6Tf
WEJ+EdquMhzt9ZTG6yHCjcssOvMzAskvwl2uLyoa6iLIL8LLRaXxQ/PDyS/E
i/ndJqe9o8gvxBUPM52LO6LJL8RPxVe89UbGkF+ITaXHGjpboskvxIZJvQEe
S0PIL8TQx/LeB0t9yC9A79Dtpgb69tJhvwA5li8Sdz8Nlg77BVgmTdlt1L1a
OuwX4IRdb45tV1ozzPME+PrY81e1H2OGeY4AHU+YR7//EjfMt/CxvSCuSxiY
TH4+anxY01/nlEF+Pk75+bm6T1A2+fkYsDF7ub9uDvn5ODfff15DVw75+ehx
+L6t42855DfDqsGK32x6N5LfDF3vBf/UKmF+MxTs6gvzn5xCfjO8klC/+mRs
HPnN8LQo2cnscBT5zdA4+6jG/Zxl5JuJxXWL31i1O9H8zsTBInz2tYut10y0
2jmivFFXQuszA/kLzFUvpyYRPwOPRPauf14dT/wM3J8fUptbxXhT/Pmjun1S
xRri/31/16odYulHvCnOb469JhPiSbwJXvhvSJ+OsjfxJpitbGoZ9ciTeBMs
KbVbqmG5knhjNHZ2THOe50W8MZ4LrFWcKBIQb4wdJxIeKMz9D42Xh0Mvxt6z
T/al+eKhw+C5dE+eL80PD03L7ieHnvYi3gg1HbFUxdmbeCP0E96I+KplT7wR
lo3R47mIFhHPxfXjT9VfVwsknotVWYdvj08PIJ6LoTYaV92XjqT+G6J++Ukc
eOtH/TdE+ejjqTfX+FP/DdHFUy98cd0y4g0wvL73/PNoHvkNsIE7+YAPMr8B
WskvPPBgfDT1Rx+f2kyeHK9A+9VDH0N19M/f2RtPvD4u5x9YtEonlng9VLxs
Ufo9ei3xeui9Mb449M464vVQ1Dqw23hgHfG62D2tPs4/mPl1cWXI5xXPA2KJ
18XeOT9d7eii83REB49/LFkxe+ca4nXwcIZ+sGvdWuJ1UPOMl1loGeu/Ngoq
5V1cUgKI18ZRe98fqji1lHhtjFI/C8ukjsRrYfHBvxbIrTMhXgufTixXXNGm
R/Ophb+ufu0/u9CFvmtia2qo7uO2QGqvgUHCusxphyLIr4F5xiPj+gZiiZ+O
72Ug1qQpjfhpuGpua+wcySbip+Grp4eLFMfnE6+OJWLXtNrnW4hXQzXuhbXv
krcTr4ZW7dHptyOKiVdF9f4F1YlWO4lXQfULDolvKoqJV8GQxZFhle07iFfG
6nZuxutbW4lXQsk2l5P2l7YQr4RK5TtrvtpvI34qBulgz8U05lfEQ28z8eym
X4lXRLvKXAObx/uJV0C7hp6mmmMHiZ+Cxjs+VP0VfIj4Kfia2ySMc6kk/id0
cNQYmCpXRfxkVL6o1XLc6xjxk9E8//v49Dkn6PtEzDQuj1RdcJLaT8AeLbmU
iKpTxMtjQU/GgvMhNcSPQwW/U7LrZp0hXg79rUdonPU+R/xYjLN3T7ydf4H4
0Vh5VOMdPLpI/CiMWdv9yDNfSrwszr7tdsPF4wrxI1AmNftRiEwd8TK4+v56
w+zb9cRzsC9VIWK25Bp9/1u6yHaVkVfbdWr/Tcrf8nzHY5tG4r9KN48pN/r8
8gbxn6VjnvlGlItuEv9RulXxzL29E5qJ75N+u3vrfG4v+/5GelF1fbD6jiZq
/0IqcQl737argfhnUs643YK7s1l/W6T51sU9uY019H5V+qrM0Fe/o5j2P4fT
71ooWGB6je6bq2L5y0ueNr+8RO8t4s49Dpd0gquJfyY2uHOvfTCygr6/EL/r
2H1zpMJuuo/eiAtHvrW5vDCD+D5xybdL2Ubv/Nj4xDUes/LO+mWw8YvDW5Sy
70XmsfkRx9vKyuelsPPxTTySu5U7oYHt17/FwpSX5903F7H5h/82OvQkp7Hz
IgNzfZI2LTlaxNYPZuppLFfZuIOtL4QIOfIT/t7K1h+q9/7R5unI/m80tN/R
W/9IUMj2D2R76xd5B7HzKwfSuAhHu1Gb2f6DkkkBrqbzWP/lwStux6mswzls
/8LJXsOIjHVZbH/Dk7f7jpZ5p7D9D6b3p4c2fElg5wNiBGv26fnFs/MDScmj
3o9zW83OFwzeCFOzvuzLzh/kTa8Oc+q0ofVQAG2NcQ+2d4fR/CtCUuWcgdqj
cbQ+inCkfXFdaWEq8VNhTmTGP1N72HopgabkkopvVTbxSjDWsL968Yds4pWh
VL1Is2rTJuJVwOqFflmgJJN4FejilX12VdpAvCqcrvytV2ViMvFqEHjwZsDN
lETi1aDza05WbD7rjzr0X5UEvnu1gfhpcD9bu9gqawPx0+CFT7PaTk4K8dPh
i7VTeo13GvEa8Htk+Nu/tmUQrwFbJE/rNCrSideE76HRjfXH2Hi1IMq5pqao
jPVXC4aSdJdJP6RRey1IgpF3DOJSideGoVTPFlluHPHakDBo0ZQXv5Z4bVBo
PpMnZ0bxKkcHpocXbnIdFUm8DhwZ2ti6Kz+CeB3YETIifcMTFq/qwsKFOzmW
ieuI1wWf6sp5felJxOtCCWfSKEc7Nl49KD9en2fuxsanB8JH66/bjmbj14Ou
HM2N3wbZePVh1ex+2VvyGcTrg4OS5bo97mx+9aG2YOykslg2XgNYmHTdqqSa
zbcB/CLZt3c6P5XFHxCUFLeqoDGFxSeQU2jb3r2c8YbgI6z6oKzD+m8Im8uz
cjMdE4nnwvVbfqsrPq0lngvRxwzzDy4LJp4Lv5fWt95bwOI9I4jmOYVZp6wg
3ggM/05Y9ExxBfFGkLZt04m25EXE80B/yogpygksnuWBedBVudpyL+J5oO7r
8Et6wRIWH8Ld5wlLEx+z/MUYlhvfrN+2M4jFl6DdOOuK64MoFn/C0qxNi19r
s3jWBDr3rv3jQBpbXxMoaVmya9LD1Sy+hZ8lv34dHxvN4l+ISaxVjsxcw+Jj
CP0Tzs8ri2XxM/wjI3LeeoD5Z8DJ+I/bHW/GsPgbBouCzC7WrGPxOfCzY28k
bUhg8Tu4zi3u7smIJX4mONzL3D/KPYZ4M4iuPiz3PpJ8PDOQL5DxHfSKpfZm
sLVzdNKnHRLKv8zguo2mUdoRdp+YweuhheXnmuk8tJiBuf+MGQ/yE8jPh6RZ
KQ+8ttJ55/Ghq9N22p8F68nPBwO5xz6XriSRnw9jQ9ZIhpxZvsAHY27b8X15
NP4WPmgN2J+UDQsnvwBMOQF7GrQCyC+AEhhX8rDNhfwCMJKb6es2gvbPBgF4
501ccTBxAfkFYL4s/OJAtB3LD2H7nnyZslwnlj9CeIFtdeNoO5ZfgstAlZdf
vQ7LP+FTk7vyLvtZlH8JYbrn6YwEDVu6n4Xg3F8SXd/OpfxNCL1Rtpldzg50
n4sgVRIctvajG+VnIkh/EpBYcMuK7n8RtOyvi/guq0h+Edjml6Ue49mQXwTx
JjsTp/gJyS+CjafS3oQGAfnNoTtllXXKGQHL76FO78mUWXMcWf4PvS6Vuf2d
Xqw+AOd/j7Bd3uHH6gdwez7f+5q8P6svwI3K4zGKRoGs/gDqz2bcHhzyZ/UJ
eO/tHvWN58HqF9D9efBzdYcHq2/Ad5tC/5l+jqz+AePCbP40PaTD6iPQtzBw
yClXmfpvCZ6O5v3NtnNpfizBdsqs9zHdFqz+Al6CCP/lmxez+gx0T1j41m6F
K6vfwIHmeftnnXcjvyUoV648sR9cxP8DGvtr0Q==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9222894089479485`*^9, 3.922289420458274*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"cc2e0954-785e-442e-995b-8e484c1ee25b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmu400mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmu800mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmu1400mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hmu=400\>\"", ",", "\"\<hmu=800\>\"", ",", 
      "\"\<hmu=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Protein Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.922289447650661*^9, 3.9222894710667195`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"17234739-bc4f-4a39-b9f5-0e0b4b497d4c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHk8ldkfxy8jUykJ3bJzr6vs7oIo3W+WSI0kIluJULJluYVkSaXRRiI1
lCYZSqJR03a/0h4aU9pVQtv8klfbVKb6/fr5np5/vLzO+3nf85znnO/5nMdo
cbzPEkUOh2OgwOF8++v37eq0x7BMi90lnQ7S2ppvlz1mJ0fDF5GrlPPtyrLH
3FPGxyYFekv/z/vZ4/WMSsmFQ95DvJk9VvnV3rvf5DPEc+wx4KrPWY3MOUN8
px0W/O3gtvAL89thW6GAU2xlLh/y2+G6XVX6S6/ZyIf8dlhVoqDHX6EiH/Lb
4W/tSeLu7mnkt8MtuTNXmLY4kt8WfTZnu/N2OgzxNbb4/FOD7bA+H/Lbomh4
yyP1taHkt0Xp1MvhCiMWkd8WhRsDyqaNCx/iObaoGKI2c65b5BDfKcGLq27w
PSvCyS/BsA31A/77F5Ffgku2D34JEAWRX4JeAsexL8qCyS/BTW2PYw80R5Bf
gqP5BYuvjYomvxiLZN77ErOXkV+MQQ8314w5GEN+MbplTdZpbVpOfjE+29qz
bvqP8eQX4xadvLbblYnkF+NS61faMUdTyS/CNuN85Uj3dPKLcOWbS4UHg9aQ
X4TqscfWX72ZTX4Rmhs+WajRkEV+Efo+N5S7zckivwi3POyNdy/IIL8QlQ9e
rGpbKyO/EKdbbjn6JiGZ/EJUjNhto5ITR34hTiys3z/LJoL8QjTdtvGU48hQ
8gux89kRR17FXPLboH1I9k0Jbzr5bdA5OOEhT3kO+W2w2+zktF+LZpLfBvs4
O62l42aQ3wbz5mzYrqY+j/w2WFbhl1m3KZB81thVK7AWmtD79rNG/f84DpP4
JRBvjXkeOjVv9FcSb4VXF9seN1uSSbwV8rQcuClcNj5WWPTxQt7VQRq/GkuM
X73lbNsyNr6W+E/Lw8as44y3xKMnBn94n7SGeAtskG0MlxYxvwV2pLn2vj6Z
SbwFzrwSeCi2NJt4c5wWsuF1Qh/zm+MJjeDyDL9c4s1xT+Ej61Gla4k3w5AS
E7v27hzizfCiuosg8wbrjxlevr46Tt0jjXhT1O1YZTE4fwXxpqhWcrvZfWY0
8aZ4692gm/JDWk81k3Cfi+Jfww6FET8JPXpcwzVWLCF+Eh7+yUw532EJ8RPR
e3DBqzH2gcRPRIcrP/5U/tiX+IlocPHUB1tnF+JN0PPofa1GviPxJlh9kz/y
taUJ1QcTfH7aP5V7zZPqjQD3hc1y4uWHUv0S4GBg5r3pw2OIF6AXZ9GVmK+x
xBtjmoZ7vWRzFPHGmLcx1eufCUuJN8bgQr1tzpqJxPNxtVHQGu3BBOL5OD01
YNIm5Vji+VgW3/DeT2cZ8TxsGcbVX3gigngeln49UBtW6U88DzXbr+849V6D
ntcIRz592bJrH5vfRtj1vsn/ys9sPhuhLLNBWUd1PPGGWFdSO+NfBwHxhmhZ
xnX0Gicm3hAjL2i+1BnJpXYDbDj9WTgtRZP6p48nXHDdjQ2zqT/62Hhv64cL
aYupv3qo/Lmpzr4mjnhd/Prg3b8duanE6+KSw87qqUlpxOtg1+PesYF1WcRr
Y/ac6HEOoWuJ10Y9v73VpVEbiddC3/bZk/n6m4mfgDUzNIPnpW8lfgL+Uqi2
oNy7kPjx6H27VTa5u5B4LlqeK8x3l24nnosC0VLpr5Ji4sfhM8mcH859KCFe
E3NvuFR4xuwkXhPdBG+VZ0SVEa+BSptKLq03+IV4deSkT+8+57GHeHW0X1V9
PN+rkvixWF7YUhkm3k+8Gv7aOOv48wnVxKthy8b8Kp8xtdSuiu5PupvPO9TR
/aPxfGtUwf05R4gfhR17Pc34LxuJH4ml9z96bW9oIn4ELq/2Slrw+A/ih6Nl
wPO1vBWniVdGY0utiM1ZSPwwvBrpfKDR7yzxSrggMU0cLj5HvCIKE7GqjnuB
eAXs11w+KtPxEvEc3OAg1VGNvELtn+VNXjYDLd2tdP8n+TXj4r9fya8R/0F+
PcRUFjC/g/h3cvPlD3nr7/1F/Gt5/tEzqYtybhA/ILeJX51xMekmtb+QF7ju
C/xQepvu75NLi1Wrz1y7S/wjuflb55BXM7qovVM+sHfXpA9dD+n/83LnihDj
r4HdrP+cqvKOzo+nHrN2qdviopcGIQ/Y/dJPm7h1voa3mV+6IU6z3NX0Ovt9
6a0Db05oubaz/kmNZisFSz9dZP2Xvk33K8/5fJY9nzQ14cY9ycBp9vxSWw0V
2NZ/jI2PVFGgsHDhuwY2flK9Fz5Ji1XYfPgs3dOgGOeUcoD1H1wHf98X58nm
mwI4H7ct6+jezd4fTAiK+y2gv4S9X6ie1XNARWU7e/8QVWqvdtpwK5sfYLhc
UvewNZ/NHyiPcbQ6ci6HzS/4sC7Z/E9DGZt/UD4l+91K/mI2P2H38yOvv2o5
UT0ZDfPDr0TXt7C8pAqVS7tDqjcso/qjBv8puv/7qC9h1K4GnDGqauPdA+j+
seCWzPVo+uJNvDrcUW53F1Ry2fqDM9ad6Q9kU9j6hPl2dxVqtFg+1ISrfeWT
pc6hbH3DyS7j062vEtn6B+XletVKFaxecaE/e/P5qVrJrH4A99wXmawiidUX
WFiR6rcpNJnVH5gb4bLn+ZoUVp+gS7+hN066ktUv6C/JW39YnfHa8Dn3Tmil
UySrf+DZGhvzOkOB1Ufgqd939m9m+50uvI/sfe5bGULjowvT1h96I7zM9lM9
UI0aZTLuM9t/9eFMdpObpCqReH3gV4WKt6esZPUdnl4aVl76j4zVf0i8nN7T
XJ3C9geY3O5yp6NyBds/YPCTkkfftmS2v8CynEf1124nsP0HnHoKYuTa7PeM
YHCPJHjn+DjiebD+q6Sdr8vyKg+ach6UaUvY++bBuw/HlUKV5hLPh3qekzaq
TCWeD+biI3Wj1Fg+48Pw9PEnLQYob3OMoXtC0SarCRHEG8OLi4dCeSZJxBtD
dkZU6bD5q4gXQKcmJ2NXeRrxApC+Mr+b48DymQD6G2+ZXY1JI94ENgrufn1Q
zPKOCcR7SG7UpKWw/AHcJIUR0k+pLJ+AwayRAafq01l+gb4FbyZe0VvN8g08
tnK5oKvA+jMJmp0sOrlFqSwfQf5l/7FTzyaz/ASiYs/AldVs/E3h53Bdc8nT
7/kLvnSendBWxp7XFILGrG2sS2T9MYP4mr6OHU9Zf8zg+scnnXYr2POaQUjA
jtWxpt/zIfgU+bRmV+Wx/AjX9nA2Z23OY/kSnsqK9f89mcfyJ+ywPNYfnMZ4
C7A2+uOOhWIuy6+gl/Fs8GjW93wLXSP8cvJ7VrP8C23J7uJd+zJZPoaKC0/m
aw//np9hX5GF7Z43GSxfg/GdktEnX7M8agVnnKoOBgnZ+7KG3VuLF54ZI2P5
HeIjRKmiXjY/rSHcrCM2qieK5X+42dCvc/rtbHY+gHgj/cS2MmdajzZg+Gmd
/xfLCDr/2kBKiFaUoncMrV8byH5X7XzSMp7OnzawK9n31t7zLO8JIRGmNs43
Xk7nYyE01c5cGOzP6o8QJGf60n2Kk8gvhEdiD56aFquvQuD635ckTFlFfiG4
ysSxE60zyS+CgbcROC0ok/wi0ElxTVPMWk1+EbzTaPD+szaD/CLQa7Zag6mr
yC+C6LBpegpmVK86RdB1fF6/5/aV5BeDa/PsAcVg6o+ZGB5LfxkQ58rIL4a7
dzYZKU6WkV8Mb6U37v6hy+qnGC7uuL6rR4/ycKcYzA57/G2hx8ZHAgEGjQ5W
w9n4SKBTtSZQmMDysAT6eqPVA2L9yC+B/rWOfzWXqJNfAtsSLijZjPNl53Mo
zf3p7II17HxtC2N7xxT6P17Ozvdg7sX5921iLDv/Q+R+lYLayGj2fQAiDt31
ku2MZN8PQJJ5dmf1tiXkt4VSL22+RQqbP3ZwbvoUJyPDZez7BFz111hpOSWG
fb+AsnFz9Ht8l7HvG9DWlHx4rGYM+e2gIEwb+i8R32kH8wxk1w2OLiW/PVRH
CnpyxkST3x4O713rXtHD6p09BKj+3rtTN4z89lBfXp91eX8Q+e3Bc7dEouw2
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
A3ti6h5q25FfChVBv7xsuCqW/Q9XwWb3
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
4Yn/C4D3TvQ=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
qQqkL4QFhwpebDLTF/0Pet2BiQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5568627450980392, 0.7490196078431373, 0.3764705882352941], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Protein Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"hmu=400\"", "\"hmu=800\"", "\"hmu=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9222894656317277`*^9, 3.9222894717482405`*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"9e434964-c836-481d-b5b7-c491dd587b30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu400typ", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp500", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp600", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp700", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu800typ", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp900", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1100", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1200", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1300", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu1400typ", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b3cf89\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#67a442\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "\n", "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9204197816564407`*^9, 3.920419793288004*^9}, {
  3.9222031672126665`*^9, 3.9222032894211116`*^9}, {3.922203322378257*^9, 
  3.9222033407056503`*^9}, {3.9222033883686953`*^9, 3.922203413223755*^9}, {
  3.9222034697028847`*^9, 3.9222034851494923`*^9}, {3.922203517670237*^9, 
  3.9222035323447747`*^9}, {3.9222035964639845`*^9, 3.9222039102658014`*^9}, {
  3.9222039740897465`*^9, 3.9222039805487266`*^9}, {3.922204136530278*^9, 
  3.9222041535782986`*^9}, {3.9222042191042147`*^9, 3.922204235869207*^9}, {
  3.9222046023821807`*^9, 3.9222046836678915`*^9}, {3.922204823747389*^9, 
  3.922204825227592*^9}, {3.922204855275031*^9, 3.9222048566194563`*^9}, {
  3.922288752077896*^9, 3.922288756977934*^9}, {3.9222895151124396`*^9, 
  3.9222895348830366`*^9}, {3.922289576177388*^9, 3.9222897039535017`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.31753130590339895`, 0.}, {12.444681436631347`, 
       0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.616]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5553185633686528, 0.}, {1.4446814366313472`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8196078431372549, 0.8745098039215686, 0.6941176470588235]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5553185633686528`, 0.}, {2.444681436631347, 
                1.2668487987170194`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2668487987170194`]& ,
             TagBoxNote -> "1.2668487987170194"], 
           StyleBox["1.2668487987170194`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2668487987170194`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.555318563368653, 0.}, {3.444681436631347, 
                1.3160904243344893`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3160904243344893`]& ,
             TagBoxNote -> "1.3160904243344893"], 
           StyleBox["1.3160904243344893`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3160904243344893`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7019607843137254, 0.8117647058823529, 0.5372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.555318563368653, 0.}, {4.444681436631347, 
                1.3998960518271313`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3998960518271313`]& ,
             TagBoxNote -> "1.3998960518271313"], 
           StyleBox["1.3998960518271313`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3998960518271313`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.555318563368653, 0.}, {5.444681436631347, 
                1.4444867006228304`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4444867006228304`]& ,
             TagBoxNote -> "1.4444867006228304"], 
           StyleBox["1.4444867006228304`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4444867006228304`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.5568627450980392, 0.7490196078431373, 0.3764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.555318563368653, 0.}, {6.444681436631347, 
                1.491027144043147}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.491027144043147]& , 
            TagBoxNote -> "1.491027144043147"], 
           StyleBox["1.491027144043147`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.491027144043147, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.555318563368653, 0.}, {7.444681436631347, 
                1.534022237870699}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.534022237870699]& , 
            TagBoxNote -> "1.534022237870699"], 
           StyleBox["1.534022237870699`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.534022237870699, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.403921568627451, 0.6431372549019608, 0.25882352941176473`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.555318563368653, 0.}, {8.444681436631347, 
                1.6177571305870244`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6177571305870244`]& ,
             TagBoxNote -> "1.6177571305870244"], 
           StyleBox["1.6177571305870244`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6177571305870244`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.555318563368653, 0.}, {9.444681436631347, 
                1.6739702823036169`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6739702823036169`]& ,
             TagBoxNote -> "1.6739702823036169"], 
           StyleBox["1.6739702823036169`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6739702823036169`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.555318563368653, 0.}, {10.444681436631347`, 
                1.6969465528295657`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6969465528295657`]& ,
             TagBoxNote -> "1.6969465528295657"], 
           StyleBox["1.6969465528295657`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6969465528295657`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.555318563368653`, 0.}, {11.444681436631347`, 
                1.7657411201368218`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7657411201368218`]& ,
             TagBoxNote -> "1.7657411201368218"], 
           StyleBox["1.7657411201368218`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7657411201368218`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.555318563368653`, 0.}, {12.444681436631347`, 
                1.8070633279746724`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8070633279746724`]& ,
             TagBoxNote -> "1.8070633279746724"], 
           StyleBox["1.8070633279746724`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8070633279746724`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.31753130590339895`, 0.}, {12.687224439245906`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5553185633686528, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5553185633686528, 
              0.}]}], 
           LineBox[{{12.444681436631347`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {12.444681436631347`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.31753130590339895`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46797385620915033`, 0.5411764705882354, 
                    0.3581699346405229], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7019607843137254`", ",", "0.8117647058823529`", ",", 
                    "0.5372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.42875816993464055`, 
                    0.17254901960784316`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.6431372549019608`", ",", 
                    "0.25882352941176473`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.922203834360874*^9, 3.9222041549101086`*^9, 
  3.9222046884316454`*^9, 3.9222048731509495`*^9, 3.9222897333094826`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"30b851f8-cabf-4745-9ab8-2d7356dea93f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu400typ", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp500", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp600", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp700", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu800typ", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp900", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1000", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1100", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1200", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1300", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu1400typ", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein Yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b3cf89\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#67a442\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "\n", "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.920420056632622*^9, 3.920420065090315*^9}, {
   3.9222273404381895`*^9, 3.9222274302758923`*^9}, 3.9222897688807907`*^9, {
   3.922289804850879*^9, 3.9222898789432955`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.31753130590339895`, 0.}, {12.444681436631347`, 
       0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.616]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5553185633686528, 0.}, {1.4446814366313472`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8196078431372549, 0.8745098039215686, 0.6941176470588235]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5553185633686528`, 0.}, {2.444681436631347, 
                1.2741655530685205`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2741655530685205`]& ,
             TagBoxNote -> "1.2741655530685205"], 
           StyleBox["1.2741655530685205`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2741655530685205`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.555318563368653, 0.}, {3.444681436631347, 
                1.324975387395687}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.324975387395687]& , 
            TagBoxNote -> "1.324975387395687"], 
           StyleBox["1.324975387395687`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.324975387395687, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7019607843137254, 0.8117647058823529, 0.5372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.555318563368653, 0.}, {4.444681436631347, 
                1.3899858972375412`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3899858972375412`]& ,
             TagBoxNote -> "1.3899858972375412"], 
           StyleBox["1.3899858972375412`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3899858972375412`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.555318563368653, 0.}, {5.444681436631347, 
                1.4419419623183596`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4419419623183596`]& ,
             TagBoxNote -> "1.4419419623183596"], 
           StyleBox["1.4419419623183596`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4419419623183596`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.5568627450980392, 0.7490196078431373, 0.3764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.555318563368653, 0.}, {6.444681436631347, 
                1.4825779820815215`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4825779820815215`]& ,
             TagBoxNote -> "1.4825779820815215"], 
           StyleBox["1.4825779820815215`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4825779820815215`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.555318563368653, 0.}, {7.444681436631347, 
                1.544729166858572}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.544729166858572]& , 
            TagBoxNote -> "1.544729166858572"], 
           StyleBox["1.544729166858572`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.544729166858572, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.403921568627451, 0.6431372549019608, 0.25882352941176473`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.555318563368653, 0.}, {8.444681436631347, 
                1.6138524227873374`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6138524227873374`]& ,
             TagBoxNote -> "1.6138524227873374"], 
           StyleBox["1.6138524227873374`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6138524227873374`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.555318563368653, 0.}, {9.444681436631347, 
                1.6695298898162565`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6695298898162565`]& ,
             TagBoxNote -> "1.6695298898162565"], 
           StyleBox["1.6695298898162565`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6695298898162565`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.555318563368653, 0.}, {10.444681436631347`, 
                1.7136327680183776`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7136327680183776`]& ,
             TagBoxNote -> "1.7136327680183776"], 
           StyleBox["1.7136327680183776`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7136327680183776`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.555318563368653`, 0.}, {11.444681436631347`, 
                1.7567634790811386`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7567634790811386`]& ,
             TagBoxNote -> "1.7567634790811386"], 
           StyleBox["1.7567634790811386`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7567634790811386`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.555318563368653`, 0.}, {12.444681436631347`, 
                1.799202672659731}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.799202672659731]& , 
            TagBoxNote -> "1.799202672659731"], 
           StyleBox["1.799202672659731`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.799202672659731, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.31753130590339895`, 0.}, {12.687224439245906`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5553185633686528, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5553185633686528, 
              0.}]}], 
           LineBox[{{12.444681436631347`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {12.444681436631347`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.31753130590339895`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein Yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46797385620915033`, 0.5411764705882354, 
                    0.3581699346405229], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7019607843137254`", ",", "0.8117647058823529`", ",", 
                    "0.5372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.42875816993464055`, 
                    0.17254901960784316`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.6431372549019608`", ",", 
                    "0.25882352941176473`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9204200662366543`*^9, 3.9222274513388395`*^9, 
  3.9222898836662607`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"229111be-c847-4ce1-b6b3-c3fd5cac7711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu400typ", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp500", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp600", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp700", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu800typ", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp900", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1100", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1200", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1300", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu1400typ", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b3cf89\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#67a442\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "\n", "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919872218019006*^9, 3.919872325063958*^9}, {
   3.92003152841066*^9, 3.920031544418577*^9}, 3.92003157737006*^9, {
   3.920031609581951*^9, 3.920031632137554*^9}, {3.9200316878072987`*^9, 
   3.920031914411047*^9}, {3.920031954495573*^9, 3.920031972751745*^9}, {
   3.920032605125719*^9, 3.920032638021221*^9}, {3.9201276628019695`*^9, 
   3.920127676161476*^9}, 3.9222274816401167`*^9, 3.92222753112379*^9, {
   3.922227562392333*^9, 3.9222276073013277`*^9}, 3.922227642884014*^9, {
   3.9222899543717213`*^9, 3.9222900608273883`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.31753130590339895`, 0.}, {12.444681436631347`, 
       0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.616]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5553185633686528, 0.}, {1.4446814366313472`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8196078431372549, 0.8745098039215686, 0.6941176470588235]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5553185633686528`, 0.}, {2.444681436631347, 
                1.4058152134129798`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4058152134129798`]& ,
             TagBoxNote -> "1.4058152134129798"], 
           StyleBox["1.4058152134129798`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4058152134129798`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.555318563368653, 0.}, {3.444681436631347, 
                1.4676162888930018`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4676162888930018`]& ,
             TagBoxNote -> "1.4676162888930018"], 
           StyleBox["1.4676162888930018`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4676162888930018`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7019607843137254, 0.8117647058823529, 0.5372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.555318563368653, 0.}, {4.444681436631347, 
                1.5791903071535054`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5791903071535054`]& ,
             TagBoxNote -> "1.5791903071535054"], 
           StyleBox["1.5791903071535054`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5791903071535054`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.555318563368653, 0.}, {5.444681436631347, 
                1.6778112728014218`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6778112728014218`]& ,
             TagBoxNote -> "1.6778112728014218"], 
           StyleBox["1.6778112728014218`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6778112728014218`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.5568627450980392, 0.7490196078431373, 0.3764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.555318563368653, 0.}, {6.444681436631347, 
                1.7402059857984942`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7402059857984942`]& ,
             TagBoxNote -> "1.7402059857984942"], 
           StyleBox["1.7402059857984942`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7402059857984942`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.555318563368653, 0.}, {7.444681436631347, 
                1.8206653151297192`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8206653151297192`]& ,
             TagBoxNote -> "1.8206653151297192"], 
           StyleBox["1.8206653151297192`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8206653151297192`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.403921568627451, 0.6431372549019608, 0.25882352941176473`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.555318563368653, 0.}, {8.444681436631347, 
                1.8982582290975056`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8982582290975056`]& ,
             TagBoxNote -> "1.8982582290975056"], 
           StyleBox["1.8982582290975056`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8982582290975056`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.555318563368653, 0.}, {9.444681436631347, 
                1.9683358452305566`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9683358452305566`]& ,
             TagBoxNote -> "1.9683358452305566"], 
           StyleBox["1.9683358452305566`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9683358452305566`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.555318563368653, 0.}, {10.444681436631347`, 
                2.057442573057805}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.057442573057805]& , 
            TagBoxNote -> "2.057442573057805"], 
           StyleBox["2.057442573057805`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.057442573057805, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.555318563368653`, 0.}, {11.444681436631347`, 
                2.150754440388949}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.150754440388949]& , 
            TagBoxNote -> "2.150754440388949"], 
           StyleBox["2.150754440388949`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.150754440388949, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.555318563368653`, 0.}, {12.444681436631347`, 
                2.192623388635498}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.192623388635498]& , 
            TagBoxNote -> "2.192623388635498"], 
           StyleBox["2.192623388635498`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.192623388635498, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.31753130590339895`, 0.}, {12.687224439245906`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5553185633686528, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5553185633686528, 
              0.}]}], 
           LineBox[{{12.444681436631347`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {12.444681436631347`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.31753130590339895`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46797385620915033`, 0.5411764705882354, 
                    0.3581699346405229], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7019607843137254`", ",", "0.8117647058823529`", ",", 
                    "0.5372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.42875816993464055`, 
                    0.17254901960784316`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.6431372549019608`", ",", 
                    "0.25882352941176473`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9198722714917135`*^9, 3.91987232854905*^9, 3.9200311930229416`*^9, 
   3.920031613297041*^9, {3.9200317717542267`*^9, 3.9200317871113186`*^9}, 
   3.9200319171373215`*^9, 3.920031977724367*^9, 3.920032646310631*^9, {
   3.920127671308077*^9, 3.9201276772160606`*^9}, 3.922227644802482*^9, {
   3.9222900470209794`*^9, 3.922290062162163*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"c70b2685-2e00-434d-bba0-2bd5f0fffa17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu400typ", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp500", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp600", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp700", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu800typ", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp900", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1000", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1100", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1200", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1300", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmu1400typ", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite productivity\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b3cf89\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8ebf60\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#67a442\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "\n", "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92003220650638*^9, 3.9200322257601585`*^9}, {
   3.9200325059356403`*^9, 3.9200325534959755`*^9}, {3.92003265656341*^9, 
   3.920032671245369*^9}, {3.9201276822552185`*^9, 3.920127690017145*^9}, {
   3.922227700344756*^9, 3.9222277257649813`*^9}, {3.9222277614607725`*^9, 
   3.922227874580921*^9}, 3.9222279136850986`*^9, {3.9222279672553525`*^9, 
   3.922228058353634*^9}, {3.922290088909404*^9, 3.922290219400835*^9}, {
   3.922402785856169*^9, 3.922402786760621*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"493d0515-9620-4c23-8daf-cc57dd308aba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.31753130590339895`, 0.}, {12.444681436631347`, 
       0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.616]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5553185633686528, 0.}, {1.4446814366313472`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.8196078431372549, 0.8745098039215686, 0.6941176470588235]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5553185633686528`, 0.}, {2.444681436631347, 
                1.0960593189321535`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0960593189321535`]& ,
             TagBoxNote -> "1.0960593189321535"], 
           StyleBox["1.0960593189321535`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0960593189321535`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.555318563368653, 0.}, {3.444681436631347, 
                1.0888766014367433`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0888766014367433`]& ,
             TagBoxNote -> "1.0888766014367433"], 
           StyleBox["1.0888766014367433`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0888766014367433`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.7019607843137254, 0.8117647058823529, 0.5372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.555318563368653, 0.}, {4.444681436631347, 
                1.1175808327547885`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1175808327547885`]& ,
             TagBoxNote -> "1.1175808327547885"], 
           StyleBox["1.1175808327547885`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1175808327547885`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.555318563368653, 0.}, {5.444681436631347, 
                1.1519301275950062`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1519301275950062`]& ,
             TagBoxNote -> "1.1519301275950062"], 
           StyleBox["1.1519301275950062`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1519301275950062`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.5568627450980392, 0.7490196078431373, 0.3764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.555318563368653, 0.}, {6.444681436631347, 
                1.143563933524725}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.143563933524725]& , 
            TagBoxNote -> "1.143563933524725"], 
           StyleBox["1.143563933524725`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.143563933524725, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.555318563368653, 0.}, {7.444681436631347, 
                1.1632028402217651`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1632028402217651`]& ,
             TagBoxNote -> "1.1632028402217651"], 
           StyleBox["1.1632028402217651`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1632028402217651`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.403921568627451, 0.6431372549019608, 0.25882352941176473`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.555318563368653, 0.}, {8.444681436631347, 
                1.179998358628179}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.179998358628179]& , 
            TagBoxNote -> "1.179998358628179"], 
           StyleBox["1.179998358628179`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.179998358628179, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.555318563368653, 0.}, {9.444681436631347, 
                1.1758889465013715`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1758889465013715`]& ,
             TagBoxNote -> "1.1758889465013715"], 
           StyleBox["1.1758889465013715`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1758889465013715`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.555318563368653, 0.}, {10.444681436631347`, 
                1.1980045362108742`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1980045362108742`]& ,
             TagBoxNote -> "1.1980045362108742"], 
           StyleBox["1.1980045362108742`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1980045362108742`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.555318563368653`, 0.}, {11.444681436631347`, 
                1.2065207836328251`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2065207836328251`]& ,
             TagBoxNote -> "1.2065207836328251"], 
           StyleBox["1.2065207836328251`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2065207836328251`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.616]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.555318563368653`, 0.}, {12.444681436631347`, 
                1.2007223318718205`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2007223318718205`]& ,
             TagBoxNote -> "1.2007223318718205"], 
           StyleBox["1.2007223318718205`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2007223318718205`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.31753130590339895`, 0.}, {12.687224439245906`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5553185633686528, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5553185633686528, 
              0.}]}], 
           LineBox[{{12.444681436631347`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {12.444681436631347`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.31753130590339895`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {0, 1.2}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite productivity\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.46797385620915033`, 0.5411764705882354, 
                    0.3581699346405229], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7019607843137254`", ",", "0.8117647058823529`", ",", 
                    "0.5372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7019607843137254, 0.8117647058823529, 
                    0.5372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3712418300653595, 0.4993464052287582, 
                    0.25098039215686274`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5568627450980392`", ",", "0.7490196078431373`", ",", 
                    "0.3764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5568627450980392, 0.7490196078431373, 
                    0.3764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.42875816993464055`, 
                    0.17254901960784316`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.6431372549019608`", ",", 
                    "0.25882352941176473`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.6431372549019608, 
                    0.25882352941176473`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9200323564264507`*^9, 3.9200325180029774`*^9, 3.9200325558445263`*^9, {
   3.9200326679723644`*^9, 3.9200326717039013`*^9}, 3.9201276919363537`*^9, 
   3.922227916868256*^9, {3.922227995181309*^9, 3.9222280590095925`*^9}, 
   3.9222901795083213`*^9, 3.92229022050135*^9, 3.9224027876925516`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"ecfe24a3-ffc5-4ccc-8132-6f69b24f705c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hmugen1", ",", "hmugen10", ",", "hmugen50", ",", "hmugen90", ",", 
     "hmugen99", ",", "hmukeep1", ",", "hmukeep10", ",", "hmukeep50", ",", 
     "hmukeep90", ",", "hmukeep99", ",", "hmumem1", ",", "hmumem10", ",", 
     "hmumem50", ",", "hmumem90", ",", "hmumem99", ",", "hmukill1", ",", 
     "hmukill10", ",", "hmukill50", ",", "hmukill90", ",", "hmukill99", ",", 
     "hmutyp1", ",", "hmutyp10", ",", "hmutyp50", ",", "hmutyp90", ",", 
     "hmutyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hmu500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924043178313718*^9, 3.9240432206944*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"0ba8f8c5-a51d-471e-ac39-5161632e5ea5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen7000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen7000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen14000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen14000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "100", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "3500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.003"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "14"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240432836733885`*^9, 3.9240434347630725`*^9}, {
   3.9240434795675287`*^9, 3.9240435529684896`*^9}, 3.9240435882177353`*^9, {
   3.9240436730670156`*^9, 3.924043686188443*^9}, {3.924045263344448*^9, 
   3.9240452703101397`*^9}, {3.9245374192885675`*^9, 3.9245375566174545`*^9}, 
   3.9245422630565777`*^9},
 CellLabel->
  "In[278]:=",ExpressionUUID->"d742e0b8-f204-4e8f-84b3-3030a26a2c4d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxlenk0V1/UvpmozLMKhYgMyVDcvWXInHmehw9Smed5nvlUMiWppCRTSVJJ
KSLJVMmUDKWvWZoMef3++a31rvf+ce/aa+/1nOec/dx9zl7rCLn4mLhTUVBQ
pGy//t/3/zz++cnOD1bhVkJ28XQbF8Ret3WkjqfHea6hXV+KuaHl1YPNO2Zs
GK8oYhoQxgOxTU/1zGZ4MMDTjKrVjhcoal4VbkbsQ2Sma/ytxQfjvV8D+un3
o/qiXbyiEj8Idv3Hd9tYFO1IVr53ZAQgtm3heeRlcbQUZLANk9kDLS0rnsbT
kmi8MGjbpbgXyPbr9Be5ZdCihuPBG619UGsTZRv1RBabnaav9RwWhHHLrWoP
5yOYqHfp07FmQaAwj6MyoTuK611XZR8ZC4GMCbWFSqUCLhKs+U7fhcDoVFKF
qJEShl9o+6KZJAyx+vSbLD+V8ZWevki0yH4o1UkzWi88jg9FqPT3du6HHi2m
smlCFeW9GrWOBxyAJfWs3+8mCbSS7b/7n6AIkEtTROw1EG9SPHVR6xcBwava
p/q41HC3wf4ks3RRaLyyI+zkdzUs/bgVrawlBtrFndefPD6BSSvF7LT0B2G8
KKNLNlsdX+95mdPVdRB8C/V/lTtp4L1b9LQ388WBoWCXoMARTWzIit1V5iEB
BXndOudptfDKjsb8UZVDcPBSTgDdoBbq2H67ReKWhJaLRlci7pxEWVaTWdPf
kmB0gbV9KVIblfKY+h+NSMEMuW/J/ZQOwkY+U1X7YQjNucg3LKSL9P1FemqN
0sCSbaZhtKqLqjvUnTQtZaA0k/PcqzY9ZP7CcdHwvQwoZXzIP1aojy1ZvJua
FrLwOi3/eY23AfpVdbkcHZIFp1Sr2QOEIUbej+ETdZaDpWReziKWUxhyUcNB
aFYOUpOGCObJU/iZmdpKJvQI7HxhIP/CxghL5H6x2zHIg5Xa4Y6NViP8Ut9i
X3VZHkpbdjsoShnjxbnabkm5ozAHiyt+ecZ4H790Trw5CvLP3qXc3TLGwq4j
lz96KkAsUSvwzdMEf8f4brLtUITXT8l1Qn0mGGh09mHxXUXgUPXTsjtuivwD
HBBpqgR2T4yH88pMUT7h/ovGTSW4fVzOt3eXGRp+eC5uXakMS01stDtDzLDj
4n+sbnbHQOXYj0KtcTM0CWDp+sxyHBIf9R+O0zHHJ0Nr1n2vj0OPUn3r43vm
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
B0ePvP74Kx01ReeVpGhWCZb5d3xb1Bl48+16PnPOD2Jtw/usKGsGOnh3aQsL
/CAmdjK0GOzNwOYCTxG7yhWiS6CMLehQBt6/+VeoSWWFaJBE92KlDHzOJt8u
2bNMlKiMPGzVzECjSOv3992XiVT9UMZZkwysS7UXVt1cIvztOOzZnDKQKuaw
wYu8JcLmTG2N8tkMlJ6UTyfklgiNSH0q5/AMpIOro7pXFwnJzBmz1JQMfNwi
cWR8dIHgKk68VZObgSw1zcwSggsExV3BtQ/XMlDQt7qGizRPzDx+ov+vOgNf
3iu7fKVmjuh7Y3VV5EkGNpiW/a3bmCWahleX9TsysD3gfKWywSxRNkvWCPyQ
gd/22VJIX/uPyF6XzL88mYH2Oc/nU/98J4KZOr6/WMrAGfWj0odNvxNO/O4q
/21mYPm/qg3huhlC9xBlDitTJlqbURgbsM0QcsevfFHiycQH7VN5N4K/EQJ6
yvJOIpmoHu0htGfsK0Fj+z45RS4TeRZlnzVqfyUWTvt9qoZMXHBa4bFomCYG
w3dJftDPRLGLtEVzotNES3pF9KZ1Jo6t1jgGFE0Rd4o0ew94ZGJauQ3zKMsU
kXvny379wEz0wCut0umTRGRTVHBAXCZmJjZMGNFNEqRO3o6i7YO324G7rIeT
JgjDoQf8Ly5n4iNxy7JWuglC6T/jc99vZ+LjA/MLW+lfCOG1+RaWhkz8E0JD
85X1C8HImM6u1JqJivp+0R6Xx4lVXlGSY08mdnXENoaKjRNj4i8ak0e3+QSb
cvKe+Uy0KTswVf+XiWeSBfNUsseIWp01+/e/M9H4cc+W7oNRosA6r3aDJgt5
Y9Rkhb+MEPFectQH2LIw6a/UjgbWEeJMWLe53r4sfErdWr6oNUyYpZ2+7S+Z
hZNfGqdbY4cIopBuvVA5C+XD4k1Enn0iDlZcN3iulYXUFmf1Zyg/ESyPiNIZ
0238MWq33TqDxNrroRVm5yw0COB+E5f7kZgYDNZUPJeFvg52e+SnPhBdM2wF
DhFZWC/e3saq9IFo+FP9X1JqFja9URVYz3lPlDDoqVZdykJrmbvdn2YHiFSe
bzkD17Nwzw/Wvka9AcL/YMLEek0WBv9JOxlY00/YKO07uv9pFn6h31lOw91P
aGg/TtHtzMKeydTLVvF9hKSV5ZDfxyw8/bPHwnq5l+Dy/CFZOJWFhTdO7Zt1
7SUoQnNiWpazkOoHZ/nmpx5iJuVQ37d/WUg2GHh81bSH6MtvP8C8MxtzOItK
I669I57ccg1R4M1GDc1nHObXu4myh1sd9qLZeHeHu8LbirdEdvtlgaQj2Rip
bJje8bCLCP6o6HMXs/F0Z0Uvbdcbwulb//N+g2yUU3CljfjaSej+9uFYt8lG
iYNNbHvpOwk5+p0ewp7ZSL5lk9gt1UEIcN9+pBOUjSn3en/Y2rwm6MQ0dvrF
Z+POj6VTxZntxILCuENBTjbea+TMCnvZRgxqRdY9K85G1b0snQuUbUSLBQ/N
t4psjHA3e9us8Yq4Q6q32P0wG0PrTPqmMl8SucFGFUdfZiPbq92bkkOtRGTy
3Lpdbza2WiluxEu2EqS8VMPEsW2/5dv9gwkvCKPyA9cqZ7MxUId3lHH8OaHU
0PKj7082jsyLiv/E54Rwm53WGm0OjmeGNueVtxCMH/4UCLHnIB+p4HMTSwux
Op07qy2Ygyt7uTnS/jUTYz9lCF+pHDSYfS4YOfWUaKN9S84/loM+T73VBvqe
ELWcXpPNJ3PwWe2rNwodj4kiEVqFr2Y52KdB8fx9exMRf/Ra6i6XHPQgGaUl
dj8izmiqDsv75GCD+JP2zyONhJn5Jym7yBzkWfAqaV55SBDuQbEJaTk48+3I
217mh8TBINb+O3k5qJXqbKUm30CwJFWJ9N3IwTeBdKVtjg+ItVyd0L+1Ocg2
SM1Kc6GemCqb7hRszsGLJ8omJzrvE131cXu03+RgnpZ+ijHjfaLh5R5fn8Ec
TFJ4qDp36h5RMvDoRd50Dj4dfSlSfbmOSJ0y52xeycF0jg5+v/lawn912WN6
KwcT14KotjRqCSmqk/bJdGT0uMrY5adRQwgzXqLj20VGQ7rx2E87qglutsma
KnYyqpQwsjAN3SWY+GSt1fjIGJrcYzZWX0lQCMdQvRckY5wPQ8elwjvEqvjb
Sk8xMvrQjzyUTa0gvsvym29IkfGI1NiV4NjbxJiy178ceTJyM0mTxuJuEX1q
D2/tP07G3eM5RQmZ5US7Dq3xQzUyxit9EZu9epN4Ymy6pqtNRoXwAuW3j8uI
WutrN8YMyXi1OizQ/PMN4qbzor6/ORlXClw/qDLdIAq9VH/R2pHRxc77FiVc
J7L9Mq4WumzzDaf1sQm/RiSEfdKW8iKj0w3lNt6npURInNhKiw8ZS0++Yr5P
V0qcSQu6bBZMxrB0U91n1SWE8/lWjZlIMoZ/iOW1sL9CmBeyLkQkkDFW3l/r
GU8xoXvNMZ85fZtPyb2dF8aLCKKiCm+Qyfi/7hRaVf5/+38AFvV0+g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
RSNgLbdp0/wVgy28k+ZXtwyhvbqif3AtBqsFKk4+eWwIXg0rU7a7Y9FQ5a8R
Z6AhcLTA+ixTLMZWu+W8ljaErvakfQHHYpHqDuWNpiUDCOzq59wlEotDuVv0
SzUGcLyPXSrldCzKq/VFB3oaQN+g43kWlVjkqRIK1BAzgIivNaa3dWKxMm3A
ymtOH0SmNtwELWOReuLp9R/39eHTrErUQ5dYNNm16Nvgpg/xSxk5CgGxSFK6
LvZFVB8k1z/dfRkTi9LeG3/M5/RglIz3iU5mLP6ujJ0+XaUHaXvc332+GYun
ht/S+XjqgSx94xjpXixa5Bfa7JPQg2lm8pX5+lhkyWPqoVnWhZwjGtTBz2N3
MhN50uWRLihyXzlC+d/O+p2VmuJBujAnMHoi/XMsTkf+99VCXhduiAmdZfse
iycty1OX/+mAqoyvQdFyLL7NKZxdeaEDK/ItTiK74jDe6X28XaIOFClRhz7a
F4eG6wp9xEUd0FLXzcDDcRjH/Fo6iUkHNrVvFr3hi8PdE0HUyoPacM9oql5f
Mg4rM5KzPG9pg6Gl+OsRiMMv+RnUDCRtoCAFDztp7PgP5efyiGhDtWv7/KJx
HN5+N1RkPK0FFt70FGGkOKzzOpBiGKAFtEHGB/d4x2Eg3/fBs9Ra0BBRJJgV
HocTd0vsjuVpgn38rPyRlDh8oCU3+UtEExjTZLRLrsbh2c6r61VtF+FpdqSd
2J04pDCk5nU0uAgueW/8m6p34p/ndTD/1ADWQuZkpadxeD4uiv9xlAa037XM
734dhx8uBvsbH9IArwdl1UYf4nChQqZ9oeYCcNQvvhj7FoeRrZ17Yi9cgK4n
8h9d5+PwTx8Vx4EpdQh8Hj+zshGHqs+o39yKUofjr3u2IqjjUYwmvZ6fQx36
/jvMSMsSj3meHl4PnqhBxAd73hyueIw8zOIvaaoGIl8enOI4EY85iz94GtZU
4dP4X/Uy2Xj8qdP74kyeKsTPnLWUOB+Pr9vyE57IqYLk71SvZr14NGtKTJYf
OQ+jqx9iz1nHo7d2RW9z1HlI2+a81nMpHhnvBWjI850HWSrXCtOgeMxnk3z/
uOscTO+tb5mIi0fdMc+Tp73PQQ7Tv173y/HI5ZLGVHfoHCgeUpv8eysezw0J
HjzxXAXmjmX/ja6Ix0qyss4SVxW4wfdl777GeJx3L71x+KAKqIryH7vaHo8h
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
XDl3VZjLgQFqzmce7LyWisV5Ir1NZAxgpTkkqF2Sig3LSoyFsvthrwGvwlBN
Kl6Cp28fBtBDk5m7tn1LKtYQun5FjfuAZNtoN/cmFQWuXCmz3KKDA87kAYEf
U3Gdjv7qBxU6aPXQSCafSMXKPUlSW1l7wc3/Sn7qQirOUk+YdY7RwqGw0eqD
Wzv7/ehpziVNCy9jhNoLaNJwb+3A9HYKDfgk+34UOpiGU8fU5XSnqIErq2Wm
jjsNvdjnWGiVqaH7KvU2IZaG+qe7dh8t2QMht3QZX8ul4TWJ+gsRNHuAv+Qm
r55qGn5zKTp6zGs3vK+YOvVFPw3NHh2yX/5MBVG14hccbdKw0rKwY16NCsSa
gi1/u6Uh9deYaIonlPC5td0rJDgN/xMRsuMWo4SETvo4qoQ0vJn/XFaxlAKk
u42vZWSnYfC6YIgBJwWM9RdVHCpIw6dxmVVa+eSQMTTbUlyZhmyRgSnH2clB
bkymT7QpDfFx2q03t3fBj+nIyYaONGycI9eRPr4Lcufe/FXsS8O+3MQco/tk
oLTCTPd2JA2VIq/SCJ4mg/kNy2OGP3f0e3O9lkr5R+ST35MYXU1DWrPKAKJi
m1CjWVJxoUzHhznVi9Y9W8TqfgWTZYZ0pCpTXYle3ySKDyZcCmdPx6fs+lGp
gpuEDntvBLVQOkaO1Sw5WmwQWzxHsi/LpOPLODMz2ivrRIUQqfSoUjoyfj55
16B/jTA6WdVUqpWO90+7PBBhWSOoTq+9FTdPR7767H0JZn+JGkJp9LFTOqrV
Rf/SLV0lrFTSlpT90vGv7IyA38ofYq/Gx93/RaXj5oPCE8Oqf4gmXa7DJunp
aDgbkeFRsEKQTFxFx/PSMXnSQPDo5jJxwLoe3e6mo2vqltd7s2Wi1eGf3urD
dKzMyaJNal0i3NzUHKPa0lHJ6FDMIf4l4pBvdvDe7nQsF9unFnp5kXgZ/CUt
91M62gtbtd7etUj4RPEXHptKxxefgzt8fH8TXIledfcW0/FwYHzpyMwC0Z3+
5KXkv3SUFegR7bVfIEJyqT4/3ZuBJtklPMHt8wT/Ta2582wZuBbY+elg5xzx
vuj6rj7eDIzSLCw0fPeLiLo3zmx+MgMvhM/Q8X6ZJcSqRQWmFDIwuV3wsdbi
T+LzowA5T/UMVBKeKHq57yeR9PSZ5rphBkYY/yZZic0Q0u17bWPtMpCdfUzq
l+EPYvyNgR+9ZwYWBbzvton9TmT03k68FpqBIk3a0qkN04TC4I8b3EkZePOg
ppvTwhTxY0SyqjJ3R98N1TNvT0wRVyfDnssU7ejnZPtyxXuSUJp9+b7tQQaK
Xdr4fufJBPF7kfGH+pMMTJnqNhmmmSDy18w2B15moHV93xkei3HiAlnpfquB
DPzVlcFpWf+NWN29wP1jNAPvM+Wc9GP6RpTsk5Xx+ZWBeb4F9eg7Rugwx6pt
rWXgwovsuvKhUSJyn+MDJYpMdJUaiclRGSU+MNA1JtJk4rio0Y1O56+ECHPN
s+79mdivMzmzpT1CRLMadjEdzMTH+wvfleAXYujwxoDR0UwMHAhkCDw9TIhz
FIzc5M7E0YXVt+dPfybiuVS+jwlkop55yuNvMEQM88785hPLRPLnZuRsWp8I
KYGMDVfpTLTm1+nuIw0SycJSVDVymWjVXjnyOuYjMXriE/0fxUwsDT479K7s
AyEjEc4mp5qJZP20Da0D74l0aR7uSM1M9LodWG665z0xcfqVcId+Jn7WOWnl
jQOErLybNK1ZJmr6OVT/jegnMoEJtGwy0WZRxupeRx8xdbZBNccxE9+BUKcN
Yx9BnDPX/eSWieouzLJ77HqJHLVd5hy+mcj7nnHB/HEPMaNRSrILzsTyey35
yNpDoPYFj7LInfhb751g6R1xTW8h8Fd8Jt7U7PC48rybmDPMjZZIy8QEzp/3
D958SyibyqYGZGfi9nb1l8KILiLP4mtu8/Ud/0jvfO2lN8SideztXQWZaPu4
20XX7jWhai9471xpJvLISAXusXtF3HJ8V5tSmYlikxauia4viWUXn+ae2kwU
TtDgfhXaSWi4s3WyNGXiPJNEt/eVDqLI6+l/pq2ZGP04/Y5cYzvx19f20+2O
THRswLD3Yy8IzcA94xNdmZhxVsNW8cALojSkclawLxM7ht3CWTWeE5vhOn/c
B3fyf5+slCL1GaEb/effw5FMZBv+fGa7r40oi7tBszaRiZQHbvO0cbYRZEl4
gPiZiWnJ4zXMMy2EYerk0Zjfmfi6YW7o1O2nRGVGMt+r1UyM0r97sde6mSDP
FhPft52J1xJVSlROPCFMrwyc0aXMwlzpKn2ZPY+J6utBSldps7Dw4/aw9c9G
Ync+x8Vhhiyk7LrgnjLUQJgXvDDkYs3Cf9pUX6f6HxF1xU7WDuxZqLdrut/n
Yz1Be3efSwVPFn6RS1rpmKgjrMtrfRYEs7CNuT9XY+Mh8ei+UZi0eBYmd1zj
njz8kKCv2YwPlsnCDFGBkEdKtYR9XWFmq3wWFg92VdH61RCPG87lUSplIb3M
9qrHg2qC4cnPYjW1LAQBu/OrX6sIp5bM++laWXjrqWihr/cDouWZdEO/QRam
zdxo9z1wn2DuGGpjM89C90s13588ryBcXkW8sbDNwiAzj6ndkeXE8y7egSKn
LPxff46NK/6//T/FKG9B
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
MvCokp3disIuuONX6/haOQN7+k4JllXtBKc7TMcCtDLwjCR/ZdKRnSD44eKC
qFkGyimEH0gq2gGTm03Pxp0yEP+uitzg3wHlx7nDb/hk4JHDo8r3iqngokWA
mmFUBl45mxVSKUIFxxK7qfdlZOAW2cgo6yEl/Hpy9MOrvAz8b2vnktZJSqj6
Fn3VvyIDmzYzddvaKcCDcchatCYDbXNF0v9ZUIAEyAiMN2egf8IepYeft4gl
t/Tp6z0Z2MAnZlGwe4t4dH2y2mAsA7UUpVhLZDcJv7cYsHcuA89NUcyUXfxH
yK1cO/lqIwMzEo/uTCveIDay1iiVdmViObN1rfz4X2LoiJATK00mTgmxsmYK
/yVevjJ8u8CUiaHxJd+CPNaJfNOIY+85MjHnwNWgwRdrRPivu+llPJkY6PAv
6RbNGmEXO7AQI5yJnnezrO6SVgnk3GVieyITt1QY8r8//0PwPJSoUZTJRD6N
2+uy7H8IKk0bTlblTBRsehSUEbRCfP2SHL6gmonGtx7MdY38Jhr9n411aGbi
B5On68NnfhNFtONqZfqZ+MzqY+Ddx8tEbBFDWcy5TDykoNrEI7hMOCqd3G9r
k4mz6VxfTlxbIk5/vOCu6JSJYs4VC08ZlgihCzkfWNwyUaWYKr4sZZHYS/FG
esE7Ezv5qe7O7VskpnLmrnYEZSLbvy/TvikLxFtRrr+lkZm4synoGz/DAlHR
pGETk5CJLYJtP+avzhPJln4NNumZuMQANI1884TrYoGA4pVMpF5PqGQhzRE6
SZ0JLHmZ2NT7ax8pepY4zvN3er4wEzfrvzA4lP8iaJ4J63aUZ+LLBweMxj7N
ELNnjR+UVm/b02JdavbMEJ3jkQdinmXin2ui7zqIn0RlyP0Am5eZeDuGdteO
kGkik2lwUKE5E12/TjUQdT8Iz/LdBEtHJq6WfblqQ/WD0EepgvmPmUj3Ou4N
cXaKkOy33dnxXybalTLbvcybJJjcU8+XjmZiV0gtZfv8d2JxZ2179GQmPgjY
Yyen+Z3ovTEhajO7zT/ugs1G8QTxWJIpS+F3JoZv7hn/u3uCuNxGLB/YyESb
n2Nv2N3GCX+7i+fmqbJQ4snGW9lP3wjTP1efv9uXhWv3eR1Pqn4j5NObDpUy
ZGGpxA4FjkdfCXbBhchotiz8vVJs/kD4K7H64tC4NXcW3t/B2zJza4wYNNQ6
oyCYhbEbw41VnGPE8x/+FQeOZ+HJaI2m6eujxPXIO7TzklmYmG2+N+LQKBHK
1u35TiELTQJkLr4//YWwqtzoKcEsNGUNzV41GyGU1Y/KRZ/JQg1dvixbr2GC
e8jkurVuFh42thqbzBgiNr2j/8mbZOHeSKEf7o8/EyP7quwOWGXhwPu6P50j
g8Tr25/fzNlnIekwi9cQ3SBxW26v8LsLWeiuepXDT+0/IrJTOrnEMws1aQXv
W0cMEPZOpF9RAVkYQIn6xa/6CdWNNH3r8CzkVWc1ZdrVT/BlP38kH5eFSz8M
3gbr9RE7RSZZD6RmobReyH91+Z+I8dfMwXPkLGz5YSrftthLNJ3D4fZrWVgt
K/IuWbuXKJl1w5LbWTiWX35poKyHiI+7dieqNAu1tyo/plH3EM5cLbutK7Pw
QvpRx+ueHwmNR4sX5J9k4WcW24fzgx+II1qH3zPXZeHbDx2PbDU/ENRj2uJz
jdv4OMXT96KbmA4IzG5vy8Iaag9tVcluop2ueKW4OwvXp7SvTpt1EfeKP5hH
9W/Xi5o27alxJ5GqvFlnNZKFGcqm63/PvSfcekR45CeyMEueXK5g30Houp6L
YZ7Z5kOeMb3o8444QRn7fXYxCxMS9Z09U9oJutxqzfa1LDRWnLEVqGgj5k8M
3yumIKPy0teDyl1vie7mfQxRe8gYwbYpX7HeSlRbyfpY0ZGxaVmtVOR4K0Fe
su+TYyGj/1XN3FsOLYR3coYCMxcZn3JEMk7fbiYMeevyZvnIeJE16+bstyZC
umZqq+0oGSsHOhkjjjcRB/RYHIrFycjjFGt2IfgNsTyh0hIpR0Z9+h7i2vtG
oi/U/agVQcaq93BmSbCReMp8I1VOnYwyTv0DpJgGIqeidY5Jh4xz88WKzyde
E4Eqy4azhmTUyVphfqXzmjAb4HnaZk7Gd9Hqd4Y8XxGKHmc5iu3I+KOmZMPP
4CVxcHdwaOR5Mjb+2tvxQbGeWM8r+WLpTsapsITk6uN1xJBUj6qcHxnP5dNp
7xZ+QdS1bxUzhZKRlB23O+TocyKPdHzfbDQZ18MaP41J1RLhq2ZubUlkLDyU
lMx2uoawyYjrKsoko1TA45Zfts8IQuihZOTVbbuKElBHPSV46keuWOaTMS54
47NB+ROCwnj/mmwxGd+GvKp1HHhMjE7LWTHdI+Ohbs4r5+geE41Rjq9+PSTj
smtOJrX2I6KQPYuvrZaM95n3xB5Kf0hEV9XHFb0mY7KbRYVD/wPC8fT0VEQr
GSf6PXhfCz0g1IZZdSw7ybh1SCpqIaSaEPA9VSX7abseee7XO+9XEbv3ezIx
DZGRe9TqDoVHJfG9IM/v11cyynt8y9ijdJ9okW8bePuDjM/DmNpbGe8RZV2/
lYrmybhi/UqxebGCSHTmuxXxh4xERQr3neFywvWfLpXlJhnNx8f2WXwsI7Qu
hzjJ7srGDWEvDrPuUkLkWNlbRppsZHhqnbPQV0LQNPYe+8WUjZZhKyUMk8XE
jBllxluObKRcSPPN3SoiOuZEF+/wZKOxL55K5ykiKuMtTCKEs1GrN8bTSvMO
kX4oocbiRDa+ttiHJ4MLCffHjzhlZbLx1PI3ncGHBYS+9mg4o3I2num+pdO7
eJsQ/0rzdUY1G//XP9Bmd///+n8AFYCvzA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
4QrCj/x3RNML0CJCgeL/1RXyHmlRbtwtQO8bcI3/rSsoP2Zbk99QgN0z6VT3
l65Q9/hF7K3WAjx6R1rD6bErWD7JXqrvKcDxdy3lM6zvW9+TwwHtbwvwxavO
UILmCt5N2q8GxwswzeXNskGaK0w3rbL/PF+AvyKvFXy85ArhzZ2NC38L8PkU
7yCEuMLlsRcZq7jIqHeTucnB3xWee1d2xfGRsewa9ArudoU1H7J5RUTISMsI
ybpo4Qr7fKJNM9aSMb9A/v0dbVegfDh8YetmMiY53Nqcus0Vxn0cK4ukyMip
JtWhIeYKah+1J1XkyEjS3x8Zz+YKIb6b5SqVybgcMkYpmHKBho+rPAw1yJhF
OjUQ9MYFOPzGM57okjFhpCua65kL2H7q7LIxIuOa9jiVvTUukORXxdttQsbE
FmWnkzQXGPqUY+puRUax6SxvmyQX2Oofc+G9PRldYqrej4e7gP/ngEp/VzJ+
2sBj63TUBW75O01O7iGjUpeZSMRuF5j/rCN35iAZp9Oc6SGmLrDz8BaPFW8y
vnZOP7tTzQWiv7BnXgwg442Mc9wdG12g7fBEF99/ZOSdtHqoyOUCQuMveZOD
Wft9MnncZ5xhd0C16cbzZHxlK+2657Uz5I7nXiBHkPGv0fWfCi3O8DHgYqV8
LBntK4/s7SxnnXcmjkyWXSWjTs+2OescZwg84iyne4OMO/l61mRfYp1/JnQ9
GlPJWLzMs6PppDP8PSKRaZ5NRqF/z7Ke7nUGy68c3R0FZFxQkyugmjnD9aNf
eUlFZEzZykvZr+oMfV+7TF+VkJH9Ws307Dpn2HSs5oJXORmjNJjd/mzO4PUt
r3K8iowVqb/8z/Y6AeNY7OTJ+2R8Uv4x40ORE0x/Oyr34xEZZ5qU3omfcwLd
4y4eES2s9U97CwVtnSDsu14m13MytuRkJHdtdoLm41u7r3eT8UBE3CrPSUfg
m+TkEx8k48Dl+IAHDxzB5cQ305w3ZLz3r9R56oYjZE52X5AZI+O+zAT+OU9H
eH+itpL5hYxT+y3WPNdwBLmp/En1STJGmzwMjGB3hOP/XZKrnSOjLudoOn+v
A1ROHfOAn2Q8ORBdeoZ1of71n2tmyx9WvvSbiw+CHcBkWr/bgYOCpInApxNm
DhB3UpKvn4eCNzTcfv9Y4wAvp7nMDghRWN//F2+/fbCHdae+X/iwhoJrDtmr
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 14], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 3500}, {0, 0.003}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.924043557201824*^9, 3.9240435916163406`*^9, 3.924043689159691*^9, {
   3.9240452645552635`*^9, 3.9240452713578277`*^9}, {3.9245374584691343`*^9, 
   3.924537468748351*^9}, {3.9245375192204657`*^9, 3.924537557833335*^9}, 
   3.924542263959536*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"2d91a5de-87ae-4c3c-8d2c-41ecaf527c25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen7000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen7000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmugen14000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen14000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"300", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240450612954693`*^9, 3.924045084429223*^9}, {
  3.92404512681415*^9, 3.9240451385415087`*^9}, {3.924045186799902*^9, 
  3.9240452415457582`*^9}, {3.924537586044799*^9, 3.9245376291435843`*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"9046a5fc-8b41-421f-a27b-5709eb5a05a0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9e3k0Vm/UtnlMERki8yxFyJDO3oaIJAqROXOEn0rm8TGPz/MgyZTIWEgR
RSpKkoTSQKFMpVIJiXzP+671vfc/5+y1972vva9r32vd548jcTLgqAcDHR2d
GiMd3f88/3d1BuH/f/2Rcckf+EP+zzbfPF/5XD4Et5pp8u5UrCZqM3UnnPeF
oEnusYnl2RqCbUvG9oXDIRiXyKQV8LCOcM8aOxbjEoLNWfvSJtuuE/e37Mrg
PhOCJ1aDztzxbiBEs6MelSaEYISUu0osqZEI436+oZIfgl8S8zmkG28QI9li
2vdrQvCFJOv9R9+bCHWewCDL9hCUOEJaf6R3i8gmd9ZOPA9Bi9nfOoWVzcRX
Hp6p/yZDsLg/spoieZswpbiKMvwOQWn1+xIRTa3E1a03jlNYQ7He/UDrC/s7
BCOVgSy5PRTjuQoSx0XaCRfeY703doZiNXvKQYXlDuIu9QqjAYQiJ/OLY1LB
nYQQ36LukGUoavwZKhyNuk8E5xgGu7mH4tbp5BdeeQ+IQb7c+l/BoagS3DoR
3v6QUMmdmo1PCcXgCabD9xa7iPRteyX5CkNx0smfV2n/I2I2N9G+/HooZvUM
6SRfeEwY8Y/kqN+n+fvNrE8yPSHK8uT6u4ZCcSmhOriE1Ets8IewWk+Hosem
M5ypQn2Ew4UenFoJxRO9onEvHz4jbgsIhZ3jDMMeJgdVPdJzYlu+TxOzaBjW
Fotz/Lg2QAQJts3nqoRhaGgzfKx4QfTnc8jKGoRhjcTz+syaQUJJyN652ToM
9+drPPG7O0QkX6zNN/IOQ+ez5IWdo8PEJ6G1F6/CwvDh72dX7TleEXoFZpxe
GWHI+HPYOst4hCjeXmS4XBKG9S1dHBY5r4nVgq+RSTfCsDPmY07GjzfEcWGi
RaA7DBdYuhaGnd8RNy9lLlSOhOH8bGFN5IdRglvkg4LW5zCsvnd5vfC/94R/
4W63nrUwjPE9bujJOU70isQU2m4JxwMLAiZfZsYJ2aKBl7MS4chhz/G7tX+C
IO2Q2BKqHo4kg1Iuw85JYrzov4PsxuHo9eRp2crdj8R+0QexF+3CkS364hat
7k9EQfHWOwp+4XjqWONc7JspYknUbbE1KhwnNz1cgNVp4lhJk7IpORy/aJ5L
mpebJRrEmLzeXgnH5x016Qxuc8SmUqvSU83hqL/7SvPf2s+Ej3jFm9WecDRR
++urzzhPPCr9vTXtXTgqTb5kOOPzlZCUMDIT/haOOY4nx4U+fCOiL+cl1NJF
4IDACtlhzwIxKjHTsY83Av963z4TuL5AaJVprjyViUCpdz/KeF/8IHIlk1Ud
tCLQ1707K/faT+Jn2etT86YR+LbzvNV+6i/CXEqhPMIxAjOfyFyyiFsk6q6E
jm0KjMCAB+fn5MN/E2zSvfxFcRH470Djb96oJcK9fLuFcm4EkktK7b3SlokH
0r4p7ZURKM0r+TT6ygohWnHnweE2Gr5MdnvFoz9EuMymtbG+CCRxhgwSv1eJ
1xUOGv4fIvBh+N4D13avEeqy1/z//YjA98qedRC8TpCvrldmMkUii/Igu9WT
f8Q3WfMJUYFIbP/B5HmNjw5MK4u31ytEopE0YWv5lA4q5b4fA91IXM8OoutN
pgemKsh4bh6Jkidnb5ofZgAX+exHzq6RmBhZRNoqxAjtVeMb389E4n/GK5Mm
84ywXUFVOyYxEjPVemWUHzNBcHVsEPfFSNz/SWlsvpoZhhQGa0trI7H2LsuN
7hwWUKmRnFLpiESqqorRtyRWSFc8I3p/IBKPE8tVxfFs8Lnm4XHLj5FYlGSl
xJ/MDkZKfOSJ35HYLfLoYGIuB5TVuvf+xxaF3AKcrzXrOIFu5y1GBuEolDZ/
ftSpbxM41DHvpyhHodtPq/HdS1zQutMmWBKjsPk84+HvCluA/9rV+htHozAt
KMJsQY0bgpSXZ/U9ovB6n3602GtueH7NWHLofBSmJ62sX43lgZ278u3dUqPQ
RG49p0xlKyRfn835VRiFYYpumzSmtsLULu3++PoorC6JD4kt4QX9+hRWvgdR
mK3sZF/lzAfFu99i+XAUemQzhzyW2QZ/6xXD1Gei0PA5lWD8uQ1sVcKbuv5E
YZDjqGNUFz/cbHg6b7UpGguZr3bYFAkAj6qI7JRoNHLmJDnejBAE/0Y/53Oq
0Zhdu/tly0kh6FVtz2c2jMbfKluY445sB7kbXIO5NtEYKdAvuddAGEh7nDhl
faKxZEFffmm/CIzfuG7YHB6N/anCMR9hBxBqG5FGmdFoF+WuL2ciCgVNR1pe
lUaj20qbxUc7MVhSK13wbIrGpfYSHWFtcbC6uaCw3B2NzXmrWyWfiEODup5b
0utozFkzzhN0lACuW+RCgS/RKPRoPInntwSc0ph8WbkejWpqwj92kCXh44mL
rCJsMchy94D2EVUp2HpJT9qdJwZzHS/suf1SCvDdHNZtj8EJP3W/U1HS4C9M
cVyUikFW/Y7oECUZKLTXCdNVjsF3XnWSP0Zl4OmlyTzS3hgU3SStNk2RhT/v
Upv6IAZb4s4tnzosB/IiagN8JjGIwTMbWZvkwcbh3bzD0Rh8fWK+3HNAHkiF
8ewV9jG4778SH/qLCnBjVEn2q3sMfr47xR3oqQgTIsP6Gv4x+P09i3K3lhJw
O0Y4R56PwbIhaRMe7p1AFElHdMfEIPXkx2CP+Z3gN9aXz5VKyx/maDL4TBkK
dpy7ZU2NQXNNtWDvm7ugx3HHYFFhDAYpynLplO6G5aLub1MVMZinMqNee1AF
ZN+f5txVH4O9SqUlMw9VwEqUXz74dgyOsppLvdVThTinDsOO+zFYk7//WeoD
VWgo9nRleUqrh6mSlcFoD3x4vznKfDgG7XMYHIz79gCXWEtB3lgMlpeW3HCz
VgNdZ+eW99O0+l4qSDtNqMGpEtZh2YUY7HktfxoC1SH/Q/2C/58Y7JrdXLGZ
QQMeidlytTDEIlNQy6fBPA347UynuMEZi9KBFz7k7NoL0qVVRsbbYlFPyTTd
/sleODpu4ZYlGotff33R2u2lCTHif6JH5GKxTmibDj+bFlx3uVwopkrzZ05y
CtVpwWipSauXTiw2T3+PIo5pA+fEj5f1BrF4+rRnfsa6NuhIFPxcNovFYG+J
d1y1OuDtqr8FbWJRYp6lo9t+H+Rd/qyU7ByLKRntU3e36ELXBOXggHcszlml
wuojXfglsc9DMCgWfdTdv8XH7geJkx9jXcJjMb+g4LwrEGBRllZcRYrFMB0e
jot0AFGTancWMmLRFqqfqnYD1EmOjmhdoNWzSXY43wjh7UnSYkxpLE5633x/
pA6B/cpOnifVsRhSzvW2k1cPND8OK/M0xSJH43Xx7xF64CkVaWp3NxaD0o4/
G5vRgxw3Ga/L3bF49QQvOctKHx5ceRY/1x+LT8c8mlgf6sPCx3Olqq9jsfHC
830magYgJi3aHjoRi+N/33TZVBiAufujN/c/x+Ip3QOMakKGEFHuv8S+GItx
B2/dHc80hJpP/LxH12Mxp6qy4STLAXgtfW93AUscCt0IqrwTfQBYPLzMJrfE
obr/uMq31QOgUbHFR1EoDhnYVWrWzhuB+1RLQpBkHJbwXMuaWzICioxLWZtS
HGYuuXxoPm8MnR5s9xg04vCPjd+E56oxfKtoeGdKxOG5kMbRv1EHYce07QrF
OA6ZPq3qhDCbwCFZ+m3vLOLQTpF4PZZhAmGe1apSJ+LwOUuMzS5BU6i6amnu
6xaH96wuHvAtN4VX039ONfnFYbe+qGXenkPAJFeW9PdcHJ5dWJxueHAI1LxM
yw2i4zBy7tf4XSszcK382ZmWHIdFmQub7syaQfZMwdgQOQ5398cX1kUdhg45
g1XhS3F43fZsC4XfHOa9vvC7l8eht5vbTv8Gc9heRVWruxaH1i+T68HsCJjM
7rNYbI5D8bPUm6yfj0CI/Cc/3U4af/ZvTn80tICr3ukppCdxiKNvKB25FjBc
pX61bzAOhysIwdwZC2CYG33ANxqH0ucshb10LEFFIeGDw1QcvlP0OqueaQnO
Pspr5d/iULWte2xt0hIyq18Kfl2OQ73ljrv3tI7C3blIDQ36eHQW3FETkXUU
PivIHo3kiEdCO3+r2sxREDzV79/NG4+LOsU7JuEYGNcEp3HtiEd6KQG+lIvH
4Nxn0Spr2Xi03BfHLbd4DMoVH3cV7Y7H+J97a9uOWMHgqYCJKa14fNXFPKhf
ZwV0tQL/lPXj0Y8vjOhgt4ZdX+5tDz4Uj0GLCseVvK3BUclbs8MqHj+ZPg9O
fmwN6b7cVixO8Th599rUkJwNtNXeDjT3isddtUI1nCk2MPvFJSMvkBYvFN6t
/MUG+Hey17wPjUeh8OUXmubHwdCv8ZFsfDxqFC6ly904Dmfq7D76p8dj+pD5
kVV+Wyibp6dryY3HO6wTV65F2MLAzhqRjeJ4DLffcY74aAv//I5qG1fFY0HE
2u1qUzvYeW3VOqsxHqc+FtjM37AD+69lQSNt8Uga3r/EIHICUpQPZYl1xWOP
Z9LcXMIJuH36V63Xs3gUDr1cVLRwAqavXeqpfxWPZUS74XYHe+D7ZjC1/CEe
I+nUmux77EF/1zw9zsUjg2rERUcNB/jPP0c0+Wc8xmqHlglfcYCS67r7Bv7G
o9wrrkNkHkfo//bpuCAzCf+OuIy0xjjC2q6Msy6bSSiXX26QveAIigEa5CoB
EpadSw3c4uoEtvVj1xbESfili6K2Z9AJkr4n9GopkrA6tnLjp4EzNO/eNROj
RkLOk4H7zZqd4VPAK8YnuiQcV83nKuRzga0NUeI8RiQ8JsZsbmvuArggu9/u
CAmfH3k6fDzZBfxVnttdtiXhaFuF94UHLlAUeD54zpWEP/M4B3jXXaCvQYyq
6kvCkhy2+080XWF14XF96FkSftIRGbwV5AryqoF99yNJaFr3OWr4mivY/Cc4
x55Ewh1MpN2Sc66Q0NjJfDSbhAUMHAcuSZ+Eph/ekgUXSXjX4sImXZeTMKnK
A5NlJJwTEm6lKzwJ3EGt9op1JEzyDHGaGjkJxA3XkKBbJPzPaFxwmtcN/H6y
57Z1kDDcuePZvyNucGnPjUaGHhLqxO75TyndDXqDTvSbviBhh1fPqFePG6zc
YPhCeUvCylevRuqZ3EH2Vw3ru48kJAWISmygO1ipHZOW+krCQioetYx0h7gz
f9F3iYSHjI+wlbW6Q2PTFcemDRK6Weg8m//tDuO/DoX9ZUvA/8bcRZT3eMBm
9cU8g60JWLhgFOLk7wG6Zwub0oQTcIDOcntEjQecumk4MCSdgOt03O6x0x5w
cXF+XnhXAk5ZBZb4SHrCY/VcdnfNBDxyy5RDxckTls7ul61D2v6UTyPPL3qC
9K0p/UUTWryXpbThS084+jvDWfdYAra//MOTzO0FMRp7I0gOCRh/1ehm3iEv
qD/3Pr/PIwFLbzHy+yZ6wditxFt8AQkYkbCiTXffCzYt7Rp0CElAaZE4Ycu/
XqCzd+RbeWwCdic1NtpqeIN3cDTn19QE7MwzmecJ8Ia8Zjl5jZwE7Fd7VnO+
yhu6l54bRhYl4Exe9xhpwhsW94a4dl9NwPsHAm3Vt/uA5HnxKK6GBGwoDV2N
OeoDFi09BdatCejW9bbII9UHopYDW4oeJOAK45zg2H0fqNMUGp56moDim7Vw
csUH3p2/v6D8MgGLMwxmAnafAo7bPlzB72n7a5hnYjxOgdYKj2LHTAIefubH
wX3pFHhqtRmx/EjAm9EzMoIDpyAn5KSb+WoCyumW8OUw+cLD2xwxeYyJWD19
qj5Kyxd+rNwofL8pEY24dZ4M+vqCuLZ9qyx/Inpc5TiSVuwL5qGMr/zFEvHk
n0v8VwZ8IaK19mezfCIWn1Xi38bgBzV/jm3ZUE1E5Z7hPaN7/OCN9pqS8T6a
X9zW5ddJP2ANKz+YZZiI1+iqLltT/GBvm5nHyOFEnA8QWV/v9AP31cVYseOJ
KPvTI27mmx9QdIqKvVwSkVfB8xCXyGnoDDtwp94nEQssziWcOngavrd9HVkO
SsSIuQ+Wq2dOg+jf3EWIoPlFHdZaik+D2T6CJzkhEV/eke4u7jkNYeHTygOZ
iRgtbs1e8+M0VN3JNBXMT8TM1s3qL4X84dXfvV4ulxNxVe78PWE9f2DW/RBf
VZOILluVNEO9/EE9Iql0oSkRlx6oa8+l+8PJu7vbtdoTMU+E+bxXoz9kr428
iXlE4yvXv/n7sD906MYs9TxPxPyxy4ORy/7wNUKel+dNIkoMKLVzCQWAcPvA
brvJRNQxWIy6pB0ApushZpe/JOJzo/3aUnYBELJfwmduMRHXbMpkL58PgKuR
TxJU/yXiV3qBQp7cABhu/68slDUJj4d+Yv+vMQAY/wndu8+dhP6xFWt3+gJg
D/HgHfv2JIxSQNHv0wHgEnVqxVIqCT1P+F9ipAuEzI6t2wp2JuFy6nwe3aZA
uPuvTXVSIwnllR2YTwsEwmfCzVwRkvBMA0u4sWQgCEVz+gYdTMIuIZWizJ2B
cPBeU1KbZRJerkuU1NsbCMEb9uUM9kmosS9ryBECoRyY7pu6J2HAY660j8aB
MBhdN0Y5nYT3xE7tfXEkEOg7rVbfBidhhiT3K5njgbCbbp1fKiYJL1k9jRx3
DAQnrFDzTUlCnmjl43TugZAec9iiiZKECnqShSSfQGjr/O339xINT1O8wM8/
EGbpilMMKpLQ+GNpS0tQIAjoGV1Nu56Ewn9+nfYIDoQDsd8eDLUk4eaFsEPn
QgPh7P28D8L3k1DA+92v6fBAKKOHNbdeGt4lRfG2yEAY0JsRrBtKQmoZT8m3
qED4F5ulsThK48crzpYUHQjKDzSP6k4nYc/1NL1wmu3AMO5P+p6E+iEFgUO0
+FT95LS+lST8dGcXXQYt3+04lSo+hmQknjWqVtHwph+87nLgTMYzafZ2MrR6
+BhjJ8r5ktFi4MgoE61eAwOFf/M7ktF8p7umMa2foPgX2zXkklGhe35t/nQg
lD4M1YxUScbBZvLwkncg9DNKWnVrJyO7s0i4h1sgrBn0BnIZJGNXhe4DbRqf
SqSgDGuzZGSzN8o+axMIdl3ba4qsk3H6yfQHfpoeyUwPH005JeP7q4P3JGh6
NRv6flT2TsZHiX5H84hA+ETipQv+LxlP8rg/O6cRCLzdd0Q6wpKxXcE89L5S
IOgxu2uzkJJx7tDexjCJQAg4sMnGPCMZt3kqTJbxB0Jxws2gvDxafyFtqfs4
A6Gv2yHrfUkyhl5gOJf+LwBWmZnrZKuTcf8uOamUqQBQMLrW438jGYNe/YgO
fBoAxxOtp5rvJOO9NDUOo4YASHi0Tr/RlYzBjlZOXDkBcJPlqqhxfzLqJ4tr
9AYHwKSR+b6skWQMMMg8GWMbANxJS8dHxpOxdnvksBrtvMHj4rNin5OxqTGA
PCsYAKdZjclev5JRcwhbymjn9ZLx92v1azQ+64dDPV/6Q2/Shd5l5hSkVM6L
at3wh5XHMANbUjDGtoVRJNMf5NhmGZMFU/CyhVERv48/WB/MFh+QSMHGg0vu
Ow38IT5Za7+gUgqeebwy6yriDzd6xu1c1FNQUIPSfWfxNIyzpQRX7U/BlfHf
RUTfadhsokpdMErBp3v/aH4vOw37U97Ua1mkYHG5p+FgyGnwfRLbF2OXglyh
NWnzh0/DRXbFuZ6TKcj8N+O9vuRp6DEZZObxS0GLi11b3/72g6WUMEm7cyk4
YWzA2NLjB9K9knA5KgV1j/1Ifl/gB8c4ntrPJaWgyWd9srWfH8SanglRJadg
A33Ymvh+P6hPFc4NLUjBPP28awe4/OB978PG+1dS0O4be1LPqC9s4vTrZ7+W
gsMvmX2v1/qCziG+L5bNKZhectBwLdQXfNLushbcS8E3Oa8+Nxv7woWn7tKT
PSko90lR+yOfLzzi5NJTHEzBxSRJ5sSJU7B46JZj0LsU3L9jv1j5tVMgme4Y
1vYpBQU25iz1Q0+BZR/zBYZvKZgcc+a4h+EpiN50vcl0OQXJu9VWebacgmtm
NgMUulScq78xZ/bGB0bT/82/ZU/FM33dL7Zf8QGOZ1fZpXhTcTfUOMf4+YAW
1xFZX5FUdJDnlo7T8AGvw8v6TTKpqO8YXi/9zxtyM0qc/+5KxRef2Uh+j7zh
4TPjCAOtVMz6aiPtlOkNP7kW8tP0UlFyG5n+n7U3iJvn3xoyTcUQk9vRFju8
wTwTB4WtUtE03nPN7pMXRPbPfnNzTMWYs/hCtNYLajeTOes8U3GP/k248p8X
vDHXll8MSMX6s5qkL5pewJY1Yagbmoqbpe/1/V33hL3PU1xJcanYa3gZXj/0
BI8te6L60lLxQWz9AinFE6hH3hbw5aaiQgNlg/mIJ9zPimtxKE7Fzw92+zjz
ecLCc8Xh8spUVNqiIZ/7xgNEuYcW5htSUbX4xc7aYg8wswjn0mhLxXubRh0q
3DwgPFtKMfJhKo6ErWQkyXtA9cBTo+6+VBzUGyy0/uoOI9xn3bhepWL4IIs5
7w13YLEUibH+kIpME1pWXcHuoE7uKiyapeFxqfj67XOHky/8Wqd+pOL9psEj
W+jcgcyz7ZXy31T8Ip6c29DlBvcs23+eY0rD+B8+w8dS3OAr2WNLB1caDsjI
FqwddgORQa6dLAJpyHw7I+z6Vjcw3dp80Fw8Df/FtH/0o92PQ446eeQppOG8
5xPnfbT7cyWFJe79njQ83O3uuMP1JLwcvF4sq5uGeY8itfllTwIj7/E7/gfS
0HXhgpXCF1fYc2xjpNk8Dbt0qjlPNLiCC7Vy8d/xNGRgTbtee84VsoaO8Bi7
pqG27u04iX2u0M67opx1Kg3fnhl/2kHnCl+OlZqOnElD++LWu4mPXGB7zkEv
scg0HDq6JSUi3QUODi/EeyWmId9WGdcrR10gmO9iaX1WGm4aPmn7T9AFKqz0
2pfzafXSj4tK3HOGoZy5N1CWhm6MDTxtZs5A/5K8lFSbhiHin94+e+sEKtt0
eAdu0upneHHipI8TOFlP7hbsSENZ+82+kSuOkJ6baubyOA3ze2rpZZId4c7L
PT5VA2l4fPXYVydBR5jb9i5h4U0air19PKhS7QACNvFlWh/TsOPVsmWpjgMY
5Sndi5lPQ4nH5oJNffZw9tXQu57facjC/iDT39keyvgjVrg30vDewGH61z9P
wAsb6W12bOm0+07P+GLiCdjI61O9zJOO1XUJR3uFT8CukbPmc9vT0dHhXIJj
ox04COzwVZVOx9cfi3yajO0g9Xh3UqhyOp72G5geeG8LrRdOl9/fm47iuTJr
bcG2MDOy7T47pmPb9Vzj4C22sE2wY8zSJB1Z9z6yZa2mfS/beq5ePJqOVUF/
bgQZHIeg/M0Ck/bpaKV0pfnuexsofd2spuiRjnEjs/VzYTbwXNDZIsg/HZ9N
OVWuC9jAui3r6bbz6Zi92/fK2i1rULpYn8IQm45RQgqVn62s4cSb41dNU9Px
p/Ki59NFK0gWontIoaajgGO7WVmuFTTbVX14W5iOatIVC0GaVjB10WJN8mo6
2g8Jd+DbY8D7dkXQtz4dX0kmD22OOgZ62y9rNN2m8WHrqjYueQwCT5gc/Xs/
HRdv7W9o6TkKxQU//A2epuP3oCmB/ICj8OztxbS04XRsVU8ejxc4Cn+361cN
jaXjyx1CcZGdlqBg/7lLeCYdH+d4mySdsgTbS5QJt4V03L1VwPfKNktIfKfz
r/ZPOvZZSUUM3beAm8Ifty8yZGDmXNNZoQAL+Gifpqm7KQO1axIMz++wAJ5C
NSvStgzMjRD8/e7iEYDRd4F9ohm4eaca279Vc/AXIWXwyWfgr9reeRsncyh0
2FnjoJqB9M6xV2cfHobewuFH5ToZKPlRpeim0mH4Mxrxcd4gA80i1hju5pqB
3A4ZOo3DGej88v6fDXozsHZ8JhJpk4HhNSvjMYGHgFR0Trvb+X/sVSWYMIUb
YztsuHwyEE7XP9SxMoXxHY+CrIMykO263OEzT0xgi5N/VlF4Bg4vzSnPogns
L+avmyJlYC+p705+20Hwe9/Ro5yZgVTxR0bxew9CgajX1LkLGSgTm6589aYx
9DhtYegozcCdhz1vb6gbw3JxiyhLTQY2zefczmgxApkPzvvMmzKwVfZP/WFd
IzgmxmabdzcDO2Pf9eo+PABxzg1n33dnoOU9c7Q1OwANJbZk2ecZmEGalCga
MYT3H+iu+7/OQHmZciqrhyFwiVf3Nk9kYJIadZq6aAD7XCxn/n3OwDORB8SI
RAPwKf3DaLyYgcutAS/ptxtA/vhl8az1DKwxe8P9rl4fHomb7h9hyUSF46KP
uoz1YdHlp50YdyZ+nh5ZaJ3QA6nLBcFeQplYeD/z361IPbCc0KfWS2biWYZz
N5qE9SBa4kv9slImpn0vU7p2B+G6K7UPNDLx96p6cJEjwujlfXNJRCbe+dtf
HUWPwDn5kXnAOBPDT8tCrjmAtmS6pKBlJgZHSz5dKiLA66Q6uJzIRJOw5bZt
P/ZDXtmofZVbJpZTWPZNGe+HrklSyIJfJvq5Fx+wK9OFn5LKuVrBmfiIUWGv
O50uSLi9bIyJzsTYAxISf1z3wZErkf09yZkod8hhkOOxDkR+lPnCTcnEC0FJ
Kmm7daBOqp/V7lImJr9t6z59SRveugVLXy7PxDb5MZ0rHNrAVi6qN3ctE2/J
J/8UjdQCzU+PHFVbMpF7J/fDoZ+a4CEdEBbamYni9Io/b/hqAtVd4ML9J5n4
bS1+8NrMXnhQfq+JfSgT//Cen2z23AsLn7wGLEcz0f02U+W9WQ0QleH+enEq
Ezeub5O6c1oDDnvcZp/8lomy1BdXCn6rQ3iFi6ziSiby7GorORKjDjVTbAZB
9FloddHIro9LHV7LNDq3cWSh4EODB4zFasDiaRfBwJeFnPLFxIyKGmhcpb9o
uiMLGzdaJ7wf7QG36epbFNksZDC5sR7utAfIskcH3+7OQomAWirPH1Xo9Fz9
JqmdhSUvOu+L5KnCt6tlnL76WVjbEXklW0MVRGZM5ZsOZaHznV8TziMqcEju
l+Ffqyy8f1umNDJcBUK9LrkaOGXhWOUL/TEJFaisNIhK88rCK+EP5SdydsOr
mS8FQ4FZWCnU/Mfm8y5gks9pEQ6j+Vtv2TMb7oI93rrDbvFZGNrWEjd0WRlc
qz4t1KZnYdmuitAqRmXImk3nWszNQg05ziRfn53QLq+hqFuShYdeWQuxDCnB
vPeYEakqC12jyUmuqATbqxPc+hqzECW+ans2KsLBOeUYvjtZSLzvsvsnowjn
FV4VOnTR4l+EhPMWK0CFT1Rr+bMsvPT46T6qkAIMV8u+mn+VhfvPELLe+fLA
8Ln/p/p4Fu5++fVf+HZ5UFE8vyVyLgs3nQppvlMiB86nxHZ2/8zCuR+XbvLK
y0FGzeODXGtZSFfr3RjQJAtOv1tu1DBkI53HrqAOPVk4t23TfXPWbIzs54P5
QRlI13B5/pMzG4WsEgdnPGXgivXNsTzubLQoyLpcsi4NbefY5nW2ZWOoS8I0
wwVpGMx1WH0vRIuP+fmHTk0aZm81sMWLZmOvha1J8gspoHvFJCAnlY2pJ5gh
NUgKBJZsZZ7KZeNezje7l7ZJwS7+a2oBO7PxnofEnfY7kmC0l16fVzUbW+on
DQfdJMHBxtqiRSMbo77HPJTeLAlng6ud7HWycdv8mHhVmwSk5a37bRDZ2J+p
OmrmIwFlzZbhVwyy8XDD+BHW7RLQ9qoixfhgNl5qeNfV0ycOA0t/Lnwxy8Yw
o3K2xFhxmOU3v5plmY2nVCV61LTEYWNv2U01m2y87tyYkjQhBvzHlx6MnMjG
cR7NNRsbMVA+b/oi3Dkb3y/kz97pFwXDC8UfxNyzcchY53i5qSg4tPz8+tA7
G2N0eZZ/P9kBQSNGa16ns7Hm7GBNkdkOSF0u4NgUlI2zCVSvpEERuCzwXbAh
OBufz80FFdmLwG1NAzmr8GwkuV606p8RhoHjFzRWorNxz2owF9N5YZg+/8Wg
kETL91b+ixK7MPy7AEcxJRvnrk/s2lu8Hbbdprp8yshG1VTrJq6922Hn6xn/
ZEo2QsDf8bIBITBY2Re580I2flv3tJ08LQQnBLPTBi5lI2v8WEU7lxAEaX26
eLY0G5+JuRRLNAhCiq1WlWBFNo6Mb5+hsxaE0pD05rvV2Wh9ueelyZoAtOSP
d7lcz0bt90Nf5ysEoP+2+hBTUzZyCi2Uj1kKwPTr5Imqlmz88Cn9MgedAKyt
jH43u5uNO4/s6HNv4Ac+IdV/C500/PuBsuMn+UFJO2FTbnc2DuqsuQQI8IO+
3Zvt2r3ZqPeLy5upfxucCFVWGOvPRtFlzX3kxG0QeDFWM3YoG+9aS6Wy6m2D
5NaXB2ReZ+MtM+LqiXU+KHmjYPVkNBsZv+5ii77DB81/Ik+enqDxIf/+mVc4
HzwTGgzkmc5GsX6SH+d+PvikLRt963M2vuMecXWk44M1u7AMu++08xK/6adF
Ny9sDeu/tP4rG6/Ww/7XabygWCBZc3klGz1vyofPHeMFvbbg2wfWs/FchuCT
8B28YPu299EcPRmrD0m8SpjdCoGroi8zWMhYcMSvbu3mVkjcfuajKicZeeIT
Ul7FbYVincc/Xm4ho1Y1zyfmo1vh1glhujA+Mv7inugkSW6FvrCAzaJCtHzy
Tc8PLvLAp4KHIg92kFEqerer8WMeWG0TUPKUJOM99e0t5y/xwNZ3vtoccmTc
9kj23UAgDyj8vWd8XYmM12O/3zY15gEU5rM5qkLGIjX/8beiPHB8n7f7kjoZ
GdkUWsOWucHf/m5QgTYZXZ63rEq/4IbEcO5YgiCjhd24en8tNxRecs+a1Cej
MXuSnX8SN9y8c7so0ZiMGos+Y+tu3PD03aY6RTMyWv3RrAzR44bJvy5t/RZk
PPljvPKlGDesCt/qCbIm4zNtkcDt/7YAty77CP8JWr/GWp7qHVtA3sFxqs2J
jKaKHy1norcARDT+cnIjY9cHOT1pgy1gU8jMwOhNxsGjajMzrFvA/64dd6Uf
GadOc3wW698MpNFroof+I6PwtIpPe+5mKFyjV/5+joznPxnfaHHaDE0iNvuo
YWQ8U8r6lUFhM/Tq1phoRpNxnvN4AHmRCyYc/h1/F0/G7ccr3e3uc8FKxFHP
6GQyTu4yFD+cxQXcRVfPSmWQMd8ybNTTiQtk21fjHpNp+qg0RV7YxQXEmDnZ
N4+MR4c5akc2NoH1elnJlku0/ZlnzbYNbgK/HcvXmkpo+rG9OHa4YhOQ9h+6
e7ycxocqn/650E1Q4FjS+7eKjBfZ9uZGm2+CG5G/XpdcI6PRVrXHrtKb4EmR
8YzBDTJujO4x5//LCePtl37PNJPx+Z7W25mDnLAy9p0x/Q4ZbewktO7VcMLm
fwZbVTrJaE14/L0czwmyovniw11kXJ7b6bTbkRP2E/O7Qp7Q8FoUX53Q5AQr
J9wv0k/Gcz9sYwS3coJvVM6hzkEyRn4BHaevHBBXPGvnPkLGSzYPl6WfcEBB
h6432ygZS0Nahd0qOKDhfXZw3TgZFxqddnHGcUDPv08kiymaXomhkfzOHPBB
VJu6OEfTu1NzMFSXA5aIjMv538h46ManXqXtHLDZeaJe9xcZhRwE+iRX2EE6
WqNjfJmM18ReiB17xQ66JSl9pDUy9nTsn26+yQ7H7o29laen4JktM2X6VHY4
9UF1ro+ZggWFHgKf/2OH2I2E5UAOCqpc5/h8xYId8sXeMm/bQsF02YSt3rvZ
oQF28bXyUrB36uOG8mZ2eOQcJ+koSMHpCwa/5ubZ4H30KxX6HRT8T2yoJfsp
G/wuUYQKCQqy80exC9WwwabOqMMmshTkOCbjEpHMBtLjg/ZfFSlYQe6ouubJ
Bjp0cqfIuym4ejlossqQDY6Kh4doqFNQjsGox1WSDXzweeIbLQoKeQd+699g
hRgXqdzI/RSsClsMnhllhfyY81ck9Gn1q0qulLaywvXSp43dRhQU7OhwXMpl
hUedYp0+hyj4+fXusbH/WGFs/Ew/lwUFpSRjlY4cZoVFup7RRisK/gqssdWX
ZwVOCZEv1nYUDAxYEallYAVJvcA/fxwpeDuTbSptlAV0XLtYi09SMGaSMfPN
LRawiBXk1/eiIDVHsDE9kwW8L/tJT/tSUIEsm1DsyQLR9zv3pAbS+BkwKWMj
WCBvgk9v1zkK1lydXn7MxwLX6X2ODIZSsN6X6cbLz8zQJdHuGBxFQVJ1M6Ny
JzOM6vH4bY+n4L5Wn9QnOczwy9UjrCOJgtqV/paV3szAEdeafDKdgolGpi8f
7GMGyTKuCyxkCpYpJJ8X3MwMWg9cK2pyKXhxTuC/ig9MYDF5q8m8gNbvI+Kj
TwMTeDFwPPhZTIv3+MXsGsMEUZJOA3lXKJj1/mp/+hEmyNW/8V6niqYHfdrp
LzuYoO4ky9f3dRQ0Ywz1iPjCCF1xJ/7GNdL0rLqxFW8zwtuy6+xyzRS0EuM7
pklihJ8PGASftlFwy4ZOotsRRmD/aCMbcI+CQx7iut1CjCDOWKvO20WbNzkd
RtePDKAltaHf0kPBgbNPUrXrGMDc4Jil/TMKzsuOTlmcZQBPt0rnjRcU3E7X
uFKzjwEi4/+evvKKgkkiz2XMGRgg58qRCON3FHx07s74vh56qHt4JfXLBwpq
ekwyRGbQw4OPy/lZn2j5cIqZ7yg9vGU0q1Sbo+COIKlmdn56+CFVemvkKwW/
UHjpPd7QAZvh4sPwn7R5KN8crFRIB2LuBwfFlil4nNHpvLsTHewlFY4//Es7
T3HvugXE6cC8fOGbFx0VI6m4UvBgg3DvMlznZKYij7q5laDhBhHxKZ+zgZ2K
zk8X5zq7/hFUpq9CVpupKKw4crPE8B9RI60nv7KVior3/631PVwnHhjm7i0U
oOLmMY1FO/114rX7nCGKUJGLV+OwXecasUDaf+yTOBWfH9299H7/GsFaQXZN
lqGBr0ZqbLT9JUS7pwJ2KlKx30O4qF/zL6ExpR01sIuKUxfp/rneXCXMmDPT
z6pR0cv9P/t+lVXCXWayQFCLZk/rvZe/9ocIP7C3+q4uFQ90ifckKvwhKB6p
LS56VOSrXPBcr1ghqhPedzMZUbFpYh9bmeQK0VmxZ7jKlIq9MX3zKSXLxOvu
xEmzI1QcWQrS7RVZJr5NvV1YOEbFXFHm1fMFSwQLy+6NHFsqyjGVLFcKLhE7
ZOO5tB2pWOe566n/hd+EutGI8JgrFWVyLR+O8/8mzDyVFGM9qRhdTh7lubBI
nEyM1pLxpfVbu9G8TXCRCLs6ZPQkgIrfuXTTNy7+IsiP5KxPn6XigN03mUmR
X0TVdLgbTygVfTubhp+X/iTusQz8d4sm1oOMFK+3Mj+JV7LSMXZxVNzkfFuK
t+4H8c0oJHM9kYrvzhu2p6r9IJi8+govp1GxvnX6iOXdBUIkSbz2QDYVR23J
tsFGC4Ra5dnWuRwq6mlV3+Aq/06YPu55nHGRionrdHdlOr4RJ2dEXqkWU/Fp
E4e81buvRAjrf59ellGx0Fl18/W/80S2XPfP0EoqfnlSfemQ2DxRaSxEL1pH
xRnfnhQDoy9Eh9fpLQ8aaPNBvyZYG/iZeJV0f4fnLSp2CU5vyiueI+Yrt+3k
aKMic39GNf/ALMHU46NzvYOK8+3KhzSZZwnh2faDRx9S0Wi26BYPMUPsYdt6
fOkxFYcW1U5Uhk0TJvKeHgV9VJTsr2YQuDNFuBxsO0O8oKJ1TucJt41PRIj3
5rjJl1RUlWJXpBp/IjKTT2YnvqViwWSB0XXqR+JqVXOx4gcqhpys4LvzcZJo
7+G41v+RijXMLukdmpPE8KzTnaBZKgZevYd3syaIebamJ/xfqfh1y4xn85dx
gkGB9XXbDxpfKUbvrx0aJ7ab2E87LdHm2749yND5A6HqU7/I8JeKgtHqmVK7
3xMHUxgZKzeoONzqof2LZYxwqT7Oc4gpB/8oy2Pt9Dsi+Emt2He2HNTkcpXR
639LZM5tKFO5cpA8H6Jd1f6GqGC30tXcmoNsWfGNL26+Ju4qVJm+48/Bkyn0
9+qaRoghkzXbaOEc9PwgVSXb9or47GPhJSWeg27/hY4r9rwkGFLLzz2WzsFl
w+8SV8aGCcGalXhfhRws/rEp8fzqEKHSa0bZsisHG/psSjJFh4iDn0tLm/bk
4NWvnZRnJoOEE8fv68c1afg7RFUFI14QwYom7X/35eAxzvPclrcGiHTToqcl
mIP73542bfr8nCg/9eONwYEc9Pu9t1k6pJ9oSz0wO2OSg0lB1+1vbX1GDNZc
XEozp+1XrYuTbHtKfO79yqRyLAfDaxV/yfn3EnRf9HiHj+fgnlk66ZhdTwhB
zjyJEIcctNyX4f1p9TGxS+nzbhHXHGyl19rBNfSIMDpEEJ0eOSjZ0TrY2NxN
OPlSzNxP0fiI3RKSUtFFnE2bPsEWQOvPhivetOQhkV6r41N3JgfHX34Iolx5
QJQ9zTxvEZKDA5xPdhy4cZ9o+zKZsBiRg7dG1u+wP+0kBjg1c/JjczDzQv66
6Lt7xKxSWplu4v/op+8ppNZB0Jl9aBhPzcHKifZ/AUV3CX4/tXukrBycoQgw
kIXuELvSk57J5+SgnMfVF1+uthKGde/e9eXT6m1tVfhheJtw6Nv9ObAoB8We
fD/K+6uZODsfv8JXloPWKfssHjXcIlI3vWZpvZqD/70oYY+JvEmU7dy5zbE2
B22Zas7ctm0ibpvFSNE30GyitWlO7wYx4DesWnEzB98cFtPL1mokZtPl0aSV
Ng81OxmVdBuIf3UR5l/bc7DP6Ozr4PzrBP+zAQfyA9q81SRKpQ3UETu/Svtq
PM5BR2fL+FKxWsKQKzT0zdMc7PVwUuglVRMnlJ8lRQ7k/N//L/+7Ai/8n/3/
AHW9cVc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9e2VUV1/QNd0CgnSDhCDSIXHPkJJKSigSSkqXdHf+ChQFQQkVMEAEMf6A
gYCASimCSCgSSqcIPLzPWu9zvtw768yd2bNnr3PWfLgibgFW7hRkZGQqlGRk
/+/5v6s1GP7/6wiT6QWFqKj/s/8l3NMtzYkCoyNNtVJ7tzDBdVrJQ6VRsPCh
yh4nWo6BtwdjdF0UZF1tHZ87W4G5fnuzOPM6Chin6KNnblRiSZZiA2eHooBD
nGtXe6UKq3ib+PTNTBT0inF2Vzjexd6eHC9W3IkC02pmJbuhe9iv+1hi2aFo
2DaglsO712B0oiXuzMLR8ImN8/0a3X1MunDHOEYxGqK1vkqcb3uAmTI4npjT
j4bJYsV7o6ceYb5xT9ns7aJh1zujMUCjDstb4dx86x0Nbr9XavvU67FHHmEj
SjHRYMw/3BGs9xj79LW/5VZeNFD9C9/6z7EBWzmtWMFyKxrGsUetkvFPsCOv
cRmxj6Oh6HCrkFBdI6aqtug7/zYaLu60+nEvN2F2NeaWDl+iQe/jIc0M1IxF
CNWqvJuLBmuP6OM/ip9h14kMvCq70dBhJ+ndT/8Ce07rvXebJQbQyIZKctpL
bDT63SSraAwkeu/fDWdvwfYWxd/FKcfAR/H1t9ftWzHhSyk1vw1joO9GmyW/
fBum82Uy39EhBoQEay7FsL7C3Mx0Qjsux4CF3Or5ze1XWEprqb1qXAz4q1PZ
df1+jVUp72lV4GKguDkr58zsG+zd3fMibOUxoDdEYZu++Bab4X9OnfAkBoRN
n1t27rdjDHieuT/vYuB+mRqbBW8HJkMd0XvuawxUaisE26JOzCxyqL7zdwyk
/cNFswV0Yf5/lK+q7ceA7ZWZUy333mM4V2J05eFYyMr86lm12I3VDS47sx+N
habvlUCr04v1GVvoJ6rGAi7rJ9/3kg/Y2ssHUotGsfCD+NVSJ/kjxql46JDT
uViYzmbKyNH+hKlVXV7u8ouFn7V3Q5d2P2H2vF2D6gmxcGV4Szf8TR8WlSf1
rIoQC5Od1k7a+H6smCL95pHKWPD/fGzD8dIA9jL8Z1JSUyykMQufmNIexMbm
9DyXOmOhtVuXelZgCCNzvm16YTQWqJryzeKoPmMi/WTy3QuxsHMx6Nir5c+Y
7innIxrkcXC4N969+ucX7NLzl1t32OOAxlFZyG58GEuT4//GIREHUww6UgMT
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
ur2bp7+NraTTGNjaFfzf/zH/uwKv/p/9P8B4ye4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
rpZynAGulV2re32LhnkxX3MdRteIBpup6d+VNCw+X2XrxbNG9DApiErX0NCM
fGDpkM4qMVN12sy4nobMsUsCE9H/CEbH6sSwJhpu++8A2bPuLyHE8bPuyiMa
nrvS0fHi+x9id/3+mY52GuZ4y9RIqP0h9DzOiX7voOHCrlsbvUJ/E048LWbb
X6zjnX6gfOfBChH2kDnp2Gsa8upO2P1hXCGy/fTu+/fR8I+hr5al8TJRui1z
Ju89DXf1z5U3Fvwi/nvySvTREA33F4ff3v/lJ9Ebwms+PUrD5iLHh6+P/CTm
xG2TeCbX9ZwKrE26sEQwvbx4/+AMDRe9yyRO/PhBCEd9nHGfp+FdWb1Ja4sf
hJqs5I7s7zQ0CqlICri3SBj0eZjf/0nDCCn5pVrBRcIloSxp5DcN8193pUjH
ficiVL7cZ1ujod/Dr0IN098I8ofds2pMdKxiS/11xvYbcTMtdMdJVjomUIPf
2HQsEA81682TOej4I22X4/FDC8Tb8T9Jd7jo6KTxlPeX51dingz173jp6BJ7
ODfqxDyxkUicZRCiI19bW/Qemy+E6OyTHfIidDx3ttSDz3aOUM9nt7AUp6N4
yKllHsdZwkjbJDlamo4a8nxnlX1nCPfvlPoSWToa+976aBUzTURd6Zt9qUhH
txzx6LPnPxNUo21iy7vpuBbkeye7boooXzlpIaFBR8ue5U/Jg5NEa2lRssF+
Ok7+dqgy3ThJvLecqA85TEef/MrQt5qfiAUG2blLR+iYe6P5GZf/BLHpjq/Y
E206ir33bJ26OU6In6i0+KpPx5G5Ok+LmTFi76bFZCETOvan6Ntqqo4RJrWa
D45Y0LFVl30i4two4ekaOedjQ0erxRzNza9GiBiuZjG6PR179TmTx3aOELlN
jJb/OdKR7ULVpkdMw0SFtzZp0pWOr/aZ/u59PES0C6Q94DpFx86oGd0Bygfi
Q1vX3D5fOh6qSrp39dQgsRjILe4aQEfJMJZlDt0Bgn2HlWVGCB3jYmsed6u8
JySfnyfVhNPRs6kobkiin9gfMfhgKIqO/uaiTd9E3hFmO8W+bIyj497oD/Uf
xN8SXj2u4ruT6BgYr1vgr9RHxMWWWh5PXffbhV03RKuXOK84Q0rIpONbskNQ
k9Mb4s57pYZbZDp617yoFkzuIZ6Qgr700ukYwxWVb1n9mvi4p1Z8NZ+OsROd
NcRUN7E0smy5q5CO5VtJlTekugnO7EMpZlfpeKXWR/zBy5eE9MG4hrMldOTN
Nf9FuL8gDn1u+1JcRsepPSyRDaxdhGUuq0TXbTp+G/z6paS+k/DRMrRaukvH
oniHVErYMyLha3bKjrr1/ovQrTI50kFcvNTToNtAx+OMz5JchZ4Sd/UF5gOb
6eiwLHc74M9jouPncYmLrXRclW+e2DbTToxcK7Rqe0JHWYG8LRsn2ohls9GU
uU46vska1x343EpwrUo38r+i45Ml/pXDyy2EzC2veeINHRtlqj6939pCEHYV
El7v6NjSNHTATuMRYcOyYEUZpCPXWN7+Z+3NhH/1ntSGYTqWvaF42Kn+RyQ5
hTeOj6/3OyXEvbGykbjE2TjP+Xm9P7sfdFtAA1HzYFVCc46OpM+jyQnD9cRz
Ty1rp4V1/wSiK+/m3CfGeEmpqT/oOP6p8JCMaR3x+9GzxrvLdDQUHycniNYS
PKc3fx34S0el0bkbWr/vEbLbzSWZGXORuWeb/aOJagI76NZKLLnIFFHOFvrh
LmF3pj/Vhi0XzcMLz78fqSICJEWaYjfn/t//Ef87As//X/w/wOW+7w==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
FJAB11i9/Af+y0H/+6giKOP/3lf8P5DjIxk=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
M1TTo2Mq+15O5PIUuCYfuXtxMx1l38rtqJVIgU31MgmdRnScNTjIr7UiBR4e
aKDeNKVjFUN8ZZV4CuwQPnQjHei4/i4fv79oCry8tarJdwcd5Y8Ef9YVTIFd
bnUDBtZ0FHohJK3IlQIfZw8uiNrTUaz8RYz+bxIcyF8pPeJExxdGr/XD/iPB
N6jRq3Wjo6hbwY/Wfg7f4UB7lgcd9+vzV/p2kODfGfGgcB86tuoNDMo9IcGp
DdVplnvpqKfbDKJlJBB/45+v4E/HDCH2rEE+CXISRKtmAuk4tepR5rmTJFCS
r2pvDaGjURx5hIggwdW6fRMl4XS8I/DUXMudBPoHhAVSo+l4aeyH4X4TElQL
VSh5xNNxgcpf9lWBBOa3fE11k+n4+Uv6j+alZGhxFfAQOELHsqBCutBAMrjN
lkX1pdEx+Gxo4s3HydCb502uSqcj73fHNzX5yXAAeEspZzh4SGFKZonJ8N/Q
zfqgTDqavR3UMHNNhrgzHr0ElY6HCpa+P12fDH91uGalmXQkTe9/0cmVDCc7
rkl8z+H4y59rW/L7JFiesFP7eT4dzymsk3x0PQnYcn8tCwroaN0Q7Hz5SBKs
rSv1S7zMye/W8HWmzklwJcAlxfkKJ78WXUKZa5NAT2iepXmDjsbGixkFk4nw
4OblO0u36Rh3+Er80ZpEQFfHl13ldLzt+PqB4dlEaJ6ZHSmromPHbovQV7sS
wS2vkOvMQzqOvPBtcFybCD2EnbzfYzrukTwv83QsAfyHfhkaN9Dxa7T3wNa7
CTBx+oKLRBMdx1SCSqqTEiBWxzpsrJnjX51KISdIgMX2qZP1rXTcJyRQy82f
AOnxeYW5HRy/XGac6G+OBzE5i0dR7+i4dn3zup9Z8cB6/O2dzQc6hslnHbNw
jQfFgJwppU90fE0cChmUjIdSQbNlcwN05A4ouvf2XRzo3hxX7xjm1ONyF9DI
iYP7Lky8NkbHivWMT0OecYAz23cf+4/OmV8e7l4tEwcvzn2J956iI/+0TcrL
rlhwIWhU/Wk62obyTYnkxMKHzyY3hP/Q0X1Qbs+AeyzsPz38bHCBjqec3N08
pGJhXJsyUL3E8UfnXttEzvoT0260QONlYJ3H2suO1BhYiBtcFSrI4OyPtUqG
HGPghCxZz3wZA02WWyTuWBYDoo8N7OXEGfiNf14p8UU0MP37An+uZGA1y/30
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
7Genif89dBuV83/nb/8H9/TvNQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {300., 0}, AxesStyle -> 
     Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{300, 1500}, {0., 0.006608165879254493}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.924045140383802*^9, {3.92404518838494*^9, 3.9240452426292343`*^9}, {
   3.9245376092324324`*^9, 3.92453762994659*^9}},
 CellLabel->
  "Out[268]=",ExpressionUUID->"ffde1af9-516c-4946-a458-7e9321451211"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen7000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmugen14000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.3", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924045337340292*^9, 3.9240454430698023`*^9}, {
  3.9240454782878494`*^9, 3.9240455066112366`*^9}, {3.9245376554548774`*^9, 
  3.9245377018246074`*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"852b548e-1934-4833-abc0-39c523a15713"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+38ApQPVOg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
QZXPHpSc8vW/Buv/X/8PLI35IA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
f/l/AC6OkEg=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
j0/j0f/7FgX3//X/AFifIGA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/31f+3/bydWC
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 10}, {0., 1.0041586491543129`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240454517401714`*^9, 3.9240455080959044`*^9}, {
  3.9245376935808644`*^9, 3.924537703699155*^9}},
 CellLabel->
  "Out[270]=",ExpressionUUID->"f0a35e32-f6a2-4450-bc2a-b2b052850859"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hmumem7000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hmukeep7000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924540839785091*^9, 3.9245408640022106`*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"b68e5116-36e2-4d0a-b522-d16f62f87cf5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hmumem14000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hmukeep14000", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9245408753890934`*^9, 3.9245408778243213`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"dcb4bcf4-944e-45b0-bb33-a939eb807433"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmumem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmumem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmumem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmumem7000", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmumem14000", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924045641380632*^9, 3.9240456898727393`*^9}, {
  3.9245408956699605`*^9, 3.9245409451430616`*^9}, {3.9245414959565344`*^9, 
  3.9245414976515317`*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"4de4272e-5b4d-48ef-9365-04eb86034250"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlcTXkbwG/GNqVQbkSW9u5tu7e7pCH3KQpFWkRStFK0KVSikhaiTZYm
lWjIFIY0lOQ+SZoi2TJkv42R26DptYQX7xjP7z3/9Olzvud7f+ec5/csRy8w
yiNkEIfDmazC4Xz96/X16LRBh45bI5dsk8irKr8eNugt7tWOWQVyztcjxQY3
m/lld3lbyP/lvWywsTmXy6/hyP7l+Ta4q9s//a+75rJ/eY4NVtwMAZ5yuuyb
X4rXr59cmmHo/I2vlGJeyQX+hNz53/gUKTr96T3o8DiPb7yXFOf27M4XHV5I
fil+XlxqGnfHj/xSrLpV+tnOI5j8Elw20s5vf28o+SX4m27SnA5uOPklKLQw
kBtxo8kvwZm5PVy+5hryS3ANL21Qf3UM+SVowcu416++lvxitLHmjdboiyW/
GDVs1+w5vyCW/GKcXLA89FFTLPnFKJ+ZYPZ31Dryi/Gw5EqCXdJ68otxy5Os
nacV8eQX4SKlYPaIHzaRX4SPbj/LS5YmkV+ENZOvdvdmJpJfhBoGAR3gFkd+
ERbevuV5v4rWwxHh5oAXETlT1pDfGi/oJUtcB68kvzUW9KgpImIWkt8a01sM
2l/oGZLfGi32r3NN63b7Fg98axysmmo4boz/t3jgWONBnbM65wxWfIuHTiEe
aVA7xtsVTPEjxBpTc9XweOJThFihJUowMPal+BHimVB1R+80b/IL8ZeGqG3i
kcvJL0TJ8Z1d6VziOwV4rLNUS9ThT34BDv8nHJal+5JfgL2q1pU+W5eQX4CR
TXWf1JcSzxfg+IiZzrZXQ8gvwFXBn+5MCo4mnxVOXXCpvfRmLF1vhVv8Nc+P
LV5PvBVO3Ldv/6eSjcRbYmlu872qqBTiLfFe/a81wsTNxFtizCtTJ0OdzcRb
4IWNCSvrZYy3wADzU5a6G1OIt8DNsaV1tmtTiDfHJ+q2YqP0ZOLNce9si9aQ
IYw3x3leSwdyepKIN8OtkicKjzcJxJvh6baC7IEZccSboRnoqJ+wXU88H3f+
1dLVNXsN8Xws95z4RP/FauL5qPyhqLQ6LIh4Hmp7Tq97vsubeB6+0vp4VGjs
TjwP/QNPXTCNp/dZaYoJZfaxc0cEEG+K9bNS/+g4s5J4Uwzku65UpoURb4L6
eYVaQ3nRxJvgI53CVU8mxRBvgs2Gjj8W58cQb4y7WoeGJV1hvDE2KtUdja9G
E2+M3AcajyXcCOKNcNTjGd5OqaHEG+GDmp7ta/IjiDdCf09TxSzVWOIN0fnS
OpFtNnuehlj06HHOxqYk4g1Ro8X+dHgCe78GeK82S8zfsYV4A9wxMYk78lMG
8QYYde/hMFPtdOL18WWFQdiBj2nE62Of8tIRWWg68fpYGrdaMMIvjXg9dE09
ZT9kDvProXLZ7nO5DluI10PVSfVOeGYL8VPQN8peL+sk809BRdT93vRVqcRP
wWFHJ3j1222m85PRPF13YX0Ti79JWHZDaQX57H4nYVGqY6zodRLxE7GnNqNP
BZOJ10Xt88UzHUez+NTFetmhyjId5p+ArRuW87deZfczHiMyj+f+7rKN+PFo
n9J3e2RPLvE6yNM9c0ZxK5/4cbhFzUBhMnQ38eNQrSLfzK16L/FjMXvc4h+s
rhcRr43JIi9fb6MS4rWxPL334h+i/cRzMbHW1/NPjwPEj0H/tvdV70TlxI/B
TXX1o8LrDhGvheH8URPf3TxCvCb6PcpwFy8/SrwmtnW1Vt6YcIL40didFiMb
N6aa+FGYOmZWa054DfGjcJsCg9f+eJrOa2BzXEN/8bVaul4d/UuyHzS+Okv8
COSE3KgtFjUQr4pa3ppewyLlxH+PovdTn8kvI/HDMS63OMq2qZH4odim9cbW
btcF4ofgxCpX8QHfJuIHYyv32bWSsIvED8KaqYrEDRnNxKug5xLduoY1l4jn
4Evvu6mBLi10/pN8YELIiB7d3+j6D/JDTh97b7b+RvyAvMzZYdFK11bi38hF
cy9mVGa3Et8vLxha6HLYt5X4PvmfCtec/krmU8rTb2Y0xkey33sqX9RtF/J2
SzPxj+XHb41XU21h99cp/zLysI17aAP93yzf1RURdep6NVs/Z9UXi65klZ3s
vOzDHPvnXgsL2fUy/b+OfPELL2Z+WZTJnrJ7xiXs92XfZRzMyptWwtYne7j0
s7v5a8b3ySZUPfcWzyxm9ydry27y6lbsY/cvW7Ss8XNKQRF7PjKOiyxNnr6X
PT/ZsacTR9tv2MWer6z4kKf0cVsBWz+822R2QnmTrV8F4oarxZy9xPbLICgb
EiY5opXH3i/8HBZeFNWdxd4/PHz7qfbE4AwWH/CSP9f747k0Fj/QYbw0Le8e
27/fw0/4uvZKJat/quDZbDns7j/5keITQvNMKjK5cSx+YZ5ZaaaWMoHFN+S5
9Eq0hzB+FKwd0R7dmLCB7Q+4mvdipaJlI9s/EJAan/OsgeUTTdBv3q4YH8bW
qwmBZ1sC/5O0je1P2HH1dn/hiyy2f2Gb2vnCqVey2P6GmtO5O94t38H2P1yd
ckOZEJjN8gOovJ+/YmtpNssfMLvfcnHhf/NYfgH1du7jQ+t2svwDTiFX+y4e
/H9+At/9ehMS9zJeB85n1/3dF5jD8hsYJY768Tp3O8t/sCBjjnza6kyWH2F0
kraFtJjlf12ILHebrvmc5WNd+PBwbNl/jm1i+ReM5qZWBCkSWX4Gt+jRY0Wn
4ln+BpMhFSdDjq9l+R20oqNyGsavYfkfTlhb1PUtDWH1AXzmbDL++WIAqx/w
8trZTxkeC1l9gc3tvbemdS5m9QemtUI6r5TxepAedaE6+v4KVr+gU3nGY/QF
1o/pw3ZtP55l+BJW/0C50aq6u92N1Ufo+H3Z0fgZRtR/GsDhZy6JZ3Eaq6/A
jexoUm/TYfUXEl615alNdGf1GZT5XednC0JZ/Qa/nox9Pl/CWX2H/gYv2cAH
1t8ZQcG56W1veImsP4AHhbOCFghZ/2YMiYLFyf7XM1h/AS1rpbnX5m9l/Qe8
+8gNWRGQyfoTOKEPCWrOW1n/Aq8GeKb9Pow3AZfbw58N7GbxaQq2bcLI4evY
fjSF0wdETa+iGW8Kf2gE+qM+iwcedE01u9ZbzvYjD1RiVVMzVTax/gw+TP/w
esf6eNa/wVPvTPXQnTGsvwOf2stlsc6s3+XDQIWiXPccez5m0MSzKxhoZPFg
BmO3q+1s5bF+3gyO845Xu5T7sf4T7mrwC+/PH8P6U/AW2mrcCl1O84U5OIhD
d6wvi6B5xAICO35wuGywnt6vBfi+mHm44pcNxFvA0bF7dyREbyLeEkaZr3sV
nZxAvCU8i4x3ql29nnhL2FdWoj56D5t3rKD9OzsN10Sad7ysYNz77UOKrkcQ
bwW8iOB3OkNXEy8ATpWL/fuKIJqfBNDct8CxujGIrheARuK0yINHFtF8JICX
vJLshaXzyScAn4a3DdUOjjRfCSCt92X7vnmzyC8EJze/oo8hNO/yhcAb1uDu
/dKJ/EK4cPDdEc1Z88gvBO0bd0s4Xj7kF8LirOtG9jW+5BcC4v1ldnmLyW8N
du+z97UbepDfGoKsvfsfFdqz+Q1etyRG5dWw+d0aZt+ve7gozpPepzXMKevZ
nrKR9k+nNVi8vqx8K2L7UQTb/o6dXaDnRPOTCEof3RQ//TiezZ+g9BTFSM6x
+VEEL61uDsz3WcrmV+hc+L3mtTkBbL6F3jnSk4uqgtj8C+36k37RWOjP5mNQ
TOva89B3MZufQXGv4a19sTObr6HIb9G6+9PH0/rFMGvuTxnJJc60fjGcjpK0
9ZR70volEDTXofuOjS+tXwI2R1ZrCFz8KV4lENayofTMOJoHUyRg0OaRX+C+
gvwS+JwbwOGeWEV+CQR3uW/gtYWSXwplLS0u+S8o3/ClsIpX4PG4YyX5pdD5
QWPlnp0B5JdCcaRThuUdH/JL4c25nKL62ZRPO6Uwo6Ri/SyuB/ltwM1qb3X9
OWfy28C03CG98mAH9v0FWi7/ei1PU499n4Fm/PmY48CrGfT9BjbZ7XXQj6V5
vtMGbISfH90+/2TG/wB8V6l1
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12HlczdkbB/AbUZb2RZt003rbu7duMrqPytJCi4rSriTteylNQiaRYqRI
hmRJJUWY6D5RBjPWcZF4WSIlNFkGGeb3M55z/+l1X9/399O553zP95zncCOT
fKPHcDicaVIczre//t8+EiE+3LxzNDt5kuhI/bePEI/PWBLBU7ITc759CoQo
5Vk0+YW0q/g/7y/EFKN6mfYSZ/F/nifEmfncmhOObt89R4hKpXoHH6p5f/cS
e+zuqz4SdzLgu6+3x+kTYnI81QMo3x4jsvOMAg76Ur49qvhdzH/AI8+zx7pC
/plz+xdTvj027yg9ZaXE8u3waMiFrrtPFlG+HcZxduXqeoRQvh2G6Oqfe2cR
Rvl2eCFz1cW6Z2GUb4frrboOnOVHUL4dctwcOgrjIyhfgL2bLl5RcyFfL0DT
qbMsNROpPQUChFmnavkf/ShfgBufHN3yuH0x5QtQ8tDM5YQba78At0dGzG0t
mkf5fOyvdCyu32lO+XyMGhq7ddGC2aLv+Xy8OVD14Km0j+h7Ph+TLC1/lV0S
9H28eHxMl8ssCCoK+e45fMyaPlwZ3xD13UtsUeJ95qbf8xgaX1vsivijqvlT
IuXb4u+Jtif68zIo3xZ95phEaE7PonxbXNx3YE6zXAbl26LgYbmpgmsK5dug
tK3B1u2H4ynfBjX8i21fDMdQvg1WZJQ9vRi4gvJtcEjNo2ZRSzTl26BS/WKF
qV5hlG+DJY93pE60CqJ8a1y/dpySQ4CA8q1x1EhiGbPOk/rfGntl9RUb5Wi8
/K1xqfBz+5vKZdT/1jh1ftzVY93R1P/WWOS54dqTxBjqbys8GnykYs2rSLrf
CrdurZvYabuMvBXmpP9gVXtnJXlLbDulI3K5kkjeEg+MbNQ3Wx9P3hI3NxXZ
z7i4grwFDivk7q65FU3eAjmPO3t4XPa8WeABmZmyodv9yZtjtYC7amKVNXlz
vFS42qMyciH1jzkq8L9sjE4Jp/4ww61/pYfsa4uh/jXDpKBHsjJOyeTN0CJi
xLHZPJU8DwdadVe+up5KnofTqh6tTpFLI8/Dg9vGJpcqJJM3xYSUt0+mxCaR
N8VdN2PkzZbT88MxRbX7ttcPzGTPlwmef10deT8nmrwJai+eNKRTTc8DxwRP
fq7dM66Qxr/eGANGo21Vg0LIG2Nb7iWv2SsWkTfGhWtGtMqC/MgboZ+U69Hm
XC/yRvjxc0BSRbUJeSMMl6s8atWgSd4Qux0wVt7XgbwhDu1eF9twneYXxxAP
jeiEbQjyJW+A0+ZmB2e99yVvgPMqvYOtHFh7DHBVRaDBv/b+5Kdjg+TNm0mm
bH5Ox4CBIS/t5S7kp6PToav7jmTT+7JeH1WEnVWeDex51cfKWsMxXZBGz4M+
7umZeOWe82ryXAzpLm16FlhInosNV6sE9nvXk+fidpe7Ku8u/kReD6WdepV7
3hST//93TnZmWUcJeT1Mu9GeUZy8ia5PQ36QjPbO+k10vy7u7hTrGhzeRF4X
tyRcK7m1dzP5qThROi97d9lm8jqo0niixceqjLwO1mzm7z99t5y8NqpX9/99
K+Nn8loYWsB/lNe6nbwWrucEfbjvuoO8JmZrtEdM+nUHeQ1skZrX2L2tirwG
rnO9tGzJhV3kp+CGu9zBwG27yatjfovL6teyv5BXx/3JhitDi/aSV8Pe2H65
L8n7yKviaskJ1YU1teRVsWTuWzcDpTryKqg16qGyN/0AeWXMfaG8zPz0IfLK
uNbr3+BzEUfIK2H71DuWO1SayCvi8TFa6+SDmskrYsvL2l90uo7RdXn0ML19
WG5+K90vh5WfhifYSp0gPxm1H3tpJt1rIz8RP5Yee6V59xT5Cfjz8ppUc8N2
8rJYWOW9rHfOWfLj8UXqw4cZJmLy43Bg+42Koj1IXhqbSwbf5WzpJD8GD6kZ
vTRaco68FEbpqflleZ8nz8HJrj83flXuoutfxFOb/3lYXtpF94+KjxRrXx68
2UX+o9hYISLb8zzz78XCk3+4SbYw/0Y8MOH+3DwF5v8Sl3g/Hamed56uvxAX
hv5ZEf28k+5/Jn51v/KY1CMx+UfiE/ETvAM0f6XrEvGaa0nujeYt9L1bvKeF
29K7tIa1n6Psnd/+7t0Omq/dohJ1+/6dGwrpu0Rkxwne9dOCcJYveuUzU+EO
bw37/6KvcT252blsvr0Q9Uf2NfufLWbtF6kpNvgklm9gv080uNQss8xkHfv9
oqZorZa6nELWP6JPl+s3+ez7kfWfKDq8xMe9O4f1rygm+Z+6x/eyWPth/afJ
6SldaWx84MrJdWkfXiez8YPjDc/3546uYOML09KaO2TCA9n4w6W2jbz917TZ
8wEZb3W+cu9Y0vtKFqb/XuZk7OFO/TEB2up4dpKWKHrfTQT/6EdOWztTyU+G
8AepYYplWeTloPDQyODLzGzy8rCh0WJln1QWeUUw7r+2a8t5th4pwlG4LH4W
y/YfSjAw/OTpYHw6eWVwjYxIvjc/hbwyFIXLburriCWvAp8Er5s+n4snrwqH
B693WPqy9UsVtjdlrd4Sx9Y7NYjXihye4sHy1SFlzemZP0plkFeH4xEjrulJ
rD1TQNZEpOIZwrwGrB9+0XfJL528BgjbSuWk+zLJa0JZZ+hxdbUc8lrgNCUh
ve056w8t6FxV+mL0dDZ5bdiiVq5QN8TWXx240Ti17XFTGnkdmFzxrja/PYH8
VAg/6LCtzsyXvC44NuSJPlz3JK8Lhxw9zPNnhZKfBprgdybxzDLyeqCs+PQD
91IyXdeDiADd63FLWfv04HBK3AafXT+S58KW/tZ5H8ew+cGFG5le0ZmlheS5
IOh/MvT47Rry+jC5/KNPb2sBeX1wGUovUZxUQF4fzj6/0KJ/Op+tj8DTF7Q0
9q9m6yc4qS602h+Wx9ZXmB0dF3iKm8vWX3gj36QqSE5j6zPc/3r4XXzZcrZ+
Q2dBjKhjbDBb30F2tM/huO1Stv5DTcprzye3FrD9Aaj0BOnpTHOm+WIE4sry
f7Lvsv2gEfzmPD7vTFQizRcjcDpt7hqmn0HeGNKejriNd11F3hjuiU/1qFfl
kjeGCe6Zwe722eRNILp1vsZuh1TyJjAl9NntmN/Y/tIEXprXSirmsf2nKXAl
+xUuylC9428KD55GXak2MiRvCsU+ga4nexzZ/g0qjg2PnJO2J88DZ+P4PRs7
5pPnQdHsl+LbZr6UbwbjE5Ja7vfokzeDzi+9V2787sz2l9DyGP1/KBey/Se8
fjM25bUX20+Zg6vDHtkJyo7kzaFyxr1h7bsCtr8Fr3sHksZbz2b7X8iZgfGB
H3TIW8C+bZcKLg07sv0zeMb9ix83svZYgrSoH6tusvZYQrGFW8+1XXOpPVYw
Jmd5SPNaN2qPFUQNLpDn6S8ibwUbhv7c9vdVNl+sgT/F3oh3hOYLzxrkM26F
rAmZQfdbQ0XSPhn/IzOofrGG6b0RKu/t5rP6A4TFBjsWB85k9QlI/jmVefmq
B6tf4O0y7quZfUtZfQMD74/l7lRn+3MbEDU6n3UfSmL1EXyUn7XiXjd7H9qA
Yo57/+HKNFZfQcGeTwv+NWHvH1twb+kLa5udxuoz8ApVGpBfyOazLTh3lAxI
q8ay+g4qVa3VDt8OY/Uf9BwPHhuzx4XVh5AmcPC1UWTPPx+c9+Vft7Fj9Ssf
pGMvRITfiqLx4EPNto6vLsqJVH/xQVPm7ciOhFRWv8LaalFPlySN1bdgIDQ0
L+GksPoXZofnNZefT2L1MbwP1l6svDCB1c9wYpNo57ibCay+hr+iFmrcX5TE
6m9wLtz/frJbAqvPwShZ5tlgTSyr36G71j7XNHwFq+/hulO6/LJRtt+2A70E
o9aBv5ew8wFouOOSsc1/CTs/AE8bSY/9V392vgDuY9Prll/2Y+cP0FTtOPv1
rUXsfAKKP2fnpHuz9dUe2mpa3qfcDWXnGyA2NB0dMyOcnX+AheDa+hDXcHY+
AjHRS79qJEax8xNwee+96tacaHa+AgoZa0PdXNj7SAg/fFGZK8ln7RfC8iyX
5ScPelG+ECIPWm590OpG+UJoaJ03Y+cTJ/H/APqqeH8=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHs8VGsXxyeRLlQuORGFocFgzBiGOqdZKSqUu5xEpUguqVSSvDGUdCGl
00nqCKmE7heJWQhvd5MUKaWoU53kdDlFb3rrtJ72P/PZn+e7f5+1n1nP2uu3
jEJivEOVOBzOuAEczrdfv29XswR/vzJZhfeiu+po8bdLgk+mFbuIuYZyzrcr
6ev98QtvfCdpyP/l/ST4zkAkOJwskP7LW0gwJUZv4IwbE6T/8hwJ5oc07DEZ
OEX6Xd8eb2649vp2pvt3vtgeKyoDduic9fjOJ9njG7utZor9Ht95P3uMa8ud
dTnCi/Tt8W7d+tr4PF/St8e1ZbfUXTrmkr4d/mbevzUrKZj07VD0mBNSej+E
9O2QU5L3+/PWBaRvhxty+9/WVy0kfTsM+tPuly8XgkjfDh3KCkpnlgaQvhjj
7h+WvbPzJ30x/j3vJDomziJ9MeZfUzcK3OFE+mI8v4IbadZgJv+uL8ZD2skZ
xeu8vu8nR4xtcX9otBx0/76fzbaYXnFv8bVYj+98sS1qNebFT3jlTftvi6vf
2gsdLfxo/21RdbNL1bXuYNK3xY4n+1K8cRHp22Lvg82dx5oiSF+ED0fyIp+U
RZG+CMumqqQ4Ji0mfREe557MdJ4XSvoi3CYcqWuhvpj0RfjJodTWOSeU9EXY
a60XMGNJGOkLcdUeq6nCMWGkL0TF3vyb6/2ITxJiQHausVPxItIX4urA5hbZ
FqYvRFnLjTtlVyJIX4hW9s5fXr6NJn0bjJ5XUnT1t2jSt8G7J1bOWfU2hvRt
0ODGhGVXkmJI3wavu+8PPv3PMtK3wcoWA8HGvOWkb4NbLcwzS4uZngBLphd7
BiN7fwFaHy/udxw7j3gBeniWXK6V/kq8NeauK9t9tciLeGu0K6riDL2kT/lj
jd1m8sjYRBHlixV2uPbM2HrBlfLDCj1tPlkr9XkTb4WC7qd7NUJYflmi5I8Z
byQ5PsRbYoxl8ujS6tnEW+IDl6V8lWs+xPNxxnhFUnKsP/F8NJ168FfdAGfi
+eioDZIxDwZQ/BaYsLWtvkLhTfFbIEezsFljINt/CzxibeUaX76CeHPsDj3V
MuXRGuLN8ZMP/3OrShLx5jh9e3XK8QgZ8WZ4uUmnsY2bSrwZBsoz2rQglXgz
dNsjeb5/YgrxPLQdZz+uamYK8Tw8fSLcILsuhXgeJo6fIp6fxfjxaP1UGHax
TEb8eDRMu3dlWRyLZzzOih/wyu3teuJNket7cWC5VSLxpuhW0mrZ9WEd8aZ4
sVJPV10zkXgT1P+jdrfmhATiTVCR6u4tS2S8CfoKC6bMrVtDPBdzju49MieB
7Q8X+4OafpYPiieei4quB85FZfHEG6OvzgVvsFxLvDHma/9pxgfGG+OQPaoP
HARxxBvh2Zl35q4ftYp4I3RM8Z4clxFLvBGav9bdvSZlJfGGWPkwaKcwNZ54
Q/x0q2Vd6Sm2P4bovkKLV/0P279x2HZXXNgayvZ3LOqER32paWD/11j89FGn
eqBsI/EGKLbgqYxsTiNeH3P7P99WK0wjXh8bClQzkianEz8GI/c5W/0nYSvx
eijXai3dW7udeD2sF2RzroXuIF4Xp3QmqNcfyCZ+NPpGRJVutNhN/GgcddDn
XsziHOJ/wv7z1wMLefuI18E4fd/KdJ884nUwUT7xoLFtPvGjMDFxnI+DTSHx
2tjmu5H7P9si4rVx95SkhRVOh4nXwjWqXm8vJxUTr4kjJq7/aeqxUuI1UXz5
XdYrw+PEayBPdM5haMIJ4kditpad4uyIU8SPRKflhy7Nij5N68PR+dzGbQdL
z9Dz6lgYYu+z/MNZ4tUwYknCnXvu54kfirus2t833y4nfgge6t3vuNK1gvjB
qHS/dtvS2ovED8J8A4uZdq5VxKvgxvJh3G4tJF4Z/Xtlba9UqolXwopAjyrX
h9XED8D+pSa7xufUEM/B/rqmxyX2tbT+Wb4cZx4bHFxLz/fJq/PGp3oKaon/
KA880/rwy/Ma4t/L887/Wa8dXUP8G3laSMHHCxXVxPfId75tynonQ1p/IY/I
zoqSnq+k57vk/wl7vLjOq5z4R3J/Jdnsk2qnaL1ZvoOX3vlQpYju6+TKuWPV
xZns+8XhTPdqj2/Yc5jqZZ3UyNN2+vLSHLpvljYqZtq7paVQ/XwkzSvs3fv5
Cvt+dUnXBrm5uDzZwOKTNrXnnmpan8nil14+mRImyc5i7ycNUX0k8orJYu8v
TW4YGVxVk8X2Rxq5ztrsQC3j+6TVw4sK5JbsPHyWOt6Rl5l92MHihyVqdRyn
bqY3AGYOuOqyVpk9rwQTW2OK3hSz86UMSmHcn+3DM9n/Dz1P96ovkmew/IDO
Gm7CjNgMlj9w0tu3473BdpZf0Nr4rNt0WSbLP7h2yuLv4YOZvhqkye4WS40y
WP5C6lzB5sgmdt6Hw6SovusfS7ax/AcfE4XVgYnb2fmAqyf02pxE7H00ICbe
amRdENsfTfit95Zw8+Qd7PyBfJMo4m4c47XA7tGwKLMhLB5tiNKyWaulxt5P
GwY55j058HQLO//Q/NDGY2V5OqsPYKAoexV3kdUzHei8NTn22KoNrL6Af3NY
fPI8Vg9HQ4CiZO99nWRWn+DmztC6rtOsnutCU7vXcj5vFatv0DMgs0xJm/Ub
ejCp3rESlcJYfYTBnOcZPfIgVj/hQcuy/ND5Aay+gjxB0DdjqA+rv7BNNfrY
zjonVp9B2UVzUbPYkdVvqOt0sW5PBVbf4W5B+ftNu4xZ/YemI+LQ5DOsXzCE
yzFR3pp+i6mfMIQctUfvVTOWUf4bwdgjv8TzZq8m3gjCGwx9osPWEG8Eum6D
/l7ft4p4YziwydBf+dwK4o0har5HhigxinhjyJz6tFA5fT7xXLC77TnvZron
8Vzw3Rk5XrVDj/iv604XtzvJF7DvL5ycHTtGEMz6PRP4IFAp1B6ymn2/YVRU
U3l+eiL7vkPbOKyYpkhm338IMHghe+PM+hVT2OLT+GCqQsb6Bwg/p5rSV/mj
v4BpvSnKL1t+9B8gEZdekA390Z9AdN3d6+HtjOfB8+OOue/KmD4POPVfzqZ0
Mn0zaNJ+dKVjC+t3zGBAvefxqmtM3wy6XnQ4RbiyfDMH14W3TR26GG8Oabv7
nrilM94cpp3p++I9m8VjAVU8fbs1fiweC+j552j/eY0k1v+BcmxDSsmCtcTz
4Wpz9K7XI2KJ50PSfM0FnWksX/mgHGp9s8QvnHhLOHPkUuXIgaxftgSezCZ1
Y+oC4i1hcP0eA8G2YOKtgNtwq+TJCJaPVpCYPuf66kZv1h/Dllql4c0BzN9Z
Q1H8dN+9Etb/WoMQauXNz5h/tIbT+qZqGtXuxAtg+uGdu+LdWP4IwLNgpTxm
uhvxAuixCuxcvGwq8TbA9+N7rbwCzB/A3MlbcvwvBTD/AKs29D7TrfZn/gJc
NH9pspk1i/kPUDwOkGSdH8j8CUwdZuN5d4uY9IXQbVKn+rKAR/5SCHUBT38/
beFI8QlBsZT/s7OSA/lHIcS6NLRz/5lG8Qoh8r+bTNX6vMh/fr03+fjXsAob
0hdBkcrOCWsfTmH+DAyU183nNboz/wZ9m2vWqnjPYv4OlAZekA6tZP5SBDGK
4XkyiwDmD+FYkcu+WznzmX+EfrCasu3lD38Jvh4R805YeDL/CbmrNy3c4ePA
/CkMWjCR72FF84Dir+vc6tDTi4Dit4X2fS3KittzKH4xjG1X8hy9OpT2RwzG
+RN6/F4vYf4ZBuW2Di9cFMn8NVw6UDOq347VDzH4l703UcuOYf4cAj1UEgNF
K5h/B4neqQnLPVYwfw9LioY8HZ3G6tHXe2n8YH7ucjYfALegooeVHcvY/ADi
+Mo5rkkRbL4ASVv5mz8kh7P5AwivpMxWn7uEzSfgRV1Y64nXYWx+AV36wqCj
Qxex+QZ0HI3OxmcL2PwDKj8Mi1DXYPMLe5hU+5fhplQ/Nj+BmMx1jYnrfNh8
Bd5V5b/t3sXmIxK4OeeGR1cG+bskCXi35ftPKnEifQmEG2BEQMxk0pdA1lj3
Q+3ultL/A5tyktQ=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHk81dkbxxHGlBaRLGXJvt+Nq8h9KkmmpFBIKYUuCUWIsjUopRQSk6SV
aC9L6j5NlkQL0qYp1U9JJfMrpYb8fk3P+f7j5XXe533P9yzP+dyr6x+2KEBG
SkpKW1pK6sdfzx9PuxBdnbo00nSURCdLfzxC5Nq7mAYqa0mkfjyJQky2eHRq
wIUn+Zf3FKKW7iuDkjaQ/MubCnHv17zwFy2OP3kpIWpmczK0cl1/8u02GLbd
OLQo2fMnX2qDsuV+Ugku3uS3wflvlZYs8VhBfhvUHvK+GBW+ivw2+Om+6rzd
qQHkt8GM7U8rT/gHkd8aLwZFLUHXYPJb41L5Urn1G0PJb42xufWlM9rDyW+N
/3X5O9PpTAT5rTFHGDV5YNwG8luj+Lyw5KB9JPkFqJsdMWO9RhT5BRi9x8Up
vn4j+QUYdn5Q92pEDPkFWH7jQjlnYBP5BZjfF7/M91YC+QUYZdKQ9MeqRPLz
8X3sF3ej14nk56OMYJPXJd9k8vOxTXXa4rB9KeTn40SH2GYPl9/Jz0e+jpvV
uoo08vOxTzBPhp+YTn4eRre9rJXhbCM/DxNdzXpbfLaRn4euY569ODm8jfw8
9No7S1mgnkF+Hk5Xv2f/Xm4H+Xm4aGWY1pPMHeTnYtthXsIJox3k5+I4sfO0
6JUZ5Odidp3SSMV328nPxddphcf/uLyd/FxUEz86Ef9mO/m5ODQ5s9yzJIP8
HMz/pMo9/oHGU8rB3X7Lplz9yvwcVLX/p3ZhFI3Hk4PZ5ZxLLWt2kp+D6VM5
ZQ79O8nPwb+KH8mOH59JPitsuznWulMvk/pbYaTCHKmh4EzirbB7dEfDMxvG
W+Lotf1/xzzfSbwlJgXPyD+TxfyWuNZmjMaN/fT5pRbo/+Hg5o0ujLfAy3U7
zcd6M94CW6bNfSSuZbw5digNV1cNsfGYY3+SX0ebym7izdH3y23Vsm27iTdD
8Yn9TcYJu4k3wwXn3VMDDbKIN8Mor9DvwXFZxJuiQ/qsYMesLOJNsftWrVrN
DcabYqm33jP584w3QXUruSWnuIw3wdH7jK7vO8bGY4KaXZmHhOt2EW+MF0fw
sjzs2fsa493WxvLVXWx9jdHj+2thYFg68Ua45fYh3tGEVOKNkCNO6lBZsZV4
I1QPyS47J5VMvCE2Tj/bML82gXhDbFYInhRdvYV4Q8ztWFY1rWIL8QYY97x4
5aDVZuINcGDboFjr8ybiDdBR3Kca7x9DvD467VC4Obgginh9LFgtfe/KxXDi
9dFZyve145Mg4vXQ1+jzMe5pVr/0sOxr1A3ptR7E6+GlpofDp7pmED8FCx+M
+jt4n0j0k5+CgYNxLfsDvEU/+SloOBy5c2tNANVjXbRrHmFwVi6MeF0UfmrT
v9i1nnhdPKAGUp490cTr4NyOdy/fHtlMvA62h4otZFOSiNfBphjLkDmSZGrX
xuM5TSPXrtpK/bXQyrWqe82bVOK1MNimSCfKcxvxk9Ev1CXui8pO4ifhQKev
r8boLOIn4Wa3KfX7vfYSr4lhjRWHSh7mEK+BErfupwVv8ojXwP1/6uRovygg
Xh0X2HK1a0YXEa+GFvHFC+rDiolXQ/Se1dudcYT4iejnsLu+NecY8aroHFE4
4HjiBPGq+H62ptZOuZPET0Dxt951j6PLiVdBi2tO6xq/nyZeBdvHajeoOJ8l
Xhnrw/v3LL1yjvjxGO/tMcln9gXix2NxYU+l/fOLxCuh/3ufMQ2JFcSPw5Um
p/OPmlcRPw5LrZ91Hb9fTe1jMCm3461XRg31H40OHu/Ozll6lXhFrNLKMNVQ
ROJHYl+MPN/xDRL/K664oroo4M414hXw5ImY7rzLfxIvj7IjdQKcyq8TL4cL
/ZR1gipriZdFvvLmN8vv1BEvg3vOBD1x7KknXhqnf5lqeVLlBvFSuOTgasWH
8xupfUhidUcn0uXgTer/TdJ4+fMpe5lm4gckZ/LSOj/F3CK+XyK7Sr/58/fb
xP9XcsHywpFe97vE90nGPTgiG85rofYeif+zmvsS7Vbq3yXxV6/OqjRsI75T
krd3xeLC3+5Re7tkVm9T0cdd7fR/nUTp4z+vBf332filesS9QbOTH7J2UbG8
aL7rZMa3i7jni3Ka3VuZXzTwUKYlVv4u+3wR74rXYZ5TMxufKMrM0GnAspGN
X5RU1uv7uLyevZ+oWs4gyWhXLXt/0WTpu/mvq/9k8yPq/XY1a4TeNTZ/oo+z
V9y/GS1h8yt6sFfz85qeGjZ+KNSH7kpJNVsfiH1xw3z680q2fqD8NAX+tqhg
6wtp7jX5SwvZ/pSDzlEpqbttL7D9AeLSp5rVw+fY/oFxKimj4tvY/v8VlIML
4h+dO8P2H6Rm5J+V3sTOiyL4FqTyzY+Us/0LknnyKr7yZWx/w2iZfsWcyFK2
/4Fjlrs6XbeEnQ/IS3SNOf3tODs/MD08v5FbdYydL3Cb/HRC5oGj7PwBr6TU
V3cnO//K8ELX57eq1YfZ+QVj7wSjL6Jidr5hYuf0c9FOh9j5hzqpT1v+M6uI
1QdYsrG03kSpkNUPsDcyDDFLYfVoIow37mxQvcLqlRpkKxwQT1DKZfUJ9mhr
rt9kxuqdOsxcZ7GuQpPVQw3Itdihn3FjF6t/4FRnsLDxVSarj3DLtyPg94FM
Vj+hze5skRo3k9VXONn9JOfLiR2s/kK1sm2LfmkGq8/w7IGrXYVsBqvfULlV
utllDKvX2sCLzLtyo5XVcx0YM5Rv9ce+rex+gMM+s9rVHZLZ/QGNE1KaXnsk
svsFepQeJRueZveJLsy4o3Bd3yeO3U+Qo3H8cMOEGHZ/geB5w+XO8ih2v0FY
TfoW9zWRxE8BmU+KsgFh7P7SAz3toYedbeuJ1wMwiQ11C9lAvB70yqquax0O
I14fnEOvTRqCIOL14YHVvSzLhd7E60Ol7SphXaUN8QZQWPVyjpe2iN3/kHiU
0z/nkBvLB6DwsvB9/yJPlh/gct9ZidXWpSxfQMNfR514dT4sf0BYap9f1K3l
LJ8At+/rk3CL5Sy/wO+aH4087PxYvoEZNactnteuZvkHDv5SvTQ0ag3LR1D7
tER3ToWY5ScYu/d05PNxYSxfQdvwJsuBXez7iwn8enNiiK1qBMtngLlV3Bfr
GW8Kl+Nqh7eNWsvyHTxbMsqt+Hwgy39QscTYT86Njd8Myq4Ab+Rbb5YfwSE/
Mzjfhc2PGXwbqNGb5OjM8idMCNxwbNTGaSyfQl9ali1nqgLLr/A5/Ivx97vG
LN+CW/n29jWLdWm9LCB2cT3XUGUWrZcFFKb6w+Sr82m9LCEl+PWD9BZX4i3B
67Rdfel2d+It4evgPyEPUlhesgLjhLHB3OSlxFuBbdSisSFRK4i3Al+t+HSn
Pn/iOfA9m1so/rZSRN8PoFj5wOxqhwDqzwF1s4qm4IuBP/lEDvi9uh0pCBWT
jwMtErXxbQbin3w7BxJr7Dp/8wwlPxcuJcmnxb4MIz8XEvofncx4H05+LgQV
FL5ImRtBfi7EDarPXDQUQX4uzCs1r311IIL8XLg2c6KplwHxUjxoCxrcNHXx
evLz4Eyy74Fu20jy88B6yO72tLiN5OfBkKSx63hBDPl5cLRVOfB5SCz5eXBB
1HU3MDiO/HyYOVWi++HyZvLzQXFyU0HCqATy82FLs3yRxWOqD4l88FnTMbzl
aiL5+TD3aKFmtnki+flgsKFphM31zeQXwBgrO3HeKqofpgIweSdUKMug8XgK
wHGO7w63N1RPEgWglLfCvyxsI/kFcG6LiuPVoQ3kF0Bvh77i9Qo2P9bglp1r
OLqIzb81GFRPtQz0DyG/Nawf/0tloCSI/Nbg5Vw7ZbcJy9vW4Kxjb+b1eRX5
rWHx2dZBw2C2f2wg3zYlpSvVj/w2EGc1tjH4oBf5beCC8cxzMffcyW8DnDfn
00tV3MhvA0YmzdKbAueT//++Q3Ge1yLdyC8EB/9d1bM9FpJfCG4r6j40u7qT
XwgfFwFHaznzC+H4xB6Vxxqu7Pcb8NmlfmjZSDfyC6Ha1q4kbfMM0f8Asv9u
6A==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9240456908090224`*^9, {3.9245409357741623`*^9, 3.924540946046128*^9}, 
   3.924541498639913*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"f16351f8-4d62-4f28-9673-4d6ab0fcc001"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmumem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmumem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmumem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmumem7000", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmumem14000", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924045828169839*^9, 3.9240458705012336`*^9}, {
  3.9245414461899176`*^9, 3.924541477957698*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"b293260a-6668-4f07-8876-16ff4af27fe2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
QWZP34mZLQvE/wNib3tA
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
XUD2C4EzdnL7JE3qT5uFoFjN82jsniX5P3BchMo=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHk81ekXx68SKltEGFmzr/del8kY96RQ9i4iJUtTERVZspTEFFpIZZQw
RiqpUGmZKXMPKWUaMa0yNTRFoRjtiX71c57vP/d1X8/7+/me7/me53k+59EN
XydaMYHD4WhLcDhff/2/XnfscNmKXKnsIWXh8aqvlx2qNB57syhLQ8j5eqXb
YV1Snqdm8Jjj/3l/O3zd8WDOMSercd7UDrOENRHnneaM8xw7tOocWmUpP0c4
rm+Ll1P6M588mk/6tri300zzeiCQvi3WBvUM1vVyx3l/WxwYnbJG/4ke6dti
heX5bmlbA/G4vi1KzawwzX2nJB7XF+BPNWPL+lxUxeP6AtSVXFZ084XdOJ8u
wPbRFG2V7e7jvL8AbW3r6tYqLxznTQX4cUHptceHfEhfgCVP4MVl0TzSt8Ey
w9nOnfe9Sd8GH15Kj5TeupD0bdA2YLhwpakr6dugVlbhd0KOD+nboPYBj0dL
y/xI3wYrd8plFRXbkj4fZ7ZulTniY0n54ePS1Mr5wrdcyg8f2/wlg4K9RJQf
Pm5oOTvwQxKX8sPHGVnWZou4rqTPx9eKSotOeYaSPg+7a9PUNAdWU/w85Ic9
W+QREEXx83BRaWL/o8ooip+HZe850PNbLMXPw1Ufr0Qe5cWTPg/H/u21KHqc
SPpczBqpu3ircwPpc3FzCLT2VCeQPhfrxp5635faQPpcvCG/6U5DOvGmXAxB
Q9wevoH0uXjfWs0yLz6e9K3x/nBbxB9pFE+VNTa0/6ddFLuO9K2xOVj7h9lv
V5G+NSbc9k9UUokmfWvsGi3M77q4hvStUX3s8/zBjVGkZ4VKddmTjBQi6H4r
zFx/PiVmSjTxVqg+5/XsupT1xFuiV4pEwmvV9cRbYpWjq1lOKeWTY4kFj71z
sjRZvi1QeYu7XOEqpv/lv4NopxGsJt4Ct9nbDBs3rSTeHKdt54cfeLmceHPs
1/3j6v2aYOLN8a8E5Zoc8CPeDGP/1chUEM0n3gzbDc/4H0oNJN4M6yErpmZe
MPGmyP+5x9I8ZCXxpvjOd67MxkOxxJvimpD2UofQBOJN0OXDf27b9icTb4K6
Z3WvelZvId4E5UeyJdx9M4g3xrP1aaLzv28h3hjDBPdl5kmkEW+Mfe0XFg/J
JRNvhPsmR88SbWb6RuhSHawW/TaFeCO8HVD1SOd2EvGGuMorw7U9JJV4QzwR
fMU9VSWdeEMcmiupMty/hXgDFJuD5a+Zm4g3wAfq/FC3bRuJN0COc9uTvZZM
fxZGZF64NHZxNfGzUN7r5rv/VFYQPwtzygxc7TewfOpjwYI060nnaL756yNX
doJnjkYo8foY32PwoNQzjHg9LP/spXculuVfDyMq5jhdD2Hrjx5K6L8+pGbl
TuuBLpp9e3trx2AIzX9dvDb2ySWwKJLWW12conC8Am1jiddBrc6e8zeCIojX
QVGctPbzVF/idVAm6FOBTpQTPV8blRvn1yss8KD4tDBnwsVDn2ay+tHCPOV4
v7qd4cTPRI+rrvIftrB61USHY24+JV2LiNfEUIPvvQblpen53+Cue3/fkl9n
QfFp4P5lYRmL+2l95mjgfN3R5CYwIV4dZ5zSyZ/IdSBeDfcfiTKcPNWL4lfD
8r6wZK7NQopnBh7ME9bFX1pB8aiinpT3fj3X9aSvitlJC0vEQbRe+aug9sFl
hUHqKcRPR7myQK01xaw+p+MR7fB3UdGZxCvjjESFXwvOZBGvhGf3dfKeO+UR
r4S6P0s6BrvsI34ayq+u/9ZkyQHiFfHCXSmVit1lxCvi/SrTKWs4h2lcHuWK
cpKUSyvpfjm04Mjn9+w6Qbws7t0tcSJFWEv8FOxo3XXNds9p4idjTf5DlGuo
I14Gq6r/KenTOk+8FMYmhZ4+Ne034iehgmOtFR6tJ14Spy/Z5KB4BomfgO4v
Noo7KhuJl8Dwlj1z5//dRDwHd8XLq0vINtP4qFhltLJH6sM1uv+jGI9sm159
oIX492Kbx++8d/reIP6NOOpDW3jmtFbih8U5AT4a4iM3iR8Sv7F5n/LItY3G
+8THMiJveRu00f1PxR9bqy7wXFqJ7xKvm+JnXFJ+ncbviC0a/abd3NVA/6+I
zaqWJCW7lrP4OS+9SnY6a9dTvV0Rbp1ukKETeIr+3xHOHmjeZnXmF6q3LqGS
/+hO+4FMGn8qnHCpZMPb4k0sPqFd3vEe66u7WfzCp8bDzgclCtj7CfdE9V71
NviJvb9QXxAqLhgpYPkR5vRIf4wIKWT5Ez4Tz3W/mV3I8iuUXRf3+RvnIhY/
lGpmWAS7FbHvAyeOZa61l2f1NgHuvr4na3y5kH1fmCqzSfvyRPb8SbCvKvR9
2PF9rD5g7M/NOqd197L6gS6LZl5v+B5WX/BGVHpbNWIPqz+IGTySNtqyh9Un
xN1SuquQtpvVLzRHS94+uSSX1Td0THw2xJ2Wz+ofMHskoCWH6SnCvNyOkvOY
z+YP/DVsGJmnzHglqB56JF1rlM/mH1istXOYcTGXzU9wNDEMik7cweYvrP7z
mFuxWg6b3zBsWtryy8QsNv/BLa39qCg8g60PIM4bGf3AZ/uFKlTkJLnmdbP9
aAYUrbbuipgWR7waDGitCF2eHEq8GiioBJ0smOLA1i+Y3RJdsr7ch+pHAz71
Bpn85hnA1j9w+9HZwNTdja2PcMJvMRTYuxCvCeHnZVcd0w8jXhNMzB8rZTj6
ET8TNlcZNx+rdCNeCxpMUzvPFfoQrwXn+OkvcjJmEK8N4W2B051eGlP8OvDW
eHpjsL8FvZ8OBB1RrDze5Mv2D1gln9uqMhLB9hf43VvRWn8kge0/oD8Qcne5
bBrbn+Bd//1cdUEa8XowtVjNob4jlXg9eDPJA8SN8cTrgbjjrVzKEqavDz7C
okmHmxcTrw+lZ7he5h+Z39b/kn/vmu2GzC/NAg2PjamXe5ifnAXXG3WTWpcx
/zELJnrs6X3Zso3t77Cj1sHv6M0dbP+Hbu0V26RfsPo0AFPF7Cj7V2z+GkJg
+/q3P+qzejQEyTlF8pXarP4M4UiEuqrou1zmT6Bb3v1ivsd25l9gu33CiQ9R
25m/geuF7U2qk3OY/wG12soa85hs5o9AnFg23Pyc7S/G8Fp2m1bD3a3MX4FR
3Ifl2Z5sPzKBMYe9z/dXsvc1gYP31DfMcWf1bAr7K6oD2hSZ/zIF8QLN8swz
6cz/gYzrw3dNd5l/M4MrpY7Zr0o3M/8I7xOuJ0bIpDF/CVulBhI+diQx/wkF
pXGBGUos/+awwqQpVqI0hvlXsOtf+Ze4PIL5W6j/4aFujHoQ879QXHvyqctm
R+aPwY7ryHdKcmH+GdZZ199w6XRk/vrL969+cF2D+RNL6PPoN3D45MX8OXAv
aebPqPZg/h2aHzpvn6lmx/w9FMlUfRMs6cT8P2yau/RVUMwS1h/AyKTuh8kN
i1n/AFIne0RLdOxZfwFubTIXPu/wp/q1hpWec9sGD6+k/vbLeE9kX7pMLNUz
FwKxxdfXYT31Z1zwkRb4hr6Ko/rmwqVlSZnXAhKpv+OCyGzXfKWDSaTPhd1N
xrYmssmk/4VfvuzP+r+J5/CgPK94ZcjtGNLngWK/55Bndwzp8+CPRSMfUnfE
kz4P4rtXc9pfEV/Fg2d3GidkyYaRPg8cDhU8UKtdwPpHmGX/o/j5pnDKDx/m
tbdynxkxP8yHGNX4UbtK6qfS+eB5YXL5ymdrKd98qDj9fv3mFdGsv4U1ZZaW
VxeHs/4X7hxt0IhMC2D9MTyL2CBzPMSZ9c/gNnC8kdM1gfXXwOvdmBMc50Tx
20Ckmf/t3jJPit8GkrRs8i5cZeutAERzfy70rxRRfgRwL3LB2r33fCk/AjjX
wLfoGBZRfgSw6s6+g9/nBpK+ACQPbL03uGkJ6Qvgkvch9aX/sPXKFvYr53qV
dsSy8wn4N//9/udN7PvaAnfL91bPSxPY+Qb49e0Ym7o6gZ1/wCH9endXyTh2
PgLFn5WLR7bGsPMTEKnv5soHrWHnK9AVe+VwzdpI0reDIefI3/sGQ9n5DMgm
pYeh/kJ2fgMVRqbfXbV0JX07yNun0XL5uED4P6RKhj0=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw113k8lPsXwPFJkoSEECVEEWEGMymZk0JUlhuuLU1CRElkSSqlKBIaLdrs
ittCSJs5Wm5ps+dX3W7cut32RHUl6ffr53znHy+v5/18PPPMY17n6AZG/hIs
xeFwpozgcH7+9Pz56hDgzKduWfUqZpKK8p8vAd5fDz7KHiDh/HxtFWDcXQfO
RQUnyf+9pwDL/+m+fKPSfdjPEOAV8ZzXjc1Lhz1HgFvi5kp32/kN+w4+ZmmO
1L7iI6I+HyOaoxzafxdRn48Oh44qmX5eQX0+VjiO+zOOH0R9Ppre88zqt1tB
fT4uChhMNjHxp74Vlq+VvewZ7E19K2wIba0d4i6mvhU2yt8Ma9ztTH0rPHVi
vfHWo27Ut8K4WUpbteY5UN8KBeFrv4ywBepb4rHIElPltN764b4ltiibLvjz
ygzqW2JbY5NmerMj9S1RZfSH8lsr5lPfEi+evCVSfKNHfUv0ChzV439qlnC4
b4FPm0RRG0O/2g73LXBXgW/L0YVK1LfAQetZe5uM+dS3QItz6p7yZtLUt0Bf
/ad7LolmC4f7FphcYFzsfsyZ+jysSgo7P0uZJxzu8zBgt/juFg9d6vPQ+k9u
it+P+dTnYYtIlOkBHtTn4fh6G72l3gF0/TxchHF9feuC6P5wseBHomi/9Uq6
/1yMN7rAuTYpjPpclG19mzmlYQ31ufg2Y9Hsyr3R1OfipZ3lq9pi46nPxbzk
sB1F9xOob44DRjall1MTqG+O1rF5Q9lZcdQ3R9U5/c16Q9HUN0eZtGfFdnsj
qW+OQSu0r3WnraW+Obb7JG48EkfPV7kZasnJtF4qZ8+fGYZcbPqxXs+XvBk2
9NV5Dd31JW+KcrNu8c40sf8HU7xoZXGCN1GV7r8pBmysfBUcokf3eyZO1ksZ
OGarMvx5eM5E6TW6vlfe2lF/Jtp+kBJp8OZR3wTD9js54tQl1DfB8MuOqzds
8CNvggqqtW7TxoaRN8baO6k5KWFryRsjV22ri6njBvLGeHZreJL88jjyM/C5
Q3WgYWEc+Rn4NOZrnM+NRPIz0KplzLOqM+x+G2HuXa8TrR6J5I3w+7unDvfO
MW+EjVr79xxVSiRviEJ10bKDfhvIG6K83IDa4QeR5A2x+ohyD9dhLfnpGH/R
46STfRT56ZjTml4tFbKe/HTk/uaepl9Pz0v5NAz9d3p7Q9N68tOw8cqWtBc/
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
S3QMhf8FFKuY8A==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.924045873005314*^9, {3.924541473835922*^9, 3.9245414787536235`*^9}, 
   3.924542077670143*^9},ExpressionUUID->"64e7c126-6e28-47d1-a961-\
ffef7c042cbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmumem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmumem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmumem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmumem7000", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmumem14000", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d1dfb1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#a9ca7d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9250873684646034`*^9, 3.9250873979279566`*^9}},
 CellLabel->
  "In[390]:=",ExpressionUUID->"a7bf0a4f-16d9-4646-ae88-4a9d7fbcf758"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8lVsXB3B1uzRIpRBKOIbMw3GOpJyVJOEq3ShJmSPJLDLPc27F7Spp
0KBCGmiSsxS6DVQiRQoVddOE3gaveuta+z3/+Dyf57t/n3323o9nraPkHrDS
a6yIiMicMSIiP/86/Py0GmNcj+l2ZdvpwpMnfn6McYNkcFNoNl8g8vMTb4xS
AZ3pgSe5gn+9gzHum3Tl+aYbaoJ/vaYxvhtIzRTdYyD814sY4xHHQL7WUb5w
NJ+PhXFnKjKDLCifjxdiT6/ZLrlq1MfzsS+gZOsacedR78DHyqJ+l9DstaNe
k4/i1S7usud/p3w+1vseeb9r1krK52HISF2KAm8N5fMwMvpoodI1V8rn4UzF
lWO3ZHhSPg+D8ht0hoI8KZ+HDu4Jy67f86J8Hqo+b3SMCd5M+UaosX52xbXT
gZRvhH0LnqjdfhZK+UaY1eOz9qJPOOUb4figoKyHjuGUb4Stdi79p3LDKd8I
I8dmlVVLkG/l4pKA2TlHW4Ipn4s+l+wfceyDKZ+Lv5Ra9BbohFI+F5175ZaW
v2X5XHz5cW/I1VeRlM9FGe+AlBxOFOUb4qED87yFyvGUb4ixh60vykolUL4h
noz3cDZ0iad8Q1zdkHomeA95TUOM8bOfyHsRT/mGyJcwlyoXS6B8A/xLPkQh
dTiO8g1wqnFQvnt5NOUb4G9SblZ2Y7dRvgEeKgz6kpoVQfkGqAMKfcOXIyjf
AOsl8uusNoVRvj5uKz01+4xZEOXrI7ci1aXDchPl6+Mvn25El5S4Ub4+dn9p
67RNpvOgqY8ZJzMny8bYUL4+zrkXv2BGxXLK00Pz9zcdfxk0p/F6eOBmY8Sz
e1PJ66G6QXn6zfEPaka9LpZ/l3x3cLUyPQ+6OG6dk5yapt3o8yKiiwt7krnd
d1xHn48TOvhPwOeDGtY+5HVwErh7OBX4kdfB1Z5SqdXRAeS10X1xuvWijUHk
tbFl9lGna3aB5LXxmopp3AuNYPJauMk8WS2yIpy8FnZEjSwaCIgkr4VhMju7
es9uI6+Jpz5oeeeZxJHXxKZTeebfTePIa+LFRl5MJz+evAY+wglXg3PiyWvg
LcHgJv918eQ10Org/qac7ljyc/GbG++QyI1I8j+udSNWhEuFkZ+Ls0WD3EIl
Q8mr45XwsiST9mDy6phw1CnMvDuEvDruTPDKOPYqjLwa6jSUD916uJW8Go4J
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
WWlD+cZQrJ9WWHnORPA/5Ed/1Q==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
DFPaxz7r9DGU/A9Cv20m
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
p2SX
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hk4VtsXB3CiiZQQojLP4zsgDd5FKblcTRpQiYSUWUiDSMaQ3JIMGVJE
0XTR8C5zSUrum+rWraRuSZNSmm6/p5+1zz8ez/7sr332OY+z1tbwClrqM0pM
TExNXEzs10/XX5fICkH9rWaKjorgZMWvywrflZ690X5ZTyD264q1wpvT0r6m
zpoj+L93tcKzk4a2DBo6jHhDK8w0NK0yPuU84sWssDHDx0XGwHnEiyxx0dO4
jOGu3ynfEvNdph5+uHIp5VtiZZ3ugNW8VZRvibsP1z4bp+9G+ZaoN9qgcP2T
dZRvibuORu2u1fakfAv0zEq5Mu3uGsq3wN3tK3o6AtdQvgUe/b5WfMYZD8q3
wCrdzy6NW1i+BR5sSLxSfnsF5VugkdZCb6EyWz8fG3tVH84rnU/5fCyt+PmC
t9pSOJLPx4/XXpzh7VgmHMnnY1d9hluivZdwJJ+PHguO9hrK+Yx4MT5myX1W
8d3mP+JFPJSc97Vugav/iK/g4Y9h78f8/Rspn4cxJY8mdLj5UD4PL9ju9Dp3
2Jvyeajgse78Rg2Wz0PFtfbiZZosn4smTdUSk/wDKJ+LOi6DTmfGBFE+F5Wa
F8rM7AuhfC5WXiufqRAWTvlctBHeGdByiaJ8Ln4rCF3+XTqG8jnoeL8sXtx6
G+VzsNio96t32DbK5+CbUadz2oaiKJ+DbsmSWNISRfkcvP5RtW5POcvnYGQA
N1M+OIzyzTHi3thymZhgyjfHanS/6nhuA+Wb41GxSvfP7Wz/zbH7/c7Dlzrs
6Pmao+XAWe+Vr5bQ8zXHmvLQyc+urqXnaYbd5j+ruxR86P0ww7VdCUV1yRvJ
m+HE7LRQ6QZP8qbYr3ziUGDfGvKmGL/1dEmPJXs/TXFxdEtQ8M0N5E1wrFGY
ftGAP3kTdHHlqUvP30LeBA/q1h63mx1I3hgnOd+bmygdQt4Y874/3+ppH0Le
GPWsHQ+BXCh5I7zn86RVLyiUvBFWFgRnd+oHkTfCUYa1v2WVBZE3RF/NeWmZ
3EDyhjhgIaFXVuxH3hCv9Adj46xN5A1wbpjYItOSTeQN8KHpUMgbs0DyBjiq
Y67fzyMsXx9DoLCmJyicvD6KfNPiUgejyOtjxaHhKfdObSevh/G96WUCpVjy
ergmt/Hq/pI48npo3b5feP7LHvK6ePykUrrvsSTyuljbaJF4/ksqeV2U+zEg
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
8Q==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk81PkfwPGh0kW1OXLkGOMc18wYZuvXb+e9KdWWJbrDymRbojvJZg1y
J5V0qtWxkVRDaVMx75ROFdkxm42SqHSSLufv18/785t/PDw+z+/LZz488P5w
g1f6hmhyOBxzDQ7n68e5X18qCcpOeS6OtOIrTxR8fUkwYW39eBuryUrO15dc
gj8t1r+orp6m/J+fK8G9gyY22Gl4D3i+BHu1I4PGtfoNeI4Ei8PfPq69umDA
q9xxuKflspLoQOq7o1frTp6scQn13dGlui7zkSCE+u54OaLzp1zrn6nvjp29
jo8l0SHUd0eHGvWugA0y6rvhl4zMSsO0YOq7YeaMHTGmDcHUd8MRNgdEZ6rJ
z3XDuESYEzBURn03jEifWWRWKqO+G3INPbZX9bK+GIv5Z3033idfIMa1LR5L
q4bRfuRilOgUho/JY/sX484O9avEKcuoL8YFxWI5jxtOfTFCnMGEQd2h1HfF
jLMbFj54/Qv1XdFmWZQqbgZ5uSv6JRZ4PI5aSX1X7FWb+peLVlHfFbmBczRC
Raup74pqM+NnK18up74IXYylyvNX2fmI0Lcr/rKwair1Rej6z4Kc1wnTpQN9
ET63vXCnbHegdKAvQnXNc58zqUulA30Rhmsdaa7cHzbgVUJceMU0YWjfqgFf
IMQp5i39stPrB7xciD2vyyKHlG6kvhCfTslx6VoRQ30h7l1YWPlgg5z6Qgz5
eeHGbz7GUV+A+Zo8+/c3EqgvwAkjpl6ZpkikvgCvGH3sfZiTRH0Bao1+4z84
IJn6AvzRb4pp0/AU6gvweZ2mUL83lXou6HvtwrpacTo974K8ixtKD9alk3fB
A7L1UTWLt5B3RqfGdYV2fVvIO+O8voamTJ8M8s7Y2jeyJnxCBnknHMaJKmn5
7/qAd0KLsKCKnmTmnVBS+6Sqzp95R7w56P0hh0DWd8QUDa8L7W1sP444Sstz
6NtV6eQdcMWXA3uLjjDvgBpZRyMCIlnfAeNeOmu2CzLJ87Ht5eTqSept5Pm4
79CjxcEd28nz0clkUGfb7izy9tiZ0Ji/bUk2eXtcryPfwHu0i7w95m4L9X3z
dA95OzTabL9fPHw/eTsMt6vN0+nOIW+HcZvuV2bnHiRvi/O6QwLfmOSSt8XE
Ddfnv2rOJW+L9+77P+8/foi8DRbujjr3MPUweRs0mxB0RvvjYfI26Pi7Q8px
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
DSgXR87qmSum+VkCu+t7fEyLnaX/AfCXtOw=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8196078431372549, 0.8745098039215686, 0.6941176470588235], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6627450980392157, 0.792156862745098, 0.49019607843137253`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.54640522875817, 0.5830065359477125, 0.4627450980392157],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8196078431372549`", ",", "0.8745098039215686`", ",", 
                    "0.6941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8196078431372549, 0.8745098039215686, 
                    0.6941176470588235], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4418300653594771, 0.5281045751633987, 
                    0.32679738562091504`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6627450980392157`", ",", "0.792156862745098`", ",", 
                    "0.49019607843137253`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6627450980392157, 0.792156862745098, 
                    0.49019607843137253`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925087387087881*^9, 3.9250873983237457`*^9}},
 CellLabel->
  "Out[390]=",ExpressionUUID->"53ff02e4-89ad-4bee-a5a7-be77f6396888"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp7000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp14000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240459483853245`*^9, 3.9240459990021915`*^9}, {
   3.924046035802969*^9, 3.9240461077027435`*^9}, 3.924046138060027*^9, {
   3.9240461824236116`*^9, 3.924046195863611*^9}, {3.9245431196783357`*^9, 
   3.9245431296252165`*^9}, {3.9245431776904573`*^9, 3.9245432113109913`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"e883bcb1-708b-42b1-b5d6-cba5d0d95515"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.3754249248663544`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3754249248663544`]& ,
             TagBoxNote -> "1.3754249248663544"], 
           StyleBox["1.3754249248663544`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3754249248663544`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.4195088200287747`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4195088200287747`]& ,
             TagBoxNote -> "1.4195088200287747"], 
           StyleBox["1.4195088200287747`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4195088200287747`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.4761464611549466`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4761464611549466`]& ,
             TagBoxNote -> "1.4761464611549466"], 
           StyleBox["1.4761464611549466`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4761464611549466`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5284098864727302`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5284098864727302`]& ,
             TagBoxNote -> "1.5284098864727302"], 
           StyleBox["1.5284098864727302`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5284098864727302`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6212523192028385`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6212523192028385`]& ,
             TagBoxNote -> "1.6212523192028385"], 
           StyleBox["1.6212523192028385`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6212523192028385`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                1.3768044538114086`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3768044538114086`]& ,
             TagBoxNote -> "1.3768044538114086"], 
           StyleBox["1.3768044538114086`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3768044538114086`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                0.48634985399372604`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.48634985399372604`]& , TagBoxNote -> 
            "0.48634985399372604"], 
           StyleBox["0.48634985399372604`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.48634985399372604`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240461127844086`*^9, 3.9240461390249124`*^9}, {
   3.924046184434868*^9, 3.924046196636445*^9}, 3.924543243045043*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"0fc916b5-84e4-4fff-b8f8-325adbe9658a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp10", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp50", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp90", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp99", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#d0deaf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b1ce87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8dbe5f\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240462785669413`*^9, 3.924046302999843*^9}, {
  3.924543297866275*^9, 
  3.9245433331754184`*^9}},ExpressionUUID->"e35a4c4e-8e12-4e25-91d7-\
b548bda568ae"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8156862745098039, 0.8705882352941177, 0.6862745098039216]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.6941176470588235, 0.807843137254902, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.3740726628390092`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3740726628390092`]& ,
             TagBoxNote -> "1.3740726628390092"], 
           StyleBox["1.3740726628390092`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3740726628390092`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.4210550733680185`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4210550733680185`]& ,
             TagBoxNote -> "1.4210550733680185"], 
           StyleBox["1.4210550733680185`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4210550733680185`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.5030810645135004`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5030810645135004`]& ,
             TagBoxNote -> "1.5030810645135004"], 
           StyleBox["1.5030810645135004`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5030810645135004`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5473395521780144`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5473395521780144`]& ,
             TagBoxNote -> "1.5473395521780144"], 
           StyleBox["1.5473395521780144`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5473395521780144`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6265967413109959`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6265967413109959`]& ,
             TagBoxNote -> "1.6265967413109959"], 
           StyleBox["1.6265967413109959`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6265967413109959`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.5803921568627451, 
                    0.4575163398692811], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.8705882352941177`", ",", 
                    "0.6862745098039216`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4627450980392157, 0.5385620915032681, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6941176470588235`", ",", "0.807843137254902`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3686274509803922, 0.49673202614379086`, 
                    0.24836601307189543`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5529411764705883`", ",", "0.7450980392156863`", ",", 
                    "0.37254901960784315`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240463066198945`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"d18d7f30-31a2-4a3f-8685-4061cc61a0f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp7000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmutyp14000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite Titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dfe7c5\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c3d79d\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a1c774\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7ab74c\>\"", "]"}], ",", "\n", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#56903a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#457c31\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#366829\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924046338549806*^9, 3.924046375091688*^9}, {
  3.9240509912975893`*^9, 3.924050998026429*^9}, {3.9245433436540537`*^9, 
  3.924543394728983*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"d4eb478f-c01a-49a9-9b2b-935f2656b441"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.8745098039215686, 0.9058823529411765, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.7647058823529411, 0.8431372549019608, 0.615686274509804]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.5460321258973404`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5460321258973404`]& ,
             TagBoxNote -> "1.5460321258973404"], 
           StyleBox["1.5460321258973404`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5460321258973404`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.6313725490196078, 0.7803921568627451, 0.4549019607843137]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.6335384275344236`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6335384275344236`]& ,
             TagBoxNote -> "1.6335384275344236"], 
           StyleBox["1.6335384275344236`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6335384275344236`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.47843137254901963`, 0.7176470588235294, 0.2980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.7309421350798235`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7309421350798235`]& ,
             TagBoxNote -> "1.7309421350798235"], 
           StyleBox["1.7309421350798235`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7309421350798235`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.33725490196078434`, 0.5647058823529412, 0.22745098039215686`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.8055110047164753`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8055110047164753`]& ,
             TagBoxNote -> "1.8055110047164753"], 
           StyleBox["1.8055110047164753`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8055110047164753`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.27058823529411763`, 0.48627450980392156`, 0.19215686274509805`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.9258871931633694`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9258871931633694`]& ,
             TagBoxNote -> "1.9258871931633694"], 
           StyleBox["1.9258871931633694`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9258871931633694`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.21176470588235294`, 0.40784313725490196`, 0.1607843137254902]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                1.9793408362834481`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9793408362834481`]& ,
             TagBoxNote -> "1.9793408362834481"], 
           StyleBox["1.9793408362834481`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9793408362834481`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                0.7423146159737805}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7423146159737805]& , 
            TagBoxNote -> "0.7423146159737805"], 
           StyleBox["0.7423146159737805`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7423146159737805, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite Titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5830065359477125, 0.603921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8745098039215686`", ",", "0.9058823529411765`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8745098039215686, 0.9058823529411765, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5098039215686274, 0.5620915032679739, 
                    0.4104575163398693], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7647058823529411`", ",", "0.8431372549019608`", ",", 
                    "0.615686274509804`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7647058823529411, 0.8431372549019608, 
                    0.615686274509804], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.42091503267973857`, 0.5202614379084968, 
                    0.3032679738562092], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6313725490196078`", ",", "0.7803921568627451`", ",", 
                    "0.4549019607843137`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6313725490196078, 0.7803921568627451, 
                    0.4549019607843137], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3189542483660131, 0.47843137254901963`, 
                    0.19869281045751636`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.47843137254901963`", ",", "0.7176470588235294`", ",", 
                    "0.2980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.47843137254901963`, 0.7176470588235294, 
                    0.2980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.22483660130718958`, 0.3764705882352941, 
                    0.1516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.33725490196078434`", ",", "0.5647058823529412`", ",", 
                    "0.22745098039215686`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.33725490196078434`, 0.5647058823529412, 
                    0.22745098039215686`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1803921568627451, 0.3241830065359477, 
                    0.1281045751633987], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.27058823529411763`", ",", "0.48627450980392156`", ",", 
                    "0.19215686274509805`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.27058823529411763`, 0.48627450980392156`, 
                    0.19215686274509805`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1411764705882353, 0.27189542483660134`, 
                    0.10718954248366014`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.21176470588235294`", ",", "0.40784313725490196`", ",", 
                    "0.1607843137254902`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.21176470588235294`, 0.40784313725490196`, 
                    0.1607843137254902], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240463792929525`*^9, 3.9240509989461703`*^9, 
  3.9245433967531967`*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"4145c1bb-2214-4204-b335-25156c658370"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9240508712208967`*^9, 3.924050949871853*^9}, 
   3.924050984221113*^9},ExpressionUUID->"96f8fd3e-570d-4c28-902f-\
7c875db93055"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8156862745098039, 0.8705882352941177, 0.6862745098039216]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.6941176470588235, 0.807843137254902, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.3740726628390092`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3740726628390092`]& ,
             TagBoxNote -> "1.3740726628390092"], 
           StyleBox["1.3740726628390092`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3740726628390092`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.4210550733680185`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4210550733680185`]& ,
             TagBoxNote -> "1.4210550733680185"], 
           StyleBox["1.4210550733680185`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4210550733680185`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.5030810645135004`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5030810645135004`]& ,
             TagBoxNote -> "1.5030810645135004"], 
           StyleBox["1.5030810645135004`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5030810645135004`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5473395521780144`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5473395521780144`]& ,
             TagBoxNote -> "1.5473395521780144"], 
           StyleBox["1.5473395521780144`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5473395521780144`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6265967413109959`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6265967413109959`]& ,
             TagBoxNote -> "1.6265967413109959"], 
           StyleBox["1.6265967413109959`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6265967413109959`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.5803921568627451, 
                    0.4575163398692811], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.8705882352941177`", ",", 
                    "0.6862745098039216`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4627450980392157, 0.5385620915032681, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6941176470588235`", ",", "0.807843137254902`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3686274509803922, 0.49673202614379086`, 
                    0.24836601307189543`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5529411764705883`", ",", "0.7450980392156863`", ",", 
                    "0.37254901960784315`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240509339921827`*^9, 3.924050951149593*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"c0813d30-741c-41f2-a090-c4438fae1836"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"hmutyp7000", "=", 
  RowBox[{"titeryieldproductivity", "[", "hmukill7000", "]"}]}]], "Input",
 CellChangeTimes->{{3.924531961685069*^9, 3.9245319867822046`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"799c52b6-43b6-424f-8916-1bdc39c11a4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hmutyp14000", "=", 
   RowBox[{"titeryieldproductivity", "[", "hmukill14000", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.92453200661758*^9, 3.924532011955863*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"ac504ad3-c33e-489d-a4d3-4c2dfc5cc3eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp7000", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmutyp14000", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<protein Titer\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<hmu=10xMean\>\"", ",", "\"\<hmu=20xMean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#d0deaf\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#d0deaf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b1ce87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8dbe5f\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245319017218456`*^9, 3.9245319548058367`*^9}, {
  3.924532017569914*^9, 3.924532150226675*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"c313f39d-8bf5-4c6c-b711-86af4b8a1e88"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]], 
        LineBox[CompressedData["
1:eJxdzH9M1HUcx/Gvx538mJQgB9cdEnf8OO447jju+LHY+r69+6OpM1kmbDZJ
KkYBm84FrKgpg1YDHPPUoGRkOpl+iYyKytncJPBHEaujr3XjxqHEMpCiQ5RB
WNm9Z/n6bN9999778X7qn9v9VLlCEISD/3z3/v9/rhPJG7b/+4bE9jfrAgM7
97hCsyxO3+0pVRU3uEJyQjy6Kqqz393C+ykxWtGylBLwuHqke29a1Gwp2/lt
Wgf7OdF/pOtQ3BNdvA+K3ZMW7ZX843y/IB6oMU6qfzvJflG8dvrsjsKTp9kv
iY3P2ytaB3vZr4ifNb9vmY/uYy9QpLd47zsln/B+FTlKts82jvTzvYKCLx+e
bqv6gr2S7vyU/dFYxTn2Krqh26xsuXSe/WqqM/4QXFZdYB9Bvr71HuudAfaR
dLVkuSBhYZB9FE08pjyaa7zEfg35As6x5oYr7KMp3Ft/sUw1zP4h8gSKPB+3
jbBfSxrz8YHRU9/xfi2d+b7W0F3o5fsYOuMNX3zXP8o+lhTtxxJNn8vsY0ml
7HT0Sj+yX0cmj8658JWPfRwV1DXUX9X72cfREftodfxb4+zVdL7/yZtRpybY
x9P+1qC2I+46+3g68Okh/+W+SfYJ1D2ds6Fp1xR7DaXUdI3Xlv7CXkPeL79u
q67+lf0jNNhU+fRk1wx7LTXtqnrtmRuz7LXUXrCnvtM1x15HYdJ7kRvf/oN9
Ik1ph225hnn2iTQ/9Hggr+cW+/W0t3PfC76G2+yT6PZBveNixSL7JJrZ6rR5
ipbYP0qbpJvd39T+yT6ZrDPl4frAXd4n0/WzWnlkWHCH7pOp/PLs3Bqdwh3y
etqhfGVz6eEwd8jrqXDjs+rwJBV7PVVu+nDLuVur2Ruoorz1xZWhCPYG8lUV
qoP9UewN9Prgvo4YdTT7FPLXHFupeulh9ilUafFt6w2LYZ9Cxc11jRElsexT
qfcN1e8DP69jn0qvurdt1ZWp2adS+F9jI7vVCezTyH7tQtGJRQ37NKrWRX8w
vqxh/98c8un355BPB58O3gjeCN4IPgN8BvgM8CbwJvAm8GbwZvBm8JngM8Fn
greAt4C3gM8CnwU+C7wVvBW8FbwNvA28DXz2g3tzNtxnP+j3g5fAy+AFO/Tt
0LdDH7wEXgYv5EA/B/o50AcvgZfBCw7oO6DvgD54CbwMXnBC3wl9J/TBS+Bl
8EIu9HOhnwt98BJ4GbyQB/086OdBH7wEXgYv5EM/H/r50AcvgZfBCwX3578B
YGlyug==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUcx/HHkyNkisgJAhF3x3844I6744+N8/ly19w5KxkocbFymjcG
jYlrmrDppM2ziCyUJdaAeU4dTyGT1JwsRqG3G00HyeMwR8KFWaYkOGZgQNl9
l/n5bc+effd9fd/arduLnApBEBr/+Z78//+sxzUFm/59l8Xzm8Oj8kd2WP2z
LDqDLMYp23tWvxwVs823dhZbGnh/Wxz7/Gxm6EuHrV9IT95dUVqj7nvzQTP7
B2LR/VXugslW3k+JYluf4kCLm++nRaeqP6DUdpL9n2LV0IX5kkiJ/azYd80z
PTTfwX5OfMvZqdYnnWEvUL1Vr3+n/CveL6KYFccmtN5zfK+grsPlkycrL7AP
oJa9ATtd6m72SvppIWd/YXEP+0Ca6WyvOuDpZR9ETWO+HUl137FfQvmOEGF9
+SX2wdS0ZV+3zeFhv5Rqv6kXPn7fy34ZxS8+tP/xX/3sQ6ixrmPLnpor7EPJ
dcqY/5pygPehFL26rMJeO8j3K8hTOlHSf+0H9mGU/u3BiPaGIfZhZFbm3Siu
vM5eRba1GTfya4bZr6RTdYrPmj0/sl9JzpvdZrdyhH04jQ/ecR2vusU+gqqF
07sXxkfZR1DtrrGZd9f52K+i87Oeuy7Pz+wjKe/g1ryRytvsI6nhqOOM3nyH
fRSFGytLA+2/sY+mZp/DXvjq7+yjqWD3y6bej+6zf55OtFr3fD38B/sY0k18
WduzepJ9DB1xXL34/SdT7F8gXduoPeThQ/ax5GtTf7iufpp9LFl+LSu6qXrE
Xk2WtQPNhugZ9hpyNZnvHYp5zHsNde1qbBnfMMf3GortGX57uXeBvZZSDd5t
7epFNr/X0vYwT/2jNxQ2v9fSdcv85c3Di21+H0dlnaqZ6k1K9nE0XiU3bZwN
ZB9H1q6Kub3ngtjHk17orbjaEMw+nkw1hb+EnF3KPp4aL00fWfbccvYJ5HS1
Xgn2hLJPoBJ9h/EDQxj7BPINute0u1XsE6n60yVSXVw4+0TaZn9ROTgQwT6R
TtwreCX2aCT7JJrQvF404o1i/3T2+6ez3yeDTwafDD4FfAr4FPCp4FPBp4JP
A58GPg28DrwOvA58Ovh08OngM8BngM8Anwk+E3wmeD14PXg9eMOz+zQD3Bue
9fvAS+Bl8EIW9LOgnwV98BJ4GbxghL4R+kbog5fAy+AFE/RN0DdBH7wEXgYv
mKFvhr4Z+uAl8DJ4IRv62dDPhj54CbwMXsiBfg70c6APXgIvgxdyoZ8L/Vzo
g5fAy+CFvP/mvwHTLoSg
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6941176470588235, 0.807843137254902, 0.5294117647058824]], 
        LineBox[CompressedData["
1:eJxdzHtMU3cUwPFLseKDFVqgloJAaUHoA1roQ+ySeygJPjaiDtmUjDgxMuMU
QlSg8RFRGS6Kgoj6hxgcW4zXmUwDYzZDBgtOgkFArk42kCFUJGAJiiHUsU17
4uP8kpubk/M5X0V23idbBAzDVPz/vfq/+2y1EckZr18rm1dWWFOiyrd5Zp4t
bL0X/Lii2OaRA6yx2bWlff1R3A+zqu6g8G2VJ22XuVdvlDXKxmUd1rPoJ1iA
ooz5U9W4n2RDFQuv2MXf4v0UG/blxu3WDd+jn2bTNOb9WX6X0M+wKUOPhPbe
H9D/w65YXrLZfO5H9Ax07rZeS++/hnsvOOxXdjrHXYf3AjjR6Kus3tGAfg7Y
Gq9PN69yoBfCPq8bx7KWNaKfC+oNhzOHTL+inweVA0+OFPc2o58Pks8dBZLq
39AvAHcu92RdZit6X1idnD0mTvsd/QdQOu448fPONvQiSF1cNLn3djt6f7iR
v2+1dmUH7v3BXtehPL+rE+/FkBrwUHTf2YVeAg9kF0QJhXfRS0AW33fkejKP
PgDC9H8pYqbvoQ+EJvvzL4Lu/IE+EAxaq7dD8Cf6IJj5TNrjre9DL4VMe9bR
mrKH6KVwa9W5pCX/DqBfBAJRS114xiB6GVQs7PnIt+kRehnkiwfl/WuH0QfD
BZ91fVUvnOjl4KgN2d06OIJeDuVrRyslg6PoQ4BJyyueGBlDHwrfGWdzZpNc
6ENhfOj2HveDCfSLQdGkk/uHTKIPgyQ/Z1XBwWfow6Dr6dmNY8Ip9OFwoFkq
dJ96gT4Cijr92uot07iPgIav670TI2fwPgKqRF+5K5NeoleA2nDr0/7ts+gV
sGlqWBWQzqR4vAIu6maeZR/ySvH4SLDW5Trv3xSkeHwkVLhOlh6TzUEfCS0X
u5U3a4TolaA7/vGpzeCDXgkaJfwUNTIPvRJMbfZq250F6FXAFHRVibt90avg
as/fe4JdIvQqWPHNGi691h99FDSkDQWWu8Too+CqzVlzxhSAPgpyjOVzD10K
RB8N8slfylN9pOijod1Sn1p6eRH6aOjNtdqfrg9GvwRKWrau/LBTjv7t7PFv
Z4+PIT6G+BjiY4mPJT6WeDXxauLVxGuI1xCvIV5LvJZ4LfE64nXE64iPIz6O
+Dji44mPJz6eeP37e7We3Ovf9weI54jniWcMpG8gfQPpE88RzxPPJJB+Aukn
kD7xHPE88Uwi6SeSfiLpE88RzxPPGEnfSPpG0ieeI54nnjGRvon0TaRPPEc8
TzxjJn0z6ZtJn3iOeJ54xkL6FtK3kD7xHPE88czSN/N/BKdm6w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]], 
        LineBox[CompressedData["
1:eJxdzA1Q03UYwPF/U6fCmLwMEAa4jcFkvIyX8XZ2+z8M5dRDSsrrFEuF6PIM
xemhwZG1hA5FiDRNu+h4ieIP6o64OLxoLmYugjqB//J9MQ4q7QiRarrIsj2X
+fzu/ve/557P85UX7sovFjAM0/DP9/D//6dvkWVt+PddYKsqx8XCsVK9Z+bZ
d66EHd8jNeo98ge2sb7hmS15tbifYM9EmK+aRUf1HdzDd4t1vCrcPNv4Hvpp
1ir7pnpuWyPuZ9jdz87Vrl7VjPe/sZqpOp3L9BF6F6vSTuaflrajv89eVAg+
GerpRD/H7i/w/kuzzYSegfH1TcapQ124fwJqK4+4rY5uvBdA/1pHYemKHvTz
QXX5/YGx3l70C6C8b/hTu/Fz9ELYWjAkLi4xo18E4+tCvCLzLegXQ2ePa82k
+0v0XsAwTezAJSt6EZjCMzvOHPwKvQ+8pAi4UVFpQy8G50ib36/1A+h9wf3z
kYPc6CDufaFhULvrhOE7vPeDa1tNEznKS+j9QapfIQ8/NYzeHzaa+3Sv+I2i
DwAt5PpwNh69BN5c0rVG1vE9eglYJaXcgaor6ANhOpPJ21R+DX0QnO6qPrns
gxvog2B38aaacLcDfTDYJp+Hj7PG0C+F/h3NYd3VTvRLISOkBp6+N44+BBy2
myNeNRPoQ+HP9hzXy/4/og+FclFo82H7T+ilkCVaO2JquYU+DM7Wbax61/IL
+jDQGbRG3+tT6MOh/Qvt0eLWafQRUCaypj85dAd9BKxbNLN+Q/Jd9Mvga/u3
us7Ds+hl0DkK2rqo33Evg52fLay42fIH3svgQv99i33VPfRy2HnVeceQ4UYv
hwPbz354QjeHXg7eD+Qa494H6BXwVsme5SY7k+3xCti3smTLzDxBtscroCLN
J687d162x0dCpvK2znluPvpIeErwtng4Tog+Eia2T76g7luIXgkW593m3P2L
0SvhfFuT63yRN3olBJqLrjcW+aCPgr014uOvHVuCPgoKci5vvj3iiz4Kdsw+
Zylb4I8+Gtp63wg4ZwhAHw2BrfmqYIsEfTTUa9y1+1KD0Ktg8KLp2PRoMHoV
SAsdwtayEPQqeFHQnT27Wop+OUhsBr+V/VL0j2aPfzR7fAzxMcTHEK8mXk28
mvhY4mOJjyU+jvg44uOIjyc+nvh44hOITyA+gXgN8RriNcQnPr5XJ5L7xMf9
68RzxPPEM0mkn0T6SaRPPEc8TzyTTPrJpJ9M+sRzxPPEMymkn0L6KaRPPEc8
TzyjJX0t6WtJn3iOeJ54JpX0U0k/lfSJ54jniWfSSD+N9NNIn3iOeJ54Jp30
00k/nfSJ54jniWcy/pv/BhdiRXU=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]], 
        LineBox[CompressedData["
1:eJxdzHtMU3cUwPFLeTg3Ci0UijwqpUB5llKgxbntnsLcg7gNXOAPH9mGwc3I
4lBwEwcMJDGNZBkCycBH0rGt5ArKhgOUxzaUEW22IVK0WboytFYRBBGkyMPN
9WTO80tubk7O53ylubs35fEYhqn+53v8//9LawzVZv/7+tlRfbQ281xBmnM2
sSWWjx59kFyR5pSj7PC4bWuDqAr3NrZ3cXbOoapJO8k9fuPs5vM1pTHrv0Q/
zTa3ml8MuHEc9zPsdB8/3Daix/s5dp/dZaHF7xv0DlZzdP70jdIm9A/Zn3Xt
ymltM/pldl1QdF6+Tyt6BpLN1koh/3vcu8ALdce88zacwXsenDs8EQV17ejd
oCVjoy7H2oneHexldSN3s7rQe0BqePW1+aUe9M9AZ3+WRlD0E/rVkP/nydcv
uPShfxZU9m/vH9GfR+8JC3xdkn5bP3o+rOnpFv++dQC9F0Q0KIa73rmIXgAe
Id2rXv7CiHsBuF1JdTVM/4r3QnitSj02rxhE7wNncjtE+4svo/eBvfast69d
H0LvC79pB5RTe4bRi6DR9UR5t2AEvQjml74uOnX7Kno/6MiQSD/pNaP3h573
Z7K72/9A7w/m+Ohd0gsW9GKYm5G+4nhgRR8AW/xzfG2Sv9AHgLDgc6HXzjH0
a6Bly8XTK23X0QeCzFhg3OtrQx8IpW1i4+CJm+iDYH9ZhkL90i30wXDp7vYy
0+xt9MEgn9jBG718B30IBJYUaqMHJ9FLoJr1DeYtT6GXgNxb9N4tyT30a6Fe
9664K3MGfShkiD0bvqq6j/tQuGobGjfMzuJ9KHRKNEUJ+Q/QS2HySsc2xsuB
Xgo5JWc/rG1eQC+FIW/DoUrdIvowqDUM1Yd8uow+DLjYN9UjRY/Qh8G+H5nd
r5qZdKeXgXuhpS/dhZfu9DLY2LE2xKBxTXd6GbQ1bT5o1bmhDwfLepfGUbs7
+nAYrNQU39m5Cn04XNq1KXfJczX6CJio+OXwUd5z6CPg+CGDpemeJ/oIOCIr
t56d8kIfCa2WzNbejwXoI2Fg+UBQdrkQfSR41K6raf/BB70cuIM7BNvdROjl
UP/WSqW+2A+9HJYW3zCuTPqjj4Lp/DH+zYoA9FFwoPC7h9nPB6KPAkeJOlMu
DkYfDcpT5oSVPSHon8xO/2R2+hjiY4iPIT6W+FjiY4mPIz6O+Dji44mPJz6e
eAXxCuIVxCcQn0B8AvHKp/cxSnKvfNp/RjxHvIl4JpH0E0k/kfSJ54g3Ec+o
SF9F+irSJ54j3kQ8k0T6SaSfRPrEc8SbiGeSST+Z9JNJn3iOeBPxTArpp5B+
CukTzxFvIp5Rk76a9NWkTzxHvIl4RkP6GtLXkD7xHPEm4pnU/+a/AQJPjsc=

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]], 
        LineBox[CompressedData["
1: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
zyHoHwKWhoM=
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
        LineBox[CompressedData["
1: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
pf8AkSurKA==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 
          0.12941176470588237`]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 
          0.12941176470588237`]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"protein Titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 2.072302593665932*^15}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"hmu=10xMean\"", "\"hmu=20xMean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5847494553376906, 0.6091503267973857, 
                    0.5272331154684096], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8771241830065359`", ",", "0.9137254901960784`", ",", 
                    "0.7908496732026143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.5803921568627451, 
                    0.4575163398692811], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.8705882352941177`", ",", 
                    "0.6862745098039216`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4627450980392157, 0.5385620915032681, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6941176470588235`", ",", "0.807843137254902`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3686274509803922, 0.49673202614379086`, 
                    0.24836601307189543`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5529411764705883`", ",", "0.7450980392156863`", ",", 
                    "0.37254901960784315`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.924532063294152*^9, {3.92453212169179*^9, 3.924532151394491*^9}},
 CellLabel->
  "Out[243]=",ExpressionUUID->"15e319e6-ea3a-4d14-b395-57ad2a412c48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp10", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp50", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp90", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp99", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp7000", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmutyp14000", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite Titer\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#d0deaf\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#d0deaf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b1ce87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8dbe5f\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#79b64b\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4d8635\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#295421\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "24"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"9", "*", 
         RowBox[{"10", "^", "15"}]}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924532162195832*^9, 3.9245321782895956`*^9}, {
  3.9245429513895254`*^9, 3.9245429694668956`*^9}, {3.924555679237793*^9, 
  3.924555827967909*^9}, {3.9245563392643957`*^9, 3.924556341345066*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"49321dcb-ba13-4c94-b927-a869b94e93e9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUcx/GHfyeccSB3ICDR/cHjOI7j/sPU+Xw79Iy2Rlgtk4DlRsnm
TFZqnkW0YmKWGhlhtslyGTw3Q8vWkAqvxbKwXZqPaKahIwpsBxOIIKGy+87m
57c9e/bd9/V969Y9vbomWhCEN/79bv3xPfLf6xVvPuCfmWne7Y3Msvhtw/XT
z6vbvBE1IM7GVIcf9nTw/hcxUdl5bs2bx7wB6dYbER/KvUjPqD5lPyYeWNFy
dSruc97fEC8NH6zwfBLk+0nxfLD+A112L/s/xYrW9gfd50+xnxEnTmQ1Dwye
Zj8rdi/P8sa+8z17gUbrjuw7NnSW91F0eYmvZa5a5vtoUq3N7E3QXGAfS8d/
HUvaOu8S+zhq/Ph91bjxCnsFGbfV7PypZ4B9PPX7zsRX7b7GPoGCK5+Y2tM4
yF5JXTvWBe5tG2J/F23ZuHfPC+Hf2CfSspgv00Ibr7NXUeBc5ZWX08Pskyn2
/saKev8Y75MpvX/kUDj6Bt8voPbxVV+MdoyzT6HkMn3n4bpJ9ik0kS+Uhqum
2KvJ59cOj9ZPs9dQwpA0GxX6i72GJvcnrF9z3xz7VNqs2a4s3y6URHwaTX+4
9zPbcFRJxKfRizu+WnK0LqYk4hfS67VvOUPJcezTqVuvUnZdULBPJ+3PjteO
9sWzz6BVO9W18pCSfSYp3vujrNOSyD6THnMFD7x6JIn9IlI9FQoeti5gn0Xb
upXOswdT2GdRaWVi6d9GDfu76evf1cpNp1LZZ9NHGRuq5729kH02bV7a52jd
lcH+HpresOXMc+2L2Gtp67VNY0ujs3mvJWPDK2nmEi3fa6lyX9+yqXd17HWU
pOiqOaQ0sNdRq9B08/GWHPY66pnva1+/3MheT/bekWr/fBN7PbXVfvfDSYWZ
vZ6+qRl81mOzsDdQf+DyRPkuK3sD1R1/SdA32dgbqEPdXH5y0M4+h36schdo
VzvZ51Ctf0XIcNHFPod83hNPxjV52C+mstSrpo61xewXU8+jcwFjVTH7/+eI
N96eI94I3gg+F3wu+FzwJvAm8CbweeDzwOeBN4M3gzeDzwefDz4fvAW8BbwF
fAH4AvAF4K3greCt4AvBF4IvBG+7c2+2wb3tTt8AXgIvgxfs0LdD3w598BJ4
GbzggL4D+g7og5fAy+AFJ/Sd0HdCH7wEXgYvuKDvgr4L+uAl8DJ4wQ19N/Td
0AcvgZfBCx7oe6DvgT54CbwMXiiCfhH0i6APXgIvgxeKb8//AJIge4M=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUcx/G/FHDcgXI8iIeHx91x3QN33BN3SKz9v3EX6bDJKDVwtVnj
WINGXXorth40qFspaqSdm5nJrLxsTNuilPIhWQ8WhvIPAi18AB1LA0wjSii7
73J+ftt//333fX3f2scaKmviBEHY/O93849v2X+vS5z6JNPe/WhLaWyWxNa+
lve6U3aWxtSQeGXg47oHluzh/bCo+nllj3zLvtIPozffqNi9OlnemtDBfkys
tBX6F13r5P2EqMpuOHj5oyN8f01MENS+cEYX+0nx8Jj8Ynj/1+ynRFltYXB5
5Dv2N8QlxjfWhep+YC+Qst/57uJPT/J+Fj3fXF1Vb5T4Po5Ohi72NHf2sb+T
lu9pLwk1DbCPp7biP9z68Bn2CST75fSNdwJD7GVUHnziA435HPskUrwS3HFM
cYG9nPZeWLM1pBphn0ytvvs00/5L7FPoRMXo2KVto+xn02h2pLo3/TL7VFp7
9pGVpgO/8T6VpC0rWpLLx/leSauaG/t39E6wT6N0zcE5Net+Z59Gobsre9dX
X2efTjNH73E9UzHJPoOS/DlXXWum2GdQ8W51VuKhv9lnkv2rtKL77TPs59LS
qtrx/vOCL+bnkvjicVdbWZwv5rNo4LOqx2XH7vDF/DxShmZv0q+KZz+PIlcj
R52GRPYq6spt3NqgTGKfTauDL+/1mBXss2ky0PrsrJoU9vOprH1o86Iv57BX
0/Vz6kS/QcleTY2n/pqwNqWxz6GC1A1v10+ns19Aus+r28vfymS/gJRPjYxr
H8pir6Gp8R+D5Q4V+1xafPy5nQrbfN7n0si39YHBZTl8n0trZxSDHbs07LW0
/6d9L/yaomWvpeE2i/+LgI69lh78vvxs8Rk9ex29+fCJtG1BA3sd1ck3vl6i
M7LXUbxj+l7tFRN7PR2WV7y/u8/CXk+BDdvbXxuxstfT9lrtqRVmO/s8Whqv
2xXqcbDPo6zOP0PhPBf7PGp69cBERcTN3kAdRwaf3GTxsDeQzBtWP93jZW+g
b8rOS2XrF7K/ixpkp4dLDhWzvzXH/K055o3gjeCN4E3gTeBN4M3gzeDN4C3g
LeAt4PPB54PPB28FbwVvBW8DbwNvA18AvgB8AXg7eDt4O3jH7XuLA+4dt/uX
wEfBS+AFJ/Sd0HdCH3wUvARecEHfBX0X9MFHwUvgBTf03dB3Qx98FLwEXiiE
fiH0C6EPPgpeAi94oO+Bvgf64KPgJfCCF/pe6HuhDz4KXgIvFEG/CPpF0Acf
BS+BFxb+P/8D6vJyIg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6941176470588235, 0.807843137254902, 0.5294117647058824]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUYwPH/vYDHyXXEARJHwL3wcu8H91oG/2eccw3FNcotE5ZkJ+QQ
YpVWMri5xmyUL7lJpTdOFtzxL90cdmsUpcMMkxYz/iFhKWvsRJvSoROOAWX3
LOfz2/7779nzeb6qV5qqvEKGYQ7/+z3407f5v/c9O+jeNTmw50B5fObZ34L9
jh+TA+VxdZ0VXJtraF3bh/tpdqFNfubivtPln3MP3k12vKznyvIfYfSzbKCV
kZSe+wb3UVZ5Z1tt3/5zeH+PLRQZ7964fR79PPtquFHtfn8YfYxN1p/+e1vd
CPoltuFIr7O2bBQ9A5rYO3Obmy/jXgCgLPUN/TCG90Jo2vt7IFgxjl4MB0+8
xV6LTaBPgF3el1cdnbmKPhEqhGVWpfQ6egn4S09NJQ1MoU8Csfjq0fn2P9FL
oSYi/e5A0zT6ZNhfWGnd+nYEvQzuR7eLtaEZ9I9BNNZiPCv4C30KNHZW+Q61
3cZ9CgS73x2cPDKL94/DSx+vM4jEUfSpUGdyb086OIc+FartKnez6x56BXhH
5jrPJt5Hnwa5ptfSshbm0aeB/NDUjVvpi+jTITP9jaqPNi2hz4DL2pPBn3pX
0GeAv66ndYdC4In7NdBhfLFvdqfQE/eZwIZWj0aviDxxnwnDF3J+2eFNQP8E
qEYVykjqKvRZMF+fGNLOSNBngf+rsS0LESl6JXw48ELLskyGPhsaYCnUVSNH
nw3HP+v2dEZS0D8J0z3V02ssqehz4Oa3y/LcDgX6HFh809YykZCOPheaff3v
CY9loM+DwGRwr7EyE/d5sG585OsT+iy8z4MNqxu1Xbps9CpINnSMdT+fg14F
J3vNrsFNeehVILjwzJdT7Sr0auDqVnbfnVCjV4PoWGX4jkeLXg2BSOLQpeF8
9BqQPld/SVRfiF4DtXZ52ycaHXoNxD6A9vEVPXotyPbxGyViE3otrA8/3e81
W9BroXpiS3XNkBV9PiwUKG8NS0rQ54P/dZnivNeGPh9mBF/87PvVjr4AJrsu
7rFtdaIvgHBrqMK/6EJfAKWNoZXQ0FPoC8Gxe+en8Oxa9A/nuH84x30R8UXE
FxGvI15HvI54PfF64vXEG4g3EG8g3ki8kXgj8SbiTcSbiDcTbybeTLyFeAvx
FuKtj+71VnJvfdT7iOeI54lnikm/mPSLSZ94jnieeKaE9EtIv4T0ieeI54ln
bKRvI30b6RPPEc8Tz9hJ3076dtInniOeJ55xkL6D9B2kTzxHPE884yR9J+k7
SZ94jnieeMZF+i7Sd5E+8RzxPPGM+//5H5WKLTU=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]], 
        LineBox[CompressedData["
1:eJxdzH1Q03UcwPEf0/FUY8hgMBQcGxtsY2PsCcPl78M46+q8mgmm13U+cDTP
vGNnQt5RZ+M80oQg1gH9gUZS5k97UgpupxgnGLXWqdfI2ZM8hEhNWPNhtaSy
fS7Pz/fud7/73Of1eedtrX2qhscwzBv/fnf/9FX990bYnatDdQHH67bY7Gff
+UiyLip82xZTV9iNzWd4J2xHcf8LG3rNkD7l/sR2jLv7Ztk9j9mvD4Y/Qz/P
9nQKdCeGT+H+d3bk+PhPU/uH8P4mGxq/E9k1MYw+wnYkHG8IPzeK/k/2cO4X
kocVX6O/wzaKrpRJMs6jZ6BzzCc/x17EfRzYpiZ8Hve3eM8D4Xt7VZUZ36Ff
DIHe0VMdngB6PuTsFhUOdv6APh4qb0Y7Puz+GX0iwPP1PWnbx9EnwdrIopMu
2ST6ZJj9rero5sgU+gfhyRSv7/LMNHoBJF6buH0yOoM+BSI7HFvKLL+iT4Vb
dT2nPQeDuE+FtvLiQ9Hl83i/BNpXDZU/sj+EPg0uuGucTbww+jRoa3ZW61pv
oBfBpY3e+PmyW+jTIanJFdfOi6BPhzHD5ZnR4B/oM+D0i7YLyX9H0Yuha35u
vce6gF4M7pWzraInmIqYz4S9P37ea30zriLms8DZwU10zfEqYj4LzpWa1vCr
F6OXwBbTtZwjQT76bDA0fKrObE9Anw0H9clLvBuS0C+FyIGLm6bgAfTL4IX2
s5WL7AL0y8DY/012/z4h+hxYN1n95dXrqehzoa/VVcvXpqHPhWBNc/8xlwj9
chj4q3SPNZSOXgq1mVsFkZfEuJeCwNn8eJMsC++l4H729tiaSQn6PHj1mSN9
/K+Wos+DG/JV5YmBHPR5MBQn292bKEUvA+bMtPVRfR56GdSIVZcWtsnQy2Cg
YRujHJSjl4O6ZVj9tE6BXg4pq6Pbw31K9HIQrLcfDtgL0eeDsW2no16oRp8P
L3d7Z7vDGvT5cF48UmKIatErILdn81WfQI9eAWc93x+aNpWgV4A0weXQ7DKg
V0LjQ5LqOa8RvRLC9Qec75rN6JWwENRs+njAgr4AajVvbeiqWoG+AOJ3rPXt
E5ahL4D3HR+0tIRWoi+E1Ea7RlZnRX9vjvl7c8yriFcRryJeTbyaeDXxGuI1
xGuILyK+iPgi4rXEa4nXEq8jXke8jvhi4ouJLyZef/9erSf3+vv9K8RzxPuJ
Z0pIv4T0S0ifeI54P/GMgfQNpG8gfeI54v3EM0bSN5K+kfSJ54j3E8+YSN9E
+ibSJ54j3k88YyZ9M+mbSZ94jng/8YyF9C2kbyF94jni/cQzpaRfSvqlpE88
R7yfeGbF//M/CHENkA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUYwPH3bnemjDv5DyH/jj/HccdxHHf8CRzvE1TTsWFE6AABJ0Qb
RJigGGlZNqYwb9JorNg4bO3AFyIL/y/GHBoCM0rvVdQu0Q52ErszCDgQqOye
5Xx+27t3z57P85Xtrn7jLSHDMM3/fk//9OX9966yoUs1l0o/N2S4Zp4NfPOn
gc3BHRkuNcHmfxDbL3rtFO4n2R1O2zsTjd9ldHNP3zTrGXPJTzVyDv1jVtz8
UO3+6Q+4n2UdX/EVtbsu4/08ax5pbBk6cwW9k/U1jhq8Uq+hX2ZPb/zo2Jn5
UfSr7NJ72eIA+xh6Buou3lQf9b+BewGYVZ/9aigx470Qvl7YPrVy9RZ6Ecgn
J5V5r95BL4Z4XfN+8cw99OtgdW6g8uLgb+jXQ4Mju6F0egL9BnA++rluT+ND
9G5woevjW7+kW9G7w/XW+72J3lPoJdC2s7fbIrGhl4Kj47o2VDON3gOGK48Z
D+yfwb0HdDFNY9/ftOO9J4gXCt89/M1j9F6gcthWW91m0XuBwPR3Plc/h94b
ikx8TqloHr0PWBc/eTurcwG9D7wv8TIUlzvR+0LK3m2+uVuX0ftBU1nR+fqc
FfR+UPGtbej3D9fQ+0O9auCAvILJdPkASNlXKLxjEmS6fAD0fZFuH5kVZrr8
izC8fUBozBOhDwTNoROCqhti9IFw9oqX9ULZC+g3wZCpunhGugF9EGRZS1p2
j7uhD4KXbSdfbxl0Rx8MW5t6tZJ7UvQhcHnTirv4uAf6EBidsJZL+z3Rh0LP
E1P7mtAbfRicrDk/pizwwX0YLBc5a8d/9MX7MGD0lpb+bH/0MggOeXL2kT0A
vQwsnFvnoikQvQxy5aG2PQeD0IdDX9XpjXWHQtCHQ7HjSIF2Wxj6cFAs+Rh3
1sjQR0BHu+pBZXc4+ggo7a3P2fdXBPoIcE8xSqtzo9BHgoJJK9xyTY4+Eg62
me7uyFegjwQ/z7F1lvVK9FFgyHqw0HZXhT4KMptqHWnDavRRUCWrri03a9DL
oURoL+wRaNHLoTm0avF2TAJ6OWw5cfTPtDId+miYm9m1NtWnRx8Ng3tH7tv9
k9BHg6S965yhNRm9AvJfsbSaU15Cr4DoL0/Zepyp6BXwB9tgOHJ7M/oY6EwV
accL0tE/m13+2ezySuKVxCuJVxGvIl5FfCzxscTHEq8mXk28mvg44uOIjyNe
Q7yGeA3x8c/vlfHkPv55f5h4jnieeEZL+lrS15I+8RzxPPFMAuknkH4C6RPP
Ec8Tz+hIX0f6OtInniOeJ57Rk76e9PWkTzxHPE88k0j6iaSfSPrEc8TzxDNJ
pJ9E+kmkTzxHPE88k0z6yaSfTPrEc8TzxDMp/8//AGTrRRw=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]], 
        LineBox[CompressedData["
1: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
Hev+p1If+T81roRC
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]], 
        LineBox[CompressedData["
1:eJxdzHlQ1PcdxvEFllsUlsXFBRcWll0OOfZgVxt1H5cIotISo1GgUMdrpGoy
3ukMVkmsYqK4JhgsNNpBiFxiTAQBbVATCVATS5EiiChXQKsJN4ocTcrzV74z
Ozu/eV6ft3zDO6s2WwoEglM//375//Vb8/9321imy11/1Jxumv5uNDoVlF/a
MnjONK0eG58cHL/YOpbPvduYv2fr66eXXDYVFf7ynhq/CpB21EeW0fcZ44qS
EvsPX+M+YKy58s9024M3eD9s/DQ1Zur7331N/8L435l3aiO11fRjxvcGsy3S
VbX0E8Y1j2pM9qo79AK4vitu2am/y90Ca474744JqOe9JTKqbcwZN/9NL4TI
9vTvX0u8R2+NxV4dCerJRnobfN1zaOuHeU30dngCWdtQbDO9PZxSsw+UWz2g
d8Cm80m9udda6Wdgd3Rxy+2UNnon3ByOP7DU5zH9TKQOj3kk2LfTOyNAqs0v
HWzn7gy71fdTato7eO8CqTnurfLGTnoRFNq67PbvuuhFWDm39ZMP6rrpXfGv
x72rJN/9QC9GtbP5hu+9Hnoxzq6bLOtq66V3w2Nbr4NFz5/Qz4YwsCHNc+op
/WycKA/+pk/8jF6CzxO/1HmEPqd3R9ey63EPVv5I7w6dsErZuuMn+jkw1Umu
Povuo5fiyyU94odtffRS2L+cM6NhTz+9B16e6rSc5TRA74nMS28LZ+YP0Hsi
cezhWlPkIP1c+MUeNqf1DNLLMJKzbMcbHw7Ry3C2tFXkohmm98LJsh/Nex8M
03vjXtwfp9KPjnD3RlbPF72nw0d5741tn42IvbpH6eVIK51cuvGvL+jlSFq5
tmP7Gy/p5cjMdRVmO47R+6Dugl+/4dsxeh+ctIqqvHP0Fb0PToy6K6Qrxul9
kXqm8sQ5lwl6X4wdvXV8b/MEvS8KXxNUReVN0iuQ9Z6V3mHfFL0CV3Z3GkoU
gohpr4DuD+KMoZOCiGnvhxn7Mxa+PS6ImPZ+sHq6b9FUsgW9H5xXWY4cb7ag
V0IQe64gaIUlvRKuwa/ftblhSa9ES3zuhVKDFb0KSduu1BdftqJXQRJe9c78
UCG9Ctsh7/C+JKT3R23Z1XkLNNb0/vjpsPUn+65a0/vDNka0PdloQx+AyxOL
sjprbOgDUJjq+GfH1bb0AaipGD5f1G5LH4jvvdc5rtllRx+IhJDcglJre/pA
RGV8uzM7y54+CPli+1faMAf6IJRsWfCpXa0DfRB253g29m1wpJ+HVFw8NzTl
SD8PyycjVcv+PoP+5311rrDF5EQfjKam6zGKXif6YPhoo5bPN8+kD4bsgyj/
zb+ZRR+CHOHCpLU/zKIPwcDz0IIdy53pQyBpcFtUdd6ZPhSB6oSG8kln+lCs
OhRbuDjBhT4Up/62eJZNpQt9GIqTzZ/1SUXTe2AYKq+nLF6fIuJ9GK6dijNX
PxJN+0NheFS455pbpCt7YdjfO1IkKXGd9o1hEARuSO6TiNlXo+7Yssx33xez
r4ZSYFUS2y9mX42Dmr0Wbevd2Fejsd0pO7bejX01zgyNpHdFzGZfjbWRMU61
FbPZ12Cdw2abNrWEfQ3eT3sV4VokYV+DwI8u77JSubOvwbaARKtdee7sa/CW
S57/U9Uc9jXILVEqsornsK9F9YqtA0t0Uva1EEU3a6y/krKvxZGWK8WmaA/2
tRCW/KmzotGDfS1+mzMvs2SzJ/ta9OY3xdeMerKvQ3yCzceVx+eyr8OW8vsy
e4WMfR2KjsU1vvkPGfs6JCR0mM1xXuzr4LZfFrvghRf7OhjGG5bsWenNfjjG
P04pSDvrzX44qiQpt870e7MfDteYnfp1S+Xsh0Mmf3ZbmSVnPxx/EYUkV/XJ
2Q+HfKhP9Wa0D/t62C1sr+jO8WFfD+nk6I1vJnzY10M+v7IpI96XfT3uX9h0
TFbhy74eH8UZNkZKFezrEd7tE7vggIJ9A25ufXWyq13BvgHWXzzsehLlx74B
xXfrj5R87se+AUEdprxbUiX7BjRlNsc9O6Jk3wDNxbnqfcNK9udjY3fNfzZt
UUX8D/CvccY=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 0.12941176470588237`]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 
          0.12941176470588237`]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8771241830065359, 0.9137254901960784, 0.7908496732026143]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.8156862745098039, 0.8705882352941177, 0.6862745098039216]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.6941176470588235, 0.807843137254902, 0.5294117647058824]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5529411764705883, 0.7450980392156863, 0.37254901960784315`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4745098039215686, 0.7137254901960784, 0.29411764705882354`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.30196078431372547`, 0.5254901960784314, 0.20784313725490197`]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1607843137254902, 0.32941176470588235`, 
          0.12941176470588237`]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"metabolite Titer\"", TraditionalForm], 
     PlotRange -> {{0, 24}, {0, 9000000000000000}}, PlotRangeClipping -> True,
      PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"10xMean\"", "\"20xMean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5847494553376906, 0.6091503267973857, 
                    0.5272331154684096], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8771241830065359`", ",", "0.9137254901960784`", ",", 
                    "0.7908496732026143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8771241830065359, 0.9137254901960784, 
                    0.7908496732026143], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.5803921568627451, 
                    0.4575163398692811], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.8705882352941177`", ",", 
                    "0.6862745098039216`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.8705882352941177, 
                    0.6862745098039216], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4627450980392157, 0.5385620915032681, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6941176470588235`", ",", "0.807843137254902`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6941176470588235, 0.807843137254902, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3686274509803922, 0.49673202614379086`, 
                    0.24836601307189543`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5529411764705883`", ",", "0.7450980392156863`", ",", 
                    "0.37254901960784315`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5529411764705883, 0.7450980392156863, 
                    0.37254901960784315`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.4758169934640523, 
                    0.19607843137254904`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.7137254901960784`", ",", 
                    "0.29411764705882354`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.7137254901960784, 
                    0.29411764705882354`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.20130718954248367`, 0.35032679738562095`, 
                    0.13856209150326798`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.30196078431372547`", ",", "0.5254901960784314`", ",", 
                    "0.20784313725490197`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.30196078431372547`, 0.5254901960784314, 
                    0.20784313725490197`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.10718954248366014`, 0.2196078431372549, 
                    0.08627450980392158], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1607843137254902`", ",", "0.32941176470588235`", ",", 
                    "0.12941176470588237`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1607843137254902, 0.32941176470588235`, 
                    0.12941176470588237`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9245321794508753`*^9, 3.9245557073577113`*^9, 3.9245557486254244`*^9, {
   3.924555782994402*^9, 3.924555828555431*^9}, 3.92455634248024*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"68a40d55-6d03-4e44-b417-8e369a1ba621"]
}, Open  ]],

Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.9245563497184525`*^9},ExpressionUUID->"516dce21-bf5e-465f-984d-\
04b0d2cef789"]
},
WindowSize->{1904, 997},
WindowMargins->{{Automatic, 1288}, {Automatic, 0}},
Magnification:>1.4 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 641, 15, 40, "Input",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],
Cell[CellGroupData[{
Cell[1224, 39, 667, 18, 40, "Input",ExpressionUUID->"edbc8ee2-eb33-4bfb-835c-6f859f57c7e0"],
Cell[1894, 59, 11535, 344, 337, "Output",ExpressionUUID->"dad54e30-1c72-45d1-9a0c-bd470a6c1bcf"]
}, Open  ]],
Cell[13444, 406, 754, 17, 69, "Input",ExpressionUUID->"f49add46-0c0c-4aa5-93a1-ab0a3cdbab10"],
Cell[14201, 425, 579, 15, 40, "Input",ExpressionUUID->"d8d44def-109e-478a-a035-d77f46188e91"],
Cell[CellGroupData[{
Cell[14805, 444, 4215, 98, 153, "Input",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],
Cell[19023, 544, 92634, 1661, 368, "Output",ExpressionUUID->"407d81cf-8f8d-46f4-97d8-23bb61df234a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111694, 2210, 3104, 82, 153, "Input",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],
Cell[114801, 2294, 94890, 1701, 351, "Output",ExpressionUUID->"43c1e747-3bfe-4af0-9911-716959e9afef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209728, 4000, 2773, 71, 125, "Input",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],
Cell[212504, 4073, 86613, 1567, 362, "Output",ExpressionUUID->"73bcb11e-b471-4d4b-8d69-b9a7420f6679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299154, 5645, 2309, 59, 125, "Input",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],
Cell[301466, 5706, 40279, 788, 376, "Output",ExpressionUUID->"46daedbf-fa5c-4d92-9bbc-e559d310a8d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341782, 6499, 1939, 54, 125, "Input",ExpressionUUID->"a9f34407-9185-457a-921e-b86ecfecb151"],
Cell[343724, 6555, 40247, 786, 364, "Output",ExpressionUUID->"cc2e0954-785e-442e-995b-8e484c1ee25b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384008, 7346, 1941, 54, 125, "Input",ExpressionUUID->"17234739-bc4f-4a39-b9f5-0e0b4b497d4c"],
Cell[385952, 7402, 40962, 818, 364, "Output",ExpressionUUID->"9e434964-c836-481d-b5b7-c491dd587b30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426951, 8225, 4208, 98, 433, "Input",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],
Cell[431162, 8325, 54477, 1182, 330, "Output",ExpressionUUID->"30b851f8-cabf-4745-9ab8-2d7356dea93f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485676, 9512, 3578, 90, 433, "Input",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],
Cell[489257, 9604, 54423, 1182, 331, "Output",ExpressionUUID->"229111be-c847-4ce1-b6b3-c3fd5cac7711"]
}, Open  ]],
Cell[CellGroupData[{
Cell[543717, 10791, 3944, 95, 433, "Input",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],
Cell[547664, 10888, 54697, 1186, 330, "Output",ExpressionUUID->"c70b2685-2e00-434d-bba0-2bd5f0fffa17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602398, 12079, 3987, 97, 433, "Input",ExpressionUUID->"493d0515-9620-4c23-8daf-cc57dd308aba"],
Cell[606388, 12178, 54664, 1185, 330, "Output",ExpressionUUID->"ecfe24a3-ffc5-4ccc-8132-6f69b24f705c"]
}, Open  ]],
Cell[661067, 13366, 837, 18, 69, "Input",ExpressionUUID->"0ba8f8c5-a51d-471e-ac39-5161632e5ea5"],
Cell[CellGroupData[{
Cell[661929, 13388, 3936, 109, 153, "Input",ExpressionUUID->"d742e0b8-f204-4e8f-84b3-3030a26a2c4d"],
Cell[665868, 13499, 127812, 2311, 348, "Output",ExpressionUUID->"2d91a5de-87ae-4c3c-8d2c-41ecaf527c25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793717, 15815, 3776, 105, 153, "Input",ExpressionUUID->"9046a5fc-8b41-421f-a27b-5709eb5a05a0"],
Cell[797496, 15922, 134123, 2416, 351, "Output",ExpressionUUID->"ffde1af9-516c-4946-a458-7e9321451211"]
}, Open  ]],
Cell[CellGroupData[{
Cell[931656, 18343, 3158, 87, 153, "Input",ExpressionUUID->"852b548e-1934-4833-abc0-39c523a15713"],
Cell[934817, 18432, 135235, 2435, 364, "Output",ExpressionUUID->"f0a35e32-f6a2-4450-bc2a-b2b052850859"]
}, Open  ]],
Cell[1070067, 20870, 284, 6, 40, "Input",ExpressionUUID->"b68e5116-36e2-4d0a-b522-d16f62f87cf5"],
Cell[1070354, 20878, 291, 7, 40, "Input",ExpressionUUID->"dcb4bcf4-944e-45b0-bb33-a939eb807433"],
Cell[CellGroupData[{
Cell[1070670, 20889, 2531, 69, 125, "Input",ExpressionUUID->"4de4272e-5b4d-48ef-9365-04eb86034250"],
Cell[1073204, 20960, 59282, 1167, 376, "Output",ExpressionUUID->"f16351f8-4d62-4f28-9673-4d6ab0fcc001"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132523, 22132, 2479, 68, 125, "Input",ExpressionUUID->"b293260a-6668-4f07-8876-16ff4af27fe2"],
Cell[1135005, 22202, 59354, 1167, 364, "Output",ExpressionUUID->"64e7c126-6e28-47d1-a961-ffef7c042cbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1194396, 23374, 2432, 67, 125, "Input",ExpressionUUID->"a7bf0a4f-16d9-4646-ae88-4a9d7fbcf758"],
Cell[1196831, 23443, 59046, 1158, 408, "Output",ExpressionUUID->"53ff02e4-89ad-4bee-a5a7-be77f6396888"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1255914, 24606, 2744, 67, 377, "Input",ExpressionUUID->"e883bcb1-708b-42b1-b5d6-cba5d0d95515"],
Cell[1258661, 24675, 38261, 832, 330, "Output",ExpressionUUID->"0fc916b5-84e4-4fff-b8f8-325adbe9658a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1296959, 25512, 2039, 53, 209, "Input",ExpressionUUID->"e35a4c4e-8e12-4e25-91d7-b548bda568ae"],
Cell[1299001, 25567, 30194, 655, 330, "Output",ExpressionUUID->"d18d7f30-31a2-4a3f-8685-4061cc61a0f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1329232, 26227, 2615, 66, 377, "Input",ExpressionUUID->"d4eb478f-c01a-49a9-9b2b-935f2656b441"],
Cell[1331850, 26295, 38196, 831, 330, "Output",ExpressionUUID->"4145c1bb-2214-4204-b335-25156c658370"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370083, 27131, 177, 3, 40, "Input",ExpressionUUID->"96f8fd3e-570d-4c28-902f-7c875db93055"],
Cell[1370263, 27136, 30221, 655, 330, "Output",ExpressionUUID->"c0813d30-741c-41f2-a090-c4438fae1836"]
}, Open  ]],
Cell[1400499, 27794, 268, 5, 40, "Input",ExpressionUUID->"799c52b6-43b6-424f-8916-1bdc39c11a4b"],
Cell[1400770, 27801, 289, 7, 40, "Input",ExpressionUUID->"ac504ad3-c33e-489d-a4d3-4c2dfc5cc3eb"],
Cell[CellGroupData[{
Cell[1401084, 27812, 2052, 46, 237, "Input",ExpressionUUID->"c313f39d-8bf5-4c6c-b711-86af4b8a1e88"],
Cell[1403139, 27860, 55380, 1143, 327, "Output",ExpressionUUID->"15e319e6-ea3a-4d14-b395-57ad2a412c48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1458556, 29008, 2417, 56, 237, "Input",ExpressionUUID->"49321dcb-ba13-4c94-b927-a869b94e93e9"],
Cell[1460976, 29066, 55315, 1139, 338, "Output",ExpressionUUID->"68a40d55-6d03-4e44-b417-8e369a1ba621"]
}, Open  ]],
Cell[1516306, 30208, 147, 3, 40, "Input",ExpressionUUID->"516dce21-bf5e-465f-984d-04b0d2cef789"]
}
]
*)

