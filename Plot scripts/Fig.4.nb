(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1505444,      29535]
NotebookOptionsPosition[   1500005,      29437]
NotebookOutlinePosition[   1500379,      29453]
CellTagsIndexPosition[   1500336,      29450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ol500c24h", ",", "ol500c24hkeep", ",", "ol500c24hkill", ",", 
     "ol500c24hmem", ",", "oltyp"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\ol500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.919858710179872*^9, 3.919858883409314*^9}, {
   3.920030931496378*^9, 3.920030961691174*^9}, 3.920030992870123*^9, {
   3.920031037905022*^9, 3.920031057945324*^9}, {3.922197748471878*^9, 
   3.9221978304647274`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hypgen1", ",", "hypgen8", ",", "hypgen16", ",", "hyp1keep", ",", 
     "hyp8keep", ",", "hyp16keep", ",", "hyp1mem", ",", "hyp8mem", ",", 
     "hyp16mem", ",", "hypkill1", ",", "hypkill8", ",", "hypkill16"}], "}"}], 
   "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hyp500c24htest.mx\
\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222784668658*^9, 3.9222785488265753`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"354bbd3a-30ff-4da0-9367-ab1ec2269079"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hyptyp2", ",", "hyptyp3", ",", "hyptyp4", ",", "hyptyp5", ",", "hyptyp6",
      ",", "hyptyp7", ",", "hyptyp9", ",", "hyptyp10", ",", "hyptyp11", ",", 
     "hyptyp12", ",", "hyptyp13", ",", "hyptyp14", ",", "hyptyp15"}], "}"}], 
   "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hyptyp.mx\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222785953870006`*^9, 3.922278609388543*^9}, 
   3.922278704827366*^9},
 CellLabel->
  "In[106]:=",ExpressionUUID->"d9b52e5f-e434-479a-9114-daa21c2e1c5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"hyptyp1", ",", "hyptyp8", ",", "hyptyp16"}], "}"}], "=", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"titeryieldproductivity", "[", "hypkill1", "]"}], ",", 
      RowBox[{"titeryieldproductivity", "[", "hypkill8", "]"}], ",", 
      RowBox[{"titeryieldproductivity", "[", "hypkill16", "]"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222030129764104`*^9, 3.9222030410516233`*^9}, {
  3.9222030726839204`*^9, 3.922203110960018*^9}, {3.9222786372396464`*^9, 
  3.922278675571458*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"a84b32af-27d2-4ed9-86f7-fd15a4b2cff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865638775331*^9, 3.919865653417479*^9}, {
   3.9198656920748906`*^9, 3.919865862016964*^9}, {3.919865896111528*^9, 
   3.919865896198881*^9}, {3.919865944347963*^9, 3.919865969655102*^9}, {
   3.9198744084680824`*^9, 3.919874414900755*^9}, {3.9199563079197483`*^9, 
   3.919956308160919*^9}, {3.9200327682100925`*^9, 3.9200327837821712`*^9}, {
   3.9202155250876503`*^9, 3.920215530210655*^9}, {3.922198412463546*^9, 
   3.922198513159134*^9}, {3.922199062205219*^9, 3.9221990990213785`*^9}, {
   3.922199200987693*^9, 3.9221992284686203`*^9}, {3.9221992681337147`*^9, 
   3.922199273579796*^9}, {3.9221993610836105`*^9, 3.9221993961636305`*^9}, {
   3.922199709818567*^9, 3.922199723451556*^9}, {3.922199822361055*^9, 
   3.922199885044804*^9}, {3.9221999688566213`*^9, 3.9221999990238132`*^9}, {
   3.9222000610905027`*^9, 3.922200117581193*^9}, {3.922200156498107*^9, 
   3.9222001706071496`*^9}, {3.9222003620451374`*^9, 
   3.9222004084106283`*^9}, {3.9222004715143747`*^9, 3.922200556041106*^9}, {
   3.9222005886864185`*^9, 3.9222006548595834`*^9}, {3.9222006905286813`*^9, 
   3.922200748508935*^9}, {3.9222009315457373`*^9, 3.922200980334428*^9}, 
   3.922201092411462*^9, {3.9222012027600536`*^9, 3.92220124017941*^9}, {
   3.9222012733955107`*^9, 3.922201346545119*^9}, {3.9222017311377716`*^9, 
   3.9222019320602217`*^9}, {3.9222019662801476`*^9, 3.922202016578907*^9}, 
   3.922204738327344*^9, 3.9222048022033854`*^9, {3.9222787825621033`*^9, 
   3.9222788382853622`*^9}, {3.9222792212631555`*^9, 3.9222792584556*^9}, 
   3.922279288737035*^9, {3.922279522777679*^9, 3.922279547295783*^9}, {
   3.9222795926732187`*^9, 3.9222796141318035`*^9}, {3.9222798278615785`*^9, 
   3.922279833466509*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
g1HB/32e4f8AD3FTlQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
x/1pJvweHX1K0Z2N/+uOvFnJ/6//H8vqUKY=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
AOxs5tI=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.919865873592553*^9, 3.9198658977953587`*^9}, {
   3.919865962839588*^9, 3.919865971870208*^9}, {3.919956296496107*^9, 
   3.919956310435951*^9}, 3.920032786396912*^9, 3.920215531785618*^9, 
   3.9221985156235657`*^9, 3.9221991021128283`*^9, 3.922199277540761*^9, {
   3.9221993860299187`*^9, 3.9221993970586233`*^9}, {3.9221997145045977`*^9, 
   3.922199732132682*^9}, {3.922199854588046*^9, 3.9221998857355623`*^9}, {
   3.922199972125082*^9, 3.9221999993237*^9}, {3.922200093204537*^9, 
   3.9222001192485065`*^9}, {3.9222001639239993`*^9, 3.922200172685025*^9}, {
   3.9222003674581804`*^9, 3.922200408707637*^9}, {3.922200484041415*^9, 
   3.9222005092145586`*^9}, 3.9222005576195917`*^9, {3.922200594790656*^9, 
   3.9222006564575167`*^9}, {3.922200705926675*^9, 3.92220075177526*^9}, {
   3.9222009335972605`*^9, 3.9222009451667843`*^9}, 3.922200981697082*^9, 
   3.9222010940756726`*^9, 3.922201246400755*^9, {3.922201287962843*^9, 
   3.92220130174265*^9}, 3.922201366566373*^9, {3.9222018468521967`*^9, 
   3.92220185866032*^9}, {3.9222019193040676`*^9, 3.922201933623185*^9}, {
   3.922201986789386*^9, 3.922202017930416*^9}, 3.9222048029496784`*^9, {
   3.922278824439081*^9, 3.9222788401796694`*^9}, {3.9222792619181986`*^9, 
   3.922279290193155*^9}, 3.9222795510859747`*^9, 3.9222796248740115`*^9, {
   3.922279828301738*^9, 3.922279834013562*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"c599da66-0b58-4222-9c43-d60b986d9a7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "10", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "400"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Dopa\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92253180539235*^9, 3.9225318542630076`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"35bd7dd0-b9dc-4fc4-a206-b1343caf4662"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
M0Ibzf3xf3/6iPv/+H8Al3NyHg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
zuhxL2EfhlebZjrg//7EGPL/8f8A8RJZvg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
z6kMwP/3r5eY/4v/B3rtzsE=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Dopa\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 400}, {0., 0.03069249060886481}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9225318282409277`*^9, 3.9225318554151583`*^9}},
 CellLabel->"Out[30]=",ExpressionUUID->"79bc2b97-9fa8-43b8-bcd2-d00cac914cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865997697145*^9, 3.9198660281221437`*^9}, {
   3.919874417909031*^9, 3.919874425750944*^9}, {3.9200328049280014`*^9, 
   3.920032805144869*^9}, {3.920215544823908*^9, 3.9202155501520004`*^9}, {
   3.9222010809426775`*^9, 3.922201085878107*^9}, {3.922201439188493*^9, 
   3.9222014829861526`*^9}, 3.922204741866678*^9, 3.9222047960996904`*^9, {
   3.9222795748189516`*^9, 3.922279586817336*^9}, {3.922279635561389*^9, 
   3.9222796444369965`*^9}, {3.922279788966995*^9, 3.922279805893332*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxde2k01W/UtnlWRIbIPEsRMqTf3oaIJIoic+aMf5XM4zGP5xwkmRIZCymi
aKIkSSgNlCFTqVRCUp7zfHjftd73fDlrr73vfV37uva91n0+HMmTgUc8GOjo
6NQZ6ej+9/v//3zPvBgAAqH4f2KLTQtVzxVCcYu5Ft8OpRqiLktvwnlvKJrm
HZ1Ymasl2DZnbls8FIrxSUzagQ/rCffssaOxLqHYkr03fbL9GnF/885MntOh
eGIt+PRt70ZCLCf6UVliKEZKu6vGkZqIcJ7nG6oFofg5qYBDpuk6MZIjrnO/
NhRfSLHef/StmdDgDQq26ghFycOkv4/0bxI55Ht1E89D0XLul25RVQvxhZd3
+r/JUCzpj6qhSN0izCiuYgy/QlFG475kZHMbcWXL9eMU1jBscN/f9sL+NsFI
ZSBLbQvDBO7CpHHRDsKF72jv9R1hWMOeekBxpZO4Q73MaAhhyMn84qh0yD1C
mH9Jb8gqDDV/DxWNRt8nQnKNQtzcw3DLTMoLr/wHxCB/XsPPkDBUDWmbiOh4
SKjmTc8lpIZhyATTobtLXUTG1j1S/EVhOOkUwKe87xExl5dkX3EtDLN7hnRT
zj8mjAVGcjXu0/L95jYnmZ4Q5fny/V1DYbicWBNSSuolNgRCWW1mwtCD6zRn
mnAf4XC+B6dXw/BEr1j8y4fPiFuCwuFnOcOxh8lBTZ/0nNha4NPMLBaOdSUS
HN+vDhDBQu0LearhGBbWAlOVL4j+Ag45OcNwrJV83pBVO0goC9s7t9iE474C
zSd+d4aIlAt1Bcbe4eh8hry4Y3SY+Ci8/uJVeDg+/PXsij3HK0K/0JzTKzMc
GX8M22SbjBAl24qNVkrDsaG1i8My9zWxVvglKvl6ON6LncrN/P6GOC5CtAp2
h+MiS9fisPM74sbFrMWqkXBcmCuqjfowSvCIflDU/hSONXcv/S367z0RULTL
rWc9HGN9jxt5co4TvaKxRbabI3D/oqDp59lxQq544OWcZARy2HP8auufIEjb
JTeHaUQgybCM2+jeJDFe/N8BdpMI9HrytHz1zhSxT+xB3AW7CGSLubBZu/sj
UViy5baiXwSeOto0H/dmmlgWc1tqi47ASa6Hi7A2QxwtbVYxI0fgZ62zyQvy
c0SjOJPX28sR+LyzNoPBbZ7gKrMuO9USgQa7Lrf8qftE+EhUvlnriUBT9T++
BowLxKOyX1vS30Wg8uRLhtM+XwgpSWNzka8RmOt4clz4w1ci5lJ+Yh1dJA4I
rpIddi8So5KznXv5IvGP963TQX8XCe1yrdWnspEo/e57Od+L70SeVIqag3Yk
+rp3Z+dd/UH8KH99asEsEt/eO2e9j/qTsJBWrIh0jMSsJ7IXLeOXiPrLYWNc
QZEY+ODcvELEL4JNplegOD4S/+1v+sUXvUy4V2yzVMmLRHJpmb1X+grxQMY3
taMqEmX4pJ7GXF4lxCpvPzjUTsOXzemofPSbiJDlWh/ri0QSZ+gg8WuNeF3p
oBnwIRIfRuzZf3XXOqEhdzXg3/dIfK/iWQ8hfwnylb9VWUxRyKIyyG795B/x
Vc5iQkwwCju+M3le5acDs6qSbQ2KUWgsQ9haPaWDKvlvR0EvCv/mBNP1ptAD
UzVkPreIQqmTczcsDjGAi0LOI2fXKEyKKiZtEWaEjurxjW+no/A/k9VJ0wVG
2KaophObFIVZ6r2yKo+ZIKQmLpjnQhTu+6g8tlDDDEOKg3VldVFYd4flencu
C6jWSk2rdkYhVU3V+GsyK2QonRa7PxCFx4mV6pIENvhU+/C41VQUFidbKwuk
sIOxMj954lcUdos+OpCUxwHlde69/7FFI48g52utek6g23GTkUEkGmUsnh9x
6uMCh3rmfRSVaHT7YT2+a5kb2nYcC5HCaGw5x3jom+JmELh6peH6kWhMD440
X1TngWCVlTkDj2i81mcQI/6aB55fNZEaOheNGcmrf6/E8cKOnQX2bmnRaCr/
N7dcdQukXJvL/VkUjeFKblya01tgeqdOf0JDNNaUJoTGlfKBQUMqK/+DaMxR
cbKvduaHkl1vsWI4Gj1ymEMfy26FPw1K4Rqz0Wj0nEow/tgKtqoRzV2/ozHY
cdQxuksAbjQ+XbDmisEi5iudx4oFgVdNVG5aLAY5c5Mdb0QKQUCTn/NZtRjM
qdv1svWkMPSqdRQwG8XgL9XNzPGHt4H8de7BvGMxGCXYL7XHUARIu5045Xxi
sHTRQGF5nyiMX79m1BIRg/1pIrFTsB0I9Y0o46wYtIt2N5A3FYPC5sOtr8pi
0G213XLKThyW1csWPZtjcLmjVFdERwKsbywqrnTHYEv+2hapJxLQqKHvlvw6
BnPXTfKFHCWB+ya5SPBzDAo/Gk/m/SUJpzQnX1b9jUF1dZHv28lSMHXiAqso
Wyyy3Nmvc1hNGrZc1Jdx543FPMfzu2+9lAZ8N4/122Jxwk/D71S0DASIUByX
pGOR1aAzJlRZForsdcP1VGLxnVe91PdRWXh6cTKftCcWxbhk1GcocvD7XVpz
H8Ria/zZlVOH5EFBVH2A3zQWMWR2I5tLAY45vFtwOBKLr08sVHgOKACpKIG9
0j4W9/5X6kN/QRGujyrLfXGPxU93pnmCPJVgQnTYQDMgFr+9Z1Hp1lYGHsdI
56hzsVg+JGPKy7MDiGKZyO7YWKSenArxWNgBfmN9BdxptP7hjqaDz1SgcPvZ
mzbUWLTQUg/xvrETehy3DxYXxWKwkhy3btkuWCnu/jpdGYv5qrMadQdUQe69
P+fOhljsVS4rnX2oCtZiAgoht2JxlNVC+q2+GsQ7dRp13o/F2oJ9z9IeqEFj
iacry1MaH6YqVgbj3fDh/aZoi+FYtM9lcDDp2w3c4q2F+WOxWFFWet3NRh30
nJ1b38/Q+L1UlHGaUIdTpazDcoux2PNawR+CNKDgQ8NiwO9Y7JrbVLmJQRMe
idtytzLEIVNw68fBfE345UyntMEZhzJB5z/k7twDMmXVxiZb41Bf2SzD/ske
ODJu6ZYtFodffn7W3uWlBbESv2NG5OOwXnirrgCbNlxzuVQkrkbLZ01yCtdr
w2iZaZuXbhy2zHyLJo7qAOfE95cNhnHo7+9ZkPlXB3QlC3+smMdhiLfkO+46
XfB2NdiMx+JQcoGls9t+L+Rf+qSc4hyHqZkd03c260HXBOXAgHcczlunwdoj
PfgpuddDKDgOfTTcvybE7QPJk1NxLhFxWFBYeM4VCLAsTy+pJsVhuC4vxwU6
gOhJ9duLmXFoCzVP1boB6qVGR7TP0/hwyQ0XGCO8PUlaii2Lw0nvG+8P1yOw
X97B+6QmDkMruN/e49MHralhFd7mOORouibxLVIfPKWjzOzuxGFw+vFnY7P6
kOsm63WpOw6vnOAjZ1sbwIPLzxLm++Pw6ZhHM+tDA1icOlum9joOm84/32uq
bgjiMmIdYRNxOP7nTdexSkOwcH/05v6nODylt59RXdgIIisCltmX4jD+wM07
41lGUPtRgO/I3zjMra5qPMmyH17L3N1VyBKPwteDq27H7AcWDy/zyc3xqBEw
rvp1bT9oVm72URKORwZ21dr1c8bgPt2aGCwVj6W8V7Pnl42BIutS3q4cj1nL
Lh9azpnAPQ+2uwya8fj7mN+E55oJfK1sfGdGxOPZ0KbRP9EHYPuM7SrFJB6Z
Pq7phjKbwkE5+q3vLOPRTol4PZZpCuGeNWrSJ+LxOUvssZ1CZlB9xcrC1y0e
71pf2O9bYQavZn6favaLx24DMav83QeBSb48+c/ZeDyzuDTT+OAgqHuZVRjG
xGPU/M/xO9bm4Fr14156SjwWZy1y3Z4zh5zZwrEhcjzu6k8oqo8+BJ3yhmsi
F+Pxmu2ZVoqABSx4fRZwr4hHbze3HQGNFrCtmqpefzUebV6mNID5YTCd22u5
1BKPEmeoN1g/HYZQhY9+evdo+tm/8Z8ysoQr3hmppCfxiKNvKJ15ljBcrXGl
bzAehysJobxZS2CYH33APxqPMmetRLx0rUBVMfGDw3Q8vlPyOqORZQXOPirr
FV/jUa29e2x90gqyal4KfVmJR/2Vzjt3tY/AnfkoTU36BHQW2l4bmX0EPinK
HYniSEBCp2CL+uwREDrVH9DNl4BLuiXbJ+EomNSGpHNvT0B6aUH+1AtH4ewn
sWobuQS02hvPI790FCqUHncV70rAhB976toPW8PgqcCJae0EfNXFPGhQbw10
dYL/VAwS0I8/nOhkt4Gdn+9uCzmYgMFLiseVvW3AUdlbq9M6AT+aPQ9JeWwD
Gb481ixOCTh55+r0kPwxaK+7FWThlYA764RrOVOPwdxnl8z8IFq9cES3yudj
ILCDvfZ9WAIKR6y80LI4DkZ+TY/kEhJQs2g5Q/76cThdbzcVkJGAGUMWh9cE
bKF8gZ6uNS8Bb7NOXL4aaQsDO2pFN0oSMMJ++1liyhb++R3RMalOwMLI9Vs1
Znaw4+qaTXZTAk5PFR5buG4H9l/Kg0faE5A0vG+ZQfQEpKoczBbvSsAez+T5
+cQTcMv/Z53XswQUCbtUXLx4AmauXuxpeJWA5USH0TYHe+D/aji98iEBo+jU
m+177MFg5wI9zicgg1rkBUdNB/gvIFcs5UcCxumElYtcdoDSa3p7B/4koPwr
7oNkXkfo//rxuBAzCf+MuIy0xTrC+s7MMy6bSChfUGGYs+gISoGa5GpBEpaf
TQva7OoEtg1jVxclSPi5i6K+e9AJkr8l9morkbAmrmrjh6EztOzaORurTkLO
k0H7zFuc4WPgK8YneiQcVyvgLuJ3gS2N0RK8xiQ8Ks5sYWvhArgot8/uMAmf
H346fDzFBQJUn9tdsiXhaHul9/kHLlAcdC5k3pWEP/I5B/j+ukBfozhVzZeE
pbls959oucLa4uOGsDMk/KgrOngz2BUU1IL67keR0Kz+U/TwVVc49p/QPHsy
CbczkXZJzbtCYtM95iM5JCxk4Nh/UeYkNH/3liq8QMI7lue59FxOwqQaL0yW
k3BeWKSNrugk8AS32SvVkzDZM9RpeuQkENddQ4NvkvA/43GhGT438PvBntfe
ScII585n/w67wcXd15sYekioG7f7P+UMN+gNPtFv9oKEnV49o149brB6neEz
5S0Jq169Gmlgcge5n7Ws76ZISAoUk9xAd7BWPyoj/YWERVQ8YhXlDvGn/6Dv
MgkPmhxmK29zh6bmy47NGyR0s9R9tvDLHcZ/Hgz/w5aI/425i6rs9oBNGkv5
hlsSsWjRONQpwAP0zhQ1p4sk4gCd1bbIWg84dcNoYEgmEf/S8bjHzXjAhaWF
BZGdiThtHVTqI+UJjzXy2N21EvHwTTMOVSdPWD6zT64eaedTP448v+AJMjen
DZZMafVeVjJGLz3hyK9MZ72jidjx8jdvCo8XxGruiSQ5JGLCFeMb+Qe9oOHs
+4I+j0Qsu8ko4JvkBWM3k27yByZiZOKqDt19L+Ba3jnoEJqIMqLxIlZ/vEB3
z8jXirhE7E5uarLV9AbvkBjOL2mJeC/fdIE30BvyW+QVNHMTsV/9We25am/o
Xn5uFFWciLP53WOkCW9Y2hPq2n0lEe/vD7LV2OYDUuckorkbE7GxLGwt9ogP
WLb2FNq0JaJb19tijzQfiF4Jai1+kIirjPNCY/d9oF5LeHj6aSJKbNLGyVUf
eHfu/qLKy0QsyTScDdx1Cjhu+XCHvKedr2WejfU4BdqrvEqds4l46JkfB8/F
U+Cp3W7M8j0Rb8TMygoNnILc0JNuFmuJKK9Xyp/L5AsPb3HE5jMmYc3MqYZo
bV/4vnq96D1XEhrz6D4Z9PUFCR37NjmBJPS4wnE4vcQXLMIYXwWIJ+HJ3xcF
Lg/4QmRb3Y8WhSQsOaMssJXBD2p/H928oZaEKj3Du0d3+8EbnXVlk720vISt
y8+TfsAaXnEg2ygJr9JVX7Kh+MGednOPkUNJuBAo+vfvPT9wX1uKEz+ehHI/
POJnv/oBRbe4xMslCfkUPQ9yi/rDvfD9txt8krDQ8mziqQP+8K39y8hKcBJG
zn+wWjvtD2J/8pYgkpYXc1hvLfEH870Eb0piEr68LdNd0uMP4REzKgNZSRgj
YcNe+90fqm9nmQkVJGFW2yaNl8IB8OrPHi+XS0m4Jn/uroh+ADDrfUiork1C
ly3KWmFeAaARmVy22JyEyw80dOYzAuDknV0d2h1JmC/KfM6rKQBy1kfexD6i
6ZUX0PJtOAA69WKXe54nYcHYpcGolQD4EqnAx/smCSUHlDu4hQNBpGNgl91k
EuoaLkVf1AkEs7+h5pc+J+Fz43060naBELpP0md+KQnXj5XLXToXCFeiniSq
/UvCL/SCRbx5gTDc8V95GGsyHg/7yP5fUyAw/hO+e58nGQPiKtdv9wXCbuLB
O/ZtyRitiGLfZgLBJfrUqpV0MnqeCLjISBcEWZ1bthbuSMaVtIV8Oq4guPOv
XW1SMxkVVByY/QWD4BPhZqEEyXi6kSXCRCoIhGM4fYMPJGOXsGpx1o4gOHC3
ObndKhkv1SdJ6e8JgpAN+woG+2TU3Js95AhBUAFM983ckzHwMXf6lEkQDMbU
j1H8k/Gu+Kk9Lw4HAf0967W3IcmYKcXzSvZ4EOyi+ysgHZuMF62fRo07BoET
Vqr7piYjb4zKcTr3IMiIPWTZTElGRX2pIpJPELTf++X35yINT0ui0C8gCObo
SlINK5PRZKqstTU4CAT1ja+kX0tGkd8//T1CgmB/3NcHQ63JuGkx/ODZsCA4
cz//g8j9ZBT0fvdzJiIIyulh3a2XhndRSaI9KggG9GeF6oeSkVrOW/o1Ogj+
xWVrLo3S9PGKtyXFBIHKA60jejPJ2HMtXT+CFjswjAeQviWjQWhh0BCtPs0g
Jb1vNRk/3t5Jl0nrdytetZqfIQWJZ01q1TS8mQevuxw4U/B0ur2dLI0PP2Pc
RAV/CloOHB5lovE1NFT8t7A9BS12uGuZ0OYJTnixTVM+BRW7F9YX/IOg7GGY
VpRqCg62kIeXvYOgn1HKulsnBdmdRSM83IJg3bA3iNswBbsq9R7o0PRUJgVn
2pinIJu9cc6ZY0Fg17WtttgmBWeezHwQoPmRwvTw0bRTCr6/MnhXkuZXi5Hv
lIp3Cj5K8juSTwTBRxIfXch/KXiS1/3ZWc0g4Ou+LdoZnoIdihZh95WDQJ/Z
XYeFlILzB/c0hUsGQeB+rmMWmSm41VNxslwgCEoSbwTn59PmC21P28sZBH3d
DtnvS1Mw7DzD2Yx/gbDGzFwvV5OC+3bKS6dOB4Ki8dWegOspGPzqe0zQ00A4
nmQz3XI7Be+mq3MYNwZC4qO/9BtdKRjiaO3EnRsIN1iuiJn0p6BBioRmb0gg
TBpb7M0eScFAw6yTsbaBwJO8fHxkPAXrtkUNq9PuGzwuOSP+KQWbmwLJc0KB
4M9qQvb6mYJaQ9haTruvF02+XW1Yp+nZMBzm+TIAepPP964wpyKlakFM+3oA
rD6GWdicirG2rYyiWQEgzzbHmCKUipcsjYsFfALA5kCOxIBkKjYdWHbfYRgA
CSna+4SUU/H049U5V9EAuN4zbueikYpCmpTu20v+MM6WGlK9LxVXx38VE33+
sMlUjbponIpP9/zW+lbuD/tS3zRoW6ZiSYWn0WCoP/g+ieuLtUtF7rDa9IVD
/nCBXWm+52QqMv/JfG8g5Q89poPMvH6paHmha8vbX36wnBouZXc2FSdMDBlb
e/xAplcKLkWnot7R7ynvC/3gKMdT+/nkVDT9ZEC28fODOLPToWrkVGykD1+X
2OcHDWkieWGFqZhvkH91P7cfvO992HT/cirafWVP7hn1BS5Ov372q6k4/JLZ
91qdL+ge5P9s1ZKKGaUHjNbDfMEn/Q5r4d1UfJP76lOLiS+cf+ouM9mTivIf
lXSm+H3hESe3vtJgKi4lSzEnTZyCpYM3HYPfpeK+7fvEK66eAqkMx/D2j6ko
uDFvZRB2Cqz6mM8zfE3FlNjTxz2MTkEM17Vms5VUJO9SX+PdfAqumh8boNCl
4XzD9XnzNz4wmvFv4S17Gp7u636x7bIPcDy7wi7Nl4a7oNY51s8HtLkPy/mK
pqGDAo9MvKYPeB1aMWiWTUMDx4gGmX/ekJdZ6vxnZxq++MRG8nvkDQ+fmUQa
aqdh9pdjMk5Z3vCDe7EgXT8NpbaS6f/ZeIOERcHNIbM0DDW9FWO53RsssnBQ
xDoNzRI81+0+ekFU/9xXN8c0jD2DL8TqvKBuE5mz3jMNdxvcgMv/ecEbCx2F
pcA0bDijRfqs5QVs2RNGemFpuEnmbt+fv56w53mqKyk+DXuNLsHrh57gsXl3
dF96Gj6Ia1gkpXoC9fDbQv68NFRspGwwH/aE+9nxrQ4lafjpwS4fZ35PWHyu
NFxRlYbKmzUV8t54gBjP0OJCYxqqlbzYUVfiAeaWEdya7Wl4l2vUodLNAyJy
pJWiHqbhSPhqZrKCB9QMPDXu7kvDQf3BIpsv7jDCc8aN+1UaRgyyWPBddwcW
K9FYmw9pyDShbd0V4g4a5K6i4jkaHreqr99edzj5wq9t+nsa3m8ePLyZzh3I
vFtfqfxJw88SKXmNXW5w16rjx1mmdEz47jN8NNUNvpA9Nndyp+OArFzh+iE3
EB3k3sEimI7MtzLDr21xA7MtLQcsJNLxX2zHlB/tfRx6xMkjXzEdFzyfOO+l
vZ+rKCzx73en46Fud8ftrifh5eC1Ejm9dMx/FKUjIHcSGPmO3w7Yn46ui+et
FT+7wu6jGyMtFunYpVvDeaLRFVyoVUv/jqcjA2v6tbqzrpA9dJjXxDUddfRu
xUvudYUOvlWV7FPp+Pb0+NNOOlf4fLTMbOR0OtqXtN1JeuQC23IPeIlHpePQ
kc2pkRkucGB4McErKR35t8i6Xj7iAiH8F8oastORa/ik7T8hF6i01u9YKaDx
pR8Xk7zrDEO582+gPB3dGBt5282dgf4leTm5Lh1DJT6+ffbWCVS36vIN3KDx
Z3hx4qSPEzjZTO4S6kxHOftNvlGrjpCRl2bu8jgdC3rq6GVTHOH2y90+1QPp
eHzt6BcnIUeY3/oucfFNOoq/fTyoWuMAgscSyrWn0rHz1YpVma4DGOcr341d
SEfJxxZCzX32cObV0LueX+nIwv4gK8DZHsoFIld5NtLx7sAh+tc/TsCLYzJb
7dgyaO+dnvGlpBOwkd+ndok3A2vqE4/0ipyAnSNnLOa3ZaCjw9lExyY7cBDc
7qsmk4Gvp4p9mk3sIO14d3KYSgb6+w3MDLy3hbbz/hX392SgRJ7senuILcyO
bL3PjhnYfi3PJGSzLWwV6hyzMs1A1j2PbFlraL+XbT3XLhzJwOrg39eDDY9D
cMEmwUn7DLRWvtxy5/0xKHvdoq7kkYHxI3MN8+HH4LmQs2VwQAY+m3aq+it4
DP7asvq3n8vAnF2+l9dv2oDyhYZUhrgMjBZWrPpkbQMn3hy/YpaWgT9Uljyf
LllDijDdQwo1AwUdO8zL86yhxa76w9uiDFSXqVwM1rKG6QuW61JXMtB+SKQT
3x4FvrerQr4NGfhKKmVoU/RR0N92SbP5Fk0PW1f1camjEHTC9Mif+xm4dHNf
Y2vPESgp/B5g+DQDvwVPCxYEHoFnby+kpw9nYJtGyniC4BH4s82gemgsA19u
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
HFpSP1EVPkOYKnh6FPZRUaq/hkHw9jThcqD9NPGCija59064bXwkQr03xU++
pKKaNLsS1eQjkZVyMifpLRULJwuNr1GniCvVLSVKH6gYerKS//bUJNHRw3G1
f4qKtcwuGZ1ak8TwnNPt4DkqBl25i3eyJ4gFtuYnAl+o+GXzrGfL53GCQZH1
dft3ml6pxu+vHhwntpnazzgt0/bbviPYyPkDoebTsMTwh4pCMRpZ0rveEwdS
GRmrNqg43Oah85NljHCpOc57kCkXf6soYN3MOyLkSZ34N7Zc1OJ2ldXvf0tk
zW+oULlzkbwQqlPd8YaoZLfW09qSi2zZCU0vbrwm7ihWm70TyMWTqfR365tH
iCHTddsYkVz0/CBdLdf+ivjkY+klLZGLbv+FjSv1vCQY0irOPpbJxRWjb5KX
x4YJodrVBF/FXCz5zpV0bm2IUO01p2zemYuNfcdKs8SGiAOfysqad+filS/3
KM9MBwknjl/XjmvR8LeLqQlFviBClEw7/uzNxaOc53isbg4QGWbFT0sxF/e9
9Tdr/vScqDj1/Y3h/lz0+7WnRSa0n2hP2z83a5qLycHX7G9ueUYM1l5YTreg
nVerj5dqf0p86v3CpHo0FyPqlH7KB/QSdJ/1+YaP5+LuOTqZ2J1PCCHOfMlQ
h1y02pvp/XHtMbFT+dMuUddcbKPX3s499IgwPkgQ9zxyUaqzbbCppZtw8qWY
u5+i6RG3OTS1sos4kz5zgi2QNt8x7gSz0odERp2uT/3pXBx/+SGYcvkBUf40
65xlaC4OcD7Zvv/6faL982TiUmQu3hz5e5v96T1igFMrtyAuF7POF/wVe3eX
mFNOL9dL+l//DDyF1TsJOvMPjeNpuVg10fEvsPgOIeCnfpeUnYuzFEEGsvBt
YmdG8jOF3FyU97jy4vOVNsKo/t27vgIa37Y2xe9GtwiHvl2fgopzUfzJtyN8
P1uIMwsJq/zluWiTutfyUeNNIo3rNUvblVz870Upe2zUDaJ8x46tjnW5aMtU
e/qWbTNxyzxWmr6RFhNtzfP614kBv2G1yhu5+OaQuH6OdhMxl6GApm20fajd
wais10j8q4+0+NKRi33GZ16HFFwjBJ4NOJAf0PatNkk6faCe2PFFxlfzcS46
OlsllInXEUbcYWFvnuZir4eTYi+phjih8iw5aiAX/58/xQSd/7/x/wB+M2/l

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
IvYttBSzvBUHGaWvdedDEnEogtOYs2gbdEyLO+xOTES997ss27y3Q+R1i8WG
3ES8mZjWJyO8A0R94/MPFifi9p0W67oTd0CTdKX2UHUiHpzd8j1wcgf4fRwa
DGpKxBdZ4wFM9hLAU8wV9687EX+za2udaZaAuy4HxKkfE9HMPZOkpioJLluD
Grf9TMS3p+vmP5ZKQvLMy6o360j4n/aGDze3SIHDi2NMOzhJ2G/w58f5HCmQ
u/HPyo+PhKrfiKo6VmlYzjhTUi1KQsG8lN3rSdLQ5as491uShOX3LlQzlqXh
ilGLnq48CdvM108GxMrAKRmXvEw1EhbumM49tywDZuvnx7r3k1DjwYezUiRZ
2DaWrS5qQMJP/Jfdhdl2wlyTNNnTnITFqrd+JVF3Qkvxw/4bdiScs/iTHySy
C/IT7WR/OpPwvaJazljZLghynTm5/xgJ+bT5JH9qygHqpLamBJPQa5Pg5JXn
csAvJibccYKEV4ZHyze47YbPf2/7CSSQcPloko384m5oeHuw3jmNhPWjqryi
DHmg3h/juEoloUOLeNaIsgJ4nIt1mj1LQpbrF8aoXQqgfpK/QuMSCZ9e2iOo
dlwRNthXLMVfIyFV2VTunagSDKnpmz+rIqHfkdueZ54qQRXfu0Lu+yS0uPu9
JyJcGZJ/RMw6PCHhjduPpJp4VcChi5O41EbCRzySH/0DVGB31WXqly4StrC3
BDxoUYF/OfuGld+SMHL/vtpHknugK6hHOWqUhFyjxdtikvbAlYMBpCeTJDTT
tdn2e3QPRO1m7t4wR0LdiAFOXQNVOMhRIGH9l4S/XG13uJarwraJPRHnmZOw
KnnrQUduNZh79rx5lDMJZZ9/qNh7Ug2eXfXg382fhOaURAW2ETU4n/rHK2Jr
EgaEq/i/PKgOQV70ugapJOw0+37/bL06oJ4cK4tCEvISL4YC5TRAQKLJ/qB6
EmYI33Z2uKABX1Ydy/IOJGHf7Zs7PXg0oeHD94V3BknI82V50xmyJlAfZRhL
WyThuEMdy79/muBZuCM/yD4JP8/l+pVG7QWN2PsTdS5J+HOnaBFjfi9scLLS
/ncsCV9Oub/rO64FQ1oTmYYhSejZfGf9iQUtqN5CGsw5mYSXpS0j4mO0IWVh
i/zrhCS8+NTy9W+mfeDQXxW7LT0Jo6RIsT8z98HuOuMOn9wkvG5Z1XxScD+s
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
+Qkj7Nz/tf8HrjrNdA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde3c8l3/0tpCdsmXLSsiMiu5zMstO9sres5K99/6MQkQqpCUqMqqvIpEy
KjOjkJJSIknF4/njeV6v3+/+536d1znvc67rOtf7/u8Wdwu28KSloaGRp6Oh
+b/v//1s0RVRTGoLx/8Xn/a3Pi02EI5uHkm3TZNriE+UvKZHs+FY7nfTU1S/
lrBv7lh3XA3HZsb//kna1xE979d1/jBHoAkH7c6quDvEYWaNzPOCEbgYYede
eu8ucU8puEdDIQLJyQo2kX/vETK2V7kGiQh8Ju5qWGXTQBTHT9qeNo9AouJc
+mTHfYL9Kl8Zp1sEivr7OUkZNRGJPWbTtaci8HCs0tOvM83E8s/03WapEdif
xl/deu4B4S3cGvi1IAJPFv3Qa3R+RIzqrt7Jro7Ao/Iys2SxVsI0QGlVtjkC
LzdLVXKKPiZaqT6HOrsj0L/q7VZtuSeEWkt5ktf4Jt5GdoW3em3E1anhZ/Tf
ItDRUG44N7idEGDh2HaFJhJ3iQiOS117SuQpH7U4zBmJ6ND3RWOpg6CxSyyc
lIhEqo7IQJ1pJ3E6oWksdl8knjSJ2rrc0kV8vLooLmQQiRpa/C2sWt2Efa+s
d7NtJO68hNlXel8QPSuuN239IrEwY0M7J7yHQJHixZXoSFx7XGtpJtBH3NN7
pX4uNxJVp1jc5un6CZlAlhjVi5F4riSXlvt3P1F8Vvtxf20karufmVdfe0Ww
P4hiCHkSifdGTE4/YnxDJEzfMWJ/E4m1Mdun9uwaIJZZ5kk3P0Ti3arqju2G
g4S3isSg4a9InDT5ZDwaP0SM2jkIzjFFIYPKcpRI+zBhkkh1SReIwv4HXzMy
+EaJ1uruSin5KAye7+C8GPWWUOujm287FIVLnJPF3V/HiKpfmkpuZlFYb6Sq
XBM6QQiIng6jcY3Cb4EK5DN074hc/ZvNZSejMINXaphj6B1BEzSzoZUShR2T
OTIrd98Tp88J6b09F4VsP17tyyueImYfWGZFXo3CyzZu49zZ04T9TE4vX1MU
5smKHv6bOkO8ZH3K3fA8CjVXyPuDsz8QqPrPznIsCmOfmeoMlcwS9+z3Xfzx
dROfoXY69f5HQjopcIa0EYV1vYP1OyY/EcXXKmUVOaLRQ1py/1XOz8S2/vGg
l7ui0S3oTdRNi3kiYZXnnr9aNAp66VvnXvxCLIma/mbWj8b8XT8rHv/+SngZ
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
BsfJq/y9RbS2eLTsGaPi//hJJaTw/8f/B0AQRWc=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1500}, {0., 0.004305132209284579}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866034057536*^9, 3.9199563708126717`*^9, 3.9200328072877254`*^9, {
   3.9202155459588585`*^9, 3.9202155511452065`*^9}, {3.922201473620805*^9, 
   3.922201483362195*^9}, 3.922204797374789*^9, 3.9222796464535894`*^9, {
   3.922279789385025*^9, 3.9222798063406954`*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"af12f0f4-05c4-4776-b297-396d8dbed355"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen8", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen16", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.2", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9198662963389387`*^9, 3.919866350738162*^9}, {
   3.9198663926309724`*^9, 3.9198664727187824`*^9}, {3.919866507086978*^9, 
   3.9198665133816967`*^9}, {3.919866544130741*^9, 3.9198666316374264`*^9}, {
   3.9198744298274*^9, 3.9198744333564644`*^9}, {3.9200328131036205`*^9, 
   3.9200328133501587`*^9}, {3.9202155607111244`*^9, 
   3.9202155629445896`*^9}, {3.9222020664404073`*^9, 3.922202098413243*^9}, 
   3.922204746574091*^9, 3.9222047886511097`*^9, {3.9222797323248053`*^9, 
   3.922279776629465*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
Qn+/9Iu4az9guvHt9R3d6/bzDCYdVnLxlv24SChlFYrMnbfa/XPRsHm0k49u
DT/wu7FeJBccfK9CX29eA+8quXDux3dobIf+FqE19GstGV8w+A6vXQMcgTJr
0LmgN906lYN8If8KdpU1bN2nfrrRLwcr/x3x8tNbw2z0xu2q4jk4tK/72EbL
NRRGDb3eXZ6N21LPln0c1vB4msPayjobH2VlvjB6r6F+/qc2B2s2Bo+03/II
XkO4vVg4b8o37IaXOG3iGgbvlqs4nf0GU2XJfreva4ijOn7/wOJXvFFtilwt
XUPJdfbyw5Ff0aDhbuTSvAbNcL4BP/Wv2KS9l2dxaA1ZEt88xSlZ0DhbX+Ow
tIZefjsntvAsKCUp/lqkpyLplOJSyZNZuLgvMPowGxVpFron+HzuC+6n9Ls5
clORJ1k0q0JxXxAqJW/yZQcVmXvIspVy7guyMl4cnRWmIi3KzTJTDF/wR7aX
V2b/+vnC3MsdXz9jOuvw7O1DVOTBIzEFh+ufwX7Ury4NVGR8ylh/XuAz9n3v
SplUXffH2V8Z/icTp3DIT1KbinhEVEda+mbiWv5T65sGVMRVrmlV+0QmPJU7
1JIvUpF4i/bL+qsZiPkpLTxqRUUWP/Ly3cvKQIGqD634LSpy39uHMf12BjpK
2zqu3aMiKgomadSSGVjWkMpNfEhFruxdxZXRdGz97fl2wIeKFAZc3NP4IR1y
2i2OIgFUJGNwMueCdTr0avfrWYRQkbT8i75De9Nhd/bxwdgoKiKf2VP0eDQN
L/40sve8pyJx8XZqoilpSDaQGBNMpyISN41oa2+noaL5YfmlbCpib9PM5yaX
hgGjPwkRhet8Go3zH1hNBcM/Mc9/5VQEz2T5u4tSsefSA7Md9VTE7VzS7ZfP
UqHUXUeMW6kIdcoZJuVzqTAxF90R2kNFYtlOVI3sSIVLv8tS8wgVaeiIj3s+
mIKQqzWNfDNUZGHLG2uxzBR8Hhb6bLBCRbLHTIW+PUxB/Q2nwNf01OQStRWb
4ukUTI3/tv3DSk2SeLmi07engN1ut9YWbmoy096nc6D5E8SnHfae3UFN6hVH
Bv46fcJJ+wqmQGFqEqDvbK+3/ROs5gX6avZRk5Tjq6IJ+cnwdLpbyH6ImrAG
pleVWCYjark04jSoiWZQoW/6pmTk3d9x30+VmrjNFf62+PoR7VS3DStPU5M9
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
aq09mcn/vBXB/v/l/wObOY26
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxle3c4Fl78tvHYDUURlXa0KJXRuE9ERiWKjPqSSqhElJmsyihZ2cmqhCTK
TkI22XvvvZ7HXq/3j/e9rt/1O/+c6z7nus7nc859n/uc88fZqftI5S4DHR3d
DkY6uv9b/6/C5WDLy6+C/wcJ/ft77/TM0NvG0jb24QjaM0uuH9vtgKNLLqkO
RiLYsVS0sIXLFU7OqW8bQ48i9H33Pzt6T+yUP5BL+o8hK6MrzGzOB5q2VY2W
MsfR3tRpqj/hj9DQewELqSdAt9Ahc2MgGI+0lULvXhAD55txjijjUHzs54pJ
GRNH6NZxWtiDcLC4OfZOJEhCJHasJUg/EuZT2y588D6NrFNjee/ufEJqsaDb
Ke+zkCse/fZWJwrkRpqHsCZBveaov8uNaFx95Mx1w+Yc9AdH7B3VY7FDdWRp
NF4Ks5Yjhs+uxWFxqcD/+Jw0cp2mv5wSjEfto5LEDWoyeH3xaYj4vu8YPCG+
ObVAFte4p71O7ElA8S7a3A8VOfA2P3l1bFci/rw29+eYkkd7xJS18I4f2KFp
r8T7XRFR958YH9r+E2ES4qccnS/BWHTqjtDWJNDrfRGKtlGC+IKZxj6+ZHyk
954Pz78Cuhzapd28KfiofC2upV0ZBa5mUjs2p2Jvwja/HvareK1CO7mNOw0i
vw+4xMlewzU+s4N8G9ORwSarLvJOFVs7qQI8nBnQ0w6ZcJpRQ/cXU27udb9g
6VKVlGSkjlgTKuuGNZlYHvHQ/rqgATMJ06W17L+h91DkiPMHLYTYzVkwUbKw
fr283F2tm7C7I0FldMxCH0Ol6hcRbdyRs3zIwPAHht83nFTw0IHcodQ+Ovs/
UGHiHD3pewuHOOduraz8AXWUq7M8WhecNPHmJdtsDPauoZaV3QatzkJtcSkb
/oxv5OkY76I+PaV83iYH2hWKLNvl9JDxYVZhbiEHAq466gwf7iHUUfzvjFUu
RlaeU1xYDeB0zwLTc7m4sPvCDecXhtBXTEmlWfxF2kpi6/DmB5ATnhWlzvyF
yFqn5axfD3GISzxu4mkehhsSFFqsHoFzxlxwfCoP++JYM759NgatMTl81Cwf
bx0o2dtDTFCfObN1hJqP2abfHWphj5ERLuY39LgAoldey0x+N0XoS/MNgxMF
aLih+cG83AxOhslu/caFKGz7vuy69AT6l2eY+sYKsZXp6dg/CXNcPCZm12NU
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
mz0ovM+TT7Vvg5S9a6Lbsx4EpUUM3NrcjtNWfCqK73tw9zkP59sH7ThuGj3O
/qsHD/c681jntOPIA8m3Rc09SNZPcxXg78C+u0WHXRd7wH2v8/0T0w7s+E+z
RH5rLzxfHtV/WtIB3uuDhmyne8FV4J/Ht68TnFes2Aq1esHTsF9Ry64T7PLs
Uc7WvVinl2Eo0tQJBqlAWbmgXqjaT0h7nezCouSBHpb0XpzrlK228OoCTTTN
Mb+xF7fuKfQ2jXZh9JDCrlfzvdA/LrkuUbEbvXsbs2T5+pAm5xg/FdWN9u2G
2sySfTg7+4wSxNyDep75pb8afeAYb2MMvNODSk7X4BeWfbBY88FjILsHRWx8
p2QC+uBR16Fqt7MXuQzRDZTUPpzcaFF5za4XGQsSFrn1fVj/gvHezbZe/KAV
bnaa7UOq+H0Fj7N9iBvR+CnN2499opVvu9734VPvwFVG8X7oUN4KXlrqQ2ib
5WT29X7snD7am32jH/71bJ4O5v3wkAiwkczoh1dFgLCUXz9mBta4fOEfgGuR
UBl9cj/Ya0TcmawH4JST+uBPbT/2+g33STcOwCZDnsN+uh8R18YHNCQG8fRn
wxeyeQD8f8wqT/sPwijOQI7u5AC0xpRrO6YHof95rve36gA2BBfwnFUdgk6o
y4vnTwbw/XjMV9nEIWgGbNmDdwM4+73s4zjnMFS8vmQv/xhYbbdnOWo0DAU3
iVuZ1QPYc4W1drFoGOedClee0QYwdSJ4i/z+EZx+phFyhns17qadReyOIzj5
dOD0kuggXsUnUU+2juDII8umjKuDOHgrKiJbfBSC+mxWNqaD+CoU2xfuNYod
twJ4T3sPYvOoZnfJ0Cj4NIWSFxIG4XJBPv/E+TFsvJqqml45iHtlomWVQWNY
c1GeZjU5CM8T9vIBk2OgyDR4SW4cwtuDOkrYM47lMwZH548OoTXMY2/G5XFM
n5z7l6o8BLHjtMlfFuMYFXYxsjQZwlXjh54IH0e/4Ja1Ep5D2PRKefBU8Tja
d36JmY0fQoK878xX6jga+SQUUsqHkKq/kOvBP4FKrsJ+8/EhvHp1xKRNagIl
azReia2uW1zqwJF3BhPIZRrYOyM8DG6GNbJf304gc9kiN0lpGHNGMdy7f04g
aYb19tNHw6Az2cE52TCB+HF/+pNvh/FtHXvepuUJRA0Ihk7FDcMvQKHFZeck
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
xBJOpL0u6MnLBN2+hslD8kto6OI0+HMyEza7dmav0VjCqcMnXdZ/+YX57Qae
w/pLuNfFVlq47Ree8n/XKbFYwl96lfgBnwxM8swJxzovwZY9V1t/XQaMuM+t
uPkvYROLgwZc0zHI6VJ2P2oJ02+y1hiwpkN/bcV7xZQlGM9nP21zTkM325aH
BwuWMLRoWhzEkQYd5lunOeqXcG7tL+LvkYpmhi8cQ31LUErpSizjSYXmynhj
0cwSmL8+3ycZloLaBfHoaJZlXPvEs7f6UApUZu0sXXmWwZOSpuWXlowyWoGc
4f5lMAadnHimkIyLE5y8CmLL8Py8b51DcxIKRtT7hC4s45W+Xsd74yScHwxN
Yru+jPaXCC5hTkJWb/+LAb1lOMq0fGL98BNnu0RUC58uY7mu8pGixE+ktVns
+fJyGUeWJwo9an7gZHMW1dl3GX5PwqcqTH8goZ41R//TMm5v2F3Oxv0DR2qu
eMklLaOJ/LE6lpSI2Ar/W4J5y/BZ3lghq5kIwbJ2EdbaZRw8f7XlHF0iIosE
6fp7liH8ll9we1QCduQb/8ufWgbF7o5+jXICQnJSQj4zrcDISrvj1tJ38GXR
Gb3atAKwy2pnRn+Hb4bcmXt7VzD+yehEj8Z3bEz1WHPhxAp0hV8YlbN/h8fP
+qZ9MivguN39zepXPNYk7IhhVl3BhMlN81aTeDjH6Vv13lkBRU4nY2p/PCgx
8fJ5ZivYT97eNv39DXafZ3k/Oa0gWS4t5NKxb1iOIP0vfFaQlVjV/yAqDlah
zsl3I1fwTfscW87OOEwHl7+U+bGCA28PB8mEfMXjAF61vbkrmFQuae7b9hXj
73T2MlWvoLW573RIaCweeEXRurtWsI39surNfbHodx/PyaWu4MvuW64832KQ
IBMsX0lPRxpjMzMyJWMwIU2OZrPREf3SiU6FwmgIS3XzJmygI1syYv1iNKPx
kDjThW+hIw8v1BbUjn5BzNlD/Z476YiMxvbWXy++YOB0+T97ITry/tbxddcE
vkDwlFmyyVE6srKN4fmb9CjoSfB+uCVBR17xpU/c0IxCpFjGS+VzdMRfbe3s
j4XP6DyhY3ROno5INaQHvPrwGTuPU9SOKtORDcGChUUyn6F9LOrMTg06MmKg
r/po9BPei1zcu+EWHUk+usNcP+ATmo6Mr6E3oCPBO7/of5b9BL7DPrRxYzry
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
kNf7U1jJ//zkwfn/8f8BErBMcA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
TPSF48k/y6DwNNAa+VOB7Cf3FF6WL4Nm9nV+hX0FFL7JcRe0L0Nq1nPK6FIF
2nqF+zZPLuMG7ebXZWwVeMLLEa9CtQKBy1uisxP/YUV9+fnHrSuQD98nrnL+
30Zd7ZTt41vBWfdze643lGNnTQGb8IkVzEkqT/54XI6vW360mF5Yga9EdtIj
qnKIX3735c+tFWTLBPa8el+GfCerZ7QPV3B+bZh/QqQMStl3z8g/X0HUX1Gl
2JJS9KzKMvi6rYCk77+UrluKZ6cOV7cEr0CBbbKMnboUFKZbP/LFruDg44Hu
HyEl8Ixb1H+cuYLFRrx3Qwn2jLSLJlWuILi+fu1LezF+8OevLXet4IPcoPOq
bTFOa38vkp5ZwblrJ2qc9xej+KP3O1faVdSxjMfKFhThdpPFnWrOVWibs1OK
Pi7CAMcdQe5Dq3C9FCN5ib0IZtfPz947tQr13pFq51+FoHP/L/PbpVWc0i8W
HtYqxLtCNtcptVWIFrRuesJcCD6aBWUJg1Xobcus3vSzAAlo43lls4p8ipbS
fK0CkOe5w0VvN76vEM3lt7kAFT+//WQLXcUnFQtdi/R8aE552qkmrIJD5LPV
w0f5GDlsfiU0ZxUX9nXLPuDOx4sHGtsHa1bxU63EwKg0D0wR0l1H+1ahPEq/
ydYmD4EdAjEW86vwljYe8hLJw6FdrBaZDGvwPsoh/rk3Fz9vzp1j2LmGuoVE
yqTAXMj6tGxS+G8NWVn+NzMUclFTnt3gf3oNjIkCQZn0ubjHFBXeLr+Gsy2C
7il/czB1/u0T/jtruN/7eDLEIge2dqannhquoWuPx3+Wx3Kw+Y8aTYrdGoSZ
rMrOjmbj44LUvzXvNTy+ZWY79jUbQmKHAmU/r0FJvCrEUScb6U8363gkb+jT
772n3J+NS9EzR+ry19BXwDZ1pzMLDX1NS7sb1sBzfkHsY0gW9Pdl5ekMrkEl
1yb4190szGl88YxZWsMWnqi1WN4sOLx3V5tlXofNfs1lm+5MbKs1Pnhm9zqc
zCP28UVmIoz19qSD8DqGNAaZgh9k4tgVkl6Kday+aefoP5yJzNcHX2+7vo7O
4vTDFH1/cTWHRVH93jo4jk8Llhj9Rdva1K7Pxuu4mpgsL7iegccSjf3DDuu4
nRL9YYdHBpZM/yaI+q3jZOFE87s9GXgTH2H9/Ms6XroJzfnF/QHXqKtcTuo6
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
G46fzmamNqEnY383u3Z6umHM2GXJ1Jye/DcnlsFm5obk7yqjs7b0JKdMWlRL
yw0mq6fbn7vRE8rWAbrGW24QuUJTOeK37v+Pe0//O+8GKrvqvMeh9OSZqP3E
GpcbCkrDU7qi6ckUKwtN9AY32LO9jHyYtJ7PDzduJ4y44sa9q34NmfQkcs2L
ZXOuK9gDdjrcyacndAqD/9Q8XVHXPmha9nfdH4uZlCAtV/hz/3h2vYaefPxY
nJVx3hUqT5xUClroyZsbP4MiNrjiUPxDOfTSk89HpKKU210wMMV3JXOUnmTu
k3SsTHRB3DkqIaFZevLH4h/d4gcXGLytPJKwul4PL/HdpXddIPQrbCcvIwO5
wupx8PJRFyzQG7NEbmYghpz4ITnvjGwpieUDOxlI2zXTjpZiZ1i6bh8LOMBA
ajdRd835OUOypr99Ow8DmSMNuq7azmDl/F7pzs9APF0pzgHnnFH+0CF/wwUG
kncjMpWDwRmeYUqptmIMxCRnPJNS7YT7/Se+0EgzkINGH9v4Q52w58Sqn9kd
BuJIf6Ss+JkTOg3KHeaVGIgvu0tk0nknRKSGvDXSYCCWE8Wzg3ROeLL4XG9M
l4HIndif96TcEXy4ovrkBQN5ni1uefKjI6Y+cNzuMWMgW7jO8/CrOyK9uPeK
ig0DCU0e5np+3BGmG9OFmlwYCGti2L2hSQfgtt3Ru77r/rzJKv2Y4QA63wec
FZ8YiNhp08C37xxQ3HycVTqKgQSLnln0vOIA5wPLy78TGMhR5XubWxkdIKf5
b4x8ZyAvTwYLK/y1x7aY4I4fvxiIPb+AHI2LPZrG9KvOljCQB1Zcrq237BEs
IFqQWMVAlomIzvAWe6i/Yk870cxAGG4ddDhZaYej2d1fvnQzkGMM6X3hbnYY
pk79yDXCQK4qTRbfuWWHBEkbx6BpBtL7nHlKZKMdjB0VzHauMJBDil4f/yux
hXDFMX1PekZymU/p6V8bW6xwLKpu2sRIxCgzVq/EbPHrwd/b9tsZCVvlcSP9
FRvYBAeK0+1nJJe49TempNtAqvvZWfOjjOT79VB6mec22HQMxxZPMZKgG2L2
l4/boFp3y64XwozkUZyAgEeXNXwTO1knCCMxkYT6DX9rKM8mrehcZySePezT
xnLWOHDRarxXjpEYXsJvNiZr9Jjf7VRVZCRa8o6ZvD+tEF1wpLpZnZFsZJpx
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
6D9+XN0g+kdwjYX8v69etvxf/H8AmRd0MQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4}, {0., 1.3090505213284436`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866353530343*^9, {3.919866393202964*^9, 3.919866405744089*^9}, 
   3.919866479681888*^9, 3.919866514386762*^9, {3.919866582076521*^9, 
   3.919866632547553*^9}, 3.919956380786121*^9, 3.920032816012081*^9, 
   3.9202155642022457`*^9, 3.922202101276074*^9, 3.9222047899677696`*^9, {
   3.9222797637885003`*^9, 3.922279777152942*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"a537c79c-c3a9-4915-a8f2-3a9cd0bf26db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hyp1mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hyp8mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hyp16mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919867032379788*^9, 3.91986705205376*^9}, {
   3.9198670912371483`*^9, 3.919867179575877*^9}, {3.919867242327884*^9, 
   3.9198672560126486`*^9}, {3.9198744442835865`*^9, 3.919874446724573*^9}, {
   3.9200328238958416`*^9, 3.92003282446961*^9}, 3.920215571663307*^9, {
   3.9222022993509407`*^9, 3.92220235420543*^9}, {3.9222047508985996`*^9, 
   3.922204778648769*^9}, {3.92227985045242*^9, 3.9222799120450306`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hk8VfkbB/BLMmhSoexc15r9bpaf6j5JIhJClig3LZSkLEUSg6JdqiHV
WFJpI6K03KdUo0XaS9JopGnRpCYSLb9per73Hy+v8z6f+5zv/X7Peb7HSBrn
P0+ew+EYynE43/8Gfv/cc8SjQS2jP640kh2q/P5xxFKjja82vdOQcL5/1jji
gHBfRnzPOMl/PtARv+18yRtxECT/eUtH5H5OEbpsEP/wHEcsL3u4xy/A+Ye/
54CT5VUfO32b9MNXOqCLc7DFB+0plO+AbdWnxj9y9aZ8BxxMVTtmscqH8h3Q
eGhW4+VvvpTvgMVqz24WD3hSvhhHmUmr1lc4Ub4Yp7Rp7vmUIpD9yBdjfGFZ
y+4Sd9mPfDEu6Rzm5Dnc/8f1WorR/3PAfftVs394jhhjHtsd2R8w/4e/J0Iv
q2lB42riaXxEGOqQ3zxrVBLl/3s8qUkrOHMl5Ysw2HP08uEz0yhfhDMbj9me
a1hD+SJsXn2y7Dwvg/KFKI1Zyt2ll075QvzVNXD70ZkrKV+IZmWKTxQjEihf
iP7l9s2HHi2jfCH+M96xU/v+csoXovnjl9Znm5dTvgANra9OLtdNpHwB9kWN
9d7cm0D5Aoy26GkLUWb5AgzSGFD7O4blCzCu+XCxyZx4yhegv5uFd4pTLOXz
sXv6rUie/2LK56NeRdyIE1nRlM/HlMHrHpunR1E+H98vGuUV4RJM+XxMVpuj
IjIIoXw+9ryM4d2ZNJPy7bHVr6ZNOnc25dtjd8tmvtapCMq3R2tFzsezoVLK
t8eiwPK4hCsRlG+PPSFZvCWRgZRvjxXOXyekefhSnh36v5ji3pHK5ocdnl1s
1BE41IG8HS5fuPdKRrk+zS9b1A6wWuFfxearLfr8dtv78aNpND9tUX3IwqlS
gZjybXCBxeSN5UsDKd8G3+Tpxcc/nEf5Nqg/+/y4+6GLyFvjvmfzo8o/RZO3
xk5Xx4byZ1HkrTH4gct2fS2av5VWGKRQVhH82pW8FUacrJ4nrZlI3gqFu27/
lCd0IG+J81w+PRzXPYy8JXZOlj445hFA3hIfB/k22ynMIz8WnWsqGzX1l5If
iy51fW1dSqnkx2Jbxab30+dmkLdA7UFx3YaD2eQtULp4TEF6Ti55Cyw4Nm+V
5Yj15M0xQEH92Jb+XPLmqGKU0d3itI68OQ78r2aE86ds8mYIkSfAZk4meTN8
riFx8ypKJ2+GGSpjTK46sfVkir0hiqINGWnkTVH85W5pr1kaeVPcftInWknK
6jfBu55Z4UdPZJE3QdWm2MakiWvJm2DrIsP9Wk3ryBvjhC6l+vMqeeSN8YnX
8mUNJex6jbFmw8KNgaPXkudh880nhgZKLJ+H052WDKloWk2eh95nyhWefF5J
3giF2H/rGS+ZvBEaRLfptionkjfCicd9n//htpQ8FyPLbtSOT2bzh4tbIoq5
V4pnkedilKnnjvEhtL4CDbFxMLnwaBKbTwbY3vzij7UNbL4ZoGrNfW40P4a8
Pmry1i4z+8K+Tw91llyccTk1hbwerruX27z67WryuliQJyvNepNJXgdt7baX
5XZkk9fBiLqV7Q94a8lr4zH59VW3zNj4amHEgx0zLHvyyGuhgUFO2bsFW8hr
4mg7w7tHY/LJj8GIkDMq5QsKyI9B6Ui/c3LOO8iPRqPd+5M69uwkr4Fvlto8
fh61i7wGeh/pVIy7vJu8OhYMj7moI7eXvBo6rvDZKD70G3k19HKvNBleVUp+
FA6YT/M+H7WP/Eg8IuqM4Rw6QH4kqmZVxe5pP0THVdEto9ehddkxOn84pta3
XJjcXk3+Z4wJNSzNUaklr4JmI/itJaF15JVRads6V+3Ek+SVcOSqLo9k3dPk
FTFr8J8s3xHnyA/FFhPbRlESkldAl4zC+qQv58nLo0rY1WsbTjeSl8O09em9
p90ukefg1NLc2xlNl+n4F1lgOHfdlK1NdP6AzL316+Y416vk+2XJOaMbKhWv
k++V1f+VH6N/p5n8e5mH6Pfyv5xayPfIRgX0dd2qa6Hjr2QPNXU2JVxqofO7
ZMc7DNzkv90g3yHj864dWchtpuP3ZK1JrSfqb16h/y/JwiU8z9rNF1n9nDTp
vMaLfqfYcUn5gSg5YUAtO18y64Pyq2T3KpYvMdpeeZzbd5B9v+RcmJnFTg32
+76SVAbUnKs0KGH1S4r2+U3oSNrNrk+yy/tlkZdqIbt+Sajsm5mHM5uf/ZKq
IQY6Sgs3sfGTxFe/4T1sY/fPLxIXVS/vr06ZrH4YZn/r3v561m/IQX6Mc9bT
IWw9yoO5xXNp5u++7PcF7etePZqdrH8bCqrORxX+DAym55kipLe/tL3kHknP
LyVwbE6YUm3oT14ZFMN97hSFOLH5B0cPfZiu3TGNzU9I8+itFrn4svkLAVZz
Yx1ip7H5Dc4csfOGUx5s/sPPF+7xf7E3Z+sDOnODd5o1s+fjKHi1p899/Y0w
tr7A2eqgv0GHlK0/qNax+Wz8O7u/qUPAE5P2pK5FbP3C+5Sn+0vi2PNLA4qK
OA8ju4LY+ofE1BMvRl2YTNc7BsKTw4RVnpE0HmMgTHOogkPuIrp+TVA6vbJb
WX4ZeS1oOr/Gc9vTZeS1IGjS0CV58YnktUE54HWclU4KeR3oF34NDu9LIa8D
K/+s1+BpriCvCwMLxynELUskrwcNqxblK/okkdeDsZs465vyE8jrQ9buc7Fu
1cwbQH/71unvXyaQN4CpdxbsFY+IJ28Iqeo/rRFkx5PnwsdfrftnP19Gx7nw
2WjQ4MzrlXQ+F4rMtHh12WvIG8Fh/eyWwfJM8kZQUQwPkxSzyBvBcvebhbrp
meR50HvY0yddZQ15HlwJqs1xXpNIngeXH+e8bwtfTt4YFvh0RVkeWEzeGAQW
49Z+6FtA3hg2ar4eZnR4PnkT0G6Z3fK0cT55E4g4df9/n0TzyZuAurIo8PW3
KPKmMNVj3u63XB/yptDmvKowq8GAvCnAUFfhs2FarH+AFfI3Vi+pnMH6C1hQ
PGnilZgg1n9A9plRfdL94aw/gdtp2pz5tZGsf4GuJ0oZMZZRrL+BvfIXa57d
mMv6H8j5+EfAgAPrVy3g2oRkrskvs1j/BMPfZfcOX+3H+itI/GcgocJ0Ouu/
IPm5g/Kf+V6sPwO72Gxr7ams37OEjK3PvGcsnMr6O5j18faaYZ99WP8HxRc/
FtR2ybH+EFzndFRe26LJ+kf4MO3SjYEXZjQ+VnB8kJvsu8OLxtMaDmTdzE05
x+4P1sD/FrVve74feWvoMb+0vrHck7wNnIywlrq165K3gcTOk8XXR45n/TGc
VyqU3uxxo3pswTRiW41cB5/qsQXhtog5qa1c8rYQf0rvU2iaNevPwTDxRfzE
w0LKtwP5rsOJ6dtZPXYQzXn4+NibOVSPPbR210uL+XT/s7SHv3LMH1Xu8KPz
7aE2eAEnuXQC7U/toW6Q0+cnUWf7D3A7FbGuOHMK25+A4jvVrXEJrH4+fD5k
x+mf6Mv2N+BTWVv/JVbA9j/QPCFVlC9yonw+TA3WCS87MYPq5UPevoLcCVah
tL/lg/u7gH+Kg6ZS/QJ40Vun4jTRjeoXwPGDoer9BZOp/n//71Z7G2zjTPkC
KFnIH/A1D6R8ASy9fnO2KDCI8gUwq7LMtjsriPKF0Kmc6/zJyJXyhRDwdpHy
y1hLyhdCX5SL7gNFO7Y/Bbt1twfdYsey/StodiiUTrs7nu1vQfeZYwkuZc8j
Eex16M7IPxXG9sfwt0KcnMLXuWz/DOt3eqgpP49i+2uwvKveKznI7v8iCOZY
np2kFsz25/D3oNra6AK2XsQQP75o9AWOLtUvBuHHDXq54EX1i2G59deXQ9QC
aXzEYOHZcmCGchh7fwBqKmdmd5fMYu8XoGAwNK0kN4S9f4CGjgarcEkYez8B
yVUrPFUUItn7C4gOwStno8LY+w3o6X+Qd3nXZPb+A9Kbnj86Oobm9z0HiIuH
XPGkKVS/I2zJkxam/DKJxscR4r02tX94S+MZ6AjGB/pUU9T4ND6OoC+Q/ZSu
asDe34D6NZ73EM2fKd8R0J7vdGQoV/J/+TZ3bQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczVkbwK+kSUJ7qbTduu3LXSqa6j68qFGolBgVaV+oJBGSVpWlRDEV
kjCRpMaW5j4kJqY3UYylKYU2DHkLo+Ed4zlz/7mf+znf873P+Z3ze85zjv6q
GK8QKQ6HozuOw/ny7fPl02GPhw3fuF/nq4hPVn752KPfuwrJn5pTxZwvnxR7
7D/pGa2/hSf5h/exx85dy9QkIdaSf3gze1RuDz5l/Ewk+Yfn2KMgUUt5wju7
r3yHHR5yifmQauvxla+0Q3VuaenCkmVf+RQ7bKyatX7zjiDy22G/8+OX9tIR
5P+b97Ktv98TRX47nNmVU7Pk5wjy2+I03YdnFH4KI78tCsWNXmvHQslvixtV
G/3GvQklvy3KLPvsVHGPeDNbbD/8OPO5ajj5bbE+/8XLXzOiyS/Cth++vVR9
NZL8IrS4cjbW5V4w+UWo/6q+1vpwIPlF2B1+jJfb50d+ETpuyJbn5iwnvwiH
lfhX578ivkOIr3gPo2tdwskvxPqAw3k/HqXxpgjRrKv6I+f5GvILsSZ97Gn6
qzjyC3FrrHln+bQE8gvR/ZtIsdWGRPILsH3JkdTxugnkF6D+oeBMr5F48gtw
zuTv6sduriW/AFssNUSzq9aRX4DGpeo7Wk03kl+AwzrJN290JZOfjycdzlWd
kk0lPx/H+j4OJI+kkZ+PK3WzIkf80snPx9WpOx+vvJJBfj6660ilLL2VRX4+
KifXBY7rzia/DXorl3/QbMohvw1+RP2qGzE7yW+DXTfO7RCX7CK/DRp4tEYo
5+wivw0Obq9LbF9LPMcGK73HqT0W7CSfNXZWhJ/hPcul/tbYZZsv06+WS7w1
borzclBYtp14K7xxs1/w5o8M4q1Q96LfflV/Gi/HCo9Z+n6Ov5VMvCWaRX38
IfDjJuItUfVx8p36sxuIt8R9662Mi+bTfFZaoGPj+XuXZUKIt8DX4xfO+lWT
rR8LzFIvMOsp8iTeHHfPWrOnvM+JeHOcdr946tHiuV/fX445xj14k7fqvBm9
32ZYKMzlFpfOFn/lzbB4j5R8xCJv4s3wXOI6t9CFC4k3xZ1dISG1dy2IN8WS
zTE3ctO9KB5TvB6oX9SsG03xmKDce37Mgm2xFI8Jmo5dTL5wai3xJvjS+HDq
Cz02XmOMf6BhuV2d3mcfY8x7N6RkMuRPvDGamlxY4PztYuJ5eHbNIZsgWRfi
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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919867183642939*^9, 3.919867258542136*^9, 3.920031164279753*^9, 
   3.92003282488887*^9, 3.9202155731779976`*^9, 3.9222023555230703`*^9, 
   3.9222047817478275`*^9, {3.922279891257916*^9, 3.9222799126679134`*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"6c855595-b186-4f03-aceb-2c24835e0bf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hyp1mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hyp8mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hyp16mem", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hyp=1\>\"", ",", "\"\<hyp=8\>\"", ",", 
      "\"\<hyp=16\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metab Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9225311377106123`*^9, 3.922531153966259*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"9ab5302d-5f22-48c2-960b-1c4cf83e4b22"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw10gtUjGkcx/FJlonNNV22tM10v8w0l2bm5NIkpIRFuorUhC2XHBVLS4NN
qJiaSYNyWYWaRQi59f4ol2SXjexis2mrJbWJtTJui/nPc86cOXOez/M9/3ne
lxOfPHN+HxaLpfr4+fQd9mk1ymDzU/AIs+RRjK7805KhQpPxKKRLyrA+LaUM
qzxCUsZK5cxnHyZDsW1v1Jbb/gbvIYOz2eHMm5H+Bs+SYXagW13rzskG3yhF
RkJo3jvzadSX4nZui8PCoEnUlyLcL0e6qmg69aUomvPa7kHkDOpLMaE2PH7R
siDqS1FrebomQx1CfQmifRUvF1YHUV+C98nhEnUFeaUEMy9ZP54pG099Cfy6
o3cXPjH2JTAruNvGjZ5DfQm2hfAfvbJaQH0faC6MOdr1SxL1feA4RTjvIi+J
+j44ezhdrRsXR30fRISbps7pG0V9H5w4XuoVcDec+j64Z5GVfquC/m+jGJoS
xSq1czj1xVhk1a/s4MQI6ovR1KZyGxcTSn0xGtyTg2JNg6kvRoz31OY0Tw/q
i1HCvpi7USqkvghnzy1frN8VQH0R0ge/vZ59VE59EeJv8Zb98PpStaEvQgnv
1z67h/vKDX0Runju/fiCWXJDX4Qvq9Pkh94o5Ia+EJnbV6TeSI43+HIhNB39
zzS9Uxi88uP+7uEdmV/EG3yYEMEfXmfzVkRQX4jsOH9V57Vg6gtR41w1ti12
EPUFWPk45ujBBhHNL0Dltw6qPdZW1BfgYciLynXrRlNfgOmslt/yImdQX4A+
jhtNxA0TqS9AyrNfuBv/G07zeiN+sVNYaA+XzntDm58+sW3PKPLeuPDx9tsj
R5PnQ4jrx679bUvPg49fl6fptpYb75+Pdl2IjWVrDM3Lw4n06lsRx5aS5+F5
9dnwAO1i8jxYz1gjbX+7gLwXUpbYp5TJwsh7we8fcYTf5vE0jxdumgqd9CYJ
NI8nzEb8HDvRYRHN74n7GZmDt5alkffE9Hf3lf9yleQ9sL+2fn1iWyZ5D3T/
ERmcGpxN3gO/X02IW1OSS94d5nwrb89IFXl3pEhsLrcPyiPvjrRZY7eu9csj
74anW3qbmxryyLshW9XqqPZSk3dDvZ39jqz3GvKucFR2WsRlFJB3hWJ/jXJf
vYa8K1i+a7XppWryLugo+9FsTkQ+eRecSjgTXcQY53HBd5oXgRUbVOSdUWcV
NzBBsZW8M/rOdh2itVWRd8bR1Ruq9yqN8zthmlrXMuWSmrwT6rs6O9sfFpB3
wnubxI4bhYXkHeHfMb7ELkJL3hEPqpJYLfyd5B1Rvnf63NamneS5qMx/8jyw
chd5LvZe0XHY/CLyXHSOkm4PdthFnoPykBwTlsUO8hyk3eAJqpILyXPARgNT
vGI7eQfIEicd8W3TkHfAUk3AvVn7jffvADGXnXrmsvH5fI1XUYKwKz9vo/P2
MH3TYW8Sk0PeHo8ksUF/ndpCfiSak+YJIrs2k7fDAlnS8gkNm8jb4fEL9tx/
eNnkbWE7SuS9gWd8n75Cy8jzF8+wjM/rK9Qcc0k9ZG+8bxvoT2T1E60yvh/W
GKla9v2WO8b7t8bQnOKZvh6F5K0Q+H5ZsbZVS94SkxfNFQ/I30HeEs7H6lwG
6I33NwIcfX+Fu7/xfi3wtrbYfH3mLvIW6FDponp0u8kPx7M1k4ryg/eRH4ak
v3P87qj2kx+GpWfrk4NEpeSHovfptaF3nxwgPwSJob5HCqIPkR+CMc84h3sG
6mh/EMZVnPzN9uFhOm+OC9abA20UFeS/RMiSXBabfZz8ALD/POBfZV5J3gzX
Tj8V+U09RZ6N0ObusrDrVeT7oSpr9Lz7m8+R/wLTHBJnVa+uJt8Xh4qWDNqn
B/k+CCh5ypLfvkTeBHVju0fb1dWSZ4GzeoTf/aCrtP+OWfiNa1ZAbx2d1zP6
nseKcx9ukO9l2pia2bnCW+RfMid6zw2TsRvIP2fmF5v2RFneIf+Mub2YG3sv
8i7tdzClC/dWLj35O51vY458KNd2TnpAvpm5fn5TKUffRPuNTODJPZaDE5vp
92VG67bybcCfj+Tznh/hNyoLGPHn9Zf8f2X53Ac=
         "]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlcjVsXx08lcsWNBk23OQ2qM3ROKXRW0y0NpkqDJGnUJWnSnIrIrJAr
Y2Uo3GuoK+EsUck8VTJeQ5RCqBTh5Vr7ff45n+ezv8/v/PZ+1l57rUc3JGZm
mDSHw9GW4nB+/Pr8uJqs0da8+qqbEogryn9c1rizIKrRsVlLzPlxZVmjsrNh
39Y2S8l/vI81vhEOLdtkMUHyH29qjcvq/IK0nzlK/uM51mjCEac25nv+5Jus
0GiaQ2/xM4+ffLkVFl46Ue0qtvvJZ1nh/aPcI67SuuKf+la48+C38M3Vgp9+
TK0wYlakV/kkOdK3woZF1bM3jnEnfRFKw8r1DbGBpC9Co9NRD971RpG+CB/7
Hnv68WIc+Rfh/Y0Zd6bnLyX/ItwcOCrX/1kq6YtQbXm9e3hTGukL8ZvfjD+a
qlJJX4h2O4r0uz4mkr4Qx8qoR05ySiB9IU71e7lq5YU40hfilDjlZiheQvpC
dKx6sornsIT0LXHh47VSnQYxpG+Jrq1WAS0NoaRviXdbK7ZIqYeS/vf7l58L
Otrnk74lvgoz//ddZAjpW2JMdrn9r07+pC/ARqt7vjUbvEhfgEGvxu1rdeaR
vgC5+krZswTutP4CNJ529uAQm+m0/gJ0sDl+5/ja33/GA0eAkRLcJBg1/Sff
xMeciJ687eUBFD98lF7WaV6ZOIvih4/rZ8aNydEeQ/75aLfadoFm3Gzyz8fT
c5pGKHtFk38+rsaWrNPvFpN/HuYZtriXzYgn/zyskfdecrEwmfzzsD+h/EVa
Xgbp83D5Ccuec2pppM/D9oop2nuVk0ifh6XLeJ4fdJkeF7UrWsTVQP/nw8Xi
QW9ZefsFxHOxwCNQzl5rIfEW2CjO7Cz88AfxFlhu+nnC6eoI4i3wyonGpF3D
I4k3x+uW5sJ52SHEm2PdZ47x82NexJuj/q2Hvbw/ZxFvht1T0712B3sRb4Zt
h5xcr3jMJN4Mn1wz8HX6CsSPx50thTJz8+3p/Y3H/Lz6+dHLQuh9jcd437V9
NTa+9H5M8dUiG9fLASHEm2KtFIapRzHeFI0djRzsQ+cTb4KF+oeSggQLiDfB
gboSjTu6i4k3wYqcT2ECs1jijXFo8OL5ByfGEW+MX/bFaoUoxRNvjFe4aStU
TBOIN8IniZnXm28nEG+ECxpH2rY5pRBvhHw9aSFfJZX4cZhpcMgipTSD+HG4
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHlYzdkbwG9lCdUorZZ02/ftLjHkvkpJkilFitStZEmLJGln0CJC11RM
ZEkLshQi3TeyhCGZa69kGU3TmERUxO/x6z3ff3p6zud87jnv/b7nvO/liqO8
w+Q5HM5kOQ7nx1/fH4/MAQt5Eic3dzNpRfmPxwEfTH10fNBohpTz40lzwLwp
5b9XR4ik/+d9HfDRT71VXoe9h3hzB+R3PwiU0wka4jkO2Biq+uKgVegQLxPi
pON1C7Q9Q8kvxFDFZdrGklDyC9GvYrjJLg0x+YUYf+VcQ+uLQPILcQkkHnX1
8yO/EPef/LZxQ+UM8gvwL7GHhrR6hmjIL8BkhXUFwtw5oiG/ALNyX3nljfcV
DfkFmJkcxh+wDhzizQX4Nb9ltpfykiGeI8CuonuHso4uGeJlfPxcN3tf5gsx
+fl4SKuy58CdMPLzcefxBRrn/cLIz8d3qyPw6fAV5Odj4eHncg1HV5Gfj54b
nnUMTl1Jfh56ppz9+OV1GPl5+N4xuDM8cDH5eRjByb79Z68X+XnYv2X0/DDT
ZeTn4cqBizs2J4WQn4eBxvzR96aHk98eJ4SmnhYuXE1+e/R4lpK+ix9Jfnv8
aeWW5eYPY8hvj3m8bQE9W9eS3x4Vyn9b9OWXOPLbY2y55+qsjHjy2+Hbjpgi
/ucE8tuh3XSttQU66eS3w2/d3/OzqzaR3w5PXDjOGaW8hfx22F6m4N+6eBv5
7VBx4sZYv8BM8ttizuSkiXKiHPLb4rT2B3fzubnkt8Vryhm3snV3kd8Wk7/p
HQp+sov8trhnbMPc1PG7yW+Lif+qFppF7yafDdocwr1O53bTfBuMzR18Vq2x
h3gbVPvqcqt3D+OtsSp1//PJ99jnWeO0xDndr6J3EW+NxmX/DQyfk0u8FTr7
tpRM/LideCt8t3xuIs8pk3gr9Hip/0fia4pHuSWedT1d5+e6mXhLPCyzyZuu
lUy8JaouSMhbErmeeAt8keOnvN8+ingL1D0w821rO3sfLFBxoLf4VJU78eZ4
TS8gcr3187oh3hw7frcylvOfQ/lljhePVbY1RflQvpph+33vSpdmP8pPM5Qc
6Aqs+zmYeDNUUbgo3+6ygnhT/Oq61e3cjQjiTfHW8WQzN4sw4k0x9efLH7/Y
LSLeBPNPCvPOhOvS+k0wynTrjCmLXGj9Jugf2LTDuteT1m+Ma4pnrTG4vZR4
Y5Rs/5SyfWA58cZ4Jvdhs74t5V+5Eb589nWs8+AK4o2QeyHkYdlEyl+OEcq4
wTNDj4QQb4hGN+1a7T0DiDfEMa8lZRsbfYk3xFNnM0Y+KZlNvAFquI78/umJ
N/EGGDq6oq+Ky+JvgLFTmz7734klXh8zaiLX/NZK+eOrj/c4M9zGKqYRr48G
p/qi09XY+8DFOuOCB1XKGcRzUTstcvD61CziufgkyuTPuSbZxOuh+wXt7m3D
dhCvh6Ur7rYtWraTeD28VNURua03m8YnY2dNjVfbx0yar4tT3ru5tqhkEK+L
BusvJ6m+2kr8JBz/55sKrXC2vomo09T8H//yJuInYmmxY+IxY5bvE9Dvi5Jv
lyyd+PH4vJlzWbCD7Xc89tkY3bIdm068DpbWZWaName8NhpmJsDFLZuJ18b7
1j3hh6t/JV4L63QyNdVvsfVoYnzViZNjcll+aWL+Cu/afe1svxoo8G6wM/Le
Sbw6hs//2nRCh50P6jhat8h+V+8e4sdhcZtwk8cKCfFqWDopI1D/hoR4NSyA
NaaDZyTEq2JliFaNxQvGj8WRa5vK351n/FiM3XPb8H7OXhpXwWVVrnFeAfk0
Xxn/Um02XG1bQLwShj81G2xQ2Ef8aFxg0X3guqSI+FFYpG30YURTMfGKeM3x
Ve3avCPEj0D3s2+n7VtzjPjh2CH5sDsqpYL4YVgs9pGbFlxJvDzmH+043/DH
aeLlsHxfYIWvZRXxHEy8/kGu7/Q5Gh+Udj4s/eAVUUPzB6QLs21DlnrUEt8n
dQ2WCZXzpcT3Ss9kVo7zfVVPfI9U4jl/IEOxgfhu6a/ikL/rL12n8U6p4hRJ
TPXjRpr/Rmql3nbo4S9/EP9C+lTQVp16vonGZdLCpaaz3b810//XpKUtOW0X
Y2Rs/Zw9ce0OPfMes3HRbYU2R5EW42Wif4XY8q7pJvOLvsjt3BCdiuzzRb4x
s8sWWlWz9YlUF1f33ZUvY+sXqUxqio07U8j2JzqcMDdcJW4L279IxyK+W3De
k8VHtEp+SVNQSjydhwOiUY/WVP67dwudn4OiHP7u90oROXR+ckDt2bhpc77n
0rgctHZJxA17d9N8eaiXj+4etWMP8cOgZuuEC301ecQPB1c/n/6n1RLiR0Cm
x/2EMWf2Eq8ImdPfJLWK9hI/ChpVxKGtnxk/Gtau3fi8U5fxSqDaKf42S43x
yqDCFcw8ZLGXeBVQuRvqI7ORED8W9vxXoPfsCVvvWHgQsGGtqQrbjyoEzWxx
r3XOJl4Nir/maENOBvFq8LJN7s2EWhafcRA9TNus5eSvxKvDZc819TvXpxOv
Dulod6DIN4V4DVCfsGiMq2Ui8ZqQOMvPK2ruOuI14aJjkHwKL4Z4Lfi44abS
gVqqVznaIE6bmfJ8qQvx2vCx+PbDoGp2/utAW+7Ua8NdWL03Hv72b1bLL4li
5x+0H7rKrb/P6q0JkGZa2ekuF83OT/jm9lyhqC2cna+wP2nQNrxbzM5fsO5b
cclNfwU7nyHLI2lMQCOrH3Uh6Yx65cJsdt9NBst38xfpC9h9pAfZ6n+d/9zq
x+4H8DlWOif2cQC7P0DewqTfQ+bG7heAXkdHQZg2xYMLsaY/13Q5jaP9c2GL
SeIHjQtO7P6C3YM3Xs92MmT3G5jI1rfHbfAnXh9O3sorcV0bRfE0gEkxjul5
V9aR3wDkM316ii6wfDAAM5dKlcidccQbQsHfMyXTtsYSbwjTZcbxc+5FEm8I
yZ7B0Qtesu/LCGLqq71fenoQbwRaMSUt1dv9iDeCqZcuLY+rZv2FMYj7Jflu
htS/+BpD6phVx4Ibg4g3hrlmJw+rNYmJN4FOH5ckxdhA4k1g99F1h2QwntU3
sPJdUmLnqdkUH1MYcbU9zDwrmOJjCt9suXWKI1dS/E1hWdF8swWWocSbQeKk
kH9KjrP+wgycwh/O2+7O6nkzKL7xLGN/RQTx5jBFqbY//AH1L77mEDotJ2zV
joczqP4DECikQvYSWr8FmL1OHJlWGE7rt4BHRi3izf4RtH4LGEi9an6+J5x4
S0ho9ijxD1xAvCVUvV7pllTpx+pX2JiueO56s5jVt/D+3tsGuavhrP4F9cjk
gdqwaFYfQ//b9PkhBzew+hlOVOw40jUvjdXXENSvlNIxjNUD1lA/6nRWgy6r
N2xgYqXB4e75rH6wgQUZb7yKylNYfQ+5ylaOHc4bWf0P051rRC9urmf9AYTf
kS9dks3y0Ra+nOmLuqofxfoLMHCKfpQmZvWkLThJfssr1gxi/QlMSN1v63x8
DutfgLf55oeMBC7rb+Aybv9+y2EmxcsOOp0n7I/uD6D+1w68DwZWKTaKKd52
MCh2nVd4JYz6WzvgVuTvbOxZTvG3B1lw3/dznmHUH9uDsobEIHoU65/tgbM1
V/Ts0WLy28Ow5HPD8z/4kt8e5m4SXVd+TO+rzB5KMsVFr5zZ+8wDv87Prrnn
VpKfB3duxv1SL2HnIQ9GfFmiH/+V8jGNB8WKpj8VpiSQnwe6XT2aASoJ5OeB
+6LbNa5H1pOfD1eCi270P4klPx8MjPpCdJ5Hk58PT9Q+Zt9PjyA/H7gXShpz
RrDfD/gw3kFrodIgkJ8PB70n1afq+7D+HUYrhpbd+RrC+nvQiF2nYx6/mvX/
MOtk6z+3M6PZ7wNw+X1Av/bvrD4XwMVkhYJGWE/frwB4aZc7rNPiyS+Eq0VP
ak3L4skvBEGz8WI9zXXkFwJfalXi/JT5heCSttFfsYvltxC6zaX+jZaUzzIh
vOv85K+pGER+B7jwInjw0zwf8juAXqFjReSAD/kd4GLqjjLjQKof0hyga1at
15ieaeR3AN/VE5Xyq7nkd4DSRZu1C7JMRP8D3ZNsow==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8156862745098039, 0.796078431372549, 0.8941176470588236], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5294117647058824, 0.4627450980392157, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metab Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hyp=1\"", "\"hyp=8\"", "\"hyp=16\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9225311551068573`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"588bf40e-78e8-4564-a6fd-c12d7c39a87c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp3", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp4", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp5", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp6", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp7", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp8", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp9", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp11", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp12", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp13", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp14", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp15", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp16", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c5bfde\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#bbb2d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b0a6d2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a69acc\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9b8ec6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9182c0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7c69b4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#725dae\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6751a8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#5d45a2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#52399c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#482c96\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3d2090\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9204197816564407`*^9, 3.920419793288004*^9}, {
   3.9222031672126665`*^9, 3.9222032894211116`*^9}, {3.922203322378257*^9, 
   3.9222033407056503`*^9}, {3.9222033883686953`*^9, 3.922203413223755*^9}, {
   3.9222034697028847`*^9, 3.9222034851494923`*^9}, {3.922203517670237*^9, 
   3.9222035323447747`*^9}, {3.9222035964639845`*^9, 
   3.9222039102658014`*^9}, {3.9222039740897465`*^9, 
   3.9222039805487266`*^9}, {3.922204136530278*^9, 3.9222041535782986`*^9}, {
   3.9222042191042147`*^9, 3.922204235869207*^9}, {3.9222046023821807`*^9, 
   3.9222046836678915`*^9}, {3.922204823747389*^9, 3.922204825227592*^9}, {
   3.922204855275031*^9, 3.9222048566194563`*^9}, 3.9222792011329904`*^9, {
   3.9222795080843916`*^9, 3.9222795100308876`*^9}, {3.92227994937056*^9, 
   3.9222801182279468`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.2415026833631485, 0.}, {17.42163203522774, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.581]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5783679647722582, 0.}, {1.4216320352277418`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8156862745098039, 0.796078431372549, 0.8941176470588236]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5783679647722582`, 0.}, {2.421632035227742, 
                1.735975650634226}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.735975650634226]& , 
            TagBoxNote -> "1.735975650634226"], 
           StyleBox["1.735975650634226`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.735975650634226, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7725490196078432, 0.7490196078431373, 0.8705882352941177]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.578367964772258, 0.}, {3.421632035227742, 
                1.5486932256875738`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5486932256875738`]& ,
             TagBoxNote -> "1.5486932256875738"], 
           StyleBox["1.5486932256875738`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5486932256875738`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7333333333333333, 0.6980392156862745, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.578367964772258, 0.}, {4.421632035227741, 
                1.3868112994918798`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3868112994918798`]& ,
             TagBoxNote -> "1.3868112994918798"], 
           StyleBox["1.3868112994918798`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3868112994918798`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6901960784313725, 0.6509803921568628, 0.8235294117647058]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.578367964772258, 0.}, {5.421632035227741, 
                1.238944474706797}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.238944474706797]& , 
            TagBoxNote -> "1.238944474706797"], 
           StyleBox["1.238944474706797`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.238944474706797, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.578367964772258, 0.}, {6.421632035227741, 
                1.148877477333983}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.148877477333983]& , 
            TagBoxNote -> "1.148877477333983"], 
           StyleBox["1.148877477333983`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.148877477333983, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6078431372549019, 0.5568627450980392, 0.7764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.578367964772258, 0.}, {7.421632035227741, 
                1.058422179113227}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.058422179113227]& , 
            TagBoxNote -> "1.058422179113227"], 
           StyleBox["1.058422179113227`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.058422179113227, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5686274509803921, 0.5098039215686274, 0.7529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.578367964772258, 0.}, {8.421632035227741, 
                0.9751340785248407}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9751340785248407]& , 
            TagBoxNote -> "0.9751340785248407"], 
           StyleBox["0.9751340785248407`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9751340785248407, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5294117647058824, 0.4627450980392157, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.578367964772259, 0.}, {9.421632035227741, 
                0.9073874470599319}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9073874470599319]& , 
            TagBoxNote -> "0.9073874470599319"], 
           StyleBox["0.9073874470599319`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9073874470599319, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.48627450980392156`, 0.4117647058823529, 0.7058823529411765]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.578367964772259, 0.}, {10.421632035227741`, 
                0.858534035153126}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.858534035153126]& , 
            TagBoxNote -> "0.858534035153126"], 
           StyleBox["0.858534035153126`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.858534035153126, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.4470588235294118, 0.36470588235294116`, 0.6823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.578367964772259`, 0.}, {11.421632035227741`, 
                0.8102528364130186}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8102528364130186]& , 
            TagBoxNote -> "0.8102528364130186"], 
           StyleBox["0.8102528364130186`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8102528364130186, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.403921568627451, 0.3176470588235294, 0.6588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.578367964772259`, 0.}, {12.421632035227741`, 
                0.754620880028372}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.754620880028372]& , 
            TagBoxNote -> "0.754620880028372"], 
           StyleBox["0.754620880028372`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.754620880028372, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.36470588235294116`, 0.27058823529411763`, 0.6352941176470588]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.578367964772259`, 0.}, {13.421632035227741`, 
                0.7212437775179726}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7212437775179726]& , 
            TagBoxNote -> "0.7212437775179726"], 
           StyleBox["0.7212437775179726`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7212437775179726, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.3215686274509804, 0.2235294117647059, 0.611764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{13.578367964772259`, 0.}, {14.421632035227741`, 
                0.6951563746387562}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6951563746387562]& , 
            TagBoxNote -> "0.6951563746387562"], 
           StyleBox["0.6951563746387562`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6951563746387562, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.2823529411764706, 0.17254901960784313`, 0.5882352941176471]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{14.578367964772259`, 0.}, {15.421632035227741`, 
                0.6684210306933706}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6684210306933706]& , 
            TagBoxNote -> "0.6684210306933706"], 
           StyleBox["0.6684210306933706`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6684210306933706, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.23921568627450981`, 0.12549019607843137`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{15.578367964772259`, 0.}, {16.42163203522774, 
                0.6413667340824296}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6413667340824296]& , 
            TagBoxNote -> "0.6413667340824296"], 
           StyleBox["0.6413667340824296`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6413667340824296, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{16.57836796477226, 0.}, {17.42163203522774, 
                0.5939527453158304}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.5939527453158304]& , 
            TagBoxNote -> "0.5939527453158304"], 
           StyleBox["0.5939527453158304`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.5939527453158304, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.2415026833631485, 0.}, {17.765234622265034`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5783679647722582, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5783679647722582, 
              0.}]}], 
           LineBox[{{17.42163203522774, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {17.42163203522774, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.2415026833631485, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.4993464052287582, 
                    0.5803921568627451], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7725490196078432`", ",", "0.7490196078431373`", ",", 
                    "0.8705882352941177`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4888888888888889, 0.465359477124183, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7333333333333333`", ",", "0.6980392156862745`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4601307189542484, 0.4339869281045752, 
                    0.5490196078431373], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6901960784313725`", ",", "0.6509803921568628`", ",", 
                    "0.8235294117647058`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4339869281045752, 0.40261437908496733`, 
                    0.5333333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6509803921568628`", ",", "0.6039215686274509`", ",", 
                    "0.8`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.40522875816993464`, 0.3712418300653595, 
                    0.5176470588235295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6078431372549019`", ",", "0.5568627450980392`", ",", 
                    "0.7764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3790849673202614, 0.33986928104575165`, 
                    0.5019607843137255], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5686274509803921`", ",", "0.5098039215686274`", ",", 
                    "0.7529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.27450980392156865`, 
                    0.4705882352941177], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.4117647058823529`", ",", 
                    "0.7058823529411765`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.29803921568627456`, 0.24313725490196078`, 
                    0.4549019607843138], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4470588235294118`", ",", "0.36470588235294116`", ",", 
                    "0.6823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.21176470588235294`, 
                    0.4392156862745098], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.3176470588235294`", ",", 
                    "0.6588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24313725490196078`, 0.1803921568627451, 
                    0.4235294117647059], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.36470588235294116`", ",", "0.27058823529411763`", ",", 
                    "0.6352941176470588`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.21437908496732028`, 0.14901960784313728`, 
                    0.407843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3215686274509804`", ",", "0.2235294117647059`", ",", 
                    "0.611764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18823529411764706`, 0.1150326797385621, 
                    0.3921568627450981], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.17254901960784313`", ",", 
                    "0.5882352941176471`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.15947712418300655`, 0.08366013071895426, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23921568627450981`", ",", "0.12549019607843137`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.922203834360874*^9, 3.9222041549101086`*^9, 
  3.9222046884316454`*^9, 3.9222048731509495`*^9, 3.9222801205625324`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"a13ad08c-e63d-4698-8581-6a6885f4ff3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp2", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp3", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp4", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp5", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp6", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp7", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp8", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp9", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp11", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp12", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp13", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp14", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp15", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp16", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c5bfde\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#bbb2d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b0a6d2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a69acc\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9b8ec6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9182c0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7c69b4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#725dae\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6751a8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#5d45a2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#52399c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#482c96\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3d2090\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.920420056632622*^9, 3.920420065090315*^9}, {
  3.9222273404381895`*^9, 3.9222274302758923`*^9}, {3.922280186606531*^9, 
  3.922280201589546*^9}, {3.922280248979151*^9, 3.9222803220749297`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.2415026833631485, 0.}, {17.42163203522774, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.581]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5783679647722582, 0.}, {1.4216320352277418`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8156862745098039, 0.796078431372549, 0.8941176470588236]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5783679647722582`, 0.}, {2.421632035227742, 
                1.724749665746248}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.724749665746248]& , 
            TagBoxNote -> "1.724749665746248"], 
           StyleBox["1.724749665746248`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.724749665746248, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7725490196078432, 0.7490196078431373, 0.8705882352941177]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.578367964772258, 0.}, {3.421632035227742, 
                1.5266025432255232`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5266025432255232`]& ,
             TagBoxNote -> "1.5266025432255232"], 
           StyleBox["1.5266025432255232`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5266025432255232`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7333333333333333, 0.6980392156862745, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.578367964772258, 0.}, {4.421632035227741, 
                1.3732444487144662`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3732444487144662`]& ,
             TagBoxNote -> "1.3732444487144662"], 
           StyleBox["1.3732444487144662`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3732444487144662`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6901960784313725, 0.6509803921568628, 0.8235294117647058]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.578367964772258, 0.}, {5.421632035227741, 
                1.2267258921423199`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2267258921423199`]& ,
             TagBoxNote -> "1.2267258921423199"], 
           StyleBox["1.2267258921423199`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2267258921423199`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.578367964772258, 0.}, {6.421632035227741, 
                1.1420617235898376`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1420617235898376`]& ,
             TagBoxNote -> "1.1420617235898376"], 
           StyleBox["1.1420617235898376`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1420617235898376`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6078431372549019, 0.5568627450980392, 0.7764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.578367964772258, 0.}, {7.421632035227741, 
                1.0461783431070688`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0461783431070688`]& ,
             TagBoxNote -> "1.0461783431070688"], 
           StyleBox["1.0461783431070688`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0461783431070688`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5686274509803921, 0.5098039215686274, 0.7529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.578367964772258, 0.}, {8.421632035227741, 
                0.973612018005003}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.973612018005003]& , 
            TagBoxNote -> "0.973612018005003"], 
           StyleBox["0.973612018005003`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.973612018005003, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5294117647058824, 0.4627450980392157, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.578367964772259, 0.}, {9.421632035227741, 
                0.9118167339332363}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9118167339332363]& , 
            TagBoxNote -> "0.9118167339332363"], 
           StyleBox["0.9118167339332363`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9118167339332363, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.48627450980392156`, 0.4117647058823529, 0.7058823529411765]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.578367964772259, 0.}, {10.421632035227741`, 
                0.8540400770075399}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8540400770075399]& , 
            TagBoxNote -> "0.8540400770075399"], 
           StyleBox["0.8540400770075399`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8540400770075399, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.4470588235294118, 0.36470588235294116`, 0.6823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.578367964772259`, 0.}, {11.421632035227741`, 
                0.802058358917705}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.802058358917705]& , 
            TagBoxNote -> "0.802058358917705"], 
           StyleBox["0.802058358917705`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.802058358917705, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.403921568627451, 0.3176470588235294, 0.6588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.578367964772259`, 0.}, {12.421632035227741`, 
                0.7647185212464167}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7647185212464167]& , 
            TagBoxNote -> "0.7647185212464167"], 
           StyleBox["0.7647185212464167`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7647185212464167, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.36470588235294116`, 0.27058823529411763`, 0.6352941176470588]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.578367964772259`, 0.}, {13.421632035227741`, 
                0.7170473636664937}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.7170473636664937]& , 
            TagBoxNote -> "0.7170473636664937"], 
           StyleBox["0.7170473636664937`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.7170473636664937, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.3215686274509804, 0.2235294117647059, 0.611764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{13.578367964772259`, 0.}, {14.421632035227741`, 
                0.6821247484406464}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6821247484406464]& , 
            TagBoxNote -> "0.6821247484406464"], 
           StyleBox["0.6821247484406464`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6821247484406464, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.2823529411764706, 0.17254901960784313`, 0.5882352941176471]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{14.578367964772259`, 0.}, {15.421632035227741`, 
                0.6504261745681423}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6504261745681423]& , 
            TagBoxNote -> "0.6504261745681423"], 
           StyleBox["0.6504261745681423`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6504261745681423, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.23921568627450981`, 0.12549019607843137`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{15.578367964772259`, 0.}, {16.42163203522774, 
                0.6261843238506187}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6261843238506187]& , 
            TagBoxNote -> "0.6261843238506187"], 
           StyleBox["0.6261843238506187`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6261843238506187, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{16.57836796477226, 0.}, {17.42163203522774, 
                0.5949948435130904}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.5949948435130904]& , 
            TagBoxNote -> "0.5949948435130904"], 
           StyleBox["0.5949948435130904`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.5949948435130904, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.2415026833631485, 0.}, {17.765234622265034`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5783679647722582, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5783679647722582, 
              0.}]}], 
           LineBox[{{17.42163203522774, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {17.42163203522774, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.2415026833631485, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.4993464052287582, 
                    0.5803921568627451], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7725490196078432`", ",", "0.7490196078431373`", ",", 
                    "0.8705882352941177`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4888888888888889, 0.465359477124183, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7333333333333333`", ",", "0.6980392156862745`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4601307189542484, 0.4339869281045752, 
                    0.5490196078431373], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6901960784313725`", ",", "0.6509803921568628`", ",", 
                    "0.8235294117647058`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4339869281045752, 0.40261437908496733`, 
                    0.5333333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6509803921568628`", ",", "0.6039215686274509`", ",", 
                    "0.8`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.40522875816993464`, 0.3712418300653595, 
                    0.5176470588235295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6078431372549019`", ",", "0.5568627450980392`", ",", 
                    "0.7764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3790849673202614, 0.33986928104575165`, 
                    0.5019607843137255], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5686274509803921`", ",", "0.5098039215686274`", ",", 
                    "0.7529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.27450980392156865`, 
                    0.4705882352941177], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.4117647058823529`", ",", 
                    "0.7058823529411765`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.29803921568627456`, 0.24313725490196078`, 
                    0.4549019607843138], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4470588235294118`", ",", "0.36470588235294116`", ",", 
                    "0.6823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.21176470588235294`, 
                    0.4392156862745098], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.3176470588235294`", ",", 
                    "0.6588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24313725490196078`, 0.1803921568627451, 
                    0.4235294117647059], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.36470588235294116`", ",", "0.27058823529411763`", ",", 
                    "0.6352941176470588`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.21437908496732028`, 0.14901960784313728`, 
                    0.407843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3215686274509804`", ",", "0.2235294117647059`", ",", 
                    "0.611764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18823529411764706`, 0.1150326797385621, 
                    0.3921568627450981], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.17254901960784313`", ",", 
                    "0.5882352941176471`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.15947712418300655`, 0.08366013071895426, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23921568627450981`", ",", "0.12549019607843137`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9204200662366543`*^9, 3.9222274513388395`*^9, 
  3.922280333620849*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"710382ce-4c33-41c2-9e41-0e98aad3dcdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp2", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp3", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp4", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp5", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp6", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp7", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp8", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp9", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp11", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp12", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp13", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp14", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp15", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp16", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite Titer\>\"", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c5bfde\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#bbb2d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b0a6d2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a69acc\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9b8ec6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9182c0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7c69b4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#725dae\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6751a8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#5d45a2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#52399c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#482c96\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3d2090\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919872218019006*^9, 3.919872325063958*^9}, {
   3.92003152841066*^9, 3.920031544418577*^9}, 3.92003157737006*^9, {
   3.920031609581951*^9, 3.920031632137554*^9}, {3.9200316878072987`*^9, 
   3.920031914411047*^9}, {3.920031954495573*^9, 3.920031972751745*^9}, {
   3.920032605125719*^9, 3.920032638021221*^9}, {3.9201276628019695`*^9, 
   3.920127676161476*^9}, 3.9222274816401167`*^9, 3.92222753112379*^9, {
   3.922227562392333*^9, 3.9222276073013277`*^9}, 3.922227642884014*^9, {
   3.922280418758546*^9, 3.9222805165849934`*^9}, {3.9222805535789576`*^9, 
   3.922280578466662*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.2415026833631485, 0.}, {17.42163203522774, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.581]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5783679647722582, 0.}, {1.4216320352277418`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8156862745098039, 0.796078431372549, 0.8941176470588236]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5783679647722582`, 0.}, {2.421632035227742, 
                1.0196736373050266`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0196736373050266`]& ,
             TagBoxNote -> "1.0196736373050266"], 
           StyleBox["1.0196736373050266`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0196736373050266`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7725490196078432, 0.7490196078431373, 0.8705882352941177]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.578367964772258, 0.}, {3.421632035227742, 
                1.0161855393031975`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0161855393031975`]& ,
             TagBoxNote -> "1.0161855393031975"], 
           StyleBox["1.0161855393031975`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0161855393031975`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7333333333333333, 0.6980392156862745, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.578367964772258, 0.}, {4.421632035227741, 
                1.0126318369755116`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0126318369755116`]& ,
             TagBoxNote -> "1.0126318369755116"], 
           StyleBox["1.0126318369755116`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0126318369755116`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6901960784313725, 0.6509803921568628, 0.8235294117647058]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.578367964772258, 0.}, {5.421632035227741, 
                0.9933517444111725}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9933517444111725]& , 
            TagBoxNote -> "0.9933517444111725"], 
           StyleBox["0.9933517444111725`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9933517444111725, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.578367964772258, 0.}, {6.421632035227741, 
                1.011813957662312}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.011813957662312]& , 
            TagBoxNote -> "1.011813957662312"], 
           StyleBox["1.011813957662312`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.011813957662312, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6078431372549019, 0.5568627450980392, 0.7764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.578367964772258, 0.}, {7.421632035227741, 
                1.0108584050999228`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0108584050999228`]& ,
             TagBoxNote -> "1.0108584050999228"], 
           StyleBox["1.0108584050999228`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0108584050999228`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5686274509803921, 0.5098039215686274, 0.7529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.578367964772258, 0.}, {8.421632035227741, 
                0.9945264184676298}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9945264184676298]& , 
            TagBoxNote -> "0.9945264184676298"], 
           StyleBox["0.9945264184676298`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9945264184676298, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5294117647058824, 0.4627450980392157, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.578367964772259, 0.}, {9.421632035227741, 
                1.010433395218134}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.010433395218134]& , 
            TagBoxNote -> "1.010433395218134"], 
           StyleBox["1.010433395218134`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.010433395218134, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.48627450980392156`, 0.4117647058823529, 0.7058823529411765]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.578367964772259, 0.}, {10.421632035227741`, 
                0.9958765717177321}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9958765717177321]& , 
            TagBoxNote -> "0.9958765717177321"], 
           StyleBox["0.9958765717177321`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9958765717177321, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.4470588235294118, 0.36470588235294116`, 0.6823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.578367964772259`, 0.}, {11.421632035227741`, 
                0.9971473520857067}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9971473520857067]& , 
            TagBoxNote -> "0.9971473520857067"], 
           StyleBox["0.9971473520857067`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9971473520857067, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.403921568627451, 0.3176470588235294, 0.6588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.578367964772259`, 0.}, {12.421632035227741`, 
                1.0174014098633168`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0174014098633168`]& ,
             TagBoxNote -> "1.0174014098633168"], 
           StyleBox["1.0174014098633168`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0174014098633168`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.36470588235294116`, 0.27058823529411763`, 0.6352941176470588]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.578367964772259`, 0.}, {13.421632035227741`, 
                0.9952215729712531}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9952215729712531]& , 
            TagBoxNote -> "0.9952215729712531"], 
           StyleBox["0.9952215729712531`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9952215729712531, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.3215686274509804, 0.2235294117647059, 0.611764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{13.578367964772259`, 0.}, {14.421632035227741`, 
                1.0054325382798315`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0054325382798315`]& ,
             TagBoxNote -> "1.0054325382798315"], 
           StyleBox["1.0054325382798315`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0054325382798315`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.2823529411764706, 0.17254901960784313`, 0.5882352941176471]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{14.578367964772259`, 0.}, {15.421632035227741`, 
                0.9911805533181542}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9911805533181542]& , 
            TagBoxNote -> "0.9911805533181542"], 
           StyleBox["0.9911805533181542`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9911805533181542, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.23921568627450981`, 0.12549019607843137`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{15.578367964772259`, 0.}, {16.42163203522774, 
                0.9840875986866225}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9840875986866225]& , 
            TagBoxNote -> "0.9840875986866225"], 
           StyleBox["0.9840875986866225`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9840875986866225, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{16.57836796477226, 0.}, {17.42163203522774, 
                0.9873082570801475}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9873082570801475]& , 
            TagBoxNote -> "0.9873082570801475"], 
           StyleBox["0.9873082570801475`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9873082570801475, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.2415026833631485, 0.}, {17.765234622265034`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5783679647722582, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5783679647722582, 
              0.}]}], 
           LineBox[{{17.42163203522774, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {17.42163203522774, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.2415026833631485, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {0, 1.2}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite Titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.4993464052287582, 
                    0.5803921568627451], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7725490196078432`", ",", "0.7490196078431373`", ",", 
                    "0.8705882352941177`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4888888888888889, 0.465359477124183, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7333333333333333`", ",", "0.6980392156862745`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4601307189542484, 0.4339869281045752, 
                    0.5490196078431373], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6901960784313725`", ",", "0.6509803921568628`", ",", 
                    "0.8235294117647058`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4339869281045752, 0.40261437908496733`, 
                    0.5333333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6509803921568628`", ",", "0.6039215686274509`", ",", 
                    "0.8`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.40522875816993464`, 0.3712418300653595, 
                    0.5176470588235295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6078431372549019`", ",", "0.5568627450980392`", ",", 
                    "0.7764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3790849673202614, 0.33986928104575165`, 
                    0.5019607843137255], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5686274509803921`", ",", "0.5098039215686274`", ",", 
                    "0.7529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.27450980392156865`, 
                    0.4705882352941177], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.4117647058823529`", ",", 
                    "0.7058823529411765`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.29803921568627456`, 0.24313725490196078`, 
                    0.4549019607843138], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4470588235294118`", ",", "0.36470588235294116`", ",", 
                    "0.6823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.21176470588235294`, 
                    0.4392156862745098], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.3176470588235294`", ",", 
                    "0.6588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24313725490196078`, 0.1803921568627451, 
                    0.4235294117647059], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.36470588235294116`", ",", "0.27058823529411763`", ",", 
                    "0.6352941176470588`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.21437908496732028`, 0.14901960784313728`, 
                    0.407843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3215686274509804`", ",", "0.2235294117647059`", ",", 
                    "0.611764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18823529411764706`, 0.1150326797385621, 
                    0.3921568627450981], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.17254901960784313`", ",", 
                    "0.5882352941176471`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.15947712418300655`, 0.08366013071895426, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23921568627450981`", ",", "0.12549019607843137`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9198722714917135`*^9, 3.91987232854905*^9, 3.9200311930229416`*^9, 
   3.920031613297041*^9, {3.9200317717542267`*^9, 3.9200317871113186`*^9}, 
   3.9200319171373215`*^9, 3.920031977724367*^9, 3.920032646310631*^9, {
   3.920127671308077*^9, 3.9201276772160606`*^9}, 3.922227644802482*^9, 
   3.922280519883298*^9, {3.9222805648756175`*^9, 3.9222805788093033`*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"7e7ba5ff-a583-43a6-9b88-092f5791e0a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp2", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp3", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp4", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp5", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp6", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp7", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp8", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp9", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp11", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp12", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp13", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp14", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp15", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp16", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite Productivity\>\"", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.2"}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#d0cbe4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#c5bfde\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#bbb2d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b0a6d2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#a69acc\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9b8ec6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#9182c0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8776ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7c69b4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#725dae\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6751a8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#5d45a2\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#52399c\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#482c96\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3d2090\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92003220650638*^9, 3.9200322257601585`*^9}, {
   3.9200325059356403`*^9, 3.9200325534959755`*^9}, {3.92003265656341*^9, 
   3.920032671245369*^9}, {3.9201276822552185`*^9, 3.920127690017145*^9}, {
   3.922227700344756*^9, 3.9222277257649813`*^9}, {3.9222277614607725`*^9, 
   3.922227874580921*^9}, 3.9222279136850986`*^9, {3.9222279672553525`*^9, 
   3.922228058353634*^9}, {3.9222806065879164`*^9, 3.922280707446582*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"493d0515-9620-4c23-8daf-cc57dd308aba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.2415026833631485, 0.}, {17.42163203522774, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.581]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5783679647722582, 0.}, {1.4216320352277418`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.8156862745098039, 0.796078431372549, 0.8941176470588236]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5783679647722582`, 0.}, {2.421632035227742, 
                1.0196736373050266`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0196736373050266`]& ,
             TagBoxNote -> "1.0196736373050266"], 
           StyleBox["1.0196736373050266`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0196736373050266`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7725490196078432, 0.7490196078431373, 0.8705882352941177]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.578367964772258, 0.}, {3.421632035227742, 
                1.0161855393031975`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0161855393031975`]& ,
             TagBoxNote -> "1.0161855393031975"], 
           StyleBox["1.0161855393031975`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0161855393031975`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.7333333333333333, 0.6980392156862745, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.578367964772258, 0.}, {4.421632035227741, 
                1.0126318369755118`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0126318369755118`]& ,
             TagBoxNote -> "1.0126318369755118"], 
           StyleBox["1.0126318369755118`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0126318369755118`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6901960784313725, 0.6509803921568628, 0.8235294117647058]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.578367964772258, 0.}, {5.421632035227741, 
                1.0154262276203099`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0154262276203099`]& ,
             TagBoxNote -> "1.0154262276203099"], 
           StyleBox["1.0154262276203099`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0154262276203099`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.578367964772258, 0.}, {6.421632035227741, 
                1.0118139576623122`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0118139576623122`]& ,
             TagBoxNote -> "1.0118139576623122"], 
           StyleBox["1.0118139576623122`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0118139576623122`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.6078431372549019, 0.5568627450980392, 0.7764705882352941]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.578367964772258, 0.}, {7.421632035227741, 
                1.0108584050999228`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0108584050999228`]& ,
             TagBoxNote -> "1.0108584050999228"], 
           StyleBox["1.0108584050999228`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0108584050999228`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5686274509803921, 0.5098039215686274, 0.7529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.578367964772258, 0.}, {8.421632035227741, 
                0.9945264184676299}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9945264184676299]& , 
            TagBoxNote -> "0.9945264184676299"], 
           StyleBox["0.9945264184676299`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9945264184676299, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.5294117647058824, 0.4627450980392157, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.578367964772259, 0.}, {9.421632035227741, 
                1.010433395218134}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.010433395218134]& , 
            TagBoxNote -> "1.010433395218134"], 
           StyleBox["1.010433395218134`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.010433395218134, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.48627450980392156`, 0.4117647058823529, 0.7058823529411765]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.578367964772259, 0.}, {10.421632035227741`, 
                0.9958765717177323}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9958765717177323]& , 
            TagBoxNote -> "0.9958765717177323"], 
           StyleBox["0.9958765717177323`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9958765717177323, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.4470588235294118, 0.36470588235294116`, 0.6823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.578367964772259`, 0.}, {11.421632035227741`, 
                0.9971473520857068}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9971473520857068]& , 
            TagBoxNote -> "0.9971473520857068"], 
           StyleBox["0.9971473520857068`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9971473520857068, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.403921568627451, 0.3176470588235294, 0.6588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.578367964772259`, 0.}, {12.421632035227741`, 
                1.0174014098633166`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0174014098633166`]& ,
             TagBoxNote -> "1.0174014098633166"], 
           StyleBox["1.0174014098633166`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0174014098633166`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.36470588235294116`, 0.27058823529411763`, 0.6352941176470588]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.578367964772259`, 0.}, {13.421632035227741`, 
                0.9952215729712531}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9952215729712531]& , 
            TagBoxNote -> "0.9952215729712531"], 
           StyleBox["0.9952215729712531`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9952215729712531, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.3215686274509804, 0.2235294117647059, 0.611764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{13.578367964772259`, 0.}, {14.421632035227741`, 
                1.0054325382798315`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0054325382798315`]& ,
             TagBoxNote -> "1.0054325382798315"], 
           StyleBox["1.0054325382798315`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0054325382798315`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.2823529411764706, 0.17254901960784313`, 0.5882352941176471]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{14.578367964772259`, 0.}, {15.421632035227741`, 
                0.9911805533181541}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9911805533181541]& , 
            TagBoxNote -> "0.9911805533181541"], 
           StyleBox["0.9911805533181541`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9911805533181541, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[
          0.23921568627450981`, 0.12549019607843137`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{15.578367964772259`, 0.}, {16.42163203522774, 
                0.9840875986866228}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9840875986866228]& , 
            TagBoxNote -> "0.9840875986866228"], 
           StyleBox["0.9840875986866228`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9840875986866228, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.581]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{16.57836796477226, 0.}, {17.42163203522774, 
                0.9873082570801472}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9873082570801472]& , 
            TagBoxNote -> "0.9873082570801472"], 
           StyleBox["0.9873082570801472`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9873082570801472, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.2415026833631485, 0.}, {17.765234622265034`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5783679647722582, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5783679647722582, 
              0.}]}], 
           LineBox[{{17.42163203522774, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {17.42163203522774, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.2415026833631485, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {0, 1.2}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite Productivity\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5437908496732027, 0.530718954248366, 
                    0.5960784313725491], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8156862745098039`", ",", "0.796078431372549`", ",", 
                    "0.8941176470588236`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8156862745098039, 0.796078431372549, 
                    0.8941176470588236], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5150326797385621, 0.4993464052287582, 
                    0.5803921568627451], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7725490196078432`", ",", "0.7490196078431373`", ",", 
                    "0.8705882352941177`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7725490196078432, 0.7490196078431373, 
                    0.8705882352941177], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4888888888888889, 0.465359477124183, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7333333333333333`", ",", "0.6980392156862745`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7333333333333333, 0.6980392156862745, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4601307189542484, 0.4339869281045752, 
                    0.5490196078431373], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6901960784313725`", ",", "0.6509803921568628`", ",", 
                    "0.8235294117647058`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6901960784313725, 0.6509803921568628, 
                    0.8235294117647058], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4339869281045752, 0.40261437908496733`, 
                    0.5333333333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6509803921568628`", ",", "0.6039215686274509`", ",", 
                    "0.8`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6509803921568628, 0.6039215686274509, 0.8], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.40522875816993464`, 0.3712418300653595, 
                    0.5176470588235295], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6078431372549019`", ",", "0.5568627450980392`", ",", 
                    "0.7764705882352941`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6078431372549019, 0.5568627450980392, 
                    0.7764705882352941], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3790849673202614, 0.33986928104575165`, 
                    0.5019607843137255], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5686274509803921`", ",", "0.5098039215686274`", ",", 
                    "0.7529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5686274509803921, 0.5098039215686274, 
                    0.7529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.35294117647058826`, 0.3084967320261438, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5294117647058824`", ",", "0.4627450980392157`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5294117647058824, 0.4627450980392157, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.27450980392156865`, 
                    0.4705882352941177], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.4117647058823529`", ",", 
                    "0.7058823529411765`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.4117647058823529, 
                    0.7058823529411765], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.29803921568627456`, 0.24313725490196078`, 
                    0.4549019607843138], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4470588235294118`", ",", "0.36470588235294116`", ",", 
                    "0.6823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4470588235294118, 0.36470588235294116`, 
                    0.6823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26928104575163403`, 0.21176470588235294`, 
                    0.4392156862745098], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.403921568627451`", ",", "0.3176470588235294`", ",", 
                    "0.6588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.403921568627451, 0.3176470588235294, 
                    0.6588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24313725490196078`, 0.1803921568627451, 
                    0.4235294117647059], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.36470588235294116`", ",", "0.27058823529411763`", ",", 
                    "0.6352941176470588`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.36470588235294116`, 0.27058823529411763`, 
                    0.6352941176470588], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.21437908496732028`, 0.14901960784313728`, 
                    0.407843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3215686274509804`", ",", "0.2235294117647059`", ",", 
                    "0.611764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3215686274509804, 0.2235294117647059, 
                    0.611764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18823529411764706`, 0.1150326797385621, 
                    0.3921568627450981], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2823529411764706`", ",", "0.17254901960784313`", ",", 
                    "0.5882352941176471`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2823529411764706, 0.17254901960784313`, 
                    0.5882352941176471], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.15947712418300655`, 0.08366013071895426, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23921568627450981`", ",", "0.12549019607843137`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23921568627450981`, 0.12549019607843137`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9200323564264507`*^9, 3.9200325180029774`*^9, 3.9200325558445263`*^9, {
   3.9200326679723644`*^9, 3.9200326717039013`*^9}, 3.9201276919363537`*^9, 
   3.922227916868256*^9, {3.922227995181309*^9, 3.9222280590095925`*^9}, 
   3.9222807112274556`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"ea39bb37-1f6e-462b-afdf-a79a8c9b8f20"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hypgen1", ",", "hypgen10", ",", "hypgen50", ",", "hypgen90", ",", 
     "hypgen99", ",", "hypkeep1", ",", "hypkeep10", ",", "hypkeep50", ",", 
     "hypkeep90", ",", "hypkeep99", ",", "hypmem1", ",", "hypmem10", ",", 
     "hypmem50", ",", "hypmem90", ",", "hypmem99", ",", "hypkill1", ",", 
     "hypkill10", ",", "hypkill50", ",", "hypkill90", ",", "hypkill99", ",", 
     "hyptyp1", ",", "hyptyp10", ",", "hyptyp50", ",", "hyptyp90", ",", 
     "hyptyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hyp500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924092117004408*^9, 3.9240921436850843`*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"69370e93-a15c-4bb3-984c-fe8b9c40f1bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92409221692334*^9, 3.9240922885577526`*^9}, {
  3.92409232904055*^9, 3.9240923743161445`*^9}, {3.924092503031451*^9, 
  3.924092581225854*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"f9d61a38-2ae8-4301-9978-98c3570d688e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde2k0Vm/0tsqUVERlJmOUqcxx9kaUITOZ5+F5yDzP42OeElKKkLGSQiWJ
QoPSr6iIMiQhKoRM8Xo/vO9a///5cta19nDv+9p7rX2dD+eQo7eRy3YqKiqu
HVRU//f9v58bPwzvadjZ4//DD98ZfRKh2GN2pZOIktZj4uUD4/WdN+zR0Wax
jFqojegvNuGdeWuPAT33Tc/KPCEmEk3V3izZo0XD7kYO46fEoqeZSx2XA973
Vqzii2snqE3PJueoOeC/a2eeyDztIFiUzW8EkBxQ/+bJJ5Kszwh+AYs3ZpkO
KDHOJ08V+pyQZrCcU2hwwKCq4f2Kcy8InLNk5RzY8heYHxiJ7CL0+63k/206
YIoowxA332vCttXacljIEffGyyfr93cTnhU2kU90HFE3/M6+Z5X/EREZttfK
fB1Rsv+Feunzt0RqgF075aIjuoaaWc88f0dcsrL/7tbiiE3/SdhZf+ghqtQc
dmqPOWK4S3GTyWwvcV/U8ejRnU64/4kbezb7B+IZk5P+HkknVApNKKMYfiQ+
/HXymzVxwmeXvrM8L+gjvg055/WEOeHTJbNyhtl+4k+ny4OGa07ILr6hd/fs
ALH9lutg/jMntKEsXYp9O0gw57pthMw4YX6u78Yuqy8EXzjpkNU+Z1TfKA9Z
+DtESDiST6ooOOPedPLdGeMRQkXL3Y3X1hkfSDu33pMdJXSlPFK3JTgjTeqR
X48PfSWsDp67NVbtjKpR92d12cYI941zbzv/c0alSe7cFvZvROi455/KRWdc
H0wlBQmPE8mvvQ6kcrrgpc87CgeI78TFem/Fc6ouqFfUyaviNEFUXPax1nNz
QdaGSjrm3EmiMdY3WirDBUe/pLbVvZsi2kl+pfvqXZBDdqd6ONc00aPv37nQ
74IrR8bkuwNmiFG5gMmPGy64u4+dmXPwJzHLHbirSdAVbQprnd/q/yY2qYMk
CrVdsZZTsrOBPEvsmQkyjPRxRXEbkcsix+cI7t7gALt8V+xwPSrhSj1PHH0Y
clH1kSveXbe6cP/LPHGiJPShwFdXPH9xmsW49Q+hnRz2hYbeDWcvdj4IrF4g
LLzDqSbF3bDrJElT/8oi4WYWIdBl7IZFMuRygYIlIkglUvNmqBueLVTPlrj6
l6AIRpEzi93QoCQ3vvzGMpG7Kzrdp9MNu825FXvaV4iy+ejbRtNu6LE6azE5
vkrc/RTTI8NMwk91i8uK+9aJJ22xiwfkSegbs+o8ffof8bYyjm3FmoRxlMwj
WqkbxHBm/InBOBLeJlprCz9uEr8CE2xbqkg4GtrJteciFfyzpsQWvyEh9bC+
dcLpbbDrZOL12AUSthgUiPdubgOOI0nPnTjIKFFf+Z6/ZTuI7kv+oYFkDGpN
EjofswMUVpJ3H3Yl46qRkpCqNjWcGkmRYkgno5DfEIc5Bw2YPU81nrlDxuql
uMSNWRpwqU0LetNHxgiNESbjN7QQkJd+qe4fGZ0reruj7tJBfETGoxwBd+R2
/hNSdJUecpwyhwO03HEkg/TxW9ZOKNHO2n7W2x2P19r4e6UwwG3pbCHFPHf0
uljI45S6Cx6znT/N2eyOVDrbR37mMEL35nmPfyPu2G1Cqj5Rths+f8/JHKb1
wJsHkhTdm/fAdPeFO0+OemAhY1xU1eBeWG3IfV9m5IETJsoDTHFMsPNK3l9K
iAcqWqTRRnMwA1t8PgepyAO5ryx6yt1nBhH3iyraHR64cLHGQ9d8H8gZFtgf
/eGBLC6q5A//9sFJhUvxe5jOodd/LAenKlnAmPdyxazsOeS3sjtcbMYKjrSF
L3uszuHkn7kbexn2g+/PwpmG2HP4lk1ozOjpfoh5f2XvxcpzGLvz+mx09AHI
ar56LLT7HGYx24TfVj0IRaVFplZ/zmHUyIbCGj0b3EopDlFh90SXymuCER/Y
4JHPtUJe8MSpV6MiupXs8OpsyeNtLp7YLH5XIimKAwaI0tGxVE+kP5sRq2nF
CZNCZdTP6jwRBgtOlqtwwV/G6yJVHz0xlZqfv1WIG2gXrmunrnvi7NAZ+zoW
Htg/WO55jt8Lr7JHj1+g4wXBpxXZeqe98He8xtsOKj44Xl1ZL+XlhTy3Iln6
YvhALbvq475cL5w3Xt62l/oQGAZXryw0eSHz3/naiNRDYG9bw9U37IX8in6H
JFn5wVvjBjTReKNR7F452RJ+iDx607HwiDcOW5JLi6UFIJ3lFiXS0Bv9/yS8
iuoUgMLVW1V2wd54Yfgn46i1INSM1r5SveqNC5c/Fvb9FYSmF7d/CbR7443I
ayL++ULw4nYdM+2UNzpYfY3qUBCGc6/MOQLofPDmjcL2z0PC8If4dMSFwwd3
XxxjfZ0sAmF3LVTMxH0wdG/s3+tyh2G78IDeKfRB2VeFTCGThyH1kqW9grEP
0slLapkViQLT7kFfUVcf3Hy9+5eBuRgUxFjFc4T6oMEfpoiwA0eAb2Ewd1e6
D94o/N021n8EqtysK9aLfHDgpSPdteKjIDH4+f7POz4YdvicQKu7ONzTs3k5
1LFV33FpQVMlCSCefhn4r88Hc9sWpvz2SEKHrO1M2w8fDB48biI2IQm61UP/
7vzzwf6BpTpNRyl4z2W3t4zJF/dtHxQ+2ysF1tnDfLkCvqgTwSvxn6Y0fN1h
f4wi54tY9+D8/UfS4B48oh6k5YtWY5GP2GWPwfwPe1M3a188Z8V6YfP2MQiz
HXU19/bF7MmGv97ix4GqxyFEK84Xd+pWtvvfOg7JGl9TlPJ8MSQ+mYdVSgaY
mrbaV+WLa1KpYRaNMpB/dOwmV7MvPrysXqirIgs815we737jiyedUrIWn8tC
Bcu3/zZGfJG7OOSojakcSCQ5j/7+44ueGbrSqeNy0LD6bX6E1g+lnH9rUELk
QdnLhbqH3Q/Vy1SPm+1RgI7R8f3tR/1w7WvhJHWlAuiauoo0gB/uuW3Bd0lN
EXpefFcoN/JDw8Q5dvZRRbBUdtPOd/HDV6lh99LjlODr7QmrpBA/jO7hGFoV
PgEkAZJnSJofvhdMfev+5gTM5k9GkYv80Odvwp2vIcoQwkDOtryzZR/PPUYS
VgGqqKkSnQ4/vDbGfWNbnwokzpHrlfu2zqPj1WtMJWCPy48O8R9+mE991TVZ
FSC/3/0jzz8/JPE8+RCzBsCjOz2xl8kfBdYoXobWCNdbPVaoBPzRn9a0P/QR
wtHjMwzzsv7oU8RKpcyjCg0V57jGTvtjaL3Zt0uxqqDE8VP8vZU/Bn1oCcv7
rgpPMzyh08sfX2W+NZQ6owba234Z3Iv1x7EH3VnnGtWgJ8DLsTLXH6/vHjqu
w6sO5pO//Asq/TFxyqK1O1UdRqy8KSkP/fHRn17Hxb/qQPrvd35Ytz86HHwp
2O56EmbVfKo8RvxxqaeVWqHvJATdm22y/uOPekzSO020NGBD1PfVGdoArF7X
XjvYogGJV+c+E+wB6Ob/9nLCMU1gZPb7JXk0ANvZd8ldqtaE3IT5TT4IwNwp
KxYz/lPAtezHvM8oYGv+3ig/vHIKrnv84d/hEoB0V1liO9lOg9iwv8xCcABu
rxY+Hpx/Gu4aLWiMpwbgd5ZVnzf7tUDpWcDZj1cDkDPfn6MrXwueKi6SntcF
YOW6TQWJXRtO3woMe9AegBc3nB5UXdWGt3xLadUfAzA5eeh4soAOmOcGXb08
FYCRTJK8NDd0YIjub23aegAyfDA6xC2jC67hwW0RewOR1fzjQPdjXfj16+87
T/5AdExausOqcwaCHEPGbGUDcdOcfPpX/xlY/7C8oH96y183+vZZkh4kaIXS
qloFop1m4fkzK3rA2LJy8JhXIHqHBI2/StOHHKkwUYHYQJy7/PXcxF4D4Li+
qsSaG4g/mj/vrbY0gNKD4bo0lYGYoMvYeLjCAMTS1myWmgLxSOKNHqd5A6jb
CPeeeB2Iut+S6MzBEBT81mP6hwNR1VzVY3uGIbSNR+S8nA9EL0Laz37QEE5b
/Ct7SBOE286XsXmLGcGb15GNN9iC0LdAz/tImBGY4cazK0eCsBXb9uR0GcFQ
fVR/BhGE2dTwXzGnMTiLbE5FGQbhUYXUQ4aexjBzOXrN2zkIR7Ztdy1tNYaA
PVS7HYKDMMJQvTFrnwmsx8bwGKUGoQ/9a6X9riYQt0glpX41CHkOSs1JPDQB
BnKsqkxdEKa/eJbYv8cUcj5vMxZqD8K9Hsa3dzubAodBnPOBj0GolNBL09Vk
CtfatwfRTQUh1wX7THomMzgsH5+0vBaEnrvf3OlwNYO6mh2XpvYEo07H3cyV
FjOQ40moGTgUjLrLdtMl+8/C4/PUj17JBOP9XPXYB55nQZOG0v3oVDAO6vaz
Kjw7C29CaIZvWQZj5qUP3Jy85mAyQ5kt8gzGoRyuTqsQc/hsR7s9OyYYg7pp
4hfemYNzbyJL7IVgzFmuERk+YgEzmnRCfhXByDlR1LQ/0QL8HibJOTUFY564
8tr5EQtYFac/bfI6GDU2lVrOnLCEuJJkC43hYPSohhC1fEug37/TQ24+GPvv
UwrIc5aQnZwSIUITgu8vKPo+0rUCtvWdmWxsIahklq0gU2UF17xTi3ceCcGB
lssHunZYg/AYw51VlRAUO6lAG2xnDbVmaU+nDUKQq83p2/Fma5Dr2vX+s1MI
FtLml64csIHHKunj3UEhqNlO+dfmZwMn7zD+fZwSgjn8xYVxb2zgtWAGfd2V
EMxOlBCUF7MFk4LdHCW3Q7D/TceRPootDOzKPJLzNATt6Nd3W43agmP0HpX4
DyFYVqtNala2gx/zmXoBkyGo0CRXPHvRDvxc99q7rIWg+uAx/j/zdrD8KcvX
bE8o5jy6V/JF2B5izjDFnzoUipIkvQY+E3ugf5KdqyATipq31aeIWHvIlmGu
ED0Vii2zvzJlau3hQNX5+xyWobj87fnzfwP2UMS57+Uuz1A0NKt4nE/nAMJZ
OQPr0aHYG8Hzeu24A9zczjLzMycUCbZ3TKL2DiATdOHfUHkoDguJjXOkO8Cj
KZa9bx9s5a+yqOm+7wAnbXL5nrwKxaGTb4tUxhyg6y3rsbtDofhXP1vIbY8j
GJ3MUy+bC8Vf1080ayo6wsD9/aa51GF4QBuG+p0cwfFIvivlYBhWyERwcmQ6
wmTRgZAgsTBsHuQ4SPfAEXz2XUxxUwlD2jLj2CujjrBMOVhobhCGubt0GPoY
nCBq5eJNLacwvJbHQak/7gS0nmyPlYLCsGSH0ycJayfIHCn470hKGH65/ZBW
M8EJDpiwj3JdCcPyxF72pRtOcOX5pfndt7fqMXTQV+51AsETHNSbT8JQ3i3/
2f5VJ7hZe3n/7PswPETHNRbN5wwy/JwioxNhaPBwt3CIpjM8zCtU6FkNQ6/Z
EzvWPZxBbSeXdvvucPTxspLZed4ZuiKuWDXwhWNUe6Hl1UZnMJjl8iw/Ho7N
Ur2ke5+cod/palS+Zjj29bScNvrnDPZ93NlJFuF4n+8AtzefC0xqF5WEnAvH
ljNcu3epu4DXY556cnQ4Slw3cxZ0cYEl6eIOy5xwtJDem9yU6AJR5bwfdcrD
caIphvNlpQvQsl+bUH4QjoU/YnIMX7hAejrfivircMwKP/vCcNIFWKlKGHiH
wlFrqi/pBZ0rXPE/xMU0F45iOdqtDcKuwD9RIr6NOgLZS0lp+zVcocaSH+YP
RGDR7Fm2H46ucOxNqcGYaAQaabfdlI5xhYeqAo7vlSNQXViubvqKK2BjmX+n
fgRuWIldOtjkCi8OC1LuOUagrBDXr4b3rmBw5Xp+ZWAEQshPh/bfrtC/V6iq
IDkCV19MNakxuIFtfHlTSmEEDuyR6jom6Abfl4RehdVGoIIoa/QFFTfwcq/4
7PEkAkPZ2z47m7nBwhfhX9bvI/Cp5tO5Ci83iDCs3DwzEYFDqW9HLRLdgLpT
hBlWI5DqZPTvyKtukK5QxS+1OxL3tQeZsTS4wb6bh2UO8UViWZK3D0eXG1zm
rdbYdzwSLwdll14YdgP+C6Jnd2hGIiXG0iZ6wQ1qaGtIC+aRWL6rTmSIngRS
YWJh4x6RKCSXFFHHRYIHP2vSPkZFIsPp7xtLkiRAhyNXn5+PxN1Pl7nvqpHg
2fsbtQ+uR6KOiEnaVxMS6J0+2lZ9PxLjqT1/JruS4GPzzXeXuyIxunlpoTyY
BLaS4mNpXyJxLoIDlZJJ8K301kLEbCQ65XAmaBaQ4NwBCVqvHVFYly7h96qS
BAsptQftDkRhQFXio5f3SBDxT0LUQDQKz3lNcah1kmC7720lVeUoJMkEysj2
kiD1m6TuMf0oZFwbbyobIcE+8zobAccobGiUNMn8SYKCV1LerIFRuK/uyu3F
FRLwwZ0YmuQoVO7V8B2gIUPVXemcpctR2LRvSlGFmQxSwnfLJm5F4b/gc+U8
XGS4d+lYY39bFO545qsdLUwGYnf9s5e9Ufgux7TDTooMz2KO9z/8HoXOy6oX
2hTJoLtQP3VjJQo1zGpOlKqR4b2bzNoVxmj08BRVoNEhg/VgA2MmbzR+/5RG
+8OIDN/0ZHmij0XjovldNkNLMrg/bZT00YjG6kscA0oOZJiXlVN1MI9GvoC/
tyvdyBBWfc/IyCMalbTMqQo8ybCdW95ZPSoavYND9zH6kyE5+36gzPloLDsq
qkUdQgYmaoUkoevRyP00/3dMBBkKgh8UHLgfjd9eBZ+JiyEDz7RCDV1XNFKR
nCvpE8hQYdvUvPw5GgvaPqiwJpFBokexe+p3NPr1vrUsTyHDIL+Nt+e2GDy1
oCj1KI0MRdbcy+MMMZh+p+abeQYZHPO/xNiyxmBhIfe98EwyCL+9urOPOwZV
upwGBbPIMLXTNkdfJAYzLuclmWzhW+o8nC+kYjBnuvInwxb2jRwqQ6Ute94e
1dNb8bL3i442qceggu5IPeNW/uVZ20bpMzHI9upDhPnW+Y/EeIkasxjcJ+I+
dmSrvhjn4Wf89jH4KqFuV1IiGdSLivULyTF44aznSfd4MtD12/Wz+Mdg9rul
dx+iyfCKmc8hPSIGpXvUVl+GkyFLZ2SKOjEGDZv0GE8Fk8GIcs0vMisG6cJN
Dc/4keFAq/3aYkEMjgyWiX05R4aBZb4Er9IYbA0QWVly3eLj2CjjxI0YPFDE
KFRoTwaHcyV5do0xaNXIx9NlQQahCgee/scxeJRfzDphq/9Tw4cqDV7EoHiJ
rE2XNhlusn+VfPkuBmlzb9dc2ZofH+PSB6qDMXjo0rXRta35kslwVH34LQaJ
J4fTJ7fmb/kZf9exXzHo2rts7CRChmaqMaMbf2PQ59DD6XPcZIhWKhsU2BaL
oVKFO2hZtvgIcHK+whCLn19WGkrSk4G2VuAnK2ssNtpcKJ5aJ0HXxFhgBncs
0vYtvZKdI0HmoesbNCKxaB36s4Z1nARGVs5JUVKxSHPHki2pnwT78wSZ/irG
Yuqtrh2Zr0jw6c23Am/1WBz/77aL2GMSXKUvPzSpG4vKMRtHbOpI4KDmUmNv
Fou/RsvtREpJIBghdPyTXSweVgGG1AskmGwcbzYkx+JTP2nlxAQS3PxdfrLL
Lxa/SDTs5Q4kgbeoa7daRCwW9VJf03chwXEnYbNmSiz2+8vu5DUlwd8r34eO
Z8Uix/aZoPSTJGj+WOF2syAWS3VWWS8dJ0EUk9usYGksmry/yaTJTwI1bZHQ
qzdi0U3kaUUuEwloEya2HWiMxQ/voqkTN9ygq6UyNfNxLMredCdzzrhBxl83
FroXsbga3sdo9skNDKUPX4l+F4uiLX+Pyj9zg/0ek4LLA7GYfjl8rfWuG/Rf
r7rl8y0Wpd7rdM4VucGVIZLc1M9YzG5gfdad6gb2bKKtDn9j8WapspJpkBsI
Gk2dGqCKw+DCbwYpDm4wkVb91oghDnVHTM966LrBjU6yxSuWOKwQD6Osy7mB
96boV3XuOJTL8N5DHHKD44o/3B8JxyEt99fD0rvcYMmv5o+MVBzOX93c+Liw
te9uukfcUoxDtd1BXVJDrhD1XYxGWD0OK5u5auC5K6jyTWcU6cbhk5dzb6nr
XIHG8saBg2ZxSLOjxyO2wBVeXvAozrKLw53j1jn3tvZnRveRw/TkOAx/LGJb
Ttraj3QzdTF+cajY5D2iZ+AKrKo3FVfC4zDqzaBkg/zWvgw799SXEoeZ7+6Z
fuTZ2t8NR3V+ZMZh8nk1h3s0rmD3a6bXsSAOi1KVTE1nXEDg8C3rwZI4/Lw8
eryhxwUmHDzHjW/EYf7j4rneBy5QUyju9bohDmtqd6Q1Fm3pjQ8/l04+jsN1
WqnvFgkucGxvbXTL8zg86zGw8IS8pT9Oe9HLvYvD7COy1b/0XKApTuJ87UAc
/uPW/zJy3AUiH/1iF/kWhxeEzH0usbmA6lJtafHPODzT76PEvqV3aKS8j7D9
jcMXWRRWh1FneEGWbMimise0TLZ+305nSC/7rbyTIR6bftMa6FZv6acvtztj
WeLxm4YhzqU7A8tBH71Vrnj8vmbu7uDjDH0GUn1+wvG4PiLZfNXYGQpTZ+2m
JePRjkfje4WcM9h11E06Kcajo7dtTSS7M/Bv+Ph+VotHtscWHfzrTvBdXnrV
RDce3YRyfucPOUGN71xct2k8ar6jTA60OYHXjTu7NO3iUWNl0f13qRNIj/vm
PibF475W8rEPW/pykecYt7xfPOpFtW2muzpBk/l8+e3weOT4/Dzm4GkniMi5
K3GYEo+7d53zCBR1Anztd/9aZjx2WEVHV27pWWra48heEI8r9XPBtdOO8AL+
vDhfEo+x8Z570147QlpovSHDjXicsD26rHLLEfTr/QfiGuKR/IV99nmGI7D8
PO601hKPYa21T0W9HKFPeGHa/3k8Zr1kPuSs5wiX7RsCZt7Go9PNZ++CJRzB
9nLAP+eBeLShuZjusqXX+d/LJH4Zi8fnP8sOS/xygPHdi3vMfsZj5qQhqafb
AapPNV58sxSPdKOK+41vOYBnbCDfKaoE3KzWXKvb+j6Qbpatbt2ZgJrHLCdm
PBxgYWFRWoElAXdKBz6h03GABxL3HtZxJaDst6sW28UcIIIUpC4qnIAn4kdj
vtA7AJbKvS6RTMDz70dULk/Yw47PSyYcigkoPC5mr/jMHp7vv/8lRy0BV3MT
vjZft4c0/WDXXboJ+JSv/S5/vD3opcj/jjdNQNHYSy1eDvawr/1v8LptAooM
ZewrAXv4uH6fKpCUgF0JclcfctvDZbmQlJ++CfiQhmYy5K8d2Pgo7HMNT0DT
5p1n9Ovt4FDN8uWhhARsdf4bvOplB+NjDwTOZiZgran0pwgxO6jmDr3538UE
jHlHyewft4VzZxVlT5ck4D2CdXVviS1InV9paatJQJkUpSgha1tY6GrSVGxI
QJe1SzmcB23hPnXYf3daEtBtxOPmwjsbCCeUzMWeJ2D14BGV+nQbgJDVkdK3
CRiulUtjecoGdtx9SOYcSMAZ9bWa6W028Gw6bP7CWAK2tXh9dH9kDalCJ8IZ
fyagV5KXzkCQNejZre2gLCWgvqHVhrK0Ney71Jz+b3OrP5vv7+VNW8GHnvD9
QTsp+DaKKm6i3AouMSoX/dpHwft/K/xk7a3ARnNd2I2LgtG1i7VxHFbAF/Po
9rAQBV845WHPe0v41hShYC5JwUxDZXORLEuo+qP85K0CBb0zejkoWpZwTvyf
lpYaBWXFuSd/7bAESbeWnic6FOxhDnAkPbaAP9cirZRMKRgeZd64EGIB9wdU
vt21peCH7k6Hi8ctIIx149wREgXvaF8fNf5lDoTe48UyXwryu3H/Fq82h+3J
UVFc4RR8uM6xTdTZHJ49IejyEih4sOJy22lec0hZ28janUnBhN8XlrMHzsIZ
2Va2xIsUnDWXlabJPwvM3tElG9coOGUZbFZteBY+VIFYcA0Fu+7AZMzus1Dw
dfPu73oKJn05zJ/90gysudpOkFooWPmovXiAYgZ8ZjEdI88oSP+XxO2sZgZj
WXjG4i0Fd/7yLpDaNIXKl1Qf332i4Mqz4RX1R6bgseOJrfYYBZ1bGJhKQ01B
UiV24ukMBblY6xL05E1hPkjV58QSBU8eHTQ7s2gC9+q2rdRvUnD+x7azpfUm
EPbjSezRnYn4mi9H3dDPBAjBOIbyfYmobPC63UbaBLbZql3g5kpEB8OU569m
jaHz4naufKFEDN0sGyuqM4aUd0+v75FMxD9JBtSDPsaguytePEkhEYfj5+3j
pY2BSUP93qZqIm4+Fx8snDeC91E7IEQnEZfcr02JNBhBwYP257MmiVgeI/1d
LMgIrObjDci2iRhmZbxYqWAEvEdPfhp1S8SG2o9PS9cMYcyF2tHSNxHZVyT1
eVoNobK440dPWCK6LM3f5I43BPdPCf46CYl4idt1vuyUIUiwaKy3ZyRiV3Xs
VD2jIczr0lCULybizRf5ngY9BtCY2Lm78VoilppQn4koMIDQNkq+eE0i8srT
0yvZGYDKqgZvRX0iPm6voU8XNoBtMrRVPC1beJuW3NRnfejwfCZ18VkiXreo
/TLtqQ/JlYlNe98m4hPTcD1BKn3QHdVUS/6UiNU2Dfb5F/SAiZPuFdVYIkZl
GZ/XOKwHvSbPjUNnEvHC3Ly87OMzcDEz6fPcYiJO5NHokUzPgNWLUy7um4k4
s2fMaPSnLvBsp//1lT4JO33CP5Um6cLXEy+CrPYlocnUzblafl2oCEze7OVM
whStU+Z0rTrgfvt0sq5QEkoEXA+4Za0D4lP0zJ0SSSjSXHW+dE0b5vhfXlJR
SMIgsVmOiUJtaLRO4b+nmoQxn/hvhKtoQ2i+1g0JnSRUv7hw3n5EC5Tf7pSp
NEnCiXVh97wELaBi6HrEa5uEh4UcetjFtKBDPVWjwC0JeT8sHv759jQkRWq/
YfJNwsXqlP17Qk+Dzn2GsylhSehZtI0rnP807J3rGt6WkITPmp4vHes+Bb1i
aaSwjCTU6VR1Oh56CvKddebm85Pwvkn8zjDhU2BZtCvM41oSRt6aPkP9QRN4
+l9t/1adhCFtqxr/JWjCV+b0NOv6JCzp+0jXL6sJ5Tq6rB8eJWHUwOYnjkkN
IFMYr555loT609dO5RZqgHjra6Fn/yWhj1xSGhpowOxyei3xKQlvnFzO4KTV
gIZjZ+Tvf03CmYMTLXwtJyHk3O42yZkk7PHHTp3Ak6Bc0X26ajEJLWvPJ1yU
OAmbwxnv+DaT0HGzMmVzUh3a2fUsL9EnY71niFjUdXVIMt4zxrwvGd/o1pH2
OKiDTsYbj1TOZDT+k9dXw6MOe55nLmwXSkYBZcnhM1/UoIdKPzJcIhkH3+HD
uStqkK+0l3ZBPhmFTMdas23UwCLgv8xzqslocsCFSYhXDbhrsw6OaycjuaCL
VDWqCqMT+tdsTJLRTNP8NGu5KpQfYhL9aJOMPxwK0pzIqkCyentHzy0Zt8ed
/p4loQpH87KVnvsk4/dV1+GcBYTZNwbtEJaM7zjTDFybERromXUfxCdjldXY
yI54hGC1d++lMpLxsK59kosOwomI8zbV+cnIeN+uN4EVYbPR8Puha8loUTxz
6cEjgKe/mb0vVyej96+jC12GAImiPX/31W/xM2xRJzNJgLZTTkzao2SUv/ap
ciqagD1XjXZSP0vG8gbp5S9sBLz7uC8n4r9k3EGzKUBXrwJ5TL0ci/3JmMtH
tctCTwUstC+UeX5NRiodwYoXP5SBO8H46PfpZOwYjanTTlaGkRaWRtvFZPR6
0cr8QVgZrv/tVenbSMbo83jA9tkJIEnnPtOnT0G+fAnvQdcTcMTDRP8FcwqG
8zpzqtOfgN/XWfuRMwUdWMQ40muUoH7ovX2TYAr20JH/3DyjBMFseVPSEinY
wjo+dHVOEZSMTP1q5FOQsb1S0ixfETbS9q/xq6ag7PUTU90nFOFp54f4Qu0U
jFCQ/fRvVAESN/MYWU1SkLSrfm4oWQG0FM3y0m1S8M57+w13KQXY7X+Ah8Yt
BacnrTou98vDu5sfKyJ9UnBy5bg3OVYecr/nSy6FpqC8z6DYOzF5MOc7+8Ar
fsuucmzy9Xs54LI8qDqRnoJfJHWozaPlYORC30u7/BTMoaTSe4nJQVn3RaP+
4hRsDOJwZfwoC2505oMG1Sm4KqhMJxknC0dU2Zxf3t2KZ+kX7JGQhd9h/TOq
j1Lw4dObbxYGZeBuQ0Hgw84U1DVoYM5NkYGgX+Ybx/5LweWZX6635WVA6TB7
0o3+FKzgWKk5+f04/HP4tFfwawr+SxtqN8o7Dk8KLxVcmU7BurXz6/0njwPl
g8Wh/Ysp+OG/4b19C8dAay9HTcZGCobG6p47U34MGLUGjtHSp+IyU/JeZbNj
8DbucnMUcyq6sOUaX6c7BrmPLE/+5UjFDrcX7ElN0mC+xNHtLZiKTtet+sc9
pIFTatB0UjwVK2YLvj/hkYZhcuGQvXwqqph9/8HVIwVlZVZunzAVI1x/v1yh
SIHrF85ZQ+1UzOlbUbNUkgKxg59DuoxTMXnG0CN2SBJ+GVzZpm6TikMGX3gd
tCThbqp1arNrKo4b1H03b5SAwA4uFhmfVNzffcPQm18CFDc+F94MTcXm9M8n
arLF4Z/8VUGh+FRsO3O/lZlKHNp8bW5dTU/Fa53FfTd8jkLCDW65A/mp+Cis
pyn26xE4Pf7lcWZxKur85HpZYHoEGHmLTtFVp2LGbUuzlZdi8J+57dvou6k4
9+QTSw2IwYUcHovl5lTEQGnThnuicPb10KhPZyq+UmQw45EUBU7aYvepN6n4
pOtL0mzVYRgCuz8O/anY62NZekzwMJSG8kYMjKaikpmf9s9rIuBaP0xtPJ2K
FqkvtEV4RUD0Z3HGq4UtPleteyaKhOGnsP2BkxupGBJw5YA8nzDcsecrfkSX
hubS5zo4y4Qg8PKIiCxzGu75LsVzRUQIFN5fq7vFkYYmXGbJT24JwvpuB0Vh
wTScpApoz5YVhLZTh54WiadhYvOBlr2tApAQO6p9UD4NL3FQVWhoC8Cp5pLe
LExD9i7qKIU+fti16GBNr52GIspiF2dc+OE/Cf7xGOM0JFREzdyWDkEO6avn
inUaVtjZL9QmHwKz0tIlX9c0VMs07O3kOgQcnx2jf3inYb2Bx+G7d/lgaL8A
vVNoGt4PXRkJ0uaDEv2x7MG4NGy8rGgr+YIXXFLK2E3S0/D4wSZq8U0eEG13
Kn2dl4ZBZYfcfyrywM91gSMaxWm4LXiRPzCEG+rkvtW3VKVh2OWP1c8fckGA
z3VlubtpeHZOrHGCigsUapw7a5vTcEe2j+9HbU5YGxPUE+lMw3YL7+C8Ag5o
5R7/WPxmC1eqtwr9YIf4s+V2bP1paPbZ9VMCsMOp8y6T2aNpeEpR79adAjZg
eCXku3M6DbvLmNxrFg/CG+rvK7ELaTj+hVrfw+wg5BAVcav/0rD0Fxvv7MMD
YBbiusufLh3N3cv05AQOAPtd4dxppnRUT9/xSDZrP3yZ/s7lzJGOcdHMjZMb
rFAiVFn+WSAd3UNulJ3yYwVnOzcJU/F0bCmbuakzxQKHL4nc75ZLx44eSte0
EwvM9EyAJqbj0czvTnxf90EdY9WLx1rpaEmN/w067QN/TZKhvHE6RmbJ3No/
xQzyMYcHblun48Ba0UK7LzOsNU06HnZNx4ULdYJ9/5ig9U/V9DXvdLTQd/+o
mcEEceLkAPbQdNRSYOzcwccEmm6i/87HpWOu9oDwP4+9wFAyRWFIT0eHcbdo
i6I90D1QvSc+Lx1JCg0mmx93w3lW94trRemYuU0ruHv/bjDVE+MLqEpHQ5vb
3OWWjMCe/KNq5k462p2dfuBavgs+P6mRdmlOx0BVPYPZRQa4tub+8EtHOtrq
vLzHp8sAzrJH1M3epON100QcqNwJh72nX73pS8edJqlGq/Q7Ybrqhsmp0XRk
9LfssfGmh9tfPb60/kjHPIdDdSMDdODPddRVYSEd83vdH9rr0IGc2cyvun/p
mMpwr7SxjRZWs24Gi9JloGSV2Zt2JVp4/PIcVSlTBp6ksRtzaqKBuB3iKRwc
GahVwnbMS5kGNFR+Ml8QyED3n83pHe3UsDP41uVd4hkodCf5o4o+NXTXeQok
yGWgDsv4xZahHXD+h/jNdcjAEvGiZna/HWAi+EsmUCsDZcPSJqR37gA229qW
n0YZOP/pyYehsu3w+aKXpqt1Bn5S672zqbodit9J/DfkkoGH90U99x3bBk67
fp89652B1zHYniV5G4ho3B75LyQDhQeOljVLboPpKG/y6bgMrOtorzIZoILa
B5LzbWkZOPyh6F1jEhX4zf8OU8zLwF/de8ueylOB3NG6HXeLMpBXjtq26f0m
seriky5WlYHp/EaS7cQm0VIstb/sTga+bjs64HJrg4j9NHuVs3nLv/H0Nxe+
DUKD5Y5wbkcGGiiLiSde/EfQn/G9zfhmK3/zVGD2vn/E60RpBUrfFl/bDNyM
z68T2W1zbf9GMlAl+WF/Lss6YbJ6RyvoRwbe8G46y3tpjTgo49fz608GcrAd
7n56aI0Y9Dxm5fYvA5UGzA7p31oliivnx4ZpM7Fk2Ns698Qq4TR695w5UybW
eGrkkV6vEMKc/otv2TOxdXOutcRuhfhhcjxKSyAThUM6tZgXl4nazD+0T49m
YtXekK956cuE74v6LCW5TFS693I7vfAyIbs9gK0eMlH1gp2f+pO/xMoJmZIj
Wploy3M0Xtj2L9ESuCB63SgTfd74x6avLxExtxvucllnYm9i53mbK0vEyamA
E3kumVt8hRYGqCwR9AKyHbu9M/EL6/6NruFF4rX1om5iSCaecpNZUY5fJLLy
Gz9sxGbijaBgh7sii4Tx20Db4LRM/B1HztvXvUAcZJCb+J2biWZ9SSaG/gvE
gPqSN6koE9OWDEwtOBaIosh7yyOVmdi5dVGOp38Ix/tBsRZ3MrFWv5CR4v6H
EJ6TY+h5mImPBBj3prL8IabE/uZod2Ri6fqTBP6WeeKW833O9u5MtF69uVPd
bZ7wLQq+fqIvE5nYaBS+Mc8TMv3y4g0jmSiWdvfF+qM5Ypl5ufHoj0wcP9la
kUiaIx7pPCDK/2Qih+r4cgTrHBFDCXnO/S8TvcjyLJ/bZgn1VgWDfNospJ6N
IpV4zhJ0K8v9e5iyMIdF9uszjlni1bEmhyT2LFQpMZkuy/5NZJ0L/bHJn4XB
ut1qiTO/CKMKRf+Qo1k43p5doqT1izgwsrI2K5uFz/LEpVsrfhID7A8TyJCF
H78w9LLT/CSuGoft/no6C/totN8aOs8QDhlK+ZZGWdiR7tTs3TFNCD1f5em1
ykJBE2eOYKFpYoqquVLHJQtfSw9XRSX9IG4qhUt1eGXh0N+X1Rk/pgifgBNN
yiFZaJ+10+y23hQhU7um2hibhVp7zRZn6yeJ5YnmLvG0LCwaveRuzzFJNB+K
MK7IzUL6gv3sjHETRLSV8meeoiyU5m7d//fHd0I9b935YmUWDksckVUy/U7Q
/vfo5947WRhYz6i90DZOdNFHBiU/3MrPKSAsJjFOZKqpbFJ1bNXT+/XnxJVv
hFHEv6TQ7iwMoigwqOz+Ruy/18I0/zELF/ik2xSix4hPvyMvuY9k4QP1J9w/
5r8SV0UJ/rGpLCz/dn3CjvSVcHDaqLH6k4UtJtbJVcOjhODVx8ffr2ehRHVu
xSvzUSLAA2yFd2RjZIKB4FjvCGGWXFz6lS4bh8RZuP4ajBAK5Zvfixiz0S+R
s4n32jDB8dTuiBVzNray/AkJLB0i1oZavQ8eyMY4OrbL1NVfiC9rvA29HNko
dZVxcrH+M9HKFrOcxZuNtvNdjbrtg0SJ7IiyrmA2MjXQ0nP2DRDxRhhLL7pl
TxU38/39iXDxvtbZIZ6N1fbUsbaMn4hT6VQMsce27AKnX/0W7ydEq+31VOSz
cc5W7b2USR/B8KwtZ+VENiavCa6JRH8kZr7y9TViNha+H/j9qfYD8WYzhtNP
Yyt+dHy7w9h7oo5r1E5COxsf17OcaOB6T+Qoql7/oZeNzr+rlF9b9hIBZiWT
FcbZqO++Xe/+1R7CzH+buJN5Npo1JBlSxt8R8tkOvrw22fgopNhW8Ng7gv3W
k8ZBh2ykmtoFqfFvibWXh1Yvumaju9aHgYD6/4gv32MJE49sLP/Q7e9JfkO0
7vgax+Szxddt71ODh7uJEj61568DsvG2WZTf5blXRLxK6a6U0Gy8KOwNXe1d
hLPldgONqGwUtoiZkyt+SWgGO+Zui9+6j5R51/P4F8Th3Kf9LUnZuO2TUIeD
73OC4Q4/d1h6NjKvs1IG3Z4RM91xDnLnszFvIZKVx62TePPja/l8XjYW7M/K
4PXuIOro1H/UXs7G2qLDHtXR7USOYJmER3E2fi7/JH6x4Cnhr7rDX+R6Nv6L
mtZ41PSEMLV1uj9WlY1HHI2oJ7+2EfLh7WvFt7bqtcsR52RtI9gLBND6bjZ2
SV60pb38mFhriE9gu5+N/+MnDYPc/4//D7WV3Nk=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
XH/BdigL/59PEbp5/1f+H1yDc1I=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxle3c4F170Pwol2ZVRyCrZZSb3HiMrsmUle4/32957iwZJSlaiUhENMyEq
xMeICtl7vLMq8+f7z+95vs/3/nOf13POued1zrnPvff8cU/aeOrbU5CRkR3d
R0b2P/P/GSBZOHelE09NnV2Y+TmFyPLvfmUkrWG2K//x/Kc8g8jYf5uyTOyD
xV/bA4Z1s4jMNqONq4sWzvn/l+qiNY+Ge7Nz7vxigk1psolXiwvIKohkwmF8
DI4TeEn8j5fQMKcyU14bB/hlKQ30VJJQ6cgX+7ST3LCdMXSbtuQ3Ip3zUfpm
wQNNeWkV558uI/G4E1xsmXyQcnlDsLtiBRH6mzfNuwWAmrnolmnbKio9Q+h/
SCcI2SnBX0x+ryFSCNvrEQ0hILgnVhry/UHiHQ23+GJFILOR3uiX/V9kddLN
w7FeDPqjs+0S3/xDnZVJ/L3b4nAZDr7tPbqJSDa/0vw4zoKNzYKlefwWYqCV
pGCVOwcNNferaw/sIPHXCYRKY0k4bPTXNvP+LtK1HBwy85GClOuewZq5ZJhA
fVZ765Y08P79c/JMCDm+WRpXnf1SBhL0k9O/WFPgUtOfgrhdFnTYyv4R9fbh
TgrxzOFZObjd53k58tJ+THoWQxV1QB6EHufwX9GlxAeMvvvwClwAQeuYr5pW
VPj0jshYk7ICdO///qI2mBqrF0XpOVgj2M5dC2QoOICddPveU4dj6Cgl21f8
7SBu2jpy1/AywFG2auLM0UPYUA8u8w8CNAaa/ZK2o8XjhS6U666KULswzrVd
dxj7bKTXNG8oQuri9p/8U/R4v85777uJSpCvoGaopcOA0wtmzjixKgPXdCmX
ABMj5vvLPCpbpAxy75/I3BlgxKVa6N5BaRWo2uCX6n7BhCHPSfdHkwq48vX4
cyQy486129TPDC7Ch/bafcWuLNhKs7YuePQiNN88ElZmfASTHk75ahFV4SGt
RIe35lEcscIocoJMDaJtWk4Jqx3DDOoXxhdS1WD+daECuzYrzn3gcL/uhDrk
csjoh1qwYfHfN/VvlKhDzjuJnRu+7Lj+YvVBK3kNWOnI6EjL5MC6WRP14l80
4PVqecHnj8fxwCJ9ALmpJshUpLcQtk9gN+XzYl1TmkDll3D5C+bCW3ftJvP9
LsF/ZndXU1S58fX51GxvSi3I6SRqdC1z4+OKlYYq6VpwLNhMoPfRSVxyZ+zQ
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
8/+//D+AvLdz
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924092585009267*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"135359ef-2403-4772-9d0a-3d46621dd13f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "40", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240927504663935`*^9, 3.924092823394409*^9}, 
   3.9240930396701045`*^9},
 CellLabel->"In[72]:=",ExpressionUUID->"c405cce8-77f9-4c39-8ecf-9ef9857f465b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
jKAzTHHLxP/x01HAlf+P/w/voiBg
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/9f/B4Gnmj4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
yrArOxeeisllwv/4ycnn7v/H/wcn37p7
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
k3Oc1np5ly/1U/XrU5Q4T3YyRX6NBKsTSiV3dCkxo9HvoxxbJKhnSD4W6UuJ
7XxmXsxTksF4uFq2NYMSf707J/WNjgy5t+1vXq6gxIKlf6qz95LhZ0m8dk8f
JQ7vWrzqw0IGAein8/lLiYf/LvdqHyQDdTnN78P7qTAcXLU+yUmGiSmWT4XH
qHCW5NoiJS8ZRj93VUico8KbuhuBfQJkGKT2TbyvQIWNb2/ueX2CDEc8ZzR/
alDh98Tt1HgRMqjOBDxc06PCHCUU/LckyODyufHDuBEV9myjKrh4ngyPePp3
ck2ocPsCjdzBi2QIdU8/cN6YCoux0H+dAzJ8e2epdF+fCieJ7tH5qkyGdY/S
Ly1XqfCs5t5fWepkEGSJ0exXpMJXXPY7eGuR4VlUHketJBV+kci8qqVHBppO
145kASpMn88adsKIDGssB19fZqbC1k0HmCjNyJDvY2Gw9I8Sf545mN5rRQYl
Y6HvmT8p8bG9h4VKbMng6jSapF9FiYNPcZbEOZGB4oWVnfBDSvxLjRvddCdD
v+udUP5ASnzRnqfhgteuPsPPagYGlDg9hu86uz8ZklpLXbvPUuK1Z/wjs8G7
/lwjd76lpsTXvx13+RJBhgNvCoLpuijwmwmhjczYXX8XRgm/cikwG93JKK8k
MsTpqkro3abA7oKn2bRIZMhc5YkNQhT4u5JIlvA9MlAKCTy9Q0+BRW6JnqLI
JIM+s9n0k4wdFB8u/q7nERlmfO4amgrtoN855xSLn5Jhf6urp1reNlKpkWqJ
fUWG25ljdtlnt1Hu8HljqyIyOA/nx6blbyFqSrkJubdk0A4qF7E9uYWs+C56
HPhABnt8MFY9ZxNVYbQ9U0mGNh4U5Xd4E/GYQ1ztZzJs+V3MFk/4DwUEKXJk
1pGhqMv+3cutDdSXqZRzp5kMlk4if/icN5BMxeWzmu27fpG/RH3vW0dpA6of
hLrJIKOmlL94eR39/U/98k7/rn/2o2Y1xWtIl+tqe/cQGT7I/JAP4FpDxXJa
ZkXjZDC8+9bJKOIfYja+Nh0zvauv85M9aXYVOfvqeln+IcNI3Oy0ld4qaryn
TyW3QoZKas7ynfK/6OR7gyS2dfLufdzi3kOBvyi624hzZosM0zklB/zjV9DE
qsnTz1SpYJ815f55eRkpcZhJZNCnQj2zblLejWWUI2VR6bkvFQ6+Wqi0/bqE
KPSt1K+ypsJaqvmH4+JLyMzzVpcgRyqY6z4KZs1cRB9JNlbbnKnQ5/kFGzMu
Is7XdvNdvKnQvZCgdtJ3Afm0O/gVHk+FT6Gn5q92/EHdi050MSdTwctR9MJy
6TySYnUlWpxNBVvOxO24h3OIJObOI3suFXJ5M4OMEmfRotbtl6wyqaAwQVmU
FTSDtFzvSE9f3MXrGkJpntMoP8m7pkYhFSyKlhm8XX+jvQW+mg8up8LblJh9
nq5TyKHZv+/2lVTgEDvlVu45iepmA200tFNhLI9txyt4AgntC1k6rp8Kmyxn
OZqSx1HE6bCgLaNUGDS4l9+fO4ZG1CMYu8xSYfr1oHVN9SgCh6i0gpup4D84
cu/e6AjKio3hj7ZLBeFQXhePvSNo83lcgblzKjA/hSVz2WFkUpcgJ+ORCqLW
H8SdnYdQ2WTSVxbvVDiNffOUtAbRIfoUnd/+qdD4OCaRvvUnuiNE+lUdkgqF
nPzk46YDqEM51SE9MhXsHkVcT1vtQ+LWd1c94lLBGX+q0s7oRckR98OuJKeC
hyKntYJmD5p7/IDpODkVPIdufNfa1400Pmemb95LhacjHn2mXT/Qy5FsoR+Z
qfAqbpVeNa8TMVDllOTn7PoBgr3jiR3I5tgTFPUsFXpI304w+rejWnjaYJaX
Ck719yLDb7chfovn188Xp8L79xUJ3N6tKCT45Qjzu1QoeVMZLbP3OxrMynOZ
+pAKRWU04wnyzUi+smCj6lMqXOv0XCmNaEQPfhZF3a9NhdmucmPpoXq0vlnC
5lGfCqXCDSohWnXIgPttlnrLbv2JXeFmbP+K3l4oPSXQkQoPL11mVLb9gg6Y
lL37rzsVlg1ti7KZapG7X7li50AqTMn7F0Z9q0Gt9yta8oZ39feXyVqnVKOz
ZZ+MIydSQUYx6kGuYxVK6KmeMJ1JhTDfd343X1Wi6X+fPaQXUoGCTlt+MvMj
Uj30dZvpbyqcTRkgvsr/gJ5K18VNrqeCtjtFYHTve0RzvYGjajsVhPYS3+jx
lSKrO00596jTAG2I3FoIeYuqyS1n3RnS4ElHW8eFjdeI903rB7X9afC54C7t
0fgSFNjRfpmfLQ3oeasuBUsUo/6lzvYNjjSgKiXBs1+FSJat26yDKw2ChNua
+EPz0V3x3ulXfGlgee7OppP6K/RXu98rQjAN0poNopJlXiA9t59UpqfSQESF
4kGO2jNUkjyYJCWaBmcsWcyb/XMRS+EwJ5NkGmQtH9O83PwYubSMPp2QSYPC
JoVo3Ys5qGluXOKTfBp8SbpAc+XbQ3Rq/1TlXcU0SFFc8hXszUIxZ6bV3VTS
YOOKk5uCfgaauDLbpaqRBlGH8w+u7txHyo7zVseupcH/+EnO7e7/x/8H4ge6
yQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
VLqjVwauLNmNmnCmYDD/4CaX4h44VeYkCQIpaFw0/jKtbA9k6br6qUqm4H9G
njeCt8lC5KjnzT0KKRil2x48GyUL3pm+80IaKXiYz61G8Kcs2O4JUuPCFGyM
nWrj9NwLBi/CYrebpCCd2cOdM1/2gmpYVOuGdQp2OO6wbXWRA4ld8dS/nVIw
ulu1pnJMDjibkw9OeaZgafo/x1v+8kBzLCP3S2AK8peRbtEuy8MCVe6L15Ep
KC/c9fN+tgKMVRWyP0tKwcpzfPmfBfbBoDHF7lF2Ck5cN4siN+yDxzOnyupJ
KcgopOUbKasId0hnP9eUpeBbds8zm/GKUKlaKXr+Ugpe4eBS+/1SEUjvqrxL
rqdgP90BCRcpJUhJuHYt514KPot4+cQkWQlCRep+JbZu6STBbY8/KIFr512l
8O4UlLh5/vXWhREsfBsjfV+mYBJvinhimTIQzA+bj71LQfqq67/frCuDwu32
fzajKei5TSZhwkMFhGy7DhhPp2DamKHY/ecqwLLyLFN3MQVl7xhKHtJQhX9n
+58pr6fgx+etHxqrVWEGXrPI0Kdis4KD+T9uNfj07a21IGsqLnwtEZPOV4O+
7E8nOXhSkcfxGhNBow4P946+ZxBJxfDjtJamCepw/eV3wX8yqXjo/XLA4b/q
UB4+7b6glIr/dgtfcYvVgDye/6p/aKfiSteerth1DYhrWZz6pJ+KGZNXHK6k
aYK/64r8oHkq8i0zkH/u0AIn2n9hT+1ScSOE/z+rM1pgcpW64aFLKiq/tvD4
JK0NmmbbVu/4pCKNVvAy5YE2yPzHRFwNTcWqTCOBeCsd4C3ZmVYRm4q+8QMi
5VM6wKjB1U1OS8VJxnX+35n7YfkDL1N2fiqOvmhwKZLUhR9JghYJpan4cTbs
emCPLrwRE6OEnUvFy4dN3pUGE9DdLfXm+JVUrAultG7nBWjw38vvfCsV7S5e
/NbfCXCFVdHFuikV7wQZjIZrI5y8q3rJ8PFWvYydQnKlCBn2WhM6vanIOtcy
S/4PIWJVV1bpdSqWsSx6XTE/AF7n9YKlPqWiYFJcesD1A2CrZ3R39/dUdBcy
eza2Qw/0J8z+sM2m4p5Tux8xB+uBSp6V9rblVPx+/Ivyz1d6IKZgl7S2mYpt
SaHbUzT0gWPQsWOOMQ3fRMZX953XB5ool20T7Gn4a1rl0CsGA1jg8zT9yJ+G
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
u4mwie58xzhQgv/jEVPo6f+v/w+EAQ/j
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
EM/93/h/AM/9tDs=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1500}, {0., 0.004529552397033061}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924092806108016*^9, 3.924092831074926*^9}, 
   3.924093040837126*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"07e456c7-2938-49e8-ae4d-e47dc3e384a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.15", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240928986135836`*^9, 3.924092926848188*^9}, {
  3.924092979566837*^9, 3.9240930258704076`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"a3d9ddfb-d57a-4e67-921c-7061f602a4d7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde3c4l2/4tr2pVCqk9S2iKFRKdd5mirTMkl1GdjSIRKJkiwqFbC0jkZns
kZU9svfmY8fP74/3PY73ff65j+s4r3081/nc1x/PHn3Lq7doqKio7tJSUf3v
+f8/rIp8aZoXCvF/ZA2t2nb1P4Wg6Z1+vMR6EDHmz+jVtIswuS/s/ZZUIUw7
nTqsMliEDpbaWyHvhUF8x1Wu2hRj89dWvBw4gpcRkY8urxRjen942tcYUTQl
q0UpPyvBo5wcY25fcRwoYKlQ2liKHaYFFMvY47Cpz5m58LYU9+XTj4pMSSCv
34bn/H9lOHHdTGSntSTYFg7InPtchm2pozfuC53FdeZWUzmJcrwXvK9HFUAQ
w+3jL5Nfjsltw5WSYtKYFZL5IaVUATfOrnDPBRmQM/NdaKhAxFknf4M+OXgr
JzKf1a2Ekfr1ym//zqFFR+fo6eFK0C8OPE2QvQAB682ap2x/Q0pESVw9Rwm2
LsXOEqu/sfzjhPAH80vID3CIO+5RhXIHT/FYoStwr91mzM1cjcCYppcseVch
3DrlsEO5GqZjkQwb76ngT0+5z/aAalRkbqdeuqQG+9HoD9uaqqHCtPBt5LIG
9lAef+faWQOJifDsww7XUfxPs3yrfg0KEt0Cymq0YMEg/ndLbA3GI75y02ro
YMsGjpnNozXw2p/eEcSkh8xtgwybj9aC7WTliJKzPvR253Nz3qvFyKE/v3dt
NQTTwVDhTZm1kOQ0a8kuuYXPR+9Jb6Sqw6+Fc+4aYUZQPXVZbYNcHVo28Lht
emWCZWlBU44X6zjrFn3h5DuIVKRzYq+qw4xquADHvDkUVDr82Lb8wRhPKdcm
MStMaKVHs2r+gch97+F9T6zx6pZ/Bsu7P6hwFIka6beBpIVZJXPPHzA4MUov
3LJF9z35LiaBesiNm6vmrdnB4/FuCqN5PdIyTiQ3frsPEY8lJsbkerzNXHbs
ef4Q9b5/eBnm60FdJ1n03tEBj958PkJ/ugGf6Dhra/0dsTfSQ5buSQOcU0f3
ny9/jNIEfQ3aogacqKR66rLlCSxTTpvRsDYiuZPuKY26C7iyuJypLzdiQMtL
6OhnV2QVTAZQvWpE3tsU2508bjCoLItda27EW8u9t4ffPQNzQ1TmKl8TonRz
zpac8sDXDqeqfwZNoNnA1Dc58RxqAxo9K3FN+On1kdsn1xMrE6Lzy2NNqGf/
FEpJ8MKHBTbWZdFmuFncuuyQ4oPz1AN8S/ebYfnXWUlmzBeTzD9FF7Oa8dsh
d1P2Rn8EcYbIL1C3oI86j9IlG4AzPHbX5+VbMHFLRvzui0D07LtkMefZgqTN
Yo3i3a/w4tBBF0p1C3btELGcUgrGkWO0QbNbW3FIUybjfvlrNJxpj5+53oqE
lxemXmu/hZP89+zp962YEO06KMYYiv8u+dVM9bZi5FGUPF9RGMrU7/RNHmzD
uR17D0uEvoeVrtzihEUb4sTWhMQLw7HdZBf7REob7r864FtZEoEc68Xd4wtt
eLhbOUS7ORKG9nXiY2fakec9qKA7/wEsrp8URl3a0dAVkHhhXzS+erprjRS3
477NqF7ozRhoBOpZDbN1gI9t8EZdTCxWQyWfDl3pQOan3bHma3GIit76ejCo
AzZXxV1GjBJw4fNE4kBrB9IrwVXVmYjptNLc/t1/4XFvmOGN6Se8zv1Q13fr
L2QOSNeU03/B2RLHgd6Ev6B/86bcTvMreqvVl3sm1vWzD246ezIJRaOv3a25
O8HmOeDnvDcZO6bcNk2d7kRcxM/Mx1tTYEaxCbHS6cSHVvpYB85U5C7q7J98
0olANlPxtB3fsHlV6YtlVCdudVR5Wwml4TbNqZMTRZ3oP7mLd+Tcd2Qw8P+y
GOpE5FrymduW6WBj3XJxnLULzbQJbLsiM6CzgbrRXLgLl++2V1zr/IGUzeO6
Y5e7EEf7aYu0YBYYtrcOm93tQmSd7uX9ztnQ5C2xHX3Vhbe8G1klunPwcfe3
1TvpXeBpnVDTFMgD1f5Ij5GWLkgyX1Hr78vDtYM+nHf+dWFqLc27Pf4nYg4/
Ch3e1Y2lkrtvNWzzsXjU5ICpdDcCY9meWMn9wsXjal+HDLsxVPMo8PTOAoSf
kjll4t4N+z9X6OuWCzBz9kjBYHw3iKx/rkJXIeRldiobV3Tj4Nr9mKTKIrw9
x9I0MN6N9GUZr10/izGmOK9ntKkHF17q/vqQWQJyuXekX6wHeiHDTUrZpQhQ
qbG7rdaDbiduE4GiMvRr5Kz1PejBy89qtNIN5Th1M/H5rZAeKNg05n8Yq4CX
3uvNfdk9sKrdmqLK9hudt9zCDDt7sLWlIuqmaBXETG34e2l6EfnuXOdfkWq4
W+gkGezvRdvf2tazZdVosVGS7DnXi8+OOjOKxjU4fP9kob5pLxRHpaPpWWrh
7HDgUvfLXjhv/1Bv8qUWfx5vbtb70ouJ0KoxW4068D+lMuiq6UVVoIrlXvo/
sPcYG9Wd7YWE6Lia2bc/qHzZcq+Tqw8nIllKFU3qsduvmEr3ZB9sZDQOpe9u
gO2r1Bd/b/ThDXcMbVxrA4rfRGzRcerDj+ypoI1vG8H9zvtdR3gfNl6RLu67
0QTzSAcB7V99KPDIHtqxpxk/Y4yT2/v6ECWRZvFuqBlbElVP32TqB99mOhh8
a4HRF+miNsF+SPCIU6s/bcWPFJHLWhf7USTqsHJbrQ0c6bwtrZb9OJSorP1Y
qB16WcyGN/z7ocDfn/KCtgOpeXNjLan9+DRla2/T0QHGwp771xv7kRl9YoYv
6y9ulFZTtyz2o/auvaWkcic+V2Z7avIOIH/VfO5LbieoaxO2Np8dAON92iM6
ol1QaQh+r6E3gPZQpfxTMV2IbXl6sMl1AFs/7ksS4+nGcod1inrMAKjrxaVO
+XVDuUf7TGPJACxypfXOMvUgYkCxWG1kACxiIqYizj2YHZG40sA+iC17S/lW
Ftbfi8n9rapHBmGdsPGrv00vQmY5b9VfHUSamFxj52gvxhfWxlXsBsExXzVX
Z9QHqX+jD/4ED6KWhrdZo6cPr6hbaFR+DKImJHP8hk4/BumLX9a1DYI13vhc
aWs/JFlSua6tDWLr+dOeLzUG4M0REV67ZwhmhoK9vvUD6Ob0FrwqO4QnhbO3
fq7HPbbNIbXm9hDOdo/lM1UPwoPH+OyV50Moc1SxuXJxCK27VEuqE4ew6WJi
rFvZEIT/k756+fcQFDur9HzODcNFQKStanIIIft239EoGEb9Id7blzYPY/to
vmcZGYHAUebJ38eG8WlJ5EpV1ggcjs09VNYYBp3RBYXLEqOoOtlD+9t+GGpc
j+ePp4xi79lqr4thw1DVjqs0OzwGO+nsbZW5wyhfeqLTGjOGEvmECKXuYYwr
P5Y02zUOXsVgoQq6EbhyzbAzB4/D8tLTb4r8I/AxvBAXwj6B/GvWKD8/gtbn
aUwcrhPYqqFdesFsBLY5YnIX5idgrKV4rcx7BAzfBYx2HptElq5E+/mkEYh8
axHqM5/Ehlv7jUrrRlCoktU7FT0JfRPOKYW5EdDXiB872T6Jb+Zr9iXbR/GA
4dLA181TYLYZpVOQHEWLEvWa8vkpaN1r9i6+OYrJTv14ZqcpfLEv2n7OeR0v
qLzamDQFmscpkUWRo+A+zhr7uXcKaq7hh+QLR8HDoOH3jGsa8e5eaYUDo4gb
/3dU7dw0VjztiRzLGLJCg5a33J/GJV+jsoJDY2hz4k74ET2ND4EqKrKXxlCc
dv4Y6qYx91qq45f1GKQ1omffrk3jQpiwsUzgGM5WZ3sUCc4gNIJnOj9tDA1b
qLp/qMxgMprpkXTzGFz1U+StHWcgnUChz18eQ036hFJP1AyCPnf7SPGNQ05J
a5alfAbDyVU7fpJxyMubeXdPzOD096wPxGAcBQYOxYabZ+GbGX84z20c3020
ol8em0V3btD39WLw7Hajv6raLI4XuErllq3bz3VrZdrN4kWJVfnZsXEM2Q/s
+xEwi7aKm6o5GybwxtXwnvLXWRypufD3jOgESIaejF35LJ7WnzDJVpnAqPf5
fKG+WTQ0/zdz+v4EilhNEy3/zUKwY5Nj1psJqM4ks2ILBY+6VxlOZ03gfbL/
xdcHKajuH/HN7JiA7VdXafszFPjbmXmFUU1iQdWRs/cSBZnz+lfbN01iPjhd
qV6Xgr6Hmtt27puEOHVVy0UrCjhWLrVpiU9C4KcCvbITBRJO8hGhcpPIEKCx
aXhBgT7VmdttapN4toNu4+ArCjxdxIR4jSexr9RU9Ol7Cr7RCU7eeDiJjxFU
bh9jKfj7bPe3kBeTOJhKT2fwmQIm5m32rSGTOBtMqBNSKBD1ZAfPp0m4XjTf
+vQ7BTfY6ehu5Exi65i70GwGBW4+SyVvqybxOqDf/t8PCr5smvJq6ZyEmKXf
kw/rclPAwFXu6Umc3rCNdjidAhqujm3XaaeQmFNEX/+NAqHXf9rebJlCfqxF
nXESBarc5RHN+6cwPdc6Ep9IwePQn7d3nJhCRcAZ9rAoCuL40oU0FdbxNtlD
50IpqA3/PPlacwq1i8F3PvlTsLI3+luT6RRG/Tz4690p2B8dYr/90RQktJv7
fzlQcInfHxpeU2D1E9B6bEHBg3gPutfvpuCRsKLDvt7vSKHHpY1fpvCy5f7Q
3csUVHyy8972cwqiTNw7MkABRcTsmnrtFL727xfsOUzBrmT97cE9U3Cf+maz
wE3BeXHN9obZKdBGf9NdY6DAJu1SJBfDNFp8B++tTs0iVELeSG3bNO6uHlde
aZ1F4Y/Th4IE1ufOotZ1rWAWE6fFpupPTuPcPbVSjk+z2JF7MG2r4jQey71t
PhI4C2mp3Q6qWtN4tuxqZ2Y/C7NfXOSV+TSKfV/pl+jM4pUcO3290zQMjL2M
FWVnkVtMW7bFdxq3VfddWuGfxdD5JW+ViGmcJz2tXSyz4KyYvBaYPI3aHNs/
NGPr86Q8sP3Pr2kIOR0fu/V7Brer29s3109jXEy2ddOXGfhc/RN5rX8aB8+a
nmf3mUHGnzKjgPlpfHou0qhtMYNutZ+H6phmUFwuw81+cQZszd+nOLlnUMOv
6MMnNIPjNz6nXV0/82L3fX2zrqfTHuXgf3rdjuR1P+2bxnOdEFK7bhfOfO1R
/89pJHf50XPqzODWS/e8grBptBl4lF2xmsHl0JbO/Q+nwdDv5OP3ZB134VjZ
oDINEWM7lRr/mfX7+4+dz4WnoTl8Z8emdR7p2TZ9JphpGq5m+h2Xv82gsJVJ
inRP4eO4xgffohlou96ef545hQarS8bVjTMwYbHdaR84hbVpucMbh2aQEv7m
Bpf5FA7anZ6+tDQDF/+L8oZyU7g2L/rdh3UW7E1HtU12TuHRw4OPqnhnMXj6
7EYhyiRilndJbRCehSIz5dvniklUO3IxXMK6vCX81eKHSSyusZV7X54FbT17
70aH9Tl1ofX9rTcLYS6uX4tXJqFEt6TCcXcW1OIMkhkCk7j3bHKH8tNZhB0Y
CIpbnUA400CH16tZZM88yX+fOIHSF+0fKmNmUX9tOEZPYwIzbH+M2dNnke4+
UTFPNwFen7LDF0tn8VXTPuZO0joPbvo5/bJlFk2bxp4V3RyHVcD37xUjs7iy
R85zE8s43mz9/Ihtndea+A1yVNd5+1dwlJQSBwUNHyqZQ/XHMLYjhOHlLgoU
XpSdHOMYA1eoX3n5EQqMHhSNXskcBeHz8GWVpoBleTCy1mgUJuFOqorXKGjr
2Zl/f8soAvbacXsaUhDAz/Li/M8RZEfd+VtmRwH/Q99tly1G0H9AP4plfY7F
y3YbBvCMYGO8hsmF1xScZBuS5SkdxkmhS8Iv4ilw6R4wmbg3DINPcjOl67zj
KNuttW3/MLxETqczV6zzzM0zzm/rhpCWJOp4vp0Cw7M57M4uQ+gUOyj9fJwC
VtmjW6uODoElbRdj6RoFUe49T7y7BiEmwVXBtGkOe8ZNaAr9BnHzB5ufwt45
5N19zfdQehDPTtOqeYjNoS8xSTRpZgBfcxa5S2TnYBpTfutu9ABayORfRrU5
sOg8SCxUHwDtr/6oc0ZzoF5jzv/EMoDDcu0m7g/mIMlXf+RoTj/UiuuEi5/P
4bm+rbyqTT+cz5fNMITMIWxg47Zd/P1IKM9Ll/84B72/yfYBbX2ou/jd8Vn2
HJxPHmb57t+Hf1WfpIt+z+H7zit83uf7wH81ipGhcw7vZwZKean7cPnP2wq5
qTnkuPiv3s7ohb2an58bzTzud4Wdt1q/H35oclcr3DyPkcsdU5KHelF53YmH
fv887LKVViv6ezDfZtspe3weeZaTggcie7Bb507003PzEPitQHNBe32P6dIz
LdCYx8/ijrhTPD2wNdAQoTOdx7+MU3uWmroR1qc8K+MwDyveTYvPg7tRbCSX
4fpyHhyb/J1H1LoxOSTp9CtsHoE3wxt2besGt5moDO2XeYzLHf3G39QF2XEB
Jpm8eZi9S/KhfdsFc6tdlS4183Cw0vuQotWF4Omt/vnd85BQomk7sbsLebZs
6jSz8+ivvdzn09uJ4TkaXmn6BdBzXdmWGd+JLQ8XO59wLYBZzOZlumUnzixP
RP/kX8CSNOd/7sc7YeTYb0p9cgFcSx/+Xlj5C7+1NhGpCwuQNRLw2Of1Fz+e
1M0631iA7on+m4G7/qKXtiwjz2wBCWythm9SOsD+LM+JymkBj98o/Dh8vgMn
mL7LEJ8FkF01Lkqd6/vFi09MzuELWE1Y5p980I4XbFGVuUkLqKsTjObc3I5U
77f+a/kL6N8QsPjpcxvaN/qp488CTDd9v5Wp2AbGAHfex30LUDJMZRMfbsXR
rU5dOXMLiMtu/LvxRSuuB9vGrDIuQqf2s98FoVY83XHnztkdi+j7w36uubIF
n0P0jjgJLmLf3q8a36xb0LhTg5ItuYhUvdf1DVwtoA5X/vFPaREl3NPPjmU3
Q3Cv3OMz2ouIOf32cKlhM1SiJGUdLRcRnB/t8Jy9GU4HRJmznRfxbGADtcX3
JsTGCfxe8VuEi1KFuYV+E2oEdwWc/rCI1SHdsy4cTVj6uFXjUeoibNSejIdn
NuI/EbadWYXr/vlD9+abNEI5iaZ7uWERvxok8tq3N+K+2GKM5OAi9p+4bzhS
0oCIbxN3HBYXcfuW0cWehw0oP9F/JJNlCQH38rWyhRowm9FGWeJZwrvXbDPW
HfXgO13349ThJay8nRFd9KvHuZzSx/Znl6A3MnpASb4e1iRP9selJXxiOGht
sPwHIflpzEu6SxDewSkqkfQHBbKffp+0Wbd/Mbjyy+gPxos+BDx0XcJ2l9An
VLv+YPv5txoZgUtwoNC9H2iog1S5787F6CXYTp8dvutThzsX3bslvi8hNeRd
4HuFOgRWOcY+KFmCUYRe0S2aOuRcsTVLb17C069/k39m1WKwzvTowvASWPqO
sHy5X4tNanpzJ1aWwHb/jaGgWC0km9Qz77Mvo1Gb301kogaG15Wdv/Mtw2t8
z7nMxBp4t8nKzYssg50qI6tsfZ9P15ZkOSG1jGjN/GM3DtSgq/No1b2ry1C9
N/3etLcarAYCgWkGyxBw58Z8ZDWO9fFpztkuw4BOVWVNrxraRlv5jj9bhsrT
ve+f7KmGxxBrj13wMt5s47Zczq9C0h2auG9xy7gk9/Fbv0wVWscWzCgZyzj2
OGXmV+Fv0FtNHD1Wvgy6qdXcAIXfEJ7um7NtW0Zeqfp7tYpKaNi2ZaaOLcP2
kRHthiuVeDJX6zy7ugwnIyOFnIYKJD4olRPfuAJaxpEft29WoH4pl8V2zwoy
A9UXWPvKsfoorSpFdAU8KvpdSeblEFj7GDgjswJhsdzbN+bLcPXJB00x1RXo
ucf2sruUwYH2Ld/d2yugkeUoqWQvQ7Sbb0/y/XV/v4R+v39bit+M7nHTHisI
0bE89VygFAvPHc1F367AbMODGZ/vJdjLZitqk7iClaHPIhnnSqDobTqflLWC
nZp8nazNxbDbqJc1VbmCs7kuJl53ivHOX/3J0b8rqIrfyia7VoSSLcry1pMr
oH8TtHgssAjTQbKsSdT/wHtsh4OJYBF4dkhWT3L+Q+qxrLXen4WQCzn66sh/
/5DpcLju0/VCWO4UuG517B8Scm0Ty2cL8Po9366v8v/AKKZ/V8a3APl7tvZO
qP9DqfPaTZ7DBRj5wBovYvIPRhIjTJrlv7D1AI2Fpf0/JPW966W+8wuIWxD9
4vkPPYIOjDxsv2AsODE/HvoPec/NX8R/zof/x74s4c//kPw80jv5aj6yhNue
WOT+w+EKo8aTCz/R97VW/nP1P6ylp4fJvP+JDWKlrONd/xCTZP217txPSHzL
rT488w+LW2ofjk3lQf9E2itzulWkhfCVBoTl4WXGx+uftq5CFpGVJRfy8E3y
w66xA6tIZqJt5Z3Jxd/sN72HJFaRGecoUnUtF0zEN97s/CpSIjN/xH/PgWj+
M4uP11ex8aH0z098OdCSdRQbvbOK0kJJkVaPbLgV3V0QclzFSEdhlehcFr4o
mGbf8V7FTaGpo6m3s9BcpuuS+H4V6uWGaVotmaC5qH5u5Osq/ttv73zwSiYO
VV1kE8pfxUTLlANX+Q+oXZGtMa1bxd6PVyl8Cj/gXHcqKKF3FQ7HOPrPlGQg
TvXojWHKKt6I3fa6o5iB2kb+3YKMaxBKZ9scWZOOFU2+PpPta/CYuybQcj0d
B9q2JMQfXIP73Qk9loHvuKzNajl0ag2d1y8HCtz7jged1OIHldbQ5HCjVpDp
OyL1FxaMb67heUz/doawNFT0jmfHWaxBXePuxBfxNMzd7nMZfLyGkZgvNdxV
37B7qPWcgN+6P72n0yfNvkHhTi2bceQabBvsvajYvsFmrKQmNmUNf27eqdH9
nIpQy9yggYI1HNPdzKN0LRVFU99u8DeswWRe8lnqUgom737cbTSwhiqhAT7P
qBRsn4vsi1lYQ37ujh15l1OwJ0tJdYaOitw7PVEss5aM4/+KTwSwUxGhpS83
Gb4mQ/GsDLcYFxVR5WxVnNdPhu7jnJVaPiriVfy9n3F7MmzzTv614acijcyV
x/irkvCc+ttPziNURHaiLkzWIwnvpI9EJUtQkbw064JLMklIcU18dlWKimzt
qSs8QZWEkoIDJtPnqQh1Xuuu8ZyvaKePVPS/um5fU82n//grpuR3CoveoCJP
ixspLlJfweDxemOtwbqcx39Aiv4reEo3z1ibURFaAa63O159wREWn/pNdlRk
o6/xrk97v0BOkSU9yZGKWAe5yPKlfIbmS7e3V55RkckS9bJL8p9hUUnlOOVN
RVxeWdf+1/YJrhyPdPyCqQgH16DFY9tPeH1pXupoOBXh+0+gUXbDJ3zytfmv
Jo6KUKIe9V7/+BE/a8YYrJOoyFx/mFms4kc0cJoMbfxBRf6lqPVuGEvEyLXe
8q/5VETclD/K0TcRVK90Pl8upyIj3oX5DccSsbWhxXeyjorcyW0fZmhPwMFt
and926iIPTPnx3m3BJzVqFE90kdFXPenlwceScC1N0oS1WNUxHOfXVRpWzyM
W4q5reaoyBeZeAPXF/Fw5JH5t2GNimRrUx9OOhkPf62cv18YqclLWom3UsNx
iAk7mX9pIzW5C8aU/aFxyOxIjZrYTk1uHvDSUroUh+pdR9x99lATOYYzmxJo
49Cnm2giIkhNWHi0+0UyYrEUcUCpSpSasK0p+NZaxoKjJ0LYUpKa9ApddXbj
j8W+/3Zu2iBLTRzFdDzRGQOJW69nPitRE/sjPLcob2JwMWZzg7IqNdmmtNMh
XCUG+gPe6eM3qQlzkU7riY0xuCfAEuJ9ez2f37GSKRXR8DRxcxS2pCYF3/t5
2V5EIzyBSvf3fWoSW9VmflYhGt9GHKQtnKkJjVGGuQxjNMoOzf/H8ZyaMDVE
d3MVR6HD3Ibxsx814Trh8yXVPQozn8eGLr6lJtn1Hsk7zkeBadK4YiySmvgU
Xc2WYo3CzqO9n70Sqclq6bU4od8fIGqj43c4lZqEPg/M++P3AfIpLXcrs6hJ
ZxfX01NqH3BjVlXNvHAdF/4vQovnA6yO1Uiw/6Ym8auCL092RcLtnhLPpwZq
svI7425NbCTefi/+p/SXmnQ83/N7r2UkvixId44OUJOsYRXewyci8etkTv7L
SWrS1LHFdnotAk32J6MPLVITIUUzJevSCIxlprpXUNOQ9xw1++IDIkDzT8TU
jIWG3OlQ8nirHYFtZxOV2DbTkFPTD1vkBSMg9PiAyEceGjKhhtHPc+EgeRGb
lP6jIZcNRN/V/AqHKvXO2ZFDNEStZVjyq184TKVfN3geoyFP77SWXdANx2PX
zRlCZ2nI6Y8eGyJEwhFQ4B1SLk9DtBRM42+vvUccPYvTnUs0pI3xXCpjxHtk
y7vpsmrQkLlgN8oe2feodaeSSdSlIQy84+Tb4DsMlDjsVzShITy5w6p53u+w
zDzPOGJNQ4IC/rRKH3+HjYo2wy/saciXhSvnTv8Nw/6XYxWCrjREqaYr5uPz
MJyqNP5S5rmeb9rHQp9jYbjE0etnGkhDpDzbz/R1h8Lwko4tSxgN2R1T8S/e
LxQPfFvUEqJpiJiQpHmLVCi8alRPXvhMQ/R2hivYzYQgkrOGZziNhhSWhgva
xYTg+zWl1ee5NERXUFO+8XoIKgKLOw+W0BBFVt6E4I0h6KyX/lVaTUMcQs69
Tip+CwpXTrRJMw1h/Vmdv8v5LVg0Tnowd9MQuYd0wX9PvsWuN6mm8cM0pKf1
Ltfw7BuIt4hcPD9DQ37xfdCTSHoDBZ5EkaFlGrJHIPpQkcUb3NQ6wPmcjpa4
29644nX4DWzCImYF2GnJlsHBVY+x13Dv4G0s2UpL3oezrCR9fo3QXa8zjPlo
yYa+yB+01q/xVXdzKBM/LWmv+h1yX/w1CiO8neJEaIlDSYQww2IwWrqZ9RQk
aInzmMahuJxgTOxzkxkktGT3+ce2mm7BoLtFdcDjPC2pZX3jzXkxGNtjHJgE
rtKSTqqt/BVbg3F4YG64+Po6/oX3s8vfIEgL2FQaGdCSOyVh/MIJQVA3GfvC
aEZLDvrtaSuxC4JZgrF/rC0tySj80XtROghPRnpszznSkh4T/6PpG4Lw6pCO
+oAbLRn5t2JI1/EKCeYtJ929aYmBo9ppoU+vkPtZlZc/mJYsvbQSF3B8hT8T
1atF72nJYW9LxfmLrzB0RKnrdhwtuarf4v1q1yv8sy7+xZBES8RTb8WsTgWC
M0U6JiaDlhgrqG8TLgwE/2y2h3w+LRHseF6x900gTh87eae/jJb4ms+GNZkH
4sq91IvP6mhJAtN/Z5RkAnHru8iRA2205EI8TJ13BMJ+IYGzqJeWxF17z2c1
GQCfkwcot8ZoSWzD9EnukgBE2Uc00s/REkUv6nCn8ABkZPL+iF6lJU7jN+pC
HgagciU4VI6Rjuydnau3uRaA7jObH/dtoCPnulx+0AgHYN7JW89tOx2Z1H5c
oMgcALY8Ztn9e+hIypXZgYt9/thD7Xag8CAdoc2lW2DK98dxaSrmW6J0RHlT
VJnze39ccHUYoZOkI9FHwqe/OfpDp2CuMkqGjgTITUTHafnDlt7mq6wSHdHI
0pK4ftofz+XH/HtV6MjTd0S2nNcf79yN7Z7epCPCGrIeq//8kFzSo/7fbTpS
16WjTvnrh2JmnVMFFnTkWvW52K/5fmi70MJreJ+OfLlTWno0xg9TnqprtM7r
+ZTmzzx84QeGyuquDx50xNTwttgLSz9wcygVyPjREdZc33f6qn4QuVQc0/OG
jtSE2lTSnfaDrK/0c9fI9XzOJPRY7fODZk32nX2JdMTbz6ozhtUPFpwnlX+l
0JEkJo+s2FlfuFxLPWKQRUf+uu4tt+7wRXCgyGbaQjpybNfIIG2pLz7WJ1Ai
K9f98cRIaqX64ifXgSbpBjpyVmuu5UG4LxrUI350d9CRqo1mQRpevhh5zRvm
MkBHeHu1A+btfbHWHPx47yQduTQXrHLVxBdbeDbr5y/QEYGvTRWGGr44qOUt
q09NTyaOml4XVPDF2TBmfhoWemJ53PJXmIQvrnU8ZY7kpCdTrSsK6Qd9YbSL
alSKh56sMu8VtOPxxSNdh99d++iJz4JwQwW7L/wi5r4+OURPOE9xXvtO5YuY
buuAPcfoyTG9v3Eagz7I3Ddm9/MMPTHd+r5brtoHVYbGGnry9MS/kPPivgwf
9Eb3nKK+RE9up5xIbYv0wWK/9s4IdXrSFdGZo+XlAw6BljWiS0+6z4Pb84EP
9pmodnca0xO/koDia4Y+OJFQXeBsTU86/mnsCrvsA6URxdjd9vRk52WpfRfP
+EDvUPHzPBd60lxXLnJe0Af3zKXNdD3piYl5WqntNh94fs5WpgqkJ42rvBvS
6XzwfkLiaHgoPfkyRn90dsobqUdSN5NoelLwK0OQ7a83Sq1F5v5+oicx47FP
u8u90ZGc0PQ4jZ4sKHFYaKZ7Y2Zmf+auXHpidj+y8WqUN5iORYTlFtOTX8d8
a776eIP3Hq+zTjU9efetaZu6vTeOfg/WX2uiJ8dPW2KfoTfkFzjl3nfRE0fl
wQeLSt64cdKbH8P0RKr7rECWuDes7JlZ/k7Tk6s+33cr83jjaebTUadlekIT
kZXvT+WNNytrv/noGEjcmcAdFr1e+HzGISmHjYG0O5QsFBR54ZfTXID2Vgby
wmzHDsdYLzTlWt9b3clAjtvWiDs+88Io1ZjGuwMMhLdHZd8nAy9QSxtLnhVh
IAf10y9RznqBy7VnZ8cJBlJZ9KgA270gVKBN5UQYiHnB2SMOEy9B6Fu6d55n
IDbU6UP+BS+hIq9amH2FgczYzPywDX4JE/fq2JvXGYg7x6A8p/FLOJUovvin
z0A6vJ6c0Tn+EgHMxWZhdxjI9Z6X8so0LxF3QfrSGVsGYqhH51lX7olsz+yj
7Y8YyKkPfgLD/p6oqZDY4ujGQOq7Tdk91T3Rz546x+vNQIYnF3STdnhiWVmk
OSuIgegHyoRpNr/ARt+ETK33DOSm5GFdt6AX2F+z/91KLAM5IlN76MSVFzjJ
GeEc+nW9Xt3nGdbML6B8jdfgdAYDyYyknjiV+xwGgcFybT8ZyGBtbtpbm+d4
UM8p8KiMgSSy2c2+3fccXlzeLLx1DCQ9RcLxXK0HItSZxzJbGciqbwrbZycP
pL1+WnWjl4FIzStJdAh4oLx5LWl5dL2fD8x1h6rd0cntEBhCYSBtIWPvu++5
g3Jj7p7kKgNRv1ya0cHtDuYwa81WBkZCpPndprOega9jVNJhAyNh+ssmJnHz
GcR2GfPxbGckY9//21K67AYF3R6qzN2MJH7r6dyc1264GaHdc/0gI9HmpyyK
i7vBuru5cOkoI6E2U4pR+P0Uz/apxr09xUiOf38Vu83oKUIMq1+ckmEki6HF
RXmrrvgarWjeoshIDO9LBhm8ckVhf9Ele5X1+G5MqruFXNHCLy3KfZOROEfu
rt2W54Jx4+wtP24xkokppxITFRfQJkjMa1owkh9CYuTU4BNsH0lpXrzHSAQz
ExkSHZ7g8CGRrDePGYle5WPudo4nkDZPeHfSg5Hkqjy7Mx3hDLXP+580+zIS
VS+2KrZjzrgzEW7w8M26/qGXZSG+j+F8hFd+RyQjKXA/tPbpuxNeWQcLZCQw
kqL5sA3+fx2RkMzJqpnCSESmVqs9mByRM+M1tpDJSKhoG0ZrRB+hTpy5+nUB
IxmssE9L1HbAoN3TZIlKRrJ0YQ/ttZf2+Je2FthUz0i+CsTT0WY9BOeC/f0H
HYzkxPhFfsrYAxw4Oae5fYCRuL24NK279wEk7a1Pp08wEoln0SMOmvdxOXOU
T2OBkagLlzk9DLiHWytG1AtUTMQtKLr/RbUd7M/09AQzM5H3xiHcfzfawcdJ
u+gEJxPhtcjIiVSxxYfc5rhGbiayoNa8uhJyF+lUqp739zERaesNUlwDNqiU
qjbfdoiJdMb/Yt953AbdLoqXv4szETF9g97Dz60x/6tIVP0ME3G5n85o0mkF
VnrprfNyTGQm59rzUUkr7JbPng9SZiI/Wt9xxZ2wxDF3iZbj6kykueaqtzWV
BS6UpGQ16DAROb2awwa1ZtBhFnl/z5iJzCWUU8V8uoO7FxKecFkzkZ1s2920
/U3h4bnfMO0hE9HvrCj56GyCsIpweTUXJjJw+bXnxwfGSGbnPTj3golkMc3r
29kboVg5mDUogIlksA53cj+7jVYfzvFjoev+28uyPobcwmS1V3V9FBOZTWv7
dzzTEPSczCl2n5jIoaaT/Pm9BuC+9vTV1jQmcuBvluG17QYQCVy7/y2HiQxH
uaePqupDpt7+umoxEynbVC7gFaYHDa6505QqJtJ07t7YkQldmKtb73rVxERi
yb2wmgu6cHk9Sn2saz2/a7fTKnR1ENxs1PtnaL2/pQtrxdDGR+6eItvp9fgn
RF/ai95E3g3t+C3LTIS/wbK7UEIL9aHNnqm0zKSuemnI/eoNDLerWKiwMZPx
0HHRkMfXscZXfXl2CzNRD3Y61ZiriS26imKBO5lJPN3ZhI2bNSEQUbRV/AAz
GYna4b/joQbOdEst1AkzE5vcnNCfU+q4ui+75e4JZtLYLXG24ZE6jAwlsjcT
ZpIrE9q2l1sdj6JT3qcoMJOfu8OnrUrV4Nsv7HLtCjPJfr7jkMcLNUTzJxjO
aDKTiC0qj4RvquGH8f5zAfrMhD7mqrCAlBqq4sMPit1hJoeubJg4cVwNvcM8
bHV3mUmm5uLNzafVsCAUPG7ziJnsLCzc7HlVDezmnDWcbswk5VzreZ2Hatj7
2Ssl2YuZ6Px6UCXzVQ0nJpiCrgYxE7F5g+0zc2pQOvL0wfQ7ZrKa9OLX/ovq
0LNeu+4fy0xysj4+8U9Wh12y/RnRr8zkzGfFhbEDGngxQ9lVm77ub875W2e8
Bt6LW9PY/GQm+dZ9EvySmki1G+3dVMZMjgo8jLzXoonSNKPipFpmom/XPWnp
fh3t893xV1qZyayWkFum1A1MS2i/nOphJss7UbvKpAVG+2YLv1FmInw0U6yt
TQu8mSpXjlKYiaC8YOF01k0cXakSq/nHTD5mnzzVEacNuTOKXNYMLMTHyj79
eLgOrjsVLWzcwELyS8M0Fa7owjJXqvXrNhYyTcNwK6dRF0+psrMv72Yhyi7H
6mUM9PBGSiJ8UoCFFFsELYXO6OGTS4qL71EW0keYt7z00Ef+L+FbR079rz6D
fM0eAzTSJZyrlmYhydqXAgVzDTAqt1/QSpGFXP+r13FN1xDU7uFsG1VYCEWp
q4OB/ha2lvBMfNFiIR1ufMLLH29BkDm45tItFnKho/9cv/pt4AJn6oQ5C3mQ
8SPQgd4IKp5eQT73WMiMifs9s29GMKlgeijymIWoFyxqGBsZw4n96Y0qdxZy
qONBIS+PCfyV185Y+rKQ7C819seqTRDrY797wxsWclY5yEPrmSmyqik0XyJY
SJf8IYtTZ+6gZpN1n3ICCzFxeXzm3uwd9F8dLR5PZiF0Ted+fks0w1KAUYJ3
JguZvFwaE6Zvjg313S+FC9b1eSYTarZb4D8ubcvfFSykneFD2WylBU6qN1+x
qGchwZW778U/sYTyaxVxjg4WoiIT0lOywwr6zVVcn/tZCF8ja3ustRXucysu
XpxgIXfVL6ZKl1jh5Y2i1rH59fofP997e6c1IkKlcryoWInO2088Y1bWSGvP
Cj/MzEq2fI8si8q3RhmfhGvlJlbi4ijmrMNpg786KbfMuVkJjeUBm0kdG8yG
Cyuw72MlzSklsUKJNmDujhf8JMRKgp+28vTP2IBv3372i+KsxHLX3Q7KybsQ
MwyfGD3NSrY9f3Nc1PEuzkXz1L6UYyV6XO6/7mbfhVZ/UOohZVYy/UM6LHDp
Lqz5OYMr1FgJFB7ZWonb4pmx10MzHVbCYnE3qdfUFiHxTFpsxqxkdkeuX3WY
Lb4Mu579aMVKwvjKZLdW2qJAaG230kNW4q3WyhC0YItmM3va0SesxNPuySmJ
3XYY/0Tp83zBSoYfnXbukbED7YRViVAAK8m/IVXxxMAO246MJpSHsBJRj+P2
a052OGRt5HUnipU80C/XVgyyg1RytyXrJ1ZitMbRqBZvB7WZm1cTv7ESc0mL
+q3pdrgj3iyumMNKWs/Ljjrl2+Gxncq2kSJW4m84qupZYofAtKrFF1WsJHJU
ful4mR3i5y+0CTaxEp+RWGvnYjvkSBTllHWykrlkAXqTPDvUPZSKMB1iJef3
Xf84m2qHgR9ZrizTrCR5WoNJMNoOK8snbicssRI79vNanH522HQmReECLRux
ZJFyzXhghwNOwkLDrGxE4HRyz2EtO0jmxrO/2MJGBr1u6jpL2uEy1f7JgzvZ
yFT3oHwBlx0MpcJrS/ezkdQxodMbxm3x0IXnm4kwGxH+oHzg4U9beP8KCmY+
wUbKvRq28Pqtf6/pOO3jwUZepucf2HLTFulyXlrnFdhIVGuTxeP9tqh4xoSh
y2xEw1KhwXH4LrqKXfc812Qj/U/K/h35eBdzTGu0B/XZyN6x2zuzTO+C9YJ9
f4kpG3G0DpKRPnAXuz0pJcZ32UiuuGrjUIcNxCusEpkesZGw456pHYE2OM8+
6hX3lI3c27vjlZyCDbSVjawUvNjI7M7m8HOL1rjr03118BUbCW5Qz+eIs4ZH
9c1jHu/YSNfx6SeFKtYI3dS8TSCWjey5tdQZtGaFpKsqS8Vf2MhErnp1YpwV
igKq2ozS2cjHN3ujRS9bofXPhVzGn2wkaapTIHnUEpNbiyJiS9nI/cDlSZ/j
lqBXl3p6rpaNrNwgQqpOFtjxOuv2QMu6LHAwUb3AHMLNJ86797CR75y5yqNM
5pDhThHiH2Ujv4er824rmUHjhjBH8SwbGXVtObPD5w7MQ+Mnb/9bx+/U3lCp
McWT9v/qGBjYiY46R/3tzaYI4gv/FsPBTvZQmaiFqZogUYfntfw2dmIZ+Puy
9Gtj5IUH2ffvYidqU8q/w1qNUN+16eYzAXbywaDqAmWXEYb2euHAUXby28LS
1/PWbawaMO0tOslOjlJ9CQ5f59PN0a50t6XZSeNO7TvWFEMI9K/20yuykyBZ
zY0SxBBn+O1Lo6+xk8C0DdZCXga4YkxJlNNiJ19PVyg9btPH7Xgr7z5DdkKX
nCJoKKwPh+ERKzdzdnJwyugyo6sefIWMru2/x07GXU5m+bfoItqs+1ihEzsx
Xazce/iYLjI+3dx+y52d7Ao91TmzXwe/x5uW6HzZSVH5+WDRwZvoEVFpj3rN
TnLeqeNykhYWrKpyZSPYyeG2LnnnJzfAnnwhsjeenSg8E62e0LiOvTOFT58m
sxPzYcPqwhOaOC4uZfRfJjuRKTkhto9PA4p2WecLfrGTfldl2n1s6tBNO3HI
sIKdDM46B7VQq8FuPpmDrp6dRCs2ZWuuqeCFhPDUh/b1fDUaFhLoVPDuYXyd
TD87GS2KSqzbdA0pP/5L6xlnJwIcZep/DlxFyfL7167z7MR/haYxTuYK2k/z
OOyj4iDRz7qCFYwvY9ox6OYvJg4iHxvz/eLBS2DI3UQMNnGQygLT0Vt+F8FD
5bWXlpuDiODU9iQmJRyRYqL/sJeDHLKni1/zvgA5F9cBaSEOou09/ZXnv/O4
/mu1tFuMgyjXGdwuLT4HCzr7jy6nOcjq+e7I4ofycJWjeO+V4yBT/c90q0/K
4fUzK+v8ixxk3vDysTeMsvhUPHJNX42DXG+dL6/rlkY+k9FxGh0OsmTZrClc
LoXG893bI404yM9pn00qeQQjL24uS1lxkIObWve1ugJUFU3tXQ84yKnHzJHS
789gK7tK3pMnHKRZe5VeoFYSgspVkXtecJCQLM7FGp5TgM8Ft5/+6/ik/B43
Bwlcqy400gvhIFLP9OueTh6H8SapC9RRHARpapmb7Y/B8WrWoYiPHERv0w97
223i8A84sUHqGweJ2CBzZrhYFLF/kqc6szmIRvpxmYwXR5G5VfiPcxEH2TFZ
pcevcwTVavFpu6s4iLmC7syChzD6gv97k9fIQXKZx4vobQ9hqem9g24nB3kc
pBq9wUkQG7h5tKmGOIjzwfPa36MFsO9GEAmf4iDs0/ZlUUMHIBG6aR9Z4iD/
719xG/+v/D+IrCn7
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
P/3/ANEnlcE=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
1LmsO3US839dSvX//Pp/AKUtzDU=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
oG/R6v7yBrx3ec6oUbYGvH+n3G7WbkBK9utFi+Y1yF0cy1WN2oCGEY/f74bX
wEVOlfnziw2YYwxNDl9ZgxMhx77y3tkAnNSXd99I16H2cp/uHtMGCNl+16k8
vg469unMXNProJL860Yn9zo47bh9TP25DrZdrcxzIuvA/GTONtxnHSIpR1YP
ZdahWnZKYUdzHYqvL/89ob4OMWalr/sursOA6WEar8k6qP7aEpLeWYPDKDr8
7TfrcOokbyhqWAOuptMGKr7r8OT6kE9vOPHcDi5LGEevg2yJagvbszV4LnDz
pHPGOhD6Hq9RCq+B79N7W4Fl65Cfk6qcQ7IGGYGa7cnN60AewM9yipjn5l8m
WcXD6xCaXndVOXoV1tbsfVtW1mGWWd3iCVGfmc55PZ8g3YD9C2LojugqiD0O
v7NzfAOi/psjoydbBQ18Mgf9uQ14Okvzt655BZwLf+xyiW7AP59CZ9voFYib
qe66JrsBiPRuAYcJsV781/FdQX0D2DgoJpqI93zi3tgHfZMNOG/sII4n6gSF
86qZ3ZsNcJC+pfwlZhl4M0nk/Hw3YNrlY5e52DIoDB3jjo/eAMfmy4w2rUvw
4tiZox8ZG7D4ff1DrdkSBCKB/t9lGyDYum3+knwJvlvdLhxq3oB009MKzvGL
0JWoELI+vAEt8eS2hJuLsN3x5CXV6gZ0DLbmzncvwEly8/vsZJtwL+aWuaHt
AkiIOV64emITznO6h5gwLoCesQ9G7twm9J3fyMBmz8P7yMjhJ6Kb8Dn2ywhS
nIeU36klr2Q3oRt3MMezMAcNuwURnuqb8OdLFXep3xzMXa6ziTLZhBS5WVda
vjnA6XQqZb/ZJPYhDiGn/s6C0IeJyzW+m5Cnbh6y/mIWVCrWKXujN+GQ8EE9
itiH2K6QTSxmbMJrMR1tlvwZiOQ8XklWvgmLnK01lpozUKzCGcPasglHx/i1
Uw6JfZm7kAPfyCYYG9RG1CYR+7Yf8EhydRO+5nyLbL0/DVxTD4TUyLZAUE6b
v2l9CqRZdXHmJ7YgU1SjozSG2FfKW864ntsCUsvvP1Nkp8D3jXNNqOgWcOd+
KAtYnYSMdL/4NNktGDYKfv06dhKa+6Ocy9W3INda7qL+vUlYw6VrdJhsAa7V
qlt1ewKYJIpEZoi6cfOBhtjD1AkQe9nAcOC7BWUxpPka6hOgEd+9wBizBUEB
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
Y6aPHv2//2Jj+L/2/wC02Qih
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4}, {0., 1.4716364073147867`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240930107484303`*^9, 3.9240930271454687`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"06cbbec3-7679-4a78-b2dd-38e90914f01b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240943445424223`*^9, 3.9240943906103354`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f8f1abe2-d78f-4630-a097-cbaf63a90f49"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHlcjN0XwAfZQ4pEpX2b1plpZlSYkwgtJEIplBKlveyqmVReFVpsCdlC
9sgbYU4llSxF2Qlv1hJ5qYT6vX6d+/zTZz73+3w7z73nPvecR8cvzD2gN4fD
0erF4fz56/HnqhfjpB+FvQrixPIT+X8uMS4wlVwe62Iv5/y54sWo5hFs6NLf
Tv5/3kOMblH9OD/2TejhuWIcf+bfMyplRj08R4ydoa2Zk6VKPXy9CGMU+3ns
aJwk6fGLcEDjuOKJmbaSHr8IK3aevjDouY6kxy/C0uCy7Ki6aeQXoSEcWzvp
yxzyi9DLxHjDL/0F5BfihXvv2jZvWkDxC/HugA013S3eFL8Qn76N/bDqmjvF
L8SRp/w76rs9yC9Egxc+iX67ZpNfiFvt9I2NNezJb42Ty1YtiEih5823xsNu
kw4p2wP5rfGuWPog94opxW+NDWaj42xyF/Y8L/e/cZu3vkOeLO55Xo41PvKc
muVb7tPD1wswrSgjy6jcl+ZHgPl2d7eNGxNI8yNAWYhNVo1wOfkFKCmJCPgZ
FkB+AQoGPO44ct2P/AJ8qJ192Hr7UvLz8VHeEBd4voL8fFTYMtoitiuI/Hyc
NUkSP9s5kPx8bFfS8ApbE0h+PpoM/lgvkwWTn49lbrdUwmQh5Oehhf5NHSfn
SPLzcFt7xrJPDyLJz8Pe+zwd7ztEkZ+HQZryH+muFA+Xh/0Mu1bMGLiC/Dz8
Mj4oJW2lN/mtUP18445R713Jb4UnFxfoRN+YQH4rrF0cPCcJ7MlvhV/m9Z4R
5axAfis8eKR9re07K1pfK1z1SEP58mEHWk9LdNrjuKH/Bm/KD0tsNl6w9v65
AOItcbngtLlmQBDxFpjh9qS1wimEeAsc3LgitDIhnHgLDH0woHf6w0jizfGg
191SG7sY4s1x+W7peOn5lcT/91vBtC5h9GrizXCyXe2KbQkriTfDUPXpxQlr
Y4g3w4vZ9jmH70UQb4rN1dMe7ElaRrwpnj1q//R4xWLiTXGQeqxYOYNHPBfn
3rh4/NAWd5ovLrre/hkTHsXyh4sKCi+fuu5YTvNtgoFaWc9/9goi3gQ1eWVe
KtYRxJtgvnGc2p6tK4k3RueHacmrC9l6G+OJSxaa63MoHzjGGNe4S2wyM4p4
IwzZpdt2uDqaeCOc32tY0d3YaOKN8Mu2fN2aghjiDfHb14upqiVriDfEF8+v
vg/SjifeED95z3q5dVkC8QaYc/Tz/thjG4k3QKXKmpQWnU3EG2Bdy7rwQzM3
Ea+PT1Ia1YZqpRCvj7sT9vbRd99MvD5+KPFMbp2TTLweBqVFffw2ivn1UFxt
7yb7KCVeD79Y7TNftj+OeF2cdwj+ii1eS7wuemuHhIirVhKvi4nzcMmIzgji
dTDF0yb96Ea2/3XQPLKq1MMOiNfB3tVD98aMt6b11ca8Rotk99pFlA/aGD/i
bfrBTJbP2qh8x8dH0WgFjWvhyFc5N+bXhdL9Y/FS0PZjP/dEET8WvQ1c7l1s
Yfmoidp+ede+R8cTr4GbT3990HlNSrwG3vnZYOWvJCNeHX3dXvtEyGXEj8Hb
GdpuS8wSiB+D6kZ9T92rTCB+NGYKcgp3d0qJV8OYtqlBffnMr4aD7/77/Wot
849Co9VNs9IPJhCvimHdWcNzPyUSr4pR1Xc6FyhsIn4kao75USarSSZ+BLqZ
+ayJXrWR+BGYP9HhnsEZFo8KOr0cUq1y5y/ilXG1ZU53xZ5txCujjck6pUeR
WcQPxx8N482qTuwmXgnd+1y/2XFtP/FKeFej66yt1SEaH4oZt/YPh195dP8Q
3PW1LbVXdT7xitjQXup9ZcwZ4gdhXsG0H+5J54gfiL/tjb/XXzhP/AD0k6ne
bv23kPh+6PH9642lpkXE90VOUKrq8QOXiVfAiTvftHrqXCW+N9YeWK+rUyUn
vhd2Cn5VyLqQeA7uq/fdFd9dQuO/5ZNTYyv9JpfR/Z3yA49jnzw+e534DnlJ
pBFvbkc58d/lpmtsXSxabxD/Vb6qO/lZ6c0K4r/IvyZolT2uq6Dxj/K6HXmc
f2Iq6P438qfZ1475T75B/Eu5y2DzN3Fa12m8Xt67+9DL2idIv8vl6+cqNfJV
ilj8nIatOx36+B5m4xKXjvR9cUb72P0S99DmYw2vdzK/pNm/3WHbILa+byTC
lg5pqVo6i08ShjfOlGzbwuKXzJCcH/L5xWb2fJJ5XUkDg/qmsueXdKcmHlk5
K4XNj4Q7NDRnb14Smz+Jyy9JYElIMptfSWfdkSyVb0ksfuDDhA1H/0li6wPX
Z+QWO9xj9/eGoptZ13SrGK8AibVC99LzG9n6Q+nvYW3tRWw/9oMTWcV1z3Xi
Wf5AZbdj9INKKcsvWLe1XHN9K+MHQdmt1k2Xc9l+UQS//DE8LRHzDwGdm/1f
xTQwfihEGT91O98lY/kPwiWF5+Z3s3ElkBidsTR8z/7fcIht+7s04U0s218g
qXYtcJ2zlu0/yJwraN5XE872J/x6WmmfOcKP7V+oeu/0MN7Ghe1v8C7fXhHQ
OJ3enyMhMXtleWGLL70/VSHqktPI0d3svFOF0IWyjfYnIokfBXO33qrxObCB
eDX4dmpn7qwtscSrgSB16Ydpl+OJHw3W/fekhCbIiB8DaarRziXV7DwaA+6v
znaVXpQRrw6TpF0WLnrsvNAA/2w18aVaKfEa0Nym+M83IfNrgp7N23JF9fXE
jwXXcgXrE3WriB8LJt9UdJb4hBOvBfOvzZyRpsjOd23oXlcoSRLPpnFtqHZs
7ed31Znu14aPAp5uBM+ZnS9wurNA3f6CHzt/oNcHhVFBZz3Y+QSDNok/5jyb
ws4vmGprnv/1tSs73+ASV7HuhJEtO//AqUZ0OlJfi52PcJrTFLN3tA6tpx6E
T3y2//VJL1o/PQhOL9qeMpadX/qgO1VPJm8KIF4f5uqPu7pgsz/x+mBgKz2c
GeBJvAGUvXmRXLROQrwBzInkiB7fFrD6AD5w5Jr7471Y/QAdDzQNd20JZvUF
jKrYsvXk7TBWf0BhlWfgIlbfcozglFJErejoCla/gNfxM3zdqYtZfQMgVLA/
LRCx+gcS9Q4W+J51oHiMIVn1oMz0yCSK3xjUmyQP7R5Np/hNIOzgouG10ax/
MYFfxV6ffsa6E28CO2arP77iPIN4LiQ6FIg+pU0kngsJFx+MX3vaneLhwlbN
+mzvJSwfTCG48mqTnUUAxW8KfR0XDp7znur/fFOoublx6JVjy4k3g1cl+2wq
v1D972EGVpzbhY/MQ4k3g6ZHp6aENkQRbw5SK8PvYr9VxJvDyn+eFv62YPWf
OdRnvW1vyGPxWEDaFJHI+fU04i1ApUnKcZPbsvobOiSZWe8uObL6HIp3T5ky
Qcol3hLEf7VotCl5kt8STrSde1OoQ/0Uxwp+msx3OpcfwvoDWGIy7N2HfLZ+
VjChTVdUvzqc9RfgmVKj6a8WzfoPeHY2u4/9kXDWn8AOAW9/7U82Pzx42D/B
Uf3uPNbfQHOqvbDjO3v/8CDPSM5f9JrP+iMQx21oUZg+jp6PB6be9fmBL6dR
/8mD3+f0DVwzWP/Lh/CDH0sFjfOof+VDvdYnrlBvNq03H1q7E5szDGdSf8qH
L4pizuAnrN/hg6LfyHHL1ovIz4ecTQqjtmSak18AxSaf/bMnDyW/AB7KldOO
J3PJLwCpq0d2+3I98gvAtClwgXquM/kFMH/KQtOqd57kF4Dyd630lGNLyW8N
wakvgj5vo3qTaw1/d1+ucPaNIr81nKxSyEzpjmb9NVgs9EdVhWjWf4OjeE2R
RC2a9ecQ+HWG8bv7rF4VwsDCrtC3nRGsvwcHYf23YwFhrP+HSTFXdwfciGDf
B6CP5ePmgjXh7PsB+DStm2JWHsq+L0C1Wlzq/eRg9v0BOmTNJmqfg9j3CRAP
U559i+tPfhFkrdG7p2K5kPwiuHo033bdcbZfRdCS7WitLXZk30cgZCIUZ9sZ
U/6IIXe67fTZv+l9zBWDUFsrw0s6h/JHDGYXZ4JMbQ7ljxhWrX+X6XSA9cdi
WJsbNSGnfQrlpxiqM85LH88XS/4H/eGUUg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
++i3VYfujwDmvylsi3TUFP0PpcJxEw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8VesaB/CdI0kImcrMNo97s3Gj9nNFruZQqZByKFQyZ8qUKJRjKkSj
TiklqdNoPx0apDk6SnMocnAVSbnd0/G8Z//jsz/ru37Wetf7Pms/r86aUPcA
MQ6HozWOw/nxd8mPT4sd1nonlvWq99cdr/zxscP7SxXcvJwdRJwfn2Q71BhO
DXP5BqK//RI7VM52VtTbvkD0tzexw/op6hOmzVw25jl/fee+njtLbc2Yb7HF
vZdXqsp3rxvzlbaoKCOhYG+4nvJtsbGjof0/3E2Ub4tGfedP3bsRTvm2+P5s
27nloxGUb4tHhiOlggvCKV+ADfMGHxc7k68U4Ccl3+4g13DKF2DWwZ5Z7usi
KV+A5R7eq+q/RFK+AGs/VtZ01UVRvgCv39xy9LZeNOXb4NLnU18O//X/x/Jt
MKr67v9MfoqkfBs8oOR4TEs2ivJtUMXFKkVpiLyJDYodaMjbtTGU8m2w0clu
gcsdNj7WKNdZmv7tMlC+NXJ/7k+61bpMOJZvjbH1sg16/QHCsXxr7P/61L3w
apBwLN8adQ70KFXlBo95jjWCWJZ0qF3QmG/h46fZikoWR0LGfCUfV7Z8nr/z
WRDl81FBdMrm/d5NlM/HG4bfGk5zNlI+H9ctyxoNkdxE+Xwc+m3qR+8zGyif
hxd6ecHpW0Ipn4dp/265ZZIcRvk8fDT5Tm2ffTjl89DPfcYqnahwyudhdXxO
cckk8hwedkT97+KjtWGUb4UafL2BkKsRlG+FbRUylq4vwinfCrvdJF+dOkR+
iRV+eWcRY2e/ifKtsDHiiXXgaZZvhTN9fe4FSrPxsMSCSmG+W/wqOt8SvV8a
Sa4cVSRviX7pue0Fi5fS87HAYgW5l0Pn/Oh5W+CXpzeipn/6mZ6vBfYP126o
UA4ib45dt6tvJU1eT94cc28Y3/+auIm8OS6tlJp/uyyMvBnGv7qruSKa5vcS
M4wILYjeMpN5M9TmNNX4O68nb4oqD8/2mzsHkjdFdwktMUUHf/KmuHX/23X2
KWz9meALWftKrZwg8ibYqrP2w5OZgeRNUMdr/3sfrj95Y8xalvpK5rsveWPU
u7h6WKHRnbwxvg240rT8szJ5I/T78/ymLQudyBvh0N6YvktnlpA3wtqm0yfq
YteQN8QAteJyhXnsegyxItNtdENdGHlDFK+1aQgYYOvPALtDZsp8UGTrzQBn
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
2EMzO3nh/wEjRnpr
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
nrOW9L8AIJcI
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eWm2fKb6XyeAjxONPv22wVT+X68ThNQ=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240943922218885`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"e9f3677f-c7ae-40d5-b9a3-e5beb0e61bed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924094482718825*^9, 3.924094516885671*^9}, {
  3.925136152891206*^9, 3.9251361532582736`*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"611db49b-7a9f-4efa-b79f-159affac3597"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczOsXx0dkKeSmjVIz7atmpqlINaeuFpUuMkVCq0o7ZbuWok1uSGS5
oSxJkpT1h+ZIlisjIi9USLIUbii6Rf2uX+f5ff/pNa/n/Xw6z3nO8zznHF5w
3JwwOQ6HozOEw/n5V/Lza7DFm7G79q1sFYlPlPz8bLG75lDNrSIXMefnl2yL
jRKb9afbXcX/4yW2OML/uLNB/cxB3vTf+QdDlSNw1iDPscXIS5dnxSz2GeQb
bNBMY4jZIW9f0rfB+N5Tyec/SEjfBq/pFE+slC0kfRvU1X4xLkUcQvo2eFk/
593nw5Gkb4NhM1KPuL2OJn1rdLEzu3fAI470rXHum5xVR3JjSd8a44vMemoL
IkjfGmHWaMfrnwNJ3xrrrfx37d/oR/rWaBmwcX5010zSF6F3Y9VEbV8P0hfh
vPqn4b/XzyZ9ER5q8rmwZowv6YtwfOynXMiSkL4IDeqHTbk1jPzJESGve8VX
iYOzdFDfCi95KHAD1Lylg/pWOH2b2oOg9bbSQX0rNNH6dW9rgPogL7HCr03+
/RZv3UjfCpOeVGYez5hP+laYYVETtG5TKNkvxG1ZLlp+dUvIfiFyMjqE+gdC
yX4hdnU6JwZWBZL9QjR5yfvPZnfaL1MhPhcMWzx7kZj0hdjZMeREu+ck0heg
1gU93VQlIH0B7llU5uC8XoXsF+CCg7K185PcyX4BlqReFnlvnzO4XlMBfm9Z
0qfZIhnkOQI80yacGnvMn/zDxwLjDzniAR/yDx8rhF43hcnupM/H/JqphbZW
o0mfj6/j2zxqh6mT/XyME+ktVO11Jn0+yldeGLtaEER6lhjUypX0346k+ZZ4
8YbUX+YST7wlDhzNqilPiyN+Mt7OdN2rCvHET8ZhtUF9zemMn4ylA5cEDefj
ibfAbJdog657CcRboPJwh4qnhlHEW6DE8WKNyqGFxJujnqzq2ZJZM4g3x+X/
Cf8+4uVk4s1xm7XOIodiF/K3Gdq9408c8tyL9s8M7+p3NafGs3gwQ50+r+dh
a4KJN8XmnIrqy2vCiDdF/sg3Fzw1lxBviuWnvTZYnI0g3gRf+0oPtjex82OC
/u/blxXvZ7wJChd1pJ0zWUy8MYY78gRDNFyIN8bPc+61zvwsIN4YE7pnfXuc
p0u8EV5Qqdk5RW068UZoqfisYeGpGcQboUHF98vvq6cTb4jFHluuH1lkRbwh
tttV/dZ9xIp4QyzNh3ljSlSIN0DNBXdEBiN8yZ8G6LjxVV5euR/50wB5n96t
3NwRSv7Xx2ubJhQmKYUTr492xZcSdeRiidfHU5OP3Ql9vZx4PTyjZvUkLyWK
eD180PIssjP6N+L18FKQlm5OZQDZo4seYxySZSdjyH5djLv711SPSwlkvy72
e9mnT1BKIp6H9lGBjp5uK4nn4Y1ug0rbyjXE89DII7P+auZG4rl4amjv+Mea
6cRzcS8nRSlkexbxXDww/6xXv9NWGtfBnT4qm95s3E7ztfHtvD77otJtxGvj
y1i0WFPH+EkY+fHtxiT/bOK1cEjKL9mrErYSr4UKTZ67d+7OJl4TGzXSzJVK
thE/EbubkmXTTmwnfiK2q5fJ/2ORQ/wEfKAokLP7xuzRwLuSpbL7AYzXwJsR
TTbzpmwjXh0/5Qck6N7aSrwaHj/y0PnseWaPGq6qSzvMTWH2q6JJfuzSTYIc
4lXQvduwb++KXOJVUG4H1/nFkjzix6NRRku2gd1u4pVxoZ5Pi/XhPcQrY1P7
ScNvwj+J/wUdcwUrbjTuJ34cvr/y0brSt4D4cQj7rzutnXSIxsdirfNu7uGL
R2n+GPzeppJaUF1M/GgsjShvzdc/SbwCvhg9tmDK2NPEj8Lwezf5ShmVxI/E
qzHBomrlc8QPR98ffar6PReIl8f34/Vumk64TPwwnC1JCFM4JyVeDvO+Gf1h
kH+V+CHY7NxVMq7+GvEcHMo7OA1tb9D4D6lnxi/x647eovm9Ur/X38rb+m4T
3yN96zdS3/WWjPhu6SnXLxuqVt0j/rPUvdvOKcatnvhO6Z2OnZ4zPB7SeLtU
2c9avHjVI5rfJk2LmGn06f1j4l9IQ3z0Z85Ja6TxBunmV2vK0OkZ/b4uzfNP
rpJlvmD2c77+dv98ocZLNi7WefioM/L2/+eLW3LPJoonNjB9sWF1fbuTwj32
/8WX8wu6NsWw9baLQ900NpxPrmb2i+PyjE6HD1xi6xPXPc/Rjb92hq1fbDFj
atK8r2XMP2JObXDS7PJi5j+xplixvXzSEeZfsWrW/h89VSx+OPAgRTsl/2s+
2x9o1OzZ53aVxaccfDp2YNW4yp1sf6E30qKtVmEn239o77l+NXdHLosPuNLW
ti937i4WP3BZ5Vzd70ks/kfBayvL718nMX0F4B19Z3B/VB6LT2itSVz/99Rd
LH6h0KsvztaB6Y8FReXS4NgrOSz+4d2fK4a3+7H7Yxw8CdQ32teUxc4PjFaJ
W55hksHOF0ytkPgu/ZbGzh/czFNf7LdjPTufkG7bv8yCm8TOLxSdXxLfkJrA
zjdkZ4jNIs5GsfMP4SqNJTUjI9j9ACUtdh3aVZHs/oC1Ctv/anaPZ/cL6Mpa
s80rE9n9A/P8++99Hs/0//09kP7lQzrTnwDrQkaE6UcHsvsNPJrezc2qcGf3
HxyqK/qwcpQ3vRea4I4j3DobI+m90IIItSD7VZKV9L5ogdtD37HVw5OJnwTq
dRN6Mow3Ea8NPPkvOR0/NhGvDYJMszdqO1KJ14HOsp4FIR3JxHPhydHj9099
XUvjXHDzrww7272K5nMhpuRS2drVScTzII8nv8fmVBzxPPjVpGfce9NlxPPg
4rWbMcdHs/xHF0rfFCtmPmHvoS6YrkbPTs4S4nXBK1xebY9HKHsf4e4HWYTx
nPns/YS0N7PKx6TPZu8rHLr6+GF1Jp/8qQ+9R0Y3tdiwekEfMuIdJSq7o8m/
+vC8tV7I2x5FvAE4tqlOE10MJ94AhsxV5cWPCGT5AViaqCiq27iy/AGCXzwK
HdOozPILiOu6mzCqmU/2GIK9XsHKpfumk/1GcPWbcbtlWgjZbwSla512RO8P
Id4I9hpWuP7wCiHeGJw0xqofu83WawxXkrccVVu6gHhjiM5b5LCgLoh4E2jL
uNJdEBNMvAkUuUa5TCxi/jQB0eNXP6RjmP9NwbQhZ5rMOYl4U/ioesHj2fHV
xJuCW/PsK0PnrifeDE7Zh3f+8ymFeDOQW62a+0oplXgzOHLnQ3rbwRSWf0LU
OH58k8Ialp9C2VL7O+fOsngwB+dgbqV9PluvBezRq9344YEPy3+h0qeiwWGH
hOXH8DHz63XdWg+WP4NZ7vIbecbWLL+Ga2MmPSt8YcLyb5DJ7d/QqeNB+2UJ
259EesunhtB+WcIjrHPb2RNK+2sJW06Ie1X644jng6xi7/VP5stZfQDPCwNl
cr6JNJ8Pu+24MWVnllF9xAenUWszRq6IJT0+LIspSHQJpvy5gQ+tD1paC+0D
SF8AAXXaK5uM+aQvgM2rf9c1bTQjfQF0bhuYInplRPoCMBj+x3PVXAVWP0FK
wsmF5icdqP4RQJniin25IbPJP0Iodb3W+9Q3kOonISw3732SXEH1kkQINuml
f8lvo/w2WQjefL+uxCziS4QQyC206/cIIn0hKGi8OfvcOJj0rWCzYEN6vibl
w6ZW/8b3jJGF3iy+rSBphVONLDGU1afw1uAxV6TF6ikr8B5uPKf0qC+rb2F1
RXODq8yH9EUwdW1O1Po7TqQvgknH1dIezJ/F6md49mGuYtXNQFZfw9uIzuOS
sDBWf0OzulpzTS+rb0Ugx3vao50ZxOp3cH8dVqQ0YSGr78Eu/lagcfEiVv9D
WoD88F8/hrD+ABxSre+/Vc/uf2sYH4UWb79Hsv4C1CZ1zeLejWX9B+BoDkw5
1xTH+hPw4GDf32/+jGX9C1isUa68b3Ek629AgSIMdZEw+23gy4BCdEBXIOuP
wJOtf6+bLGHvhS108lbMrOmYz/orkL0l4uQ/Kz1Z/wVEKm7S5a+cWX8GhjVZ
HKg84cj6N/B6IN6oqNqI9G2h4nrCi/ejJov/CyE+adY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczekXx68klTYqtCAtqtt6KyXKPaKMIklXKZJS0UJpJS3aVLSoMJJs
qZQuKSTpnhhrhpIkWTLZlxAZGsOP6Ty/7z+97ut5P5/Oc57lLJN917n6i3E4
nEnDOJxffwW/vg4rdIvo2dP5+HZTVeWvzwp9O281/qi15XN+fUlW+Om8XPKp
Zlf+f7zACnPNFLfI/L6c/x/PtUKPxLDyZL7fEM+xQueoa1rldmuG+A5LtLl7
wWH1zeAhvtISdVQLJeQd15K+Ja66e1zDgxtO+paoqyDvkj07nPQt0Xqpv9uh
jnDS/6mn9PiTcs960p+KsjPcJRaciST9qfh4er3/y42RpD8VTW4dtE4cH036
UzFi8KDy7SPRpD8VpSJW3NkfH0P6U9Hh7Bx5p+WxpG+BWyXNr67zjyV9C+TE
GNZWPd5A+hbY9OSG+PRTG0nfAt94y3ieNokjfQsUb+TV6yXHkb4FVkVLxcrv
iCN9c/wcqDdNwXkj6ZtjTRl8evWE6ZvjDpHH8y3SZI/AHBvbBm9NS2L2m2Nf
RlJvnV4Y6Ztj8OJ0x70Lmf/NsCsl6nXk0jWkb4YSy1uuLtP1J30ztNkM9tYB
AaRvhryLZUnfg1eRvhl26n6KCkpdRvpmmKmg90DxNzPS5+HJR/drfepdREP6
PJQpcvzw3XWNaEifh9YuXndlD0SJhvR5WB53qvmbcNMQz+VhQalwWajWpiGe
w0PP1NjzJ6U3DPEdpmj30a5ds3I96ZuizkOxiYcPBJC+KQqfK3lXrLckfVPs
DUjcWjhqMdlvir6Hx5WHhNJ6OaaYtrfOq3ylH/nDBL8Ne+Z75JI3rd8EPY9N
aO2+4EO8CUpbL/acUsZ4Y3y57WRljqc/8cYofOI+z8J8JfE/x/f5uTw18CHe
CEur58k1JXkRb4Q7axf92zzFgngjdK4Rqdp7LaP1GeJBezujU8GraT2GqB5m
d9RFbT35xxBLinpLQucyfxhgmUTiw3K7GOIN8N9vV+MO744m3gBnvugbMLQP
I56Lk/z3z30f4Us8F9VeFpq5Bi0hnotb+1Nljo8UEK+PRy1vK75dtoh4faz7
FFwTf8yJeH3ktLa6bgrQJl4PVXocs65n2dN69ZDjtujGQ+N5tF49FFs84Bbq
s4T8o4sNGdVVRnrMn7r4TfDQZoV+CPG6OCFilLXJHnoPKqdgr6hwyeUDUcRP
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
8q3m8ESx7L+P1Wqc
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
GDgEdH62ArM6s+t6sVNF/wEFxmLZ
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8VfkbB/CrKESjKPvOlS2ue6+bkvuI0l6IFlGWJFIoSfYiJIqMMZVG
0oL2lKLcp9FqGW0qo1U/mYy6VNSvqN80nu/v/uPldd7nc77nnO/2HMOA9R6r
hnE4HH0ZDufHX68fvxYRTjNsvKL+kSupKP/xE2GK8F5NYfi3Ws6PX7IItV9H
WvfUOUn+9V4i1F1rljvS3n3IW4hwifbEzLTjiyX/eo4IW1R6Lx67vGTIt9jj
w9i94e2vllK+Pe6PTquslC4b8sn2+FR7IGxUgC/l2+PXE8Kxx6pXUr49Fnp2
pLhm+FO+PVreiHjWMsqf8oVoqflNUaVlIeULkRO020fhDo/yheja0h7xWmee
eChfiLoi8FPtWSkeyhditUX16imPAsVD+ULsu3hJDlJWD/kWAbZ7TK3KfLtm
yJcLsMQ6/pErf92QTxZgfXJVZi6GU74AhfptpveWhVO+AKMyC7XG3CfPEeCD
vuMWDnPWUj4fU9dvu9bkwvL5qP5KMM/vRADl8/H01oHK4DWBlM9H1f5D/c8y
WPv/+f+qd9ZKbW/K52PhuYKiTkdnyrfDs+rhJk2yQno+digfVJy1Xiqi52OH
DSPhyJ4uoOdvhyeHX1/wVs2Qnr8dXu8pDvNzcaB8OzTeZ9U928uU8nk41ydf
a6mcKbWfh6W2D4NzF/dR/+GhYr+3e824aZTPw9FBCYnc0FmUz0P9tYKwrHYf
er88HPNalCL1CaH3a4vj8k4+6jm1gdpvi8c3pE7aOxBN7bfFYbKpvknG0ZRv
i/IzhbnNqRsp3xZFrUWHjhtvpnxbNPaYJGtdEkt5NrivZ3OxrsxmOt8GTy5d
XG15ewN5G/xueuBYtye7/kR87aNwTvdxBPmJ2FgwebkJN5L8RNz34UnBzrwo
8tZY+7F1Xt3+DeStsfjuNVtDPWo/xxpDjdq9HoRHk7fCHu8FbTKJzFvh4Rxx
0+SEAPJWmDDdJdpv8RzylvhuWFr05eU88paoNEP17scWE3pflthz9csfwz5N
o/djgbbzD2oZl3pSf7LAl6u2rNQb7kfeAjUXx8hU5gSSN8dzN9adr0sJIG+O
j/aIajrOu5M3xwZnz4ld73XJT8CA/K/Kalwe+Qk4JlnYXqQxj/wEfKr3Yfks
y8nkzXBtXr+++6zJ1H4zhC2DanZuND9wzFASbF2T9Z8Aul8u8ipUPyl9X0Oe
i0Was/T4zuHkuRgtWJnJTQonb4o2R+d1G+1m78sUo3/rvRRSHETeFE+f9JUr
ODCVvAnKaBv2Vrz3ofab4DfXgUNfReHUfhMc+ceH3B3vY6j9xlh6vuuCmV8c
eWM8Umo8T3oumbwxLr+d7mkFKeSNcETon6OemieRN8I1sm0RnBWbyRvh99QZ
xRmJUeQN8eKUK/Jx/DXkDVGe3z2l2JvNV4Z49b7f3sqqqeQN0GYwJj8yh+ZH
LwPsP5mfo+Wyiu7XALOnes7ufBxIx/Xx5fUm6eq/2fysh83pFRPOus8nr4dH
5mReyW5ypOvr4lO1YVv2FznS9XTwbMi9Gefvsf6gg9iR+vSXU6x/aeOE0vTP
82b4ktfCWLWN9m9twshr4bLP2+VKkjeR18TB21HpeneSyWtgW9bIPx9Lt5LX
wMqdujrRRWnk1XF5cd6rvzV2kB+PQa2BDa6GOeTHo5PqIb1Y01zy4zCmOfGb
j8ce8mroavq4XmqVT14NB26vd4q7nE9eFVNKDwfsuVNAfiwWBllnXZu6l/xY
NDRz5nsoFpEfgyu+FK8b/5/fyKugQqOGwzvOQfIqWLmqVXI/voSOj8arVTf4
8vmH6HxlNO477XAisZS8Ek5dZPrOLe4weUVUTXfxjw0+Sl4BTQy48WXvjpGX
x5DLkeAaUU5+BE4JvNswLeMEeTk8M05ZJ3r1afKy+GePvNIM/7Pkh+EFnf0l
x1Mryctgm3R6pUfjBfIcrHHftcKz4hIdH5TcV5HnzSy8TOd/kTwXxGt510vI
f5a4Zd38vTrnKvk+yewNkwsMKurIv5ekCVPMzC1ukO+R+JzSNv/Sd4uOd0la
zK6N3z2qkc7vkHg/r9lrt7uZ/AuJQnPoolW1d+l4i+RTq43hwp779P91yc7b
KmeOhT1k7eecT/5ZPnZOKzsuPuIw7JiKKvMt4vApvaMLvtWzfPHlX2K6/Ut+
Z9cX11l+kZ+/9hJrn/hj4odop8/sefaI17c/j3986gi7P3Eit71JfgzrH33i
jM7sx9LiXPZ8xB0rFTqiQray5ycurymrcHdj6/2gWClvxWzd28E0HjnQPZDz
fcaaOBq/MhC3i9e7eF0ajd9hYOWg/nWWURZ5WWhO++R7RnUXeTkQb1OfXu+Y
S34EyMWFTtBfl0teHi79et0pdVoeeQXwTl1Wxy9jXhEMBgs7rY4zrwTKgZmd
SWrMK8NFNa0D+2vzyI+Gz+eSRjel5ZFXgdC6RO3LInZcBY4GP/nrZUgunT8G
5laF5RfK55AfC0p7w9rrTHeSHwunXJoOOiRkkleFA76RzV1WGeTVYOnpiftW
bswgrwY3P737627mNvLjQLM++16gazL58VBY55sca5JCfjzsllnoXzZ6K3l1
SPg06UGV7VbyGvDOfkxqQRF73hoQ4GneVxKxnbwmVCTkWg5Up5HXgsgPwg99
bunktaD9rjOn1iaNvDYcwatq359vI68DZaeaF6+NYe3RgcDllgfLXsWS14WS
7paupzfZ/kEPsnUyTJbKbmTzNyQF70uS6WX7IX1YXztKwb43hs3/MP90fW3Q
8E1sfYB7ma4nd6dE0vn/HD/zfX/2araeGoKoMWn7G0vaj3kZwogHz5t1knzI
G8LN0bVPbEoWkTcCTddHyso3bdj6BuF9dqIdzUvZ+gdtrYMfT80MZesjNJQb
pivwItj6CW7xCqVdiyPZ+gqO4aUFitPZemECKdV7hH0eq9j6DPrTD50Ffba+
mECQZe/krtRJ5E2hTtjO7ZVVIW8KWbKLinyuLiBvChe7HEOeOHuS50LM3jT+
GvWV5LnwKHdset7/87mwzMO/6s2vS8ibwXGdqLMvD80kbwbFOX+FDJTOZPsb
GD18/sOy84vY/gcUn5SPmz3gz/ZHUPPiZ1kDN7b/nwDhb522nk1n92sO4cpb
L04o9WP7L/g2UG2yO9+J7c/AtNy8/6cpbL22gOct4pebPqyn92UBtsF/OB7q
3ETvywLc5XrC69uSyFuC2/DoUc8usv5uCbnXCsvOa21n+0twuz9NpfEo689W
cPiNoG2OOevvViCjqO48p5l5K3jSOd7YWsrGozXMn972JiYrg+1/4UndikaN
O8xbA6/V+cv1mHS2f4bKTT+9Nf6Jje+JEDJJqtD4MpPtv+HqpartNf1sfrMB
F0dtk26HbLZ/h6RboTHePjlsfw9ZO/conotn84ktvBiUhPUc3MnqAzjbX6oZ
6LOD1Q/QcCzr8VLDdFZfgGVkmku/eBurP+CWRJvvsiWZ1SewvbBkU85/Y1n9
AuNaDy+0vhHD6htY/uuOpE4HNn55sOpGcFTT/TjK58FRqcK9ixYJlM+Dvoq6
2VumJVA+D1Tm/8ZdtCee8u3g5QtB0LUr8aw+A92NRaJZUxNY/QbqboV8x+At
rL6DvPgLb96cZPWFHaiOa3SL8oikfDtI3lv1rO9RKOXzIVLOThqbyOpvPgQ8
W7imU5PqeS8+6NQsyKyJpPGezIdZT0uPuEjnUT4fdBOzt0kj51I+H2IGllnN
XmJF+QK4oiwTadvsSPkC6I6rOf/gOZfyBcAfvF5rFGHH6mv4qP5VTdHYgfIF
YP7M8cXfqlMoXwAp0oXShhYh5Qvh+I5T8oov6HuAhRDeejQbVBxdSvlCWO3r
9H5FGfv+IISb/F0mc03Y/lcIxU5Hoq8ULWTfF2BDv5J+7D5g3x+gvHnJhhfD
bdn3CThg7MSNCaV62MseCqs7xvaWC6n99vCwyKejMXoujVd72P5zWvOHooVU
P/+TN+tBYHW7F413ERwo061tUFxC9b0I8gpKbG+/WkL5IrC0uiVSuUA+WQT3
o82PdZQvonwRKK6T3Inc5075IuDIG5grpM8U/w/Ad4BR
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240945183709517`*^9, 3.925136155988002*^9},
 CellLabel->
  "Out[396]=",ExpressionUUID->"fa78dfba-5f73-4d70-8f3f-449042613bc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9251362008254204`*^9, 3.9251362247036486`*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"e31c2af3-2e93-46d5-81fd-722a3bc15108"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81HsXxyeXytJVqOiRJUuMbWaYQak5uUkLKimRvVAp29imUEguaY9U
uEXdbrRIUrduzWmRkEcSWUpUtEulfXueHuf7zD9eXr/39zPfOef8zvdzvvpB
Ee7BchwOR3cIh/Pz78Kfn2ZbPCd9k3PWzVpWWvLzY4v2L/2GOP/9m4zz87Pe
FmvCvj7aNGe27H/8QlsMKPD2WOU+Y5Dn2qLRkcdRF69NG+Q5ttjnO8I57p1g
kG8W4YoxceGmz+zEg/oiLHucYlbdDOJBfRGGDJE3DF87TzyoL8KgQvn5R8Uw
yHNFyM87MbSiy470RZiWVFNrzptC+kJMb/IdaFFXJX0hKnGvV4VYi0hfiEK7
/IAWp4WkL0SJx8AqJyVP0hfimG51W2OtRYM8R4iX+mUH5M97DfLNNnjlmd87
hQJf0rfBgku7+paPCCB9GwzLq05VeBdE+jYoP1WuzE8hhPRtcCZn8snq4mDS
t0EfaXMgL8+P9K3x1TGuUrdpAOlbY5HQqiy4MYj0rdFx5N/nOw19Sd8aByxa
tNeE8knfGlOW/ai67OxO8bHGgMMjFNu7vCg+Aly95MKwhP2+lF8B6tbpTSs8
HkL5FeCZe/d0Pl4Lo/wKcGxbF//5ueWUXwHWHE6p6wsNIn0B3lnoOqtTexHp
8zHPs3zP57mOtH8+hn78ciG91Yv2z0dv+5gcbAyl/fNxyViNqg/TKZ5cPras
a1tsmxhC8eHj+631z1f4UzybeegT+bBZbt1y0ufhwSl2BYqJ4aTPw0z3yb2f
I+NJn4czRisoJ6ivIX0ePrQ7Lq1aKCV9Hgbc0CvSdYglPSu807CMr5y7gtZb
YcOsuj3cVh/irTA0W3mDy0w/4i1R2jVdqSMxgHhLtFqop3qoLZB4SzS9deNG
YD3LpwVmcuvEh1/4EG+BO7zuHpBLZfVggdX77vQYPV9FvDleG/CuCdOKJN4c
p+/6pTL3rS/x5li+9FD+zj+ofkvM0MrueO70Sm/izVDfLiay/w2PeDMcO+qm
plqRmHgurvushZt3uRHPxYbTLrVTs12J56LD1prc2gNziTdF67BHiTPbPYg3
xfKyt7tM0pcTb4pD2z/cr54cQ7wJNj+NmCQqiCHeBF/PvVRonxxFvAmOC3eo
kF8dR/xElFQcdusbHkv8RBzf8aCifmUk8RPRj3+lq0nC8m+MTm4qLXUbw4k3
Rs/wiNNOWtHEG+PyVqeGmveU/xIjHPbGOuq2SxLxRmic7/3C3DKNeCPsuFid
+ujPdOIN0cvl5PvMymziDVG+pfrKhDVbiDfEnAy7tzN6NhNvgDoztpge1mO8
Afppt9sUeGURb4BfX7rGPk3fSPwE3D9it0KaTyrxE/Bp3IfsHNVk4idg5Jr+
9MkqUuL1seSbmtq7YhZPfaza1Xvu120riNfHszGg6N+0hHg9NFjQJzkwZAHx
erhWO0KveQr1K44eRo1I9roiZv1KFx2Kt0lzXP1pvQ4Gr43RSKszI14HP19p
zz7i5En8eOw/pRL4VjCPeG2sW/Gq91CZI/Ha6CLdFFO3YQ7x/8JKccjDNmWm
Pw5VMudc35gdSvw4VH8czX+4N5B4Lbynrjy6LiWYeE3U6S0z4nxj9aaJJRUx
r4QCtv+xGKty9qasIZD4MXix9MfeB99mED8G3/Q92j7vn7nEj0YbhahqQyem
r4EvZifMK/p//WjgcIPaAnUpi7c6vta6GhJnyn6vGuZvuVhnoLma+qEafvCV
mN31Sqb+OQq9k6X8aXszqN+ORCe5i682CbYRPxIftavq5/Jy6PmvGOtTmjvb
OJ/Wj8DYD6kOo+IPEK+CTUWZY1bPOUS8EnrMXNu1wOII8YpYtyRna3z6MeKH
Y6GWy0LFxSeJH4r24z6Zn8quIF4B9accymh1PUu8PJrJPmGpzT/Ey2HD7pbO
4iAkfgiqmDWeW3f7MvEcPOJSet2yqIqef5PtiPTSaIEaWv9ZVoQTDYbn1BP/
UcZ3eiJaZ9RI/DtZ7v7Lf4VfaSL+jSzwPSfIUdJCfL9Mo+p+Z+2RVnr+TPbX
+/yQ+uvttL5HZvJW8GWp+13iu2R5TcoX5Ovv0vNm2UGJQiR/Swf9XyXL+7J0
rlbeHbZ/Tt7Og2+v2Dew5+KoWrd19pNr2HrxbKnzkf2nrjJ98XDpteSVapfY
94vn/FNc5HmexeuZOMNo36heXxbPfnEHd+XkV5zT7PeJB5RED4zXl7PfLz6e
4ZpnyC1j8RHfvqC0ZZx+KYufmG9cur3w+GEWX3GK2YbVqm0H2f7h7sYHH8ds
LGL5AX7pV5+GlQdY/kCnZtQtz8T9LL/gl1ze1avD6ksBDqpFH9e7tJvVB8Ah
h5Rb5jtZ/UBb1no5i9QtrL6g5kdlv4//RlZ/wJsT1tHevY7VJxyLlc86/kXK
6hck/b1H05TjWH3DQ63oPy+8jGH1D3XP23rmt8Sw9wMKp4UUF2ZI2PsDruIc
ieetSPZ+wV6lTxcM95AfKVEDkzOubVX3FxCvDvO8JJOeznZj7y/4pXponZSE
sPcbVMs6tcUXo9n7D2ujholSXeNZf4CSPs9hOY3sPBoDdjnjw23cGT8Wcmx7
xp3rXMP6D1Sc4JlXBK9n/QkGeP/+7VdZGutfsGF9dUaWaAPrb7BDAcybvNJY
/wO/z27PXn9MYf0RQic+yBvBXc/6J7i/C71/ri+J9Vdo3r/AflSrhPVfkM8u
j69sjWD9GYyf12pa9Sxj/Rs+ftmp7y90ZP0dHP4oOHrSewHFUw/yLn8O667w
oPjpwXT/W1vKk5zZ+QGjCpO+iyqYH9OHqrb8/MtO7HzWB5Wxwy6VB7B46UPm
xm1vM0Sx7PyCgEkjVmrHJ7LzDZbZN9w6/YTxE2BzjUKxrpDF3wCkA05jZ2nE
sfMTZtmdes2TRbHzFaIXDfmt58lKdv5C9yP+ct+hy9j5DN0vs76u2RXKzm+w
sqqJz/q0lJ3v8OxccNL8X13Z+Q81nR23V6c7Uj0ZgXzlfsdDbULmH6Bp5IzS
Jw+WMn8Bmbty5B6mhzH/AXmKhh2KzjHMn0C8t6vkwVe2/4lgeUb7m7dlNPM3
sPrgi6iNR1Yx/wNDMv7Yp6rP/KAJDC+eUOUf78P8E6h3hJjXvF3C/BXM2Gpa
MTaM+TtTyOsdH999wo35M5iclCFsfTqP+Tfom7DZdJwf86dcMDpuUH9vNIsn
F75nDpzxDGL1bAazc9WfVoUlMP8Im1qyFp1LZf7DDMJSVO2bzzP/bA7KURuy
Pd5ImT+FBZYjX1bPSWD+FRK3h2RtDWB+xgIcxLY37iUmM/8Lw7PHC0clML9o
AY0WFbKeD97MP0Om4jfOtC9+VJ+WIPTf6yhnK6F8WcKmqgcFpXWsn1hBQ59x
MD6OIt4Kzn5ZpBypEUa8FZie73zmJg0gngfcLk9/7oUAmm948EpHtlWzYBmt
50HN+L3OUfneNB/xoHx+4Xa5DzzS48HeyRHK9o0ubD6BpBaHl1cjFrP5BRTP
X2yqXebF5hsI2BD1J/8Gqyc+tC5uryrJ82fzEUxyjPBo57D886H2U/fy6x8p
f8188Hly9WCPF82DHAHs0w85ddRiBekLYHSryZ2mkWGkL4Ceo+W/108j/7xe
AG7SM7+sn87qUQBPZ3utGHeC/E2zAFJLdN1rVONI3xr6uT++XBqTwOZLUCn9
fdbcdvb+W8OPVyZZxtXRbD6F5lXni/bqhrP5FXr1m5Y/nr+CzbcwtVxH7uA+
Nh/ZQHLt+zc+yh5sPgb5cl3dY9nmbH6GRfPbCs1ez6P428Brjcz3rrP8Kf42
MG/2zRMx7qE0f9qAc/Gx29/Cwii/QtDWnLEj3oHNr0KQpdXdMlcLpPwKIaLR
ZIF09FLSF4JELiq0XMGH9IVQ6Lw4Rd3Eid0v/Ld/l3vklbN5SgTuHwt15He/
nkr3E7D5w+6F3/04pC+Cf3XvDl1VNIn0RZCbE7lVEuFG+iIYnet0//pqT3Y/
Ans6TU6axHmy+xNoW9RSaRnhzu5XoEGxJMNG0YXdv0CjwCvf7Caw+xk4rCR3
5caZaez+Brq/b2ow69ckfVvQSlCd5hSoIPsPADdoZA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81OsXx0dXilSSvchYI8OMGZSWOVQirp0QkiyRsmRSIWooUqhuq6VS
SjstrhbmlHRFG8XVqkXqttcv5Wr71c95ft9/5jWv5/18vs/3fM/zfc7ncMPj
vSMHcDicMXIczq9fv19Xmx1avrky+auGkezQwV+XHYa0nzgAunwZ59eVaYd1
xnOu1EVPl/2P97PDnrdKdyv/49nPm9vh8h+tpm/vzernOXZYv+haVW9cQD/f
ZosLtxcInWICSd8Ww23NLmRvm036tvhReOtGWHYw6dui8v7hxa1NfqRvi6ll
P5IvO/mQvi0qaSptjfIMJH0bFGofrr0yg+nb4I5DZ7wU3Ji+Db6/haWPxoaT
vg3e6RtTOsotjPRt0LFnYLowOoj0bfCVnKeBtslc0hfhZ/37cy5EziV9Eba7
LFv7NIvpi9B/jOKipWw9fiLc/DVxQniNP+mLMDznYMgIqSfpixCee43IL/cg
fSF+8j69pcuS4nlQiB2D5nfnc2k9mULcaN9lcmsBxdNPiOM2K7/ruzqd9IXY
HMLpmjiWK+7XF+L3c5sNH+npkL411lpM+FyToi/u17fGPBXuqlADcT+faY2V
sd8Vj5T5i/v1rfFhDafq+NbQft7cGkUva67WqISTvjX+pj+peuSFyH6+TYCS
Gecult+NI30B/uYVMTh91WLSF2DNX4HOBXXJpC9AZRtQmLh9CekL8OQVowMG
BySkL8DB9qpFvAtJpM/HjzqSyK0tyaTPx5T8htOLyhJI/+e4plLJ/ZgI0udj
dcb0qDfSaaTPx9QrW730NR0o/j/nD/MydOwcSfG2QkGF3Er3j9Y03wo5LRt/
a5IG0Hqs0Mko4UyhaSLd3xJ/rNK8c804hXhLlPzTee3P8jTiLTE2Ua2gMllC
PA/NnJd3F45JIJ6HneuGt2rtYfHkIafC5GvVNm/iLfDT1yvDead/J94Cg3Zq
lGo0+hJvgW/uqXT9U+FF/DisDfymr45exI/D5z4JtjtSpxI/DiNSNzgYxKkQ
b47R3VUJRW5sP5tjaGhhpquPK8XHHIsHLirL2BdB8THDvYdOlQX4JxFvhnYj
zETr3iwh3gwDikMVbx9dRvxYlIlCss9LVxA/FtU2WfEOyGcSPxYLQqpyBdtX
Em+KusZr7asSpcSbokvZk5jhm7KIN8X8LF/7DZNXE2+CCloOw9xXriHeBB3l
7U7OC2a8Ca7/4vrqc/kK4o2xuqJ86R33ZcQbY/qWXXIJZYnEG2Oj0/6p0zXp
e3DQCFMOv1iROdWB4mmE2trqr0aOCqR4GqEgOcVgU8Nciqchcl/Hg1FTFPGG
aFjVMU7dNJ54Q6yM760tORtPvAGeed/0Tk89kXgD3Ndxx9qiIY54A3Qwaj86
c0YY8VyM/ipntWJlEPFcPP6Yp9s12Yt4Lj5y8txx28KDeH30fRu00flvlg/6
mCv50trzgU+8Pir35n4ZWiqg8TFYenqz9e0p7H56OGfI+0bH1VHE66Gxmt5H
tQb2fLpYr7o4NYATSfxo9D/kuUTLl+XzaFw4pHvrqxMLiR+FU5oTfB5kBRGv
g5LUMyW1mQrE62Ce6KHHaHlv4rWx1FMlWaF5HvFaeLg495Nm9GzitTBh37ei
lGfziddEB8vG1q409v3RQPdJ2/9+NzSaeA3Urf6eFfLz+fp5dZw5VfdB+55p
9L7VcLCcEue+XCTlgxq+46zOb7KfT/kyElOMnkVZ74knXhVNFF/XlhSy/FfF
dBXPOBWn5cSPwE2XM4Mq1kuJV8Gr0Zse8/PWEq+CE286rXNT2Ujjw1CWY7nB
2WMLzR+K3T80sv5tKSJeGdfcFOlELN1NvBKqry/ZXibZR7wivsvJ6lVJOET8
YKwuCAkzd68kXgEzz34bFO95gviB2DLKNmFF6J/Ey+PmxrZXrurniB+AJ538
5zWnI/FyWHm4osI/uJ54DnKCw6TthZdo/JusAepH94mbaH6frGxqz4uAI9eI
75X5iEqON8laiO+RmSi1Np+ceIv4D7IlW6akjmpqJ/6dTH6fY/sx1ds0/kLm
u22jUofgLs1/Kksz1NwafeEe8Q9lfdtfuhi73KfxNlm2/fpsf9V79L9B5rni
qTjSooOtn7P+emVqX9INNi72tJer8q5oYvPFE0rcCv4928D0xaeXJzwuunCe
3V8sS82XV5pby9YnntmZ/vyqTw1bv/iR/tnOr3kn2fOJT6yT1zq2q4o9v/il
n9o0kfQIi4847NKddu6yChY/caCr4pfc8r0svuLstvXHTG/sZusHbPCx0vHY
xd4PBB+b3/KZv5O9P0h1f/97fXMxe78QkOuqvuDxDvb+obpD9R/p0q0sP8A4
XSHspnQTyx9I0plSsHZ7PssvSJpj4KWck83yDwYsqtQzDUtj+QmmyRsP//sh
huUv5HZVnMmcPoflNxS/OjCozW4By3/gz70xrOVLEtsf8D2mPNV1gYTtHwiX
n4PdU5ay/QWyx69nrZm+hO0/yJArvyUdxfiRkLempufDlIVs/0LKp8KIWf7z
2P6G8cGnHz0Mmk28OnSFRd2ZJPUmXgP2PuEVvToQQrwG8GNjZOcKoojXhIuT
nwomOC8iXguyJapDr7tLiNcC23qHc88esvVoA5Yq3TzikUS8DvAiQsrzghOJ
14GTlW8cGqoWET8KUtuyT01NYufRaGjLay3TCUshfjSMd5QdPOiWSbwueFQ9
yMmdLyVeD5T71opHncgk/uf/6pz4dT1pxI8Bl8t84Rvd5cTrg92pSb0Wzak0
rg9TWkNmu+Vk0Hx94AnKimZvYOc1F8obd7vl5GUQzwWt+tvN13XY+cqFuk4n
neNbVhBvAInhRWEl51cSbwAJhQPHxxWw/DGA701qs6yn5RBvCK0/ruwZfDyX
eEMw5A9o7+5eQ7whdO70ch3QlE28EYwudyg4PI/VC0bA912mWlq3ip3fsGB/
wF+xpWw9xhAhqJGGWP3//IfGj0OPv33LvufGkLj/4tWe11GsfoBxKsITR+zY
+zeBHN62NNcAL1Z/wHPLkm3FvjPpfDEFp0sfH1w6Hk/niykYJUocroRTfXvQ
FGJG1untfZFC/FjYn6JaH32d1Y9j4U3x550rby4nfizMGOpwc9NLVk+agfuI
2j9iApYRbwbNlQOtjKsYbwbZ46wTtPSYvjkEhf8doGVN9bOfOWi7KM+JHLqQ
1X8Q3idQHBEXwepDcG6/K10fGcrqR3DvPtXkdiCA1ZfA9U0PFoXbUnwsIKNR
pXGZfizFxwKOT1wVcUOYTPGxAO68J10nXJYRz4MdCkOyMn6kE8+DsO62E/Um
LF958MS64V7MA5ZvlsAdqZ057T6rHy2h29VGEpKcRrwlxMzu8/4ml0K8FdwQ
Jb+5Wcb2nxX4P+6c4cJh67GCY4qTTzl0Slj9D0odjz5/v0zj5nz4lP/2QcYf
yTT/5/jijpAKedqPmXx4v3tXL3/TAtLjw2bfh4GyOvKTbXx4vK9V7w8h848C
yJi67ULbXz6kLwDXiwv9x+iGkb4Ajur0rF6cFEH6AnBOEFZ93BJM+gJY4Gi1
Js0/hPQFIM3beareZjrpW8OCrKy2sCRH5s/Aff7AnRmxAcy/wUfuoLkWu0KZ
vwOuVpxE1BjK/B9w5rkmnHT1IH9lDfVBR2OVd7F6UgiyXQpfcwOZfxKCmf2Q
Kq2HFqQvhDDjnpqCaRzSF0KNtn6pttoM5l8hp0z9R14a8+dC+Bweq+SWH878
LwR5K/b29cQwfwzVm9VTIlrimH8G9Tsdx7pqopi/hoquRtNx2dHMf8PVye8k
CjfmM38OYdU37D+YRDD/Dtuka0au8J3N/D0YiNJ31ygxf24Dbye2aCh8CGH9
AWh5Ol4SrRfJ+gfgMnt6XaZiFOsvwJlnG9Z8+xTC+g+w/vxa3sVA5u9tf55f
uuJBl/1Y/wImWOg8tSzwZ/0NuFgUOuDyBubvbWF11CKLwgpn1h+BFF5zw0Ie
6w/Ywdk/r8/47uDK+ivwqMnE8ZW+B+u/gFAp9sPgVm/WnwGt0d1jbvd6sP4N
ZO7ytpj7wI307UC+2FW4Lgdk/wVUM4XP
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
gfEne5Kvd+lTfgQw4fE1m6QwM+H/ARWanAA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHk81ekXx+81KqSEdmXf18u915XKPSa0jqRkqRCyhGxxGVlTESWjkRoj
0a8pipJKmronJWlTCdMybUIhlfaifr9+zvP9x8vreT+fe57tPJ/zaPlFuK6R
4XA4GlwO58dftx9fqwgNvi/yLNovFFeU//hEKPz8b36kibWY8+NLFWGovleq
+Yg54v/zbiIc4SlKGjBYMswbi/Dk4Nfnz/RWDPMcEW6YljUe7/oO863WiNFt
1dde+pK+Ne5wu77rtuZq0rfGlDa9voZTq0jfGm8+/ye79bEn6Vvj+bL0pj6L
5aRvjVG33t8ft8OV9IW4VUHHwSCS4ikXYqJtnO3kgaWkL8Tac0kPJGtWkr4Q
X3Y5cpuKlpO+EKtbmyp/f+xF+kKsWDG6OcJlGekLUGutXYMqfz7pC/BffXu4
FgqkL8DBF9sDkrvsSF+ACQlVWTGfTElfgGdLiyUbrO2lw/oCDDkRm17faCUd
1ufjYcWw/HUlc6XD+nysOWDtWXLIcZhP5aPL9KRdv4yeQvp8lDml0lpcYkv6
fOTPuHbFPcKe4ufjvM52w2cpYorfCh+5prp1VruQvhWqnh/qUNVZQ/pW2MH/
U7vDPmo4HjcrbDpjNMt1U9wwb2yFA8aBYdkuCRS/FbYr3Q+bKY6n+C3xg1fD
nqc6saRvifJFgjSrdbGkb4lnJN18QXMc6Vtica/D+uK/YkjfElcN7mz//CSG
9C0xV/WqywTdaNLn4fGyK68GBogv52G8sqZwMF5C+jxsHyVz98hsCenzcLBP
UlIjiCd9HtauTO0SlVI8HB6Gliptd/gURXoW+Gl5/9uyuZHU3wIveASWOv4T
SbwFyn4xGRx8yHhzPKjhZqEgQ/G5maPxzI027+oYb46+IXllBuosXjOsvtcS
52bBeDNct31bQZNqHPFmGH72aj0/lOa73BRVPAoeRmax8ZiiY5fXoecBNF6O
KTYmPLuYYsN4Ezw499es7Tm0Hm4mONCbFxWvnkK8CeZXFR1U3ptOvDFWy03d
LU1KJ94Y0wYNB7f/nU68MV5603RHqS6DeCPM1Px679yuTOKN0O72K93Wgi3E
G6F6yh67fLmtxBti0eL39Wn3txJviLE11frxJtnEG+KY3yvkL9jmEG+Af3Qs
/avYIZt4A3zXZdcsX5ZFvAHqDu30fDm0hXh9NDipuM4giMWvj7lnP8aea04l
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
sfcbsBP45Y7c40T6Itif+VrupoyN+L94EY/O
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925136220646126*^9, 3.9251362256325603`*^9}},
 CellLabel->
  "Out[398]=",ExpressionUUID->"99f3bb4f-0325-498a-99ab-ec8d51fa5421"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240945654123774`*^9, 3.9240946458143477`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"03d2bfb8-5b2b-4e1e-967a-05a20f5220de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.544374603205313}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.544374603205313]& , 
            TagBoxNote -> "1.544374603205313"], 
           StyleBox["1.544374603205313`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.544374603205313, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.2391641547358758`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2391641547358758`]& ,
             TagBoxNote -> "1.2391641547358758"], 
           StyleBox["1.2391641547358758`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2391641547358758`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.9680537243371442}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9680537243371442]& , 
            TagBoxNote -> "0.9680537243371442"], 
           StyleBox["0.9680537243371442`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9680537243371442, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.8142830193511741}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8142830193511741]& , 
            TagBoxNote -> "0.8142830193511741"], 
           StyleBox["0.8142830193511741`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8142830193511741, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.6558474792656962}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6558474792656962]& , 
            TagBoxNote -> "0.6558474792656962"], 
           StyleBox["0.6558474792656962`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6558474792656962, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240946476451144`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"340246a1-535f-4bf4-a4fa-793279059347"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92409484057642*^9, 3.9240948682716064`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"226ceb86-9f20-421d-96fc-dc7915866a5b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.024077051580699}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.024077051580699]& , 
            TagBoxNote -> "1.024077051580699"], 
           StyleBox["1.024077051580699`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.024077051580699, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.0046719466633685`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0046719466633685`]& ,
             TagBoxNote -> "1.0046719466633685"], 
           StyleBox["1.0046719466633685`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0046719466633685`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.0060350773445164`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0060350773445164`]& ,
             TagBoxNote -> "1.0060350773445164"], 
           StyleBox["1.0060350773445164`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0060350773445164`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.0036858045042054`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0036858045042054`]& ,
             TagBoxNote -> "1.0036858045042054"], 
           StyleBox["1.0036858045042054`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0036858045042054`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.9847315901209015}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9847315901209015]& , 
            TagBoxNote -> "0.9847315901209015"], 
           StyleBox["0.9847315901209015`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9847315901209015, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924094869469822*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"4a52e01f-abe4-4113-8ccd-4bd4bbaa1a3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Protein titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245316353597326`*^9, 3.9245317082247953`*^9}, {
  3.924531738434306*^9, 3.924531739416131*^9}, {3.9245317923415318`*^9, 
  3.9245317925518*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0708d296-8a1d-44b2-821e-1ead048c3dbf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
        LineBox[CompressedData["
1:eJxdzHtIU3EYxvHjNC9l5rXU1KZOp5tuOp1WFOfNEQiDoGLpkCy0wsCygujy
h1mziEorFK0sii4GxyKjm2LRxa2wC0R0TCKWEQNZGasMTZTK9mL5/OBweHk/
7zexrGrFeoUgCMf/fBP//1/BBeUSy9/nEFulhteXr+0u8M6yeKrurLu890iB
V/aLltGBoebBJt67REWTT4A74VxBmzTx3OLGkvbS+b8usveIzmpjT9k2ifff
xOSEwtZuQzvf/xBvf15u6zx7g/2IGFO/Z2/hiTvsR8XSxq+3nn7oYj8uFt97
fLhu3QP2AnUtXFetV3bz3oce2Wv1C4YdfK+gqh2vNtiLetj70VbnpifZQ8/Z
T6MZJa3GhRtesvenoz9NjtSOV+wDaTCy3Xo0WGYfRMf8tmgDu9+wn07j7vLQ
Itdb9sG03OW4MlbpZD+T7rfV1DnUH9iHUHFT38fwio/sQ+nBkMcmdrp4H0pd
2nLr9pUDfB9G0YubNDb1J/bhZFk65jSv+cI+nOIfOk/uGPawj6AFHqmmMfQ7
+0jqKDuf5pP/g30kBQa8KFx2fZh9FN1dvdYcVz3KfjZp7o/sfHd5nP1sGnh3
yTzSIpi8fg5VWsUM+z6FyeujaXN/b+XbZj+T10eTzmGzNg76s4+h2xXNilW7
g9jH0vcDY/VXq4LZx9K1Bp3ScnIW+7nkO3JiUVVtGPs4Onwm/nzLygj2cXTz
YEj96eoo9vF07pDq2fu+OewTKD3GvD9qVyz7BLLrfV01M+PYz5ucvV4J+3+z
914JPhF8IvhE8Engk8AngU8Gnww+GbwKvAq8CnwK+BTwKeBTwaeCTwWvBq8G
rwafBj4NfBr4dPDp4NPBa8BrwGvAa8FrwWvBZ4DPAJ8BPhN8JvhM8DrwOvA6
8HrwevB68FlT95osuM+a6mvAS+Bl8EI29LOhnw198BJ4GbxggL4B+gbog5fA
y+CFHOjnQD8H+uAl8DJ4IRf6udDPhT54CbwMXjBC3wh9I/TBS+Bl8EIe9POg
nwd98BJ4GbyQD/186OdDH7wEXgYvzJ+cfwMKPyse
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
        LineBox[CompressedData["
1:eJxdzHlIk3Ecx/FHU8lyqU3Ncprb3HTz3JzOwHq+akX9ExUeFUQY9UcSXbI/
Ijo1VkR0H0aEUSo8pSxnl1Z2OemiNB8ry6zskCw7zCgru/al4/ODh4cv39f3
rZ67ePp8T0EQtv38fv3/fZmHIjNyfr8G0aGvq1XU2DLdsywa3jxuCPOyZ7rl
I9G2+Xvvt6nbef9MTOv2VJedKsk8Iv16L8Wmomb92Jul7N+KTkX2mb1FZbx/
L9aWb7pacUvi+z5xdp/C78l6B/tP4tDrOybtX+Vk3y8mHK6ZMyvmJPtv4szK
Kw05/nXsBcqrr54naup570Ft07ymmAcu8L0n+bsWaT7UXmbvRaa2uI2Klkb2
3hTR3HtfZbnG3odCq6rvFA66yX4wRW2N7jie38Tel/Rfdlc6HbfZD6EZ6WMG
Boe2svej83Z9V/vTu+wVFFx58EB22AP2w0jleHBMe7SDfQC1njVbKloe8z6A
VpPpxtIXnXwfSJ2urx+XmZ6zH04n6p0Trzd1sR9Oyt57vjV7utkryZhfMKXk
fQ/7IGo/vdjak/uOfRAt3JC/oGJmL/tgUreO9159oY99CBUszzPcoU/sQ+ji
Plf6w9v97EfQ1NeFR4sDBtiH0q66FZ33KoUstw+lZ+GvtlgXema5/UiqNl+r
8rB7Zbn9KLo0NNHSIvuwH0Uncxtta3N92YfRUt3kI0q9H3sVrczozzEU+LNX
0bkJKc2uVYHsw6m82mGvX6JkH0GlxUqbdlMw+wjK+Lwzedy6EPaj/8xuHwn7
v7P7PhK8GrwavBq8BrwGvAa8FrwWvBZ8FPgo8FHgdeB14HXg9eD14PXgo8FH
g48GHwM+BnwMeAN4A3gDeCN4I3gj+FjwseBjwceBjwMfBz4efDz4ePAJ4BPA
J4BPBJ8IPhF80v97YxLcJ/3v14CXwMvgBRP0TdA3QR+8BF4GL5ihb4a+Gfrg
JfAyeCEZ+snQT4Y+eAm8DF6wQN8CfQv0wUvgZfBCCvRToJ8CffASeBm8kAr9
VOinQh+8BF4GL1ihb4W+FfrgJfAyeCHtz/wDqHVLrw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
        LineBox[CompressedData["
1:eJxdzHlIk3Ecx/EnW6aWpaZpc7nNazrd5jFdIfl83SiSCCFRSbo0/DM6iDIo
UrA/uswOo7Sgw64nUliXkIRJYqQUYo94pukiKBdmZWbpOval4/ODh4cv39f3
rS3cuqbIQxCE4z+/X/9/n/WyJiPn92sW854JIa2ObVb3LIvO06c8s5WlVrcc
FK+0lu4r6T3E+9dihf1aaGfxSetN6dd7K0addSm3GarYj4r986vVW6ULvB8T
Owac3cOTNXz/WTwzu02l23iD/YS4f6y/cdRSy35SHPmSbvD0trOfEodXD66K
0d9lL1DPTnOd42Y972fQQF9awbnzDXzvQZsq37dPZjeyV1D+nriy69ea2M8i
Ta+ip8S/mb0nVbwbqT851MLei8rT5t4qU7Sy96Y0Y+YT24Fn7H1oey8VhK1o
Zz+Xli11qCoPd7D3JYPitnq50Ml+Hu0dllVLt3Sx96Mm7+DnHUW9vPejU+bP
xtiGl3zvTzuEwWnz9CD7ALqXVdeX7zPMPoDWHdz9NXfla/YLyFI8/rCz6w37
QPIv1w552d+yD6R6+vDC45uTfRDlP/rmWt84yn4hpbucNRNVY+wXUmnokqct
jz+xD6aMza4Tc96Psw+h7kDVeM3yr+xDaF5AoSNT/Z39IsrdcDfnWJaLvZJS
atte2Ytn2NxeSQ/qTNUf82ba3D6URi70FdkuzrK5vYr67dtT86Zms1fRrivr
mu7f9mG/mJRl6oI7/b7sw+jI1QiV8Ygf+zC6tDY76GilP3v1n9ntNbD/O7vv
NeC14LXgteDDwYeDDwcfAT4CfAT4SPCR4CPBR4GPAh8FPhp8NPho8DrwOvA6
8DHgY8DHgI8FHws+FrwevB68Hnwc+DjwceDjwceDjwdvAG8AbwBvBG8EbwRv
Am8CbwKf8P9enwD3Cf/7EvASeBm8kAj9ROgnQh+8BF4GLyRBPwn6SdAHL4GX
wQvJ0E+GfjL0wUvgZfCCGfpm6JuhD14CL4MXUqCfAv0U6IOXwMvghVTop0I/
FfrgJfAyeMECfQv0LdAHL4GXwQtL/sw/AEY0NbY=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
        LineBox[CompressedData["
1:eJxdzHtIU3EYxvGjZngpS53mvM7bpnPqdNOJBudVo5Ig0TAhCdIUMilTIlIo
oqAyAjPR7CKRq7Cj/mFSRhFUInRhaOVRaxmpWWpJJpYlRre9dHl+cDi8vJ/3
G1xQml1kLwhCzc/v1//fl2ZWpeb8ft3i+4ca9cKDkjTbLIvz9ZMxE5X70mzy
lZjtcnsstuQI78fEsvaUB5WlJ9JapF9vUlSNj+cuDNSxnxbd9qxUbt57lvcz
otWcv5Drd4HvP4nbvRqG6vsvsv8ihh1+VnhMcYX9vOjpVml4nd3G/pvY9G7D
okxFO3uBkncfX90x0MF7O1J2ac5sfHKd7+0pr2BwwNnzJvtFZFFcr1aM3mbv
SC+uuTUVq++yX0yNRedP5qR2sXeiqClfa8ZUN3tnyro6lzPSf5+9C51uzaq1
fn7Efgnll5zr2lrRw34pNXQfVDbfeMzejapc95ue33rKfjlZlEFGZ5d+3i+n
3su6lsCaQb53p7KETv3Oait7DxrK/b5FnHzJ3oNq1/QZ3ZXD7D0psvPJzfUe
o+wVNHTmrvOG8jH2Cqo87uvzcOYtey8K6px96tMzyd6bhicqUg7NTLH3ppE4
rTXv0jT7FZTp0upoqJ1h70MfCkL73vTPsvchpaxLOpY5x15JmYevWYoff2Xv
S969q5adtSyw96VtGQ5HHRyEdJv3o8DGXea2Zrt0m/enj+VV5mWnHNJt3p/c
1xXe+X7PkX0AJTsF7bDb5MQ+kKbNWVfWurqyD6QAU2mTULeUfdCf2eZVsP87
2+5V4IPBB4MPBh8CPgR8CPhQ8KHgQ8GHgQ8DHwY+HHw4+HDwavBq8GrwGvAa
8BrwEeAjwEeAjwQfCT4SvBa8FrwWfBT4KPBR4HXgdeB14KPBR4OPBh8DPgZ8
DPhY8LHgY8Hr/99r9XCv/98fAC+Bl8ELcdCPg34c9MFL4GXwQjz046EfD33w
EngZvGCAvgH6BuiDl8DL4AUj9I3QN0IfvAReBi8kQD8B+gnQBy+Bl8ELidBP
hH4i9MFL4GXwggn6JuiboA9eAi+DF5L+zD8AB3z2aQ==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
        LineBox[CompressedData["
1:eJxdzGtIU3EYx/HTMrXy7jK1NHXzss1531a9OY8zu1KgVKYQRDKoKOxCKUmh
WS1SyiRLyjdRkZ6sDJFEpIu1LguqGQdLkFVDIrGyZSVmUraHLr8/HA4Pz+f5
xm4sybcoBEE48eub/P/7zOdjstf8fjaxzd/seLR2k9kzy2LjuiVeddYys0e+
ElfmrdDudB7g/YC4+oK7rXh7tfmyNPkGxQLl0IJbQXXsh0XHu4KiWarTvHeL
zyuHh9btbuT7L6KtvbUkynCO/ahoLU6r3brrAvsxcfOubU8/hjax/yE+fJQ7
x6xvYS9QUeDxBvf+Vt5PIaW/IuC6oo3vFbTZMpFa6mpn70UNyvK7kT0d7KdR
od15329vF3tvej+1vGxs1W32vjRS1XLl9ZFu9tMpgkZdzvF77GfQ0qjSi4qa
B+z9aMvha+YF3Xb2/tRss53aW/KEfQD17eu4P+jjYB9EwVc7w9d/7eF9EOXv
3Fi7b6HM98G0zL5H3tDVyz6Ecq0f+io6+9iHUJAr40blWD/7UKquMfQanr1i
rySf9h2zNV1v2CvpVu1ylXXqAPtZdPLNjh8hi9+yDyPHy/5Cm/Md+zBq/nYn
2N40xH426QuqXuS6P7IPJ8OxesvRx5/Yh1NgkfPMJddn9hF0SX2o3W/6V/aR
VEIDRmvdKPtIKqg8G+hr+s5+Dg1rFNmWmRPs55I6rL5rsFHI8fi5NH4zODSv
SpHj8VE0sjj6rO64V47HR1NERfGiJLc3+2gK7Ul8dvC5D/t5f2aPj4H939lz
HwM+Fnws+FjwceDjwMeBV4FXgVeBV4NXg1eDjwcfDz4efAL4BPAJ4BPBJ4JP
BJ8EPgl8EngNeA14DXgteC14LXgdeB14Hfhk8Mngk8HrwevB68GngE8BnwI+
FXwq+FTwaf/vtWlwn/a/rwAvgZfBC+nQT4d+OvTBS+Bl8EIG9DOgnwF98BJ4
GbyQCf1M6GdCH7wEXgYvZEE/C/pZ0AcvgZfBCwboG6BvgD54CbwMXjBC3wh9
I/TBS+Bl8IIJ+ibom6APXgIvgxfm/5l/Aod9b4Q=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2, 0.0784313725490196, 
          0.5411764705882353]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2, 0.0784313725490196, 
          0.5411764705882353]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Protein titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 1.974036649266161*^15}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2, 0.0784313725490196, 0.5411764705882353]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9245317342595205`*^9, 3.92453179294876*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"473bf1b0-572a-4b6a-8462-00e3d31b91f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp10", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp50", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp90", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp99", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924531750586376*^9, 3.9245317769940434`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"25466ea4-a3c9-4521-8474-6f08be554e32"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
       "]]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzAtIU3EUx/FrZVipTFM3H5VzTvdwPjYfaY973JJRUERUFJKBYmJEGdkD
CzItSpQelmaQEQmlN4oIyTJbJWqgRRLeSExYyeixxNKSSqPXDoW/P1wuh/M5
X3XujjX50wRBOPX7+/PHt+7v6xR372w4MF5z3OqZZXHVATq9P+Ci1aOcYtHF
Q5Wvdjfx3iVedg5X3p5503pV+vPei6qD5sY3Yy3sP4o91zMV1n0O3o+KWQVn
yp70tfP9FzHnmm4g7UUX+6+is+PWCn97D/vvYl2vsuJOaC/7H2J9mLl9cvAZ
e4EGj9o7z7pl3ntRePKVg9WL+/l+Gj0ueVx4cuIl+xm0wVJepax2svcm86bs
Fl/Xa/YzqebY53TlIRd7HxrIzGvP2vKW/SwKa7nszK50s59NG59196u8R9j7
0qO1uRl7d31i70dP16887Lg0xt6fxm3BmbW+4+wVZPJamd7V+ZX3Clo9lLok
qX2C7wNo/dqC1q1+P9kH0oO3jghLjpfN4wOpRJX/cNm26TaPn0t5juHrpmZv
m8cH0dg+e80J0Yd9EHU3O/bXBsxhH0yTdUfaRvX+7EOo7UHT9j3PFexDqPh+
meJDdyB7JS1qfedfMRLEXkV761S2juVK9irSD7pj3a5Q9qGU2dAQIvdHsA+j
byXrMgzKSPZhpKv5UHVvWM0+nGoba2+Uj2jYR9CMNnd9kTaGfQTZ7efuZlzQ
sZ9H+uzi7bTJyH4+LS119Q4VxrOfT32bXeeV0YnsF/ybPT4S9v9nz30keDV4
NXg1+CjwUeCjwGvAa8BrwEeDjwYfDV4LXgteCz4GfAz4GPCx4GPBx4LXgdeB
14HXg9eD14M3gDeAN4A3gjeCN4KPAx8HPg68CbwJvAl8PPh48PHgE8AngE8A
nzh1b0iE+8SpvhS8BF4GLyRBPwn6SdAHL4GXwQtm6Juhb4Y+eAm8DF6wQN8C
fQv0wUvgZfBCMvSToZ8MffASeBm8kAL9FOinQB+8BF4GL6RCPxX6qdAHL4GX
wQtp0E+Dfhr0wUvgZfDCwn/zL+gdYXI=
       "]]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/GjNpuVQ21etizd5ja36aZzF7EX52GDwBKKoBfZhRoViZRF
Fhq+KKGwwqAikQwKiqijRFIUCZkGRmZtEZyi7DKzVeQl04pVhF32UPT7w+Hw
8Hyery5Qs3xjvCAIR359v//4Vvx5faInyRFt23bYF5tlMRBOUKclnvbFVFgc
6D4TyNx4gfcRMbDBtK5iutPXLv1+78VnoxXxBx9fYz8hqnpsZZuXdfN+Uhz8
eq7LdesW338Wm7aHQqrQbfZRMVo77W9bNMD+m1h5ZubN5PkP2P8QGzoqb59+
+5C9QL1Dh1yDEzLv46jozVBf7+InfB9Pe4PLS3vVz9nPoLKqE2uHzofZKyga
ei42xQ2zT6TCqddyeUuEvZLGXBcsqdXv2CfRaNXnrs7jI+xnUUN2fWmr+QP7
OXR0PCWYfuwj+2TavWr7sqf9U+xVVBNpHh/xfmGfQjdKX3Sfj0R5n0LC1lDV
/cHvfJ9KztWVa26Yptmn0WRdWXnq1jh/zKfRpVWKxvadCf6Yn0svwtWztZcV
/phX02qLsvWOW8leTcY6RWAgYTb7dNqn7z5QY1Kxz6DmHcaTjfdS2GeQdv3S
8ZcX09hn0qlXBpetX80+i+wKjUNpzGSfRRPN9aa2Xg17DWmCY4pHndnstRR/
/e6K+2M57LXU0d9zZX+Pjv080q6MnB29aWCfTX2WLeW+r0b22TRyuDZ1eFc+
+/nk+7QwWOW0sV9AV/VLkpPcdvYLaGXGoU0t7Q72OX/nmM+F/b85dp8LXgde
B14HXg9eD14P3gDeAN4APg98Hvg88EbwRvBG8CbwJvAm8GbwZvBm8Png88Hn
g7eAt4C3gLeCt4K3greBt4G3gS8AXwC+AHwh+ELwheDt4O3g7eAd4B3gHeCL
/t9bi+C+6H+/B7wEXgYvFEO/GPrF0AcvgZfBC07oO6HvhD54CbwMXiiBfgn0
S6APXgIvgxdc0HdB3wV98BJ4Gbzghr4b+m7og5fAy+AFD/Q90PdAH7wEXgYv
eKHvhb4X+uAl8DJ4ofTv/BMMLD8V
       "]]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzHtIU3EYxvGjpquRtamZ13TTeZnO+y0tzosDRSqDxjQyQkS7UGEQhmg3
08wIIhMr/wiDbngMTYhUiiibSoWstANJRhEIXphkUdnyUrYXw+cHh8PL+3m/
mqLSHSXOgiDU//0W//jM/16v+Lsjzd5YdTHTMcuia2et/yWnG5kO9UlMnq1t
mzW18H5UrPoZ9D7A1pHZKi2+CdF5xmS+97qT/RfxaO+R+/HbnvD+q1hmy7xQ
0NXD99/FpvShoaZbfexnxO3tYfrzilfs7WJHv0v0oZ9W9nOiqbO6rKh7kL1A
FTEfC41PZd470RdL95EB/TDfO1POSJZVNTbCfgX1XbN7Xz71ib0rWbLFOhfL
Z/Zu5HluWv0jd5T9Sio2zG0d1I2xX0V6pQfNbplkr6SUjOz24oEp9qtJ0XZ4
z4hpmr07va1paK0+9o39GnqnXpg1Dn9nr6IPuZttm87M8F5F49bHlW7lv/le
TRmKpBxb1zx7D8pqGfXfGupkdHgPKtpLL08Euhgd3pPSle3CzjxXo8N70e5C
r9elgwr2XmS1aG7euapkv44+Xi839992Z+9NniVdk81VKvbeVNnQOP5itwf7
9bTw68HUyYNe7H0oozJ9SOjxZu9DpSP9x+/u8mXvS/nqrPm8qAD2fqQof9M8
bQ5i70f5dqV64z4Ne38yjW/T+hWEsA+guoYDjxrP6tgHkO7r87z9tnD2gVQV
uHaioUnPfgMdWruiZr7ewH4DNdU8q7jyMJZ90NLs8MGw/z877oPBa8BrwGvA
a8FrwWvBh4APAR8CPhR8KPhQ8DrwOvA68GHgw8CHgQ8HHw4+HHwE+AjwEeAj
wUeCjwSvB68HrwcfBT4KfBT4aPDR4KPBG8AbwBvAx4CPAR8DPhZ8LPhY8HHL
9/o4uI9b7k+Dl8DL4IV46MdDPx764CXwMnghAfoJ0E+APngJvAxeSIR+IvQT
oQ9eAi+DF5KgnwT9JOiDl8DL4IVk6CdDPxn64CXwMnghBfop0E+BPngJvAxe
SIV+KvRToQ9eAi+DF9KW5j+DDaPz
       "]]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzFtIk3EYx/E30WXDldpcZjrdps5tzk13sCR6H2cXiUQH7GBpB8WoqMQO
F3VRilLRJFOMLiw7GeIrFYUUHegisKguguKljFyjUkmttBSWJzrsoej3h5eX
h+fzfHWlFavLQwRBaPj1/f7jW/PndYm9Pf6tk00nPcFZFnOWrxpeGHXBE1R+
sfL7xwjl4Xbe94qjzlN9TeM3PB3S7zcgnmnQffI9u81+WJx2hipdtge8/yYW
XT5ysbjtId+Pibnd4xZ14yP2AXG19XGFHHjKflxsubR2dNmH5+ynxIJd65/v
v/6CvUDXPKVvFDdl3s+golZf11dVN9+H0Kzj6+5qO9+yD6UdRcZ8X5mffRip
JhN6HO3v2SvorH77kShTL/tw6ulTf6sd72c/i04MVl9wagfZK+lO7V5rfPMX
9hE0cchzLJA5wl5F1TvSbvk839nPpo2X7B2qxjH2kVSRu6+5yxngfSSFnfeP
TKZP8H0ULTlWU3d20zT7aPIqHdssn4W8oI+mDSvLawpfhuQF/Vza6rhyb/Nk
aF7Qq2m3pmVo7s6Z7NVUWDBQfS1RyT6Gng1PDbQaVOw1dHRo09J6ZyR7DZW6
EnsV4dHs51HxubjOGSo1+1iaeDTkvVugYR9LP5rLFO4nseznU7z2zpb60wvY
x1FC/kDdweta9nF0aNErf/ccHfsFtNi3orAkoGcfT97tbW81MSns4ym55Ko3
p9LIPoE+fO0/oI4ys9fSnvuvY96FWtlrqdZUZbh42cY+8e8c9Emw/zcH75PA
68DrwOvA68HrwevBG8AbwBvAJ4NPBp8MPgV8CvgU8KngU8GngjeCN4I3gk8D
nwY+DbwJvAm8CbwZvBm8GbwFvAW8BXw6+HTw6eCt4K3greAzwGeAzwBvA28D
bwNv/39vtsO9/X9fBV4CL4MXMqGfCf1M6IOXwMvghSzoZ0E/C/rgJfAyeMEB
fQf0HdAHL4GXwQtO6Duh74Q+eAm8DF5wQd8FfRf0wUvgZfCCG/pu6LuhD14C
L4MXsqGfDf1s6IOXwMvghYV/55/v1zmr
       "]]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzHtMjXEcx/GnlHSkjkqFLk6nU+fWuXXqnPzh+dZJQ6wLx2UxxjJ/UDb8
0ZrRhrkkbHKJFcaWp9kcMrQla5jIZc2DzS1y5m4dZ2FMyPmO+fy2Z8+++76+
b9XSqrKKYEEQ9vz+hv/43H/eVXGyIqEmdmt9fmCWxYU9yi1FQ835AdUnfq8z
mrvnneS9V2zffcI067Mnv1Uafm/FyoKjzfqu8+wHxHMz8qZY8y/x/pNY+X7g
neNiF98PirpzCxXTjl1j/1X0d1gbt/pusP8mHoyf3x/RdYf9DzHH5dO9bOhl
L9AyX2/b6AMy74MosrC+eP3gQ74PpoKw3JiOI4/Zh1B75PLuprl97ENpUb26
JPXQC/YjqeTR9bPXk73sR1H3TmFN+etX7MMpyX/fYg9+x15BTl91btKGj+wj
qPDjzcOywcd+DLn7wo+0lPrZR5LnQHP5Ns8geyU9qSkrCSn6ynslffm5/94b
x3e+H0t5xVG5IWuH2EeTd3FDrzc8yBXw0dRZHbrXPnqEK+BjqELpLD/jCnUF
fCzdneO+Un05jH0sudztz+9vUrAfR1UDeet2NYxhH0fxT1csulCrZB9HuyNO
le5YHs0+npqa66oSa2PZJ5DXM73H+iCOfQKtbBt4vH31ePbjybwg3Fs7J5H9
BFoi1J127kthP4HKbFMrQ5pU7CfS5pZZN7Ib1ewTaa57hbH7loZ9InWuKlwy
06lln0RDs1cWyh/07JMpqv/47Wf+TPbJNDJIvtWqMLNP+TsH/CTY/5sD95PA
q8CrwKvAp4JPBZ8KXg1eDV4NPg18Gvg08BrwGvAa8Ong08Gng88AnwE+A7wW
vBa8FrwOvA68DrwevB68HrwBvAG8AbwRvBG8EXwm+EzwmeBN4E3gTeDN4M3g
zeAt/+/1Fri3/O83gpfAy+AFK/St0LdCH7wEXgYv2KBvg74N+uAl8DJ4IQv6
WdDPgj54CbwMXrBD3w59O/TBS+Bl8EI29LOhnw198BJ4GbyQA/0c6OdAH7wE
XgYvOKDvgL4D+uAl8DJ4wfl3/gVFqSGM
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"metabolite titer\"", TraditionalForm],
  PlotRange->{{0, 24.}, {0, 4.543283462496212*^15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.924531761034882*^9, 3.9245317776036587`*^9}},
 CellLabel->
  "Out[235]=",ExpressionUUID->"683af60b-10f8-4f38-99d1-20b82f38d546"]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{Automatic, 1288}, {Automatic, 0}},
Magnification:>1.4 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 641, 15, 40, "Input",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],
Cell[1202, 37, 584, 14, 69, "Input",ExpressionUUID->"354bbd3a-30ff-4da0-9367-ab1ec2269079"],
Cell[1789, 53, 623, 16, 69, "Input",ExpressionUUID->"d9b52e5f-e434-479a-9114-daa21c2e1c5e"],
Cell[2415, 71, 686, 16, 40, "Input",ExpressionUUID->"a84b32af-27d2-4ed9-86f7-fd15a4b2cff2"],
Cell[CellGroupData[{
Cell[3126, 91, 4397, 101, 153, "Input",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],
Cell[7526, 194, 87561, 1571, 368, "Output",ExpressionUUID->"c599da66-0b58-4222-9c43-d60b986d9a7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95124, 1770, 2695, 76, 125, "Input",ExpressionUUID->"35bd7dd0-b9dc-4fc4-a206-b1343caf4662"],
Cell[97822, 1848, 87752, 1576, 341, "Output",ExpressionUUID->"79bc2b97-9fa8-43b8-bcd2-d00cac914cfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185611, 3429, 3157, 83, 153, "Input",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],
Cell[188771, 3514, 90950, 1630, 351, "Output",ExpressionUUID->"af12f0f4-05c4-4776-b297-396d8dbed355"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279758, 5149, 2764, 71, 125, "Input",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],
Cell[282525, 5222, 90602, 1624, 362, "Output",ExpressionUUID->"a537c79c-c3a9-4915-a8f2-3a9cd0bf26db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373164, 6851, 2296, 59, 125, "Input",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],
Cell[375463, 6912, 39961, 775, 376, "Output",ExpressionUUID->"6c855595-b186-4f03-aceb-2c24835e0bf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415461, 7692, 1919, 53, 125, "Input",ExpressionUUID->"9ab5302d-5f22-48c2-960b-1c4cf83e4b22"],
Cell[417383, 7747, 39922, 775, 376, "Output",ExpressionUUID->"588bf40e-78e8-4564-a6fd-c12d7c39a87c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457342, 8527, 5348, 129, 573, "Input",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],
Cell[462693, 8658, 74270, 1605, 330, "Output",ExpressionUUID->"a13ad08c-e63d-4698-8581-6a6885f4ff3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537000, 10268, 4747, 120, 573, "Input",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],
Cell[541750, 10390, 74246, 1605, 330, "Output",ExpressionUUID->"710382ce-4c33-41c2-9e41-0e98aad3dcdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616033, 12000, 5244, 129, 573, "Input",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],
Cell[621280, 12131, 74552, 1609, 330, "Output",ExpressionUUID->"7e7ba5ff-a583-43a6-9b88-092f5791e0a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[695869, 13745, 5088, 126, 573, "Input",ExpressionUUID->"493d0515-9620-4c23-8daf-cc57dd308aba"],
Cell[700960, 13873, 74455, 1608, 330, "Output",ExpressionUUID->"ea39bb37-1f6e-462b-afdf-a79a8c9b8f20"]
}, Open  ]],
Cell[775430, 15484, 841, 18, 69, "Input",ExpressionUUID->"69370e93-a15c-4bb3-984c-fe8b9c40f1bd"],
Cell[CellGroupData[{
Cell[776296, 15506, 3755, 106, 153, "Input",ExpressionUUID->"f9d61a38-2ae8-4301-9978-98c3570d688e"],
Cell[780054, 15614, 131620, 2361, 368, "Output",ExpressionUUID->"135359ef-2403-4772-9d0a-3d46621dd13f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[911711, 17980, 3664, 104, 153, "Input",ExpressionUUID->"c405cce8-77f9-4c39-8ecf-9ef9857f465b"],
Cell[915378, 18086, 140311, 2505, 351, "Output",ExpressionUUID->"07e456c7-2938-49e8-ae4d-e47dc3e384a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055726, 20596, 3092, 85, 153, "Input",ExpressionUUID->"a3d9ddfb-d57a-4e67-921c-7061f602a4d7"],
Cell[1058821, 20683, 136502, 2442, 362, "Output",ExpressionUUID->"06cbbec3-7679-4a78-b2dd-38e90914f01b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195360, 23130, 2416, 66, 125, "Input",ExpressionUUID->"f8f1abe2-d78f-4630-a097-cbaf63a90f49"],
Cell[1197779, 23198, 58564, 1137, 376, "Output",ExpressionUUID->"e9f3677f-c7ae-40d5-b9a3-e5beb0e61bed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256380, 24340, 2472, 68, 125, "Input",ExpressionUUID->"611db49b-7a9f-4efa-b79f-159affac3597"],
Cell[1258855, 24410, 58658, 1138, 376, "Output",ExpressionUUID->"fa78dfba-5f73-4d70-8f3f-449042613bc0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317550, 25553, 2423, 67, 125, "Input",ExpressionUUID->"e31c2af3-2e93-46d5-81fd-722a3bc15108"],
Cell[1319976, 25622, 59865, 1186, 396, "Output",ExpressionUUID->"99f3bb4f-0325-498a-99ab-ec8d51fa5421"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1379878, 26813, 2009, 51, 209, "Input",ExpressionUUID->"03d2bfb8-5b2b-4e1e-967a-05a20f5220de"],
Cell[1381890, 26866, 29935, 649, 330, "Output",ExpressionUUID->"340246a1-535f-4bf4-a4fa-793279059347"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1411862, 27520, 2009, 51, 209, "Input",ExpressionUUID->"226ceb86-9f20-421d-96fc-dc7915866a5b"],
Cell[1413874, 27573, 29942, 649, 330, "Output",ExpressionUUID->"4a52e01f-abe4-4113-8ccd-4bd4bbaa1a3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1443853, 28227, 1724, 40, 181, "Input",ExpressionUUID->"0708d296-8a1d-44b2-821e-1ead048c3dbf"],
Cell[1445580, 28269, 40616, 876, 331, "Output",ExpressionUUID->"473bf1b0-572a-4b6a-8462-00e3d31b91f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1486233, 29150, 1388, 32, 181, "Input",ExpressionUUID->"25466ea4-a3c9-4521-8474-6f08be554e32"],
Cell[1487624, 29184, 12365, 250, 336, "Output",ExpressionUUID->"683af60b-10f8-4f38-99d1-20b82f38d546"]
}, Open  ]]
}
]
*)

