(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1689435,      33456]
NotebookOptionsPosition[   1682469,      33335]
NotebookOutlinePosition[   1682813,      33350]
CellTagsIndexPosition[   1682770,      33347]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ol500c24h", ",", "ol500c24hkeep", ",", "ol500c24hkill", ",", 
     "ol500c24hmem", ",", "oltyp"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\ol500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.919858710179872*^9, 3.919858883409314*^9}, {
   3.920030931496378*^9, 3.920030961691174*^9}, 3.920030992870123*^9, {
   3.920031037905022*^9, 3.920031057945324*^9}, {3.922197748471878*^9, 
   3.9221978304647274`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpgen300", ",", "hpgen800", ",", "hpgen1400", ",", "hp300keep", ",", 
     "hp800keep", ",", "hp1400keep", ",", "hp300mem", ",", "hp800mem", ",", 
     "hp1400mem", ",", "hpkill300", ",", "hpkill800", ",", "hpkill1400"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hp500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.919858899872816*^9, 3.9198589538227983`*^9}, {
   3.920031004162182*^9, 3.9200310475850544`*^9}, 3.920031111136442*^9, {
   3.922197842949924*^9, 3.92219788660766*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"46ef932f-654b-46d5-8d7c-620514ad424b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hptyp400", ",", "hptyp500", ",", "hptyp600", ",", "hptyp700", ",", 
     "hptyp900", ",", "hptyp1000", ",", "hptyp1100", ",", "hptyp1200", ",", 
     "hptyp1300"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hptyp.mx\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222029260436487`*^9, 3.922202984742193*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d8d44def-109e-478a-a035-d77f46188e91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"hptyp300", ",", "hptyp800", ",", "hptyp1400"}], "}"}], "=", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"titeryieldproductivity", "[", "hpkill300", "]"}], ",", 
      RowBox[{"titeryieldproductivity", "[", "hpkill800", "]"}], ",", 
      RowBox[{"titeryieldproductivity", "[", "hpkill1400", "]"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9222030129764104`*^9, 3.9222030410516233`*^9}, {
  3.9222030726839204`*^9, 3.922203110960018*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"a84b32af-27d2-4ed9-86f7-fd15a4b2cff2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.004"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865638775331*^9, 3.919865653417479*^9}, {
   3.9198656920748906`*^9, 3.919865862016964*^9}, {3.919865896111528*^9, 
   3.919865896198881*^9}, {3.919865944347963*^9, 3.919865969655102*^9}, {
   3.9198744084680824`*^9, 3.919874414900755*^9}, {3.9199563079197483`*^9, 
   3.919956308160919*^9}, {3.9200327682100925`*^9, 3.9200327837821712`*^9}, {
   3.9202155250876503`*^9, 3.920215530210655*^9}, {3.922198412463546*^9, 
   3.922198513159134*^9}, {3.922199062205219*^9, 3.9221990990213785`*^9}, {
   3.922199200987693*^9, 3.9221992284686203`*^9}, {3.9221992681337147`*^9, 
   3.922199273579796*^9}, {3.9221993610836105`*^9, 3.9221993961636305`*^9}, {
   3.922199709818567*^9, 3.922199723451556*^9}, {3.922199822361055*^9, 
   3.922199885044804*^9}, {3.9221999688566213`*^9, 3.9221999990238132`*^9}, {
   3.9222000610905027`*^9, 3.922200117581193*^9}, {3.922200156498107*^9, 
   3.9222001706071496`*^9}, {3.9222003620451374`*^9, 
   3.9222004084106283`*^9}, {3.9222004715143747`*^9, 3.922200556041106*^9}, {
   3.9222005886864185`*^9, 3.9222006548595834`*^9}, {3.9222006905286813`*^9, 
   3.922200748508935*^9}, {3.9222009315457373`*^9, 3.922200980334428*^9}, 
   3.922201092411462*^9, {3.9222012027600536`*^9, 3.92220124017941*^9}, {
   3.9222012733955107`*^9, 3.922201346545119*^9}, {3.9222017311377716`*^9, 
   3.9222019320602217`*^9}, {3.9222019662801476`*^9, 3.922202016578907*^9}, 
   3.922204738327344*^9, 3.9222048022033854`*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
A5mr9IA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
jKeGzmhPxrjC77cPWZpfJmPntT0z781cQYf1CXGyNxlNOk1rb0i5wg2dFv+3
g8mY/p/dPvNtrrCR9vy6+ZctPXrv6n6OuoDJi473n2eScYdXzKrrIxeoouli
8FhJxnilPt+2PBdgwF7leaoUlN1zJ4XeywXsYv7zCmdOQUe7708kNFzgQePH
y1QcKfgtTzbrKK8LsK8Od6fzp2Bl+BFPid/O4KEwTrXzUAruDPz2mf61M7QE
fpO9IJ2CDJ55/u0lzsBb891FSCUFR+fcy3wjnCFwZraw/HgK0qrVs28aOMNr
8YUOGb0UnPsv5Ey4qDMIe6ysPzJLQZYvc9s+bTpBdNkfCQ2HFFxs2Zw59MEJ
3o9v2r32TMGH7ecb7aucQEKQLs8oKAWNfQ9JJ6U4QarttrbB6BSkelt05KyN
E4xcZFlySk1Bz3jxUoqcEygOsB/6kZuC7Y6PI6KZnSBnzx7LoAspeP7Ck2fm
Y44wZcRD/nM9BV0j/0vZ3+AISOFvSrqbgtTBFzZHcxyhqEtobvuDFPzyZt4r
z9UR5plFhAqaUzBwUoxRUdURdLTFjflepaC1+1uNnl2OcD3lSMqNdymoeagl
2nHaAdZbZR9KDKWgzt+Pp35s3e9NqJSm67+m4H8e0sp+hQ5wV+3YXrW5FDwR
ULA0S3IAuijQe7Gagm3aXyVIxx3ApuF4nB5NKrrouTRM8TjAg6WTtf9tT8X1
xcGON6P2wCZ3esJ2TyquWKnYdGfbg5u/wZ5v+1JRfYmObVDFHloqTU76iqbi
pxDJtwuTdsD9wyJiWSYVh5J0uQTP2YG/qG1F7LFUdO1g3e+sYQcdro7DDCdS
cWDYQ+XZnC0Il7ruyNVPxWUn4zmi2BYiRz3VuSxSsSZGq3tUxxbe8fsGXXVM
RWX6GnLFqg2IWweWHfJOxY38yrelN20guSj0Q3VwKr5jTHLvNrGBof8imZRj
U/GfwYSENO3W+2133LGWtFSM07+y0lVrDTkGST7aean4UbDq9V0Ha/iWnXa1
52Iq/pQ7m9K7wxqITnKvxY0tfW/rd6k3W0HhNgrtWGUqukeOxFL5WcH8iQIF
z4ep2GjecJlDwAq0k4rcf7Wk4j1Dh7DEt5ZwreXyhYjXqfiMbuSzfrwlrP+9
1kn9PhWLRp/eipWxBKNjZX8zhlPxZI7CK84JC7gTXi61azIVG2z51veeswCa
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
0/hEfOLQmk74RcH/HpXLs9sOEuly2jRay1v7Y34owzjqIyFvpLOX+Q8Fb3lO
DUwUDxCj/qfluzcpyBrWrdj5/AORlauvl0+Xh/JM0eV75vuJo1UGbmZMeXhO
f/1Qr0A/8fWNURwvWx42cthNMJn8R+T9MCka2ZWHlfGnTrzOek8QzOa117ny
8FOb2Tzv6z7iu6jlaze+PIQo41Yalj6i8KT1hLhQHholyQ2kGr0jNNxsN2YP
5uH+xJKzd4p7iblk+z33xPNw+tGpJ6SZHuJSqeORMKk8/L52yrJdvYc42ep8
8ph8HpaSO70uK7wlFkZdHTaV89CXM+jxl/ku4tqme0SbWh7S5X0St7n/hji9
zys/TSMPy1JaNJYTO4lVVVKF7sk8vJMdVHHB8jVRZu37fMfprfwfvH5yR18R
hpH+w30GeXg19g/9O6EO4m9R4PJ50zycmNgIOrH7JVH+MHiHjVUerspe3hfM
2k6Y9YeKCtrnYbmWhZgG+wuCZilc/YtzHg6wbDwK3PucqNodZXXbY8sPTsvZ
g1JthLVsTBDJJw9/6ZwWodVtJRgN47KkA/NwYcQqd7vfM+KeX0LZYmgeWjfj
haWLLYR9TtLThqg8zG2acC4tbiZYKlM+RMfn4cO9rmEXOJ4SDZ1p85iSh5aM
vf3BF58QLt8zmOgz8/Cvw/DwYanHBDtTlvCrnDw0geaSf72PiKZDOceyz+ah
bdPnQpqkBsJTi2JiWJSH/+OThkHB/4//D369/w8=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.004}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.919865873592553*^9, 3.9198658977953587`*^9}, {
   3.919865962839588*^9, 3.919865971870208*^9}, {3.919956296496107*^9, 
   3.919956310435951*^9}, 3.920032786396912*^9, 3.920215531785618*^9, 
   3.9221985156235657`*^9, 3.9221991021128283`*^9, 3.922199277540761*^9, {
   3.9221993860299187`*^9, 3.9221993970586233`*^9}, {3.9221997145045977`*^9, 
   3.922199732132682*^9}, {3.922199854588046*^9, 3.9221998857355623`*^9}, {
   3.922199972125082*^9, 3.9221999993237*^9}, {3.922200093204537*^9, 
   3.9222001192485065`*^9}, {3.9222001639239993`*^9, 3.922200172685025*^9}, {
   3.9222003674581804`*^9, 3.922200408707637*^9}, {3.922200484041415*^9, 
   3.9222005092145586`*^9}, 3.9222005576195917`*^9, {3.922200594790656*^9, 
   3.9222006564575167`*^9}, {3.922200705926675*^9, 3.92220075177526*^9}, {
   3.9222009335972605`*^9, 3.9222009451667843`*^9}, 3.922200981697082*^9, 
   3.9222010940756726`*^9, 3.922201246400755*^9, {3.922201287962843*^9, 
   3.92220130174265*^9}, 3.922201366566373*^9, {3.9222018468521967`*^9, 
   3.92220185866032*^9}, {3.9222019193040676`*^9, 3.922201933623185*^9}, {
   3.922201986789386*^9, 3.922202017930416*^9}, 3.9222048029496784`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"c764e80f-5f95-4c7b-a0d7-6682bcc274f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "10", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "300"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<dopa\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9225318847417016`*^9, 3.922531916056893*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b49474f5-f46a-4d2e-9513-641fd70a267f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
M0Ibzf3xf/356Ir8//h/AJ9tctc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
ndGmpOuzxf/1h7Q34P/j/wHFDBV9
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
UMT+2Mjxzgl0sOteLtmMhvUD6nk9P0/gbL+X/r1TMSDGOuVDOSSBNNkJd5+2
xYBNelnOB5RA+pMCXJ1iVyB+v2cjq4sEhuXphw5lXIG6XKlJnXgJpKt7E/dl
4wp8PbS6I6JSAsMrN9s+u8TCPsrTEw29EriukpPf9zYW1PkiyIvLEhipEqrw
SDEOvEs1g4W4TmKy/fWK6NI4KBbaed2JcBLz3ef6Fdnj4W1F96vcUydRmuO4
a394PPw7kT7Xe+Uk3on+MWfwIx5EHlqw7Sw/ieN3a1uK7RPASvaQvNrbk2hT
9vzo6+4EiG34bBf0+yR+15FlfgFXoU75VlQ1hyS2Jio4xTy4Cl+fn7v7XUkS
w2r+vdvNnwjs6uJveR0lcSD554x1diKovvq1ZB0tub1/p7ccma6Bp24dV/od
SYzgIOsdCr8GxZ3B+KZTEv+8iO+5snwNuozxDO2iJBqsrHnluSfB33d0iUr7
pHAmO/kzcTwJhMzbH1xUkMJBIdryEqtksBq69r7cTgobuAlSib3JEGtr+m8i
QgpzqSeGqAVSoHZsP9+hUikkGucURzilwMSpER2zDimkiiZ+Vi1KgT1TxR6J
C1LoN3RskzCSAqrnnDNa2KRR5fF/On6cqeA5J/h4Q1YazZ5vrH0mp0Kh5/yY
tI00th4LVbmcngpvfj2gvxAmjX+evxTS7U2FNT9/kVsl0qiuy9eisjsNhNYU
TT62SeOavAeVpWEaWIRs+e+bk8YDs0Yv0q+mQcxWc4Ehqwxmizz8MNeeBg8j
417GSMvgFLssowNjOkzQG848s5RBxZPJ1FNa6bAnfg/LnxAZ/DhN7xoakw7A
PCglfl0GIxi+veFpSYcLyXlWZ1plMC54Z+0bmgzIZ3MIK/omg/WHIPeSaga8
yeS7NbhLFme8xr8IhGfAGudMB4ukLNaes59905gBxwsqfmqZy6Lx+iN6138Z
QD7ivT8sSBYFAg74/VLKhKgbMsp1RbJIe9fT51xQJjwUWHf68VIWxUP/iLTV
Z8KXO42xx6dlsUTxQyvDSibsFo2qdGCSw2q+Dms+mSxQqdLuyz4hh1RulRsc
F7PggiTz2luSHL60kqodu58F+bU93IyBcshIib7it5AF7fKZGlgghwtJs+79
Itmw8sTKLbBJDpVVI6xXzmaDAHCn3J+UQ/Llj6pDt7KB/HK8doZRHn+ptDP7
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
Hdkiog==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
VkUa10DXMs1qOLj1J6d9pxrm2rueWvSpBq+MAN1iCTWUd3U4WlRWDc17J+aj
zNSQey2IIbm3Gr7V2pa7+qphTdZ80K21alCQe2xqkqWGnPb9JXIHayC0S+OX
TIsaWtyPzJgk1sBN40vnOV6o4aANwWMgugY2XgvYrX9Xw58M07YrjTWgczyX
5iOrOn5htykwf10D8fM0V/6TV0fa8FW/l39q4EH46eMXieo4ltpTBRwUoKeb
3XUuSB3deCRUpcUoYJ7rcCc0Xx3p5ahuN2lSIJv/ha/DNXU8rB0ZdtOSAgNN
wItD6pjr8K2DfJwCHKpXn4iuqqPvn93vo4IocPj+wTBmLg3s0rPQVUiiQLlV
ycGfahroT/+BFFBIgdH3jINvj2hgnb9Ijsp5Cgh6RSfcidDA13QTIQk3KOC2
tCBfV6aBp5w8ztk+osCFWNePaV0a2MTeF35xiAKzTEPZ/h80UFJV8WXCZwrI
lBhr225qoBPPov6HnxQIFOmc0xDQxAryk6zr/yhwtU26dD9BE8u49gSw7KqF
Ne1qY7rjmmh6a6NzgrcWNHrZV+fiNJHPpdpCWawWou2S6l9SNPHeuD4zlVIt
9Iyvkm7c10SNC1HfjXVrgcb/BFXFpCZuXCcv05vWgvHvkcvxtFo41R4gBeRa
SE+xOuZ1UAtffVZrXXCshee7e5gtjbRQVme1jtOzFlirlboUvbTQRWcN2v1r
gSx1/gR3mhZ6Dl141HO6FopvcnNvNWqh6YH2RKOYWhjWz3w02auFI3/ZB3WT
a4H/5WZI75wWGueqCl7MrAVnx1PCl5m0cSiUZSI1txbqZiYGCqS1Mfcrb/nb
olqYDrGLO2OpjaxX0sdKymtBguqJ7HH/7bhDw6Kvuhb8sjVHDXO0UT7nWa5/
XS1c5mnJlGrTxuK6yz4J52thqWG/JvuANtapiNTsaKoFFcW8mdVFbSzbY8iw
cbEWIu7SFn/YrYM5PIyZzpdq4Y5ZmOF9JR0ku5pyK7fUwt83s0sXbHWwz+JG
e/h2rO/mWJsdqoOnlcY8ZLbj5IUXNsFFOlgxL0Qkba/vjcS/R27q4CTL1crp
bX6WnddadN/p4PPV2MRvjbVgXSDqKLKugx/rFUzct/PLP1DKyMiri2u23ASL
7fyHLjHdWtDUxfIVvt6G7f3xaMR4DTno4mX/JtvA7f07PfzB2RWli/YPKp0u
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
J/QEWRQYhtji/7rj1RP8/+P/AQ8X+FY=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"dopa\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 300}, {0., 0.034518947907279676`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.922531902418439*^9, 3.9225319172876263`*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"a7ce0e5e-ea2f-429b-9aba-1da80ddb7ca2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "80", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919865997697145*^9, 3.9198660281221437`*^9}, {
   3.919874417909031*^9, 3.919874425750944*^9}, {3.9200328049280014`*^9, 
   3.920032805144869*^9}, {3.920215544823908*^9, 3.9202155501520004`*^9}, {
   3.9222010809426775`*^9, 3.922201085878107*^9}, {3.922201439188493*^9, 
   3.9222014829861526`*^9}, 3.922204741866678*^9, 3.9222047960996904`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
jHrt/puY5fk7FYcPXIf/5yeDq7n/d/2/ACbLXyo=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
J7w=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxdenk0ll/UNkJCUmQqUyIiRRky3HuHZCZTRcgs0yMpU+Z59gweCkURlZQy
VDKUMhRCJVTmyFBJ+GWoPt+31vf+8Z4/7rOudd/7uve191nn7L3WEXcimbsy
MTAwfFt//N/5fw8hy7kLo6eC8P9jtyvveO+dC8KWMtr0qdJ8onL40cPQpCCU
/RaeHH/yGsGwJ99crzAIvzo9T8jOKCCMfaJ+8j4OwrK69Ltm4YXElYeumSNd
QeioEdf9Leg6Mbmsv7/8axCesi86qB95gziE8p0hDMFYQSxN5NCKiKj4bT7H
BILxGGPvoHt1MdHZvsTBeyAY666GXXGeuEkI8Xy8PXwsGOsbbbQlJEsJj1MN
+ncdgrGgxu2L1vlbROW1G1+DA4PxW83dOOfu2wTTREKCbkYwkrOcVGWxjDCR
85biKQnG6xJ+ykcb7xK5/mYvh+qDsa3+0ryj+T3i66NDLmW9wUivKaXnht4n
lP4JbAj+Hox3+E5RBk9UENFH/xQeZQ3Bhrw+JnniAdGZMoLbREKwY5rN9Lv8
Q2Jnz8uhQaUQ3LnKt4Wyt5LwELgdfsc4BKfutrDcVKgiqu3ThYNcQ3CgNdXr
jE41wVTs/1QnLAT/+Ds4n3KuIUxnrG23ZoXgjwYbz9b0R0SegvrK57IQNJUr
MNFpeUxMBYpevv0iBPUc1M/rbK4llOs3qAZ+CkHHmwqHtR2fEjHMX3u1F9ax
AzdzfVMd0WXQfoGbMxTLGE/ynFFqIHaS7/N+lgjFkxMbI+RtGwnPD7SHt9RD
sddTNvuexDOiWjjY/KJFKNKavVNjF54RzC52P7W8QlE7R6eQpfM5YXb7SOaW
mFAkdAo6jt1vIvLnJPd/uhKKAcv78ipyXxDTyuydpQ9CcfliUHR85ktCJey7
94VXoVjw0jAYMpqJ2KYeDq3RUDTuCtN6l91CdG+quc21Eop+5dM1n263EiJm
ufoft15CVeabZzNa2whPesTXEplLuPkle4zpz1fEo0/OCQFHLmHYoddhDpLt
BLOEntSRU5fQZ45t74JLB2F+Vu7l5nOXkL3ftDnkfidx9R63y0DiJQx85EFV
Yu4iZhYXmEoKLuHTp6uNGdVdhKpGf+H5R5fQN7/xpRepm4iLrkPsuoSDU+V3
l+V7iJ7WwiHOr5dwt7dDsdtiDyGyJT68/98lnNlwJIOr6S3hbeUpfJM/DL9E
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
nYM=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+H9NqX6M/+lP/T+1i6Oi
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1500}, {0., 0.003989794773805739}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866034057536*^9, 3.9199563708126717`*^9, 3.9200328072877254`*^9, {
   3.9202155459588585`*^9, 3.9202155511452065`*^9}, {3.922201473620805*^9, 
   3.922201483362195*^9}, 3.922204797374789*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ac6b860c-7cb1-429f-a4cc-006c2f63b64b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen300", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen800", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1400", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.3", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "5"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9198662963389387`*^9, 3.919866350738162*^9}, {
   3.9198663926309724`*^9, 3.9198664727187824`*^9}, {3.919866507086978*^9, 
   3.9198665133816967`*^9}, {3.919866544130741*^9, 3.9198666316374264`*^9}, {
   3.9198744298274*^9, 3.9198744333564644`*^9}, {3.9200328131036205`*^9, 
   3.9200328133501587`*^9}, {3.9202155607111244`*^9, 
   3.9202155629445896`*^9}, {3.9222020664404073`*^9, 3.922202098413243*^9}, 
   3.922204746574091*^9, 3.9222047886511097`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
b/8PpGPVKg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxlenc0EF7Yv71JESojDYlKyiijz62opERGKpIyW1ZJkR3qKyFJkmQTQkJW
trJ3Qvbee4/X75/fOe957x/3nud8zvN57nPP89znPudcwVtmlw2pKCgo/m5M
/2/9PyM3If+1KCfyrQNCnxw+CccD7Tt+NDyE0nue40e2nwJF1dUV/XhX+JXc
od+/6TRy6Qvv9I97Ify3nKoouwLIznf3pN77IVu0iy6DTxEhcuW7n2S8R+u5
aL49x86A4iplS2ZLMCg6F8B/8ywSZXYoOax9hoStnKye/zl0/PoevvN1OGSk
vzJcbVEC+xVVinyBKBy8fK5oWEwZpHfo+u3EGCgtfDN87XcB5lbP02hOxuG2
D7tiC6MKQih3ckTWJEDukEt1hfclDJzVTdudlIjfFYr/2N6qguK1iOHDxSSo
LxRlbb2rBp7G+S1FJ7/BaGhvBovyZRzmK8rd+jIF2+RYLutKquOcge8Do9rv
iJjtSL0vooGbX/R407an4bVPsl+ciCZspg6U0t9OR65P+09HKS14H196rP3l
B75kHt7mp3IF0Y4le2OmM3CMuyX5uJU2ckv86hZls7Drt9eZifCraGK75XTe
NRsCRtG6F3uuYUJTTOxDeQ58WYh4hbgOXFXsxx4x5ULv+FWtTV66YJ8yUAxO
yMUkh0xS/OINBL1VDiq+nIf7fPytPjI3IXz8yPTYXB4m0wIHQin0kdLKc577
Qz4+Un57olWlD+K4HgIU4KxSwsBs5C2U7+6bN+4uQNs3bb0K99vQLilX8XYv
RGAlX6SSpQF67nyLSBctwi2h68V5RoYwZwtc6agqwsCQRpCPoRFWkhzVGR8W
I6OWahuPmTE8NI1jxXlKECoqyJjnYgLOxYuU17JKYMwm2L8YZoqQIAlt55u/
cLynv0y8+g4Okx1fY2l+I65lKL+V4R6yuinp6qJ/Y3fmj7bbKvdxzn1AZ/lC
KTI/WraRzw9QL1L1bfdkKdy4t+vPUJjjZuV3pgtvy6DmHdLxJN0cIxZB+g+P
l8Ph7CjdzccWsNnqkh70rxyvxy6VT8tbguaH6aYipwr4cB/mfMhiBW8dVaPR
vZV4quEcJNptBR4K6eytpZVoepmvqJ//ENFhfJwnHlRh8jnjG4PYRwjY7Sx5
lLEa71Jd7Ww/WOPmo9mbZ69Xg+G1sMLi28fYU2LieT2+GkyvytX2BdpghKc1
zWy9GtdOcqfrRT9B4p1L3S5qNaDfGbNpPfcpbLLy2QLCakBj2qWh3GMLOTYp
mbjZGoy9rzoaueUZaG7GGOaerUUIRWe56QV7/Eri9al/X4vJn4Jtcz4O8Kb2
zhoYrkUaT9HuJgtHaGhSD6zI1+HOn10USzudwBtlzbHZuw45g86M/o1O6FgY
PLG3qw7iDv0C7b7OiD6ve+e4RD3MFLflsmi54F5Q9duLbvUYGBT/cmmnKyTG
TufpN9XDPcz8TPekKxaQNvJIpAE7t+83py57vhH3Ijwv7RrAL7VzsvuLG1y7
P54OrmxAqb7/2Xw/d1yQ3GyWvLMREexff7Y89wC7u2tgsWUjBDW6DM0dXqCp
ab6oubAR9nIXp7OcXiJI5O7kGNcf8Lt9UKR+9R8M7Np4qU3/4J7W7l/unz0h
XKl2jjvzD2JvpiS8/PkKEwJFVqKsTShWGJy61O+FFItjn6DXBPe9n96/ZvGG
XcGXUvWkJoil3OIPifUG2SowZ0z9F/62zzTXLvqAwdhX0E7zL0SSFBMq53xQ
nk570TvqL+qeXg2TivCFH9MTm/DFv1AUJno6V99AW2ckLF25GYvX0qSMOfyw
M0GvqvxjM6SUX/A41PmhZ712qWO8Gfw1HqNl798iTu2M0OzJFhyYWuB6bOQP
87Afaox+LbB8mnMy9vg7HJs98IyvrwVeCg6fvDkCsHImJFr8WCsK79Nc15wJ
QGEAR73iy1YwhF+DYOt7eAy5rV9tbUUBT6XGrrJAqMotiTw49A9shw5puOV9
AKfXfS1nx3/wL/F//+RnEFrbO5z8a/9haa7YXqToI0LENeJj97TB7e/YvZLa
YJi4lDTlWLfhrHeEv/3AJxxokKGp+9UGyxkNdeISghmhBLH+7e1w0fS+7sD1
Gek2gteX77WDcucfC86Ez3As9XPb9LMdhz2EF7nPh2IXG81fH4YOGN0SGQ0d
CgVdWvbYB/EOWF0p06p8HYYBvcc0kdc6kN64mvbteDjKGcS3J7p0YMtFy0/3
BsKRmDQklhHXgSsFTlVbgiLgey1csbChAzVc+2RzNSJhTX3jeuVaB+74E7HX
W6KgHcdt0bSvE3H7z3IGNkRBTrPGrUu1E0Ljm9uXPkaDf+1l0MiTTqwk7kos
vxsDqiiF5LnQTkQFNSqKIBY9l9ZKKMo7Yci4O/8gzxf8Wkj7xzTbiVYF2SNT
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
zp+Z
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 5}, {0., 1.0041586491543129`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.919866353530343*^9, {3.919866393202964*^9, 3.919866405744089*^9}, 
   3.919866479681888*^9, 3.919866514386762*^9, {3.919866582076521*^9, 
   3.919866632547553*^9}, 3.919956380786121*^9, 3.920032816012081*^9, 
   3.9202155642022457`*^9, 3.922202101276074*^9, 3.9222047899677696`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"1ebb23ef-213a-47b8-88b2-e06bfd4627a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hp300mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hp800mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hp1400mem", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919867032379788*^9, 3.91986705205376*^9}, {
   3.9198670912371483`*^9, 3.919867179575877*^9}, {3.919867242327884*^9, 
   3.9198672560126486`*^9}, {3.9198744442835865`*^9, 3.919874446724573*^9}, {
   3.9200328238958416`*^9, 3.92003282446961*^9}, 3.920215571663307*^9, {
   3.9222022993509407`*^9, 3.92220235420543*^9}, {3.9222047508985996`*^9, 
   3.922204778648769*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
I2g62t3hWVpL/weqwG/0
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hk8ldsaB3AJp4SLTJHYZts8N9rPKeqEJtoZyphkCluZI9OWsVGokwaR
oVLkVJr2I0N10qCSJqfSVep0mpTcSu7tetb7j4/P+r4/a2/rXe/zLE5QtPsa
cTExMa1xYmI/f/J/Xt0OeID/d+HMWifekbqflwP68/vdrFy9eWI/r3QH3G/r
swtjA3j/93wHtHp8XS5mfNCY5zqgoZdrvzM/ZMyLOWDrk4g5ERAx5rvt0e3p
ZU3+xyjKt8c8fsBrfngU5duj59831j9xiKJ8e3x7QrX+hFQk5dvj3ah9Ydtv
h1K+PWJ8cUNWymrKt8MsrWfv/yNG86mzw5CAzR/Vg/wp3w4N3qoXyQx6Ub4d
9uzS1HAfz6d8O5T+/LdrRZQn5dvh8sNedS2GnpRvi36BvwoWKaykfFs8I5k9
xOF5UL4t5n1xUm+oX0j5tnjZ9ZcJ5m1qlG+L1zjjfvHY5yQay7fF592l4v8a
nScay7dBjVdv5rxQXSIay7fB92IeyYZR3mM+3QYDQFxyxMxrzPNtcEfSu9ey
Xz3GPNcGX6i9+hw55EL5Nnhqp46u1vJplG+Nymnchd1uKjR/a1TNUzKq1Den
fGss4+559GXnDMq3RhPFVicNUxfKt0avjL6Vvp+XUb41uuoki5f5BFO+FdZb
7JrX5x9B87fCccI6Q8ecaMq3Qkd9mRnCY7GUb4UBW4y7U3bEU74Vcl71aTh+
SKR8K+wwujy1oy+R8i0xVbvDZsVgCuVbIsyp04Pj6ZRviSbHfGdvMcqkfEvk
NIW/143MpnxLPGwmeOs4X0j5lpiQu6BdoVdIeRZYajNsLukipPst8EmfTgMI
mLfA4Jau/ufFzJvjx9xBnYiH2eTNUb9n+17+lUzy5mjzNT3YsjydvBmaXF7j
8uVdKnkzLEloKv9UmkzeDH3FoiN7WteTN8VtDwr2Nn2PIm+Ka+dn5hhxQ8mb
omygyoxj973Jm2CvVIYGZ5wzeRPMs+5KtBCfT94Eha63Lc+M55HnojDjvO4S
5ZnkuZjEbX/7ScqF1j8Xr1qY3cv94U/rxRgF6z6PfmpbR+vbGJ+v/1qV7hpH
3hh/6z4uN31/InkjnNgrNyD9JYG8EXK+S7cUDiaRN0LR4O5I4a1U8oYopZcy
8JaXSd4QPZ7dDLkXJCRviLYP/M8qncohb4AHvs1epa2ZQ94AY3ykuxW9c8gb
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
yXozef8FUBx4sA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
JvupBQ==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.919867183642939*^9, 3.919867258542136*^9, 
  3.920031164279753*^9, 3.92003282488887*^9, 3.9202155731779976`*^9, 
  3.9222023555230703`*^9, 3.9222047817478275`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"a56fa83d-50a5-4420-a598-097fe29618d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hp300mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hp800mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hp1400mem", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<hp=300\>\"", ",", "\"\<hp=800\>\"", ",", 
      "\"\<hp=1400\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9225338112054863`*^9, 3.9225338265072184`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"57b58f4a-d677-47cd-b1f8-236cac00e15e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hs81NkbB/BRSiuE3OUyLrkMZsyYsWTNE5JuVC7VIoUWg2KKFGWQylY2
bWnZLu5L6Z5qleYp6V4s2U1F6bal3a3tpxKl3+72nPnHy+u8z+d15nzPnO95
Djd62dwlIzgcjoUKh/Pv39B/P53uuHNxcXS0s4N0/75/P+7YVWi3Yxf/7VnO
vx+FOy6cDs1nbmkq//Oh7rhn6XXtcweEyv+8ozvKi/J4uhG+yv88xx17ohXz
LIMCP/tOCepU/fXuaNK8z36fBE28hJoCy8jPXiHBtGbTBJ9tkZQvQQPvrL0+
08IoX4J+/Tcs3ZtDKV+CrXbjhjOi5lK+GONDzu5eEhVJ+WI84ObtFcqNoXwx
9r5c8nFVUQzli3Hm8IJiK5s4yhdj0HNLa/XsJZQvxoxzq1wHz8dSvhueKp53
ymgr+X1ueHdL8/PzvgmU74b7NHMnLR25lPLd8G359pZf1VIo3w13XZjaMomX
TPlu6HAwre5pSALlizC3LLThWOEiyhfhEq78q3WOgZQvwtHVLYqjx1wpX4Rh
w9ni+yljPz8vRxHO/FtnnP5cAeX/42VP/vorKIDyhbht1sXRhe5BlC/EQG+O
dVOCB+UL8Wub7m8zz0kpX4gJRbkPC1NElC/ErfLVqJfjIf2cL8SCnHsnr6aN
kH7Od8X5I73PRmT60PpxxYGShPKM5oDPXuGK25WTB2Recz77UFcM6fZWy102
g/JdsSMzy9tzzxzKd8Wj3ZKYyPRZlC/AGmPZnr1SP8oXoDLvkG/mMysavwCh
4qFKugGtt1ABmskCfS4he74CtDf5Wfv8EnpeHAEmxphfWzhzGc0HH+fp/5yk
4reC+vPx9JYMq7Xhy8jzUZl6ONLIJZq8C/Y9OvFibi+fvAtOXxm6535BCI3f
BcU9e5tmVyTQeJ1xVd7Ck0c+pNL3d0bt1oYe3ewM8s4YeNKz0sgrm7wTfvh4
caXnrVzyTrjTqvQP+YX15J3Qfdfp4CMvN5DnoZl3AH/miY3keWh73vNe2eBG
8jycfkcWfvhZAXlHvPvu0rQHL/LJO+JKpxUuv8zMJe+IG76S1wodc8g74MHx
th8vFK8l74D6Kb33gtsU5B2wUcv6XWzWGvL2KIx4PKe+lXl7/HTE4if9nNXk
7VHi/aJozMnl5O2w71LHwLiQZPJ22FD4oWTTM7Ye7PDx6203ra2A/EQ8t06+
OsnelOZ/Ir416jHtuc0lPxH3udblck840/OyxUX/G9i6Z8iH8m0xbHRfVJze
bPK2KJrke7lKEU35Njjibn5lz34ZeRusuLOnMlgjlbwNdnAia2d5ychbY7hW
eE/zV0vIW6P//rtF3hfZerDGXs9tRsnm1uStcEVz/g7nKWw/skLTQ8+Dbs9O
o/VmhbsXHcmKN86j8XOxIqDpjK77BvJc5L1xDKor3Eyei7v2zq1+Y1RI3hJN
p3UPznu8lbwlKh98cPHo3kreElEjHsvjWbsFqvZME8v0t1B/c/yQWvb+78KN
5M1xRIrO04zkPPJmOJVvq/BsW0N+Ap4YeUEgtmS/lwmY52sc9bDVn7wpFodW
6EjCJtP3N0F/+faR/M1B5E1QVc/00FBOGM2fMeZLrJ50VSWSN0L7G1PSZgWw
+TfC2vTfJndUrSBviLyxbx6sSUgnb4DX9zcdikiNJW+AvMxJOX6fFtJ49PFc
jtJX4pFD49dD6+9udzYab6Lx6GFNLu9unGER+fFYr8gdfGxcTF4X00zanxiF
/EheF6+oWhzf8XE3eR0M+dTbtlS1jLw2jhxa33NkZTl5bYyVLx+xZnkltWvh
o4qi7k9GNdRfE1/V9q5w6qklr4GhGnPXvE+sJ6+ONdzDO390Okz+C+xqE6yM
qTxKfgx6CHmX0+Y0kB+NMULtmy3lp8iPwhcO/UIH5zPkVdFRoHY9qUlJfgTa
VjR2G3POk1fBZ/6GXbLIC+Q5mGX28UHGyYvU/lHZNFyeW7P8CvUfVA5v0j1z
ctF18gPKQYf83VEPb5J/o1T1/VQ36VIb+dfKXQsuGq3RbCf/Snlcdnxfl2EH
tfcpr539+a8zVR3U/4nySZaFxt4pHeQfKIPEUcuffP8LtXcqB+eLH8iuXaP/
W5R9w/sq6pVNbPyctS12ixfq1dD6aZH+UXyi78LGSvq/U3rzNndU6/RyWj8P
pPLTVSH+1nup/YnUaKfoePqdUlpvfVJZSuorp+vF5F9JYzSe7lYJ+57aX0tn
qi6yyWvZQv3fSA81D/T3L8wnPyBtHtbVcoxh+/mg1Lhyrq6duID8R2npxCb1
T88LyHNAqfow9uoctt+rwKmLV++HN+ZT/xGwpazsltqtPPKqoKhTmSQU5pAf
Bc33dQ2FiVnkR0Pe3j/PXPpzDfkxMKxVe/9QgYL8F7C1PsbDoySXvDr4jGi1
rXVm7wsNUBwrid6NWeQ1oUbH1yu9K4O8FkzoPLCyul9OXhsO+6ZX3YpLpXZt
iDr6bP6oiBTqrwPfnoiKP31JRl4XrGHknN9WfUNeF35QDetyHJpPfjxw9VSf
HuyfQl4P9IdV7zUYsfOCHpTdOSUQa05lv38Y47XrcrbMh+0PEPerS5SqVyTb
P8BDQ9Ql90tg+wssbvotsKR0Jdt/wCFwfw53+wq2P4HZ9pDGCbls/MaQ6DL7
Z77KCvImYOu0wN4haBXb/8AvOqrDdPMq8qZgMzY4SE+dnQcmQEuTgvP8V/Y+
nQB2Be/jN2uy96kZvPdWKxmYkkPeHK5wInN//2YdeXN4NoSLS79cT94CCmzq
JaWLN5C3hKOjOH5t61m7JWjVz9Gf/Ho99bcEu+2STWMM15Hnginv7KzoKnZe
4ML4qb9bPK9knguB+7eonD3I8q3Avzr4xIN7zFvBWvvgx7CAjc8Kbkx/zNXT
YuvfGvpSpm2ffGYde38C7+8/XjcEsPX2Tzu/un2cjK03GxiTKneq+oatTxsQ
9E9ca/KczZcNdCevW7ZIksne7+B+q0E/46Gcvf/B2tyja5MnW0+20DUq/dFq
zTh2fgDQNc0fNIwnPxGqO17mqbjEs/MHGGvcGem/IYydT+DS9xXqPl3utL7s
INvYkldRM5/2LzvYYbDOa0/kfNp/7EHUfid+nEk4eXtY2DgqLfbAG286P0Fy
6RT18Myp7HwFBettojw9ppB3gA0/1eTYVUZRvgMcK4SSorYkyneEpkIb4+6S
FPKOILAr1YsKlZN3hJx8afnNRjl5HtRtnCG6N1pOngdlQ3M1nW8nk+fBaoPW
cu7oFPJOcNJZveGHIlbvOMHSHeKegbgE8k5QtfSR9hFROHlnODh01nnoRxPy
zmCYfNk9wpdL3hn6Et7N2nQ6gJ2fIZv/e2lWFDtPuYBe3b4zajfY83IB19ze
6tpDkeT5EOgJQz9dCybPh9j35g4T2th5gw/9B9Tsegf8yAugvUJ180sFqz8E
8MWFr7cV3ppM/QUQm1k9O0v+zvs/rhCANyTuvBIyldUfMCbilpFt5BxWn0BV
e/LIs1ejWP0CQf3yc5c2R7D6Bn4Iy79vFD6P1T8gjZ8c98vzRaw+gruyN2X3
pew86Qq1AV3S1sREVl/B09vBphMy41n9BaMN/VtS8hNYfQY3tmS3fZnOzqtC
eN3vG1HonUz5QjieeNjCwpfVI0K4d7P79LSjtL47hZCyZW2snhs7L4ngzVOD
HYv841h9CQU+EV8mPommfBFcSK/VDzSn+VeIwGvlr+u/LJpP+SKo/06ty4xP
z6NTBCeOaXkVfTuD8t0A0oIefXxhy+pjUC/RGvu0ndVvbpD3XaNQ+DqC1dfw
tl2HN2mI1V9uILRu1ZphIGP1OXx1uN7bqYGdP8VgVrC6Omosq7/FsCop4Mqh
OrZexbDkl9rHSX3L2P0AJBQ7D/LfLmX3B5Dz3rYx2DaF3S/AtJ3Xk1Lt2PqX
gEj6+wwPVj86SmDKDLU+g95l7P4CuhPP5Vo3J7H7Dbh2tVDfqSWe3X/A5ay6
4FfLF7P7EciOOsjPjg5k9yfgG7H83J+dEna/Aod12s06jWxp/t3hzhrrwNYY
Ac2/OzTlpw80t/uy+xvo8RsT85sUaP7dYZ6uIufl0ETp/wHlmlk9
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12HlczNsbB/CJVltpkUpq2ibaZmrapOa5tiJKyxQhkzbbSKVFokWisqaS
xE3kIuK6roqYx9a9ufpZriIhIoVkbqR0Lb+fn+fMP73mdd7n8zrznTOn5znc
JTH+kUM4HI6RAofz/a/4+6vJGcU5ovNnot1Flce/v5zxab2aL0h9RJzvr3Rn
bHg/ISr5eYDo/17sjDq/HFpUbhP4w090Ri3toe/TAxb88BxnTFFNuKN8MeyH
b3LCc9tyB4+XRFG+E3r57H+XoRBN+U7o56buBrdWUL4T5ng+f3FAGkP5Tsjt
mR1htm015Tth0JuEnsOdUsp3RNOFBz+WXlpN+Y7YHHXC5XpeHOU74pzsQOOe
1ljKd8TTB3dM61KPo3xH3J5pPTvvNnmOIzZ5SXMHHq2hfCHK/QPV/9VIoXwh
pq1cFu/ikUr5QqyXKqkZF6dQvhCvF9q+1k5fR/lC7PS8kXLs9xTKF6Jld9KS
NR/XUr4Drh89qvtIeyLlO+CE7S1Pm1RWUr4D1rgPKvskSijfAYf1VgvDskMp
3wGHFNRbzHeRUL4DnvfXLFKyi6B8ezxWKo5RFYdRvj3OCHylXpW1iPLtMUZa
19n+KZjy7VGuqc3nZQRTvj0225l95o1k3689pm95ltowdx7lC/DbmrPXZuxZ
RPkCDPI2edNtE0H5AswJ1vF7fCia8gUYohjvZDBA65kowO6dF7SzXKIoX4CZ
zsfra7aupnw+Dg1PlnDKaT8c52NohsfI38aw58PHftNql76+cMrnY9etZ2Gb
X82hfD5OOjtm37SoybIf+Xw8d/XeeY3bEbIfeXY4JdL62tW5MbIf8+1w8gxO
+IfGRPJ2+OXjycjWn9LJ26J0e/U7OTeDvC0KV9VpvPBOI2+LRbPbdH8tXE/e
BgfzTId92ZBM3gZ/evvzI90Da8jb4Nc+63qtsBjy1gjlrVvEe2LJW+Pzh9vO
rYldQd4a/e0kN3dZu5K3QtmRjqbsATF9fitcdt0/buqfM+h5WqFrzI6SzcUC
8hOxK2Yr776nH+VPxAaUPBzxMYDyJ2JzRoPbVl8x+Qm4965b36FAf/ITcPS8
1DKVNyrkJ+CshW4Gxjwn+n4scf2uvUaq86aQt0Tllv0tTcGzyFvis9cXAg45
2ZPnofKnyquTU7xo/TyckhCUu5cbROvn4eyhQ+5NyltA3gJffy5LddsfQt4C
z7Xl1xz7SPuZY4Ex8cVV7RrR5M1Rwk3KTLi9irw57ppy73Ddm3jy5qiWXD/K
aF4SeTP8Vrpc1e4d+z2bYbf97mit2CTyZqiy7GFkTdJa8qaod/xo6qeMRPKm
WCa/WPZSKZa8KbY+/VB0Ny6BvAmGWbl3uCxLJm+Cc3YsvhLaw84HE5Rb1EZm
SNl6uOizL8xI6zOdR2IurjTqEqVGJpPnIt+1Vth+bT15YwyZWVtWdCaNvDEa
jbh34x+9jeSN0aDrlnv54o00boTTh3tj8+cMmj8eryQqzU+EdPLj8dKKk493
R7DPZ4jy9BMah7LYeTsOe0+6FS0PYufnOJzieYq3VY3ON7EB1tipG3vUpZPX
x78d2+fN8mDr0UeDa/fki7uzyOuh//z8oLaGTPJj0fNtyK6pKsyPxWaVJ8b/
dmWS18ULBarbJU9Z/hj0fTv6iI8wkfwYvBp49rxuFfv+dXDHhcwb37wk5LXR
/GNjSWW/A+1PbaxqvFLX5rqG9q8WuubckrR0Z9HvQRMH//3WZ6ewg7wmNl1K
XFjoXEh+NOrITiTK/yghr4FXItx8chaUkdfA/ml3i8dNOkTjo/DTyzlqeRcr
aP5I7I11VhT6HyU/AhcvnX1h36RK8sPQ6ZX0SMHw0+TV8Neww94mI34jr4rd
7cOyx646R14Zn9kANy23lrwSXotcHTrwuY68Ig7zXZShH43kh2DNl4CyhZuu
kFfAiy1hLTceXCPPQdd8y5BC/T9o/IvsYfXdgKPiBpo/KGtwT3sWIf2L/ICs
YPw7n+5LjeT7ZOvFQ4eZPbhFvlc23d63WGHXbfJyWZt39MbaQ7dp/LUsqJQ3
zVP5Ns3vkDVcCw4cp9tI/qls4QbJvz3r2HqaZOX954xWZNbR++uyRkmqr2KW
kK2fcyS2cur7Y9doP1wXFVukC8+4XKH3TaIT3Do5ZwjS/nkqKi/ujZ/sWUfj
HSJrw/b7+rU1tH9ei6Tvp62cnfM7ebnIbt+9EQ2lZ2i8VxT5xZ13NfwUze8T
JUnP/ny69xj5AVHgfMEcz8QK8oOipY+v8svnHCT/RdTz9tH7+9z95DkwpHR7
pceBEhpXgJ5mW/3M7L00fwjEBpQm8JyLySvCpoLqtb5Je8grQc/OlelP7hWR
V4a5NktnwsEi8qpQdXT/BZeEQvJq4K46K6vTppD8MAhcr73Hw4T5EWDgEVPb
WlJEfiRkHz7x1U+T5Y8CrXPGOoZtu8lrQFXf14uZD/JpXANcYqzuzNy7k+aP
hhlfutOG9m8jrwmXd3hopYXlkteEgoy9D9at3UJeC/Ru7iup6Msirw3rfr7h
3TWFnQfaIHCXNmH/Bvb7B6/J84seTU9l5wPk9Xu5+may+msM2PomOZwoZPWi
LjwZu8veOiOcnT9QXvFKrLmKy84nGKVSl1DMCaP9pgfLWw4bJ4Uupv2mD6fi
twX3KCyj/awPWjfvWTTfYf/fDaDhybQ7RioJ5MfB7AoT+YYCVj+Mg4FzY44B
J5O8IbRNSH7X8jyL/HhY7+fDE3htIT8ePFW66/+YtYW8EWydIpdctc4jbwwt
M6JMXDy20rgxpN3uOYKn8mi+MfTuf9lTn7KVPBcmqGq4qzXkkeeCya25uU9v
ZJPnAm+SRvIrrU3kTeDE7r1nbg6mkzeBzjZ5c+vLdeRN4GnlPHGyezx5U+hq
nBmc/7eUvCnMLDgaU10RR94UAs/+qjhcj9VLZtCiLde06V5L3gw+KNRa2XSn
kTeD3r901+5UzSRvDpEVU3tHX84ibw7/dEr2tc/bTN4cjizQak/mbSFvAXYV
jtu6P28mbwHW3BMhp1PY57UAj5SATaMt2fPnwdc4t/GK7tnkeRBRpabeepfl
86AupuLy8DCWbwlv+tpsX4mZt4QRS5+vvR6SSd4SCmGaeYdhBquvYKNZ8qUb
qzew+gtcI05a8peksPoMdFKadjSqxbL6DZ5JvoYlLohk9R0MPMue3hkRyOo/
0Nk91y2o3Ze8FQyeKV4qTTYkbwUx10PrMiw9aH9bQU7+7/0GL+fT/reGyx+l
ytWXfOj3YQ1v9NZclkRTP3jcGj4I53xs3U39HccGZCcLROGWK8nbQHHJi0FF
N1Y/2EDIol9Gxbaw+sEWRr0OWT3mA6t3bGHB4MRXBu7x5G1B+Gf+YKtwFXk7
MHhyQP5yGetf7KDNu+txhqEZq+9BLpIOgEEoq/9hBb92b7VFpIz6A9CZ2vV3
+CZW//OhQ88l7EMI7bd0PqR18O4YvoinPD7UXw6QDS2M++Gb+OAXtSXCOHIl
5QsgbfBdnb9uFOULIOjb/Tvi5VGUL4Drpu/Dh6xYQvkC6GxfUj92TTDlC2DQ
eUsj34bq8yYBTBTrTDRZuYjy7eGT4RVrqGbrtweRsl9KaH045dtDzNq5epPq
ginfHv6q3Kh3ud2T8u1hsm9TvNERC8r/3/y35h0RG2ay/hGio85WvXgwnfWX
MO3UHMfGQvZ8HSDklKIFX7SQ9acgMxEeUrKax/pXWF+5TH1ux3TW30LZlBl2
39T1Wf8LvUZVu248/InWL4Szqsa7fXawfkEIpR9893TpmtH6hXD/ztuWxeME
rP+GhZ/08u6vFrH+HD5M6jwms/Nm/TuUK9Xl1uQbsv4eQtu/ODe3alK+I/Qo
71/8Z4kN5TtCU13qQlc+h56PI3DvzrIYnhPA7hdgZ3jlYY0g1l84gZlKmqdC
qYTdT4CXT1TgJpNQdn8Bpfu9nhfNCGb3G+B630Tprpkfu/8ARcvcZ//Z6Mfu
RyD/vpvnpYwAdn8CVgFT7xhIgtj9CrwyNh+r0s76O2dI7I8rm6o4l93PgGR3
oH/ndG92fwPPex4V+sex5+8Mhy8a1ASdnyz6L7HvcoM=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5372549019607843, 0.7411764705882353, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Openloop\"", "\"hp=300\"", "\"hp=800\"", "\"hp=1400\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.92253382060614*^9, 3.922533827603213*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"d6f85ce7-d640-48ec-bdc9-323ae725ed0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp300", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp400", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp500", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp600", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp700", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp800", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp900", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1100", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1200", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1300", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1400", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7cb0e8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#70a3e0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6497d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#588ad0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4470bf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3b64b6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3357ad\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#2c4ba4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#253e9a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9204197816564407`*^9, 3.920419793288004*^9}, {
  3.9222031672126665`*^9, 3.9222032894211116`*^9}, {3.922203322378257*^9, 
  3.9222033407056503`*^9}, {3.9222033883686953`*^9, 3.922203413223755*^9}, {
  3.9222034697028847`*^9, 3.9222034851494923`*^9}, {3.922203517670237*^9, 
  3.9222035323447747`*^9}, {3.9222035964639845`*^9, 3.9222039102658014`*^9}, {
  3.9222039740897465`*^9, 3.9222039805487266`*^9}, {3.922204136530278*^9, 
  3.9222041535782986`*^9}, {3.9222042191042147`*^9, 3.922204235869207*^9}, {
  3.9222046023821807`*^9, 3.9222046836678915`*^9}, {3.922204823747389*^9, 
  3.922204825227592*^9}, {3.922204855275031*^9, 3.9222048566194563`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3023255813953488, 0.}, {13.440071556350627`, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.609]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5599284436493739, 0.}, {1.4400715563506261`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.5372549019607843, 0.7411764705882353, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5599284436493739`, 0.}, {2.440071556350626, 
                1.370588573191463}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.370588573191463]& , 
            TagBoxNote -> "1.370588573191463"], 
           StyleBox["1.370588573191463`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.370588573191463, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.559928443649374, 0.}, {3.440071556350626, 
                1.4419650713132897`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4419650713132897`]& ,
             TagBoxNote -> "1.4419650713132897"], 
           StyleBox["1.4419650713132897`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4419650713132897`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.4392156862745098, 0.6392156862745098, 0.8784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.559928443649374, 0.}, {4.440071556350626, 
                1.5347736743830418`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5347736743830418`]& ,
             TagBoxNote -> "1.5347736743830418"], 
           StyleBox["1.5347736743830418`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5347736743830418`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.39215686274509803`, 0.592156862745098, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.559928443649373, 0.}, {5.440071556350626, 
                1.5744614264801378`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5744614264801378`]& ,
             TagBoxNote -> "1.5744614264801378"], 
           StyleBox["1.5744614264801378`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5744614264801378`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.559928443649373, 0.}, {6.440071556350626, 
                1.6751700662226545`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6751700662226545`]& ,
             TagBoxNote -> "1.6751700662226545"], 
           StyleBox["1.6751700662226545`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6751700662226545`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.559928443649373, 0.}, {7.440071556350626, 
                1.7436036151036343`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7436036151036343`]& ,
             TagBoxNote -> "1.7436036151036343"], 
           StyleBox["1.7436036151036343`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7436036151036343`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.559928443649373, 0.}, {8.440071556350626, 
                1.7696619535557103`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.7696619535557103`]& ,
             TagBoxNote -> "1.7696619535557103"], 
           StyleBox["1.7696619535557103`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.7696619535557103`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.559928443649374, 0.}, {9.440071556350627, 
                1.84249763168566}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.84249763168566]& , 
            TagBoxNote -> "1.84249763168566"], 
           StyleBox["1.84249763168566`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.84249763168566, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.559928443649376, 0.}, {10.440071556350627`, 
                1.889094058695369}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.889094058695369]& , 
            TagBoxNote -> "1.889094058695369"], 
           StyleBox["1.889094058695369`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.889094058695369, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.559928443649376`, 0.}, {11.440071556350627`, 
                1.9409172765875573`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9409172765875573`]& ,
             TagBoxNote -> "1.9409172765875573"], 
           StyleBox["1.9409172765875573`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9409172765875573`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.559928443649376`, 0.}, {12.440071556350627`, 
                1.992148574719719}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.992148574719719]& , 
            TagBoxNote -> "1.992148574719719"], 
           StyleBox["1.992148574719719`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.992148574719719, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.559928443649376`, 0.}, {13.440071556350627`, 
                2.0235818830407175`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.0235818830407175`]& ,
             TagBoxNote -> "2.0235818830407175"], 
           StyleBox["2.0235818830407175`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.0235818830407175`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.3023255813953488, 0.}, {13.702826475849731`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5599284436493739, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5599284436493739, 
              0.}]}], 
           LineBox[{{13.440071556350626`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {13.440071556350626`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3023255813953488, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.4601307189542484, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.6901960784313725`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2928104575163399, 0.4261437908496732, 
                    0.5856209150326798], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4392156862745098`", ",", "0.6392156862745098`", ",", 
                    "0.8784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.3947712418300654, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.592156862745098`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2300653594771242, 0.3607843137254902, 
                    0.5437908496732027], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34509803921568627`", ",", "0.5411764705882353`", ",", 
                    "0.8156862745098039`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17777777777777778`, 0.2928104575163399, 
                    0.4993464052287582], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.26666666666666666`", ",", "0.4392156862745098`", ",", 
                    "0.7490196078431373`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1542483660130719, 0.26143790849673204`, 
                    0.4758169934640523], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23137254901960785`", ",", "0.39215686274509803`", ",", 
                    "0.7137254901960784`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.2274509803921569, 
                    0.45228758169934646`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.3411764705882353`", ",", 
                    "0.6784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1150326797385621, 0.19607843137254904`, 
                    0.42875816993464055`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.17254901960784313`", ",", "0.29411764705882354`", ",", 
                    "0.6431372549019608`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.16209150326797386`, 
                    0.40261437908496733`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1450980392156863`", ",", "0.24313725490196078`", ",", 
                    "0.6039215686274509`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.922203834360874*^9, 3.9222041549101086`*^9, 
  3.9222046884316454`*^9, 3.9222048731509495`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"453b7a81-b45c-4750-b7ae-a91aaa15a774"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp300", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp400", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp500", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp600", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp700", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp800", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp900", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1000", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1100", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1200", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1300", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1400", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7cb0e8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#70a3e0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6497d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#588ad0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4470bf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3b64b6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3357ad\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#2c4ba4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#253e9a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.920420056632622*^9, 3.920420065090315*^9}, {
  3.9222273404381895`*^9, 3.9222274302758923`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3023255813953488, 0.}, {13.440071556350627`, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.609]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5599284436493739, 0.}, {1.4400715563506261`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.5372549019607843, 0.7411764705882353, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5599284436493739`, 0.}, {2.440071556350626, 
                1.3701102324034098`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3701102324034098`]& ,
             TagBoxNote -> "1.3701102324034098"], 
           StyleBox["1.3701102324034098`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3701102324034098`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.559928443649374, 0.}, {3.440071556350626, 
                1.4707696185019725`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4707696185019725`]& ,
             TagBoxNote -> "1.4707696185019725"], 
           StyleBox["1.4707696185019725`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4707696185019725`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.4392156862745098, 0.6392156862745098, 0.8784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.559928443649374, 0.}, {4.440071556350626, 
                1.5457431718322923`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5457431718322923`]& ,
             TagBoxNote -> "1.5457431718322923"], 
           StyleBox["1.5457431718322923`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5457431718322923`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.39215686274509803`, 0.592156862745098, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.559928443649373, 0.}, {5.440071556350626, 
                1.6069600128631178`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6069600128631178`]& ,
             TagBoxNote -> "1.6069600128631178"], 
           StyleBox["1.6069600128631178`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6069600128631178`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.559928443649373, 0.}, {6.440071556350626, 
                1.6911387022429571`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6911387022429571`]& ,
             TagBoxNote -> "1.6911387022429571"], 
           StyleBox["1.6911387022429571`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6911387022429571`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.559928443649373, 0.}, {7.440071556350626, 
                1.749525235928795}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.749525235928795]& , 
            TagBoxNote -> "1.749525235928795"], 
           StyleBox["1.749525235928795`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.749525235928795, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.559928443649373, 0.}, {8.440071556350626, 
                1.8123837857889455`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8123837857889455`]& ,
             TagBoxNote -> "1.8123837857889455"], 
           StyleBox["1.8123837857889455`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8123837857889455`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.559928443649374, 0.}, {9.440071556350627, 
                1.8886020034782904`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.8886020034782904`]& ,
             TagBoxNote -> "1.8886020034782904"], 
           StyleBox["1.8886020034782904`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.8886020034782904`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.559928443649376, 0.}, {10.440071556350627`, 
                1.9283618603507833`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9283618603507833`]& ,
             TagBoxNote -> "1.9283618603507833"], 
           StyleBox["1.9283618603507833`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9283618603507833`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.559928443649376`, 0.}, {11.440071556350627`, 
                1.978086388308851}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.978086388308851]& , 
            TagBoxNote -> "1.978086388308851"], 
           StyleBox["1.978086388308851`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.978086388308851, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.559928443649376`, 0.}, {12.440071556350627`, 
                2.021489395124907}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.021489395124907]& , 
            TagBoxNote -> "2.021489395124907"], 
           StyleBox["2.021489395124907`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.021489395124907, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.559928443649376`, 0.}, {13.440071556350627`, 
                2.0730056965579444`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.0730056965579444`]& ,
             TagBoxNote -> "2.0730056965579444"], 
           StyleBox["2.0730056965579444`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.0730056965579444`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.3023255813953488, 0.}, {13.702826475849731`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5599284436493739, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5599284436493739, 
              0.}]}], 
           LineBox[{{13.440071556350626`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {13.440071556350626`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3023255813953488, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.4601307189542484, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.6901960784313725`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2928104575163399, 0.4261437908496732, 
                    0.5856209150326798], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4392156862745098`", ",", "0.6392156862745098`", ",", 
                    "0.8784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.3947712418300654, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.592156862745098`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2300653594771242, 0.3607843137254902, 
                    0.5437908496732027], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34509803921568627`", ",", "0.5411764705882353`", ",", 
                    "0.8156862745098039`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17777777777777778`, 0.2928104575163399, 
                    0.4993464052287582], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.26666666666666666`", ",", "0.4392156862745098`", ",", 
                    "0.7490196078431373`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1542483660130719, 0.26143790849673204`, 
                    0.4758169934640523], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23137254901960785`", ",", "0.39215686274509803`", ",", 
                    "0.7137254901960784`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.2274509803921569, 
                    0.45228758169934646`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.3411764705882353`", ",", 
                    "0.6784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1150326797385621, 0.19607843137254904`, 
                    0.42875816993464055`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.17254901960784313`", ",", "0.29411764705882354`", ",", 
                    "0.6431372549019608`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.16209150326797386`, 
                    0.40261437908496733`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1450980392156863`", ",", "0.24313725490196078`", ",", 
                    "0.6039215686274509`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9204200662366543`*^9, 3.9222274513388395`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"fddb3009-38bd-4b68-bef3-639b0abd51c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp300", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp400", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp500", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp600", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp700", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp800", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp900", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1100", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1200", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1300", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1400", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7cb0e8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#70a3e0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6497d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#588ad0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4470bf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3b64b6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3357ad\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#2c4ba4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#253e9a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919872218019006*^9, 3.919872325063958*^9}, {
   3.92003152841066*^9, 3.920031544418577*^9}, 3.92003157737006*^9, {
   3.920031609581951*^9, 3.920031632137554*^9}, {3.9200316878072987`*^9, 
   3.920031914411047*^9}, {3.920031954495573*^9, 3.920031972751745*^9}, {
   3.920032605125719*^9, 3.920032638021221*^9}, {3.9201276628019695`*^9, 
   3.920127676161476*^9}, 3.9222274816401167`*^9, 3.92222753112379*^9, {
   3.922227562392333*^9, 3.9222276073013277`*^9}, 3.922227642884014*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3023255813953488, 0.}, {13.440071556350627`, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.609]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5599284436493739, 0.}, {1.4400715563506261`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.5372549019607843, 0.7411764705882353, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5599284436493739`, 0.}, {2.440071556350626, 
                1.5575705013660288`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5575705013660288`]& ,
             TagBoxNote -> "1.5575705013660288"], 
           StyleBox["1.5575705013660288`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5575705013660288`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.559928443649374, 0.}, {3.440071556350626, 
                1.6888469757206372`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6888469757206372`]& ,
             TagBoxNote -> "1.6888469757206372"], 
           StyleBox["1.6888469757206372`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6888469757206372`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.4392156862745098, 0.6392156862745098, 0.8784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.559928443649374, 0.}, {4.440071556350626, 
                1.822519792864791}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.822519792864791]& , 
            TagBoxNote -> "1.822519792864791"], 
           StyleBox["1.822519792864791`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.822519792864791, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.39215686274509803`, 0.592156862745098, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.559928443649373, 0.}, {5.440071556350626, 
                1.90978579866872}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.90978579866872]& , 
            TagBoxNote -> "1.90978579866872"], 
           StyleBox["1.90978579866872`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.90978579866872, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.559928443649373, 0.}, {6.440071556350626, 
                2.019865503289092}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.019865503289092]& , 
            TagBoxNote -> "2.019865503289092"], 
           StyleBox["2.019865503289092`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.019865503289092, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.559928443649373, 0.}, {7.440071556350626, 
                2.1081410211417593`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.1081410211417593`]& ,
             TagBoxNote -> "2.1081410211417593"], 
           StyleBox["2.1081410211417593`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.1081410211417593`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.559928443649373, 0.}, {8.440071556350626, 
                2.191571428739266}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.191571428739266]& , 
            TagBoxNote -> "2.191571428739266"], 
           StyleBox["2.191571428739266`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.191571428739266, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.559928443649374, 0.}, {9.440071556350627, 
                2.2661366703017665`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.2661366703017665`]& ,
             TagBoxNote -> "2.2661366703017665"], 
           StyleBox["2.2661366703017665`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.2661366703017665`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.559928443649376, 0.}, {10.440071556350627`, 
                2.3628956526821208`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.3628956526821208`]& ,
             TagBoxNote -> "2.3628956526821208"], 
           StyleBox["2.3628956526821208`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.3628956526821208`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.559928443649376`, 0.}, {11.440071556350627`, 
                2.44907238352319}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.44907238352319]& , 
            TagBoxNote -> "2.44907238352319"], 
           StyleBox["2.44907238352319`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.44907238352319, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.559928443649376`, 0.}, {12.440071556350627`, 
                2.510955265271424}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.510955265271424]& , 
            TagBoxNote -> "2.510955265271424"], 
           StyleBox["2.510955265271424`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.510955265271424, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.559928443649376`, 0.}, {13.440071556350627`, 
                2.5865168674953254`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.5865168674953254`]& ,
             TagBoxNote -> "2.5865168674953254"], 
           StyleBox["2.5865168674953254`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.5865168674953254`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.3023255813953488, 0.}, {13.702826475849731`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5599284436493739, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5599284436493739, 
              0.}]}], 
           LineBox[{{13.440071556350626`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {13.440071556350626`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3023255813953488, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.4601307189542484, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.6901960784313725`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2928104575163399, 0.4261437908496732, 
                    0.5856209150326798], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4392156862745098`", ",", "0.6392156862745098`", ",", 
                    "0.8784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.3947712418300654, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.592156862745098`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2300653594771242, 0.3607843137254902, 
                    0.5437908496732027], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34509803921568627`", ",", "0.5411764705882353`", ",", 
                    "0.8156862745098039`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17777777777777778`, 0.2928104575163399, 
                    0.4993464052287582], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.26666666666666666`", ",", "0.4392156862745098`", ",", 
                    "0.7490196078431373`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1542483660130719, 0.26143790849673204`, 
                    0.4758169934640523], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23137254901960785`", ",", "0.39215686274509803`", ",", 
                    "0.7137254901960784`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.2274509803921569, 
                    0.45228758169934646`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.3411764705882353`", ",", 
                    "0.6784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1150326797385621, 0.19607843137254904`, 
                    0.42875816993464055`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.17254901960784313`", ",", "0.29411764705882354`", ",", 
                    "0.6431372549019608`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.16209150326797386`, 
                    0.40261437908496733`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1450980392156863`", ",", "0.24313725490196078`", ",", 
                    "0.6039215686274509`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9198722714917135`*^9, 3.91987232854905*^9, 3.9200311930229416`*^9, 
   3.920031613297041*^9, {3.9200317717542267`*^9, 3.9200317871113186`*^9}, 
   3.9200319171373215`*^9, 3.920031977724367*^9, 3.920032646310631*^9, {
   3.920127671308077*^9, 3.9201276772160606`*^9}, 3.922227644802482*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"e767967a-0051-47be-af90-d4c98776e674"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp300", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp400", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp500", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp600", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hptyp700", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"hptyp800", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp900", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp1000", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"hptyp1100", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1200", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{"hptyp1300", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp1400", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.3"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", "\"\<Metabolite Productivity\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7cb0e8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#70a3e0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6497d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#588ad0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4470bf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3b64b6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3357ad\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#2c4ba4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#253e9a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92003220650638*^9, 3.9200322257601585`*^9}, {
   3.9200325059356403`*^9, 3.9200325534959755`*^9}, {3.92003265656341*^9, 
   3.920032671245369*^9}, {3.9201276822552185`*^9, 3.920127690017145*^9}, {
   3.922227700344756*^9, 3.9222277257649813`*^9}, {3.9222277614607725`*^9, 
   3.922227874580921*^9}, 3.9222279136850986`*^9, {3.9222279672553525`*^9, 
   3.922228058353634*^9}, {3.9225283807063684`*^9, 
   3.922528452498189*^9}},ExpressionUUID->"493d0515-9620-4c23-8daf-\
cc57dd308aba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3023255813953488, 0.}, {13.440071556350627`, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.609]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5599284436493739, 0.}, {1.4400715563506261`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.5372549019607843, 0.7411764705882353, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5599284436493739`, 0.}, {2.440071556350626, 
                1.1195037978568332`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1195037978568332`]& ,
             TagBoxNote -> "1.1195037978568332"], 
           StyleBox["1.1195037978568332`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1195037978568332`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.559928443649374, 0.}, {3.440071556350626, 
                1.142455307105137}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.142455307105137]& , 
            TagBoxNote -> "1.142455307105137"], 
           StyleBox["1.142455307105137`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.142455307105137, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.4392156862745098, 0.6392156862745098, 0.8784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.559928443649374, 0.}, {4.440071556350626, 
                1.1643876454413942`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1643876454413942`]& ,
             TagBoxNote -> "1.1643876454413942"], 
           StyleBox["1.1643876454413942`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1643876454413942`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.39215686274509803`, 0.592156862745098, 0.8470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.559928443649373, 0.}, {5.440071556350626, 
                1.1559229834047517`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1559229834047517`]& ,
             TagBoxNote -> "1.1559229834047517"], 
           StyleBox["1.1559229834047517`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1559229834047517`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.559928443649373, 0.}, {6.440071556350626, 
                1.176124217105041}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.176124217105041]& , 
            TagBoxNote -> "1.176124217105041"], 
           StyleBox["1.176124217105041`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.176124217105041, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.559928443649373, 0.}, {7.440071556350626, 
                1.1826156947868405`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1826156947868405`]& ,
             TagBoxNote -> "1.1826156947868405"], 
           StyleBox["1.1826156947868405`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1826156947868405`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.559928443649373, 0.}, {8.440071556350626, 
                1.1860268908471323`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1860268908471323`]& ,
             TagBoxNote -> "1.1860268908471323"], 
           StyleBox["1.1860268908471323`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1860268908471323`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{8.559928443649374, 0.}, {9.440071556350627, 
                1.1981872049871412`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1981872049871412`]& ,
             TagBoxNote -> "1.1981872049871412"], 
           StyleBox["1.1981872049871412`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1981872049871412`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{9.559928443649376, 0.}, {10.440071556350627`, 
                1.1944307694876657`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1944307694876657`]& ,
             TagBoxNote -> "1.1944307694876657"], 
           StyleBox["1.1944307694876657`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1944307694876657`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{10.559928443649376`, 0.}, {11.440071556350627`, 
                1.2113691359362013`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2113691359362013`]& ,
             TagBoxNote -> "1.2113691359362013"], 
           StyleBox["1.2113691359362013`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2113691359362013`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{11.559928443649376`, 0.}, {12.440071556350627`, 
                1.2031660646092242`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2031660646092242`]& ,
             TagBoxNote -> "1.2031660646092242"], 
           StyleBox["1.2031660646092242`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2031660646092242`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.609]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{12.559928443649376`, 0.}, {13.440071556350627`, 
                1.2140793459671941`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2140793459671941`]& ,
             TagBoxNote -> "1.2140793459671941"], 
           StyleBox["1.2140793459671941`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2140793459671941`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.3023255813953488, 0.}, {13.702826475849731`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5599284436493739, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5599284436493739, 
              0.}]}], 
           LineBox[{{13.440071556350626`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {13.440071556350626`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3023255813953488, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {0, 1.3}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite Productivity\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.4601307189542484, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.6901960784313725`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2928104575163399, 0.4261437908496732, 
                    0.5856209150326798], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4392156862745098`", ",", "0.6392156862745098`", ",", 
                    "0.8784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.3947712418300654, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.592156862745098`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2300653594771242, 0.3607843137254902, 
                    0.5437908496732027], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34509803921568627`", ",", "0.5411764705882353`", ",", 
                    "0.8156862745098039`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17777777777777778`, 0.2928104575163399, 
                    0.4993464052287582], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.26666666666666666`", ",", "0.4392156862745098`", ",", 
                    "0.7490196078431373`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1542483660130719, 0.26143790849673204`, 
                    0.4758169934640523], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23137254901960785`", ",", "0.39215686274509803`", ",", 
                    "0.7137254901960784`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.2274509803921569, 
                    0.45228758169934646`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.3411764705882353`", ",", 
                    "0.6784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1150326797385621, 0.19607843137254904`, 
                    0.42875816993464055`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.17254901960784313`", ",", "0.29411764705882354`", ",", 
                    "0.6431372549019608`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.16209150326797386`, 
                    0.40261437908496733`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1450980392156863`", ",", "0.24313725490196078`", ",", 
                    "0.6039215686274509`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9200323564264507`*^9, 3.9200325180029774`*^9, 3.9200325558445263`*^9, {
   3.9200326679723644`*^9, 3.9200326717039013`*^9}, 3.9201276919363537`*^9, 
   3.922227916868256*^9, {3.922227995181309*^9, 3.9222280590095925`*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"47c7c938-6c30-4d56-b574-10d7d076ea69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp300", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp400", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp500", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp600", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp700", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp800", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp900", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1000", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1100", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1200", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1300", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1400", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#89bdef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#7cb0e8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#70a3e0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6497d8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#588ad0\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4e7dc8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4470bf\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3b64b6\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#3357ad\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#2c4ba4\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#253e9a\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9225283197820244`*^9, 3.922528378753889*^9}, {
  3.922528510150243*^9, 3.9225285926329956`*^9}, {3.9243624718251867`*^9, 
  3.9243624894416065`*^9}, {3.92436254068606*^9, 3.9243625733189983`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"210bbccc-b140-42aa-a24c-182946b9a882"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5372549019607843, 0.7411764705882353, 0.9372549019607843]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUcx/G/DEkIzuPg4MCDe4R75rg7nlzG/7ujpdMYCstWc0sIGiZb
aMsiLWk+0UZOzJI0k7Ra/kWmFuuSSNj0pCZoD397pLFGyBCLQ09PNrTsvrP5
+W3//ffd9/V9G2qer6yLEQSh7d/v7h/f4/+9s2Jn4mhzV91Of3SWxcHJ3fpw
fIc/qkbEY6m6l+3iEd7/KR5fp+zVtZ/wH5XuvgnxE9WkqVzxOfspUTsk9QwK
vbyfFitbljoOd/bzfVgciq1/97LqLPuIeGp86ltP3wD7GdEZKZ+d7j7Pflb8
IK7q14r1F9kL9L3p4cktXd/xfg7R1WV7Q2qZ72PobeWehvPHf2QfSyd1kU7f
tl/Yz6V9fX3bPt05zD6O9i1cWiM0jLCfRw+tvLMrWPQH+3g6fXBNm0s3yj6B
1jacib/iGmOfSLXKE4NC3Tj7JBrY+9qajv4J9grSvvrK8IsVV9krybw5N/XD
mCneKynj9fWhVU0hvk+mpxdXN3aqr7FX0eHyoYrTl66zV9HU1oVj/T032KfQ
6r+oNRCMsE+ldsOjx0ZnZtin0jOnhnW/V82yV9PtG3TzQfkO+zQym8LXmv1z
yqI+jSJt5y7+HYgpi/p0+mgk7aXrT8SWRb2GNNtzXJXGOPYaCrwRtLnnz2Of
QSuuLD85V5PAPpOc9fpI3fJE9pmk33CoPaFLwX4BFWyeXpt0QMleS/ovX9id
fTOZvZY+Vhkj1sYU9lkUUP/01MYkNftsOupteXPBhTT22fRzljmY8ZmGvY6W
lGaNtfZmstfTO3GLdj03ruW9ng7dGlh2oEzH93p6oGpHbXhcz95AQjizZ9ES
I3sDpacMZgXPmdgbqP6Lxq++fjaHvZGadL+977da2BtJMbmqaXi+jb2RHnmv
pLEj2cHeRIHa6sdul7rYm2h16Y4tmj1u9iayht76YWuih72ZNlWtTFes87I3
0/5NlpYNER97MxkvVF/uPljIPodqJs6EnqwuZp9D32y/lNfdWsL+/znqc+/N
UZ8LPhe8BbwFvAW8FbwVvBW8DbwNvA28HbwdvB28A7wDvAO8E7wTvBO8C7wL
vAt8Hvg88Hng3eDd4N3g8+/f2/PhPv9+3wxeAi+DFzzQ90DfA33wEngZvOCF
vhf6XuiDl8DL4AUf9H3Q90EfvAReBi8UQL8A+gXQBy+Bl8ELhdAvhH4h9MFL
4GXwQhH0i6BfBH3wEngZvFAM/WLoF0MfvAReBi+U3Jv/AXYIlUo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]], 
        LineBox[CompressedData["
1:eJxdzHtMU3cUwPEr6KxAV6E8O1592helT1pc9B5bdUtkVbeBW3hofWz7Y5lG
ISbbokRtl+BiBoahIkgiM/HqlrgIJo5NYcVAp4LCDdH4wGElMGI6GxSLiLqe
uHh+yc3Nyfmcr3Tj1g+3xDAMU/vye/Wnr/i/181Whloubi0+4IzOPNvqaPU0
zG1xRtUw+1tNT69oyUncB1mjX9h6rO6M8xT36o2zfmVXTeBRO/oQG/hqvfjs
YAfuH7GNvdz4yoOdeD/Jfj5T1No/6kc/xZ6eLfrT93UP+gjrM6Son6y6jH6G
zdu5+ocpYz96BjKKq9d4PddxPwfigoN1Y+2DeB8D8oryvh77EPq5UKJ27Xs8
egP9PFg+Hhf64Oot9G+BtbDk5nDwLnoBDF0yl245fA/9Arg7FrvWUTaCPg4u
Surrty8Nok8A18o0S+OyUfRCCG7qCNR+OYb+bWioE5el+f9BvxB+aVpR0+t+
iPuF8HHFc88ObwjvE8GtPy4RTP+LPgnKlh2vD38XRp8EF/IndggMk+jF0PT3
/d0VocfokyF+g6qtamAKfTKsL9/uuD0SQZ8CS62/N5eqZtCnwniWb9pSO4s+
FZomDzn6k+e4oj4NflayNZ6dMa6oTwf94XuVhZFYV9SnQ4kpZ3ZXwzz0GeCp
/sOmXzMfvQQ+Grqjm69cgF4C3Dq3rEMej/4dOJr447uaIiH6TFju3q/JaRah
z4SA78L+bmEi+ix48sXUNsGmJPTZwD3Y3f7rdTH6bMhKPv+0siIFfQ6UdooX
1wnS0OeCt2FPduRaOu5z4ew3nV0nuiR4nwsHL00Eygcy0Uth27faZwNMDnop
bM5qnAifzkUvhao97y/xhqToZSBibzk73XL0MvBmBBP9AQV6GYycu9HWt1mF
Xg6aFWbf2mw1ejlIPH8dCkc06OXwieLT78URHXoF+Cx39h5INaBXwDqV0lal
M6JXwN4rDxLaNpjQK6Hl6PCun86Y0Suhed9DUbzEil4Jz7rvy6aP2dCrQHjT
3ed8z45eBQnS8JUjokL0KohdffXIZ82L0S96PUf9/3PULyJeTbyaeDXxGuI1
xGuI1xKvJV5LvI54HfE64vXE64nXE59HfB7xecQbiDcQbyA+n/h84vOJN765
1xrJvfFNX008RzxPPGMifRPpm0ifeI54nnjGTPpm0jeTPvEc8TzxjIX0LaRv
IX3iOeJ54hkr6VtJ30r6xHPE88QzNtK3kb6N9InniOeJZwpIv4D0C0ifeI54
nnjGTvp20reTPvEc8TzxjOP1/ALGSlhT
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4392156862745098, 0.6392156862745098, 0.8784313725490196]], 
        LineBox[CompressedData["
1:eJxdzH9M1HUYwPGvCP5AheO848cdwh33A4+7435yUOi+T8cWLDPxHPyhV1BE
JOBawWQL0msNrd2iWC5aKplOt76GKTqCBfgDPCmbP9LvRYHOMPDA2HlXep4I
ld2znM9n++67Z8/rectfecNRGcUwTOu/36M/fSX/vbNsbUP7z3xliz0y86yv
pebcw8X77BF1g00V/xBYaPgK9+Os4WJzfOv7x+yHuUdvip08ebKo8EIX+jss
e9p8/Jq7F/dBduT2ta7astN4f5cV2t2umhOD6O+zb81+U2TLH0L/gO3wNG88
EjqPfpb1efOfrR67iJ6BdfcnQ0vm/4T7eSAqrUvY9vRVvI+C66vfLn7xcy/6
aFCMbY09vOIX9DFgmqtMGf5xBP0CmBnY+/qZr6+jXwTbqw52fDZxA/1iuDBx
STf0yRj6WGAKmXtzzt/RL4WNf/UF3rRPoF8GVf27pCfsPvRxYGGUhqHNU+gF
MFPvGC7q+gP3AvDu7+4fNfrxPgFqP5JtveK/g14Ix+tXn28qD6IXgrDVNp0z
/if65bBv7ao16ua76EVwOe7mg71sCL0IygN91leTwujFUF62X7lLMIM+EeqW
3D7woWIWfSJMTs8rk1f+jT4JSl/z+Rr8TEHEJ4OHCdabC6MKIj4Z5E0Wf8W3
8wsiPgXc3ykEg3kx6CXAxbTlPXdlAXoJbLi5bUePexF6KYzuqQv3VcWiT4Wd
R3de+vXlpehTocK3qTvOFYd+BUg7vSt3VAjQp4F1sM8UaE9Anwah4mLXZr8Q
fTrccq5TOUtF6GUgLv/CPXZZjHsZuHq3tDVWJ+G9DDzT/Jbv5Sno5aD0vNDe
EZagl8ND0fB7ufdS0csh1BQ//ltyOvoMcITFVw8ckaHPgN3LnnH035Kjz4CD
1V6nL0eBXgGSj5d7o9uV6BXgrInWvCRXo1dAniQ+PelYJnoltASHRjo3adAr
oVdU7Dyl1qJXwvZDs+960vXoVaA69PyoFAzoVdBZsjZm6owRvQpKdD3BopAJ
vRrOaqcyEsCCXg2OkXMLuS+t6NXwaeHc+gapDX0mDLQlvtPI5aLPhKMd4cbu
DU+hz4QPTkm4QFo++pWgD65ZP9CzCv3jOeIfzxGvIV5DvIb4LOKziM8iXku8
lngt8TridcTriNcTrydeT3w28dnEZxNvIN5AvIF445P7LCO5Nz7pXcRzxPPE
MybSN5G+ifSJ54jniWfMpG8mfTPpE88RzxPPWEjfQvoW0ieeI54nnrGSvpX0
raRPPEc8TzyTQ/o5pJ9D+sRzxPPEMzbSt5G+jfSJ54jniWdyST+X9HNJn3iO
eJ54Ju//+R/YKIJA
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.592156862745098, 0.8470588235294118]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUYwPF/eOKBL+C9wQFyr7wdd9wb3NEdx/+RK1sglgwJgmrKYKUj
VqYpupSh4UB0DOxFaVLUjMOB6LqKLJJFsqwRwR+YoMLipuSYJ0M8ErXsntl8
ftt//z17Ps9XsaU8pySAYZj6f79Hf/o2/fd62XO2Motv55EM/8yxX36a7xVL
mzP8aoIdhIqXfeZW3HtY9diQ4syBzow216P3Fztd7N7j6HGj97K1YevHM7ee
x/0s+1z15xWd9gt4f4f9RNs6+fGOn9D72NjfbWc/HL+I/m9WLgrft2HHJfT3
WY/2+fhn7P3oGbi2mRexsXkA909B10KutOHnQbwPgFMhhbZ4yTB6Hhxf9Y6x
r2oU/VJ4L3PTMYFkDH0glF9r2J47fAU9H/aUyr6e2jyBPggaM8y9Eu8k+mDY
UPFa44Xjf6JfAW7GlpVV5EG/Eo6NCvL2Pn0d/SpYqvOE5Fmm0YdCp6jjQVr+
TdyHwqthsf0fnZzB+9UwfqPu1ovBXvQCuHRlIOxEwW30Akj09meOfD+LXghz
lbJFvnUOvQgy3z0snO27g14EzK7QCev2u+jFwF9tX/5B6gJ6CfB7893Fqnvo
JbD+xtA9neE++jBI/66rNq3oIfpwqJe3L3MPM06/D4fisnN5RZIAp99LIW3+
9Jhw2xKn30dA9LeN3c5hHvoIeFazdnGuMBB9JMwNqsW3Fpehj4JtBd09Ad8E
oY+Cq+lfnG85uhz9GtAJTsmbD61EHw3dpdkzlU0h6KOBs/Y3r5gORS+Dz+bT
XtBGCNDL4eDFXUdqtghxL4f8bGHkwo8ivJeDaefWqn0OCXoFtDSt7esYCkOv
AFsgE+Q7LEWvAI3j/aCmgkj0SnDf7ZjZbV+DXglnJl8qabDJ0CvBU6+vKWmX
o1dBW073RsOIAr0Kzk5F/dIZrkKvgmqHeMzwthq9GpyS6lLeVAx6NQxwtety
3oxDr4bG1qa2MlEC+hhIGritDP5Dgz4GLg/asn9t06KPgYNVuh9mTiahj4X2
uprrLYUG9LGwP6tUX7nXiD4WXtnNF2d8ZUIfB+qjZfMVS5LRx8GB3+oUnjdS
0MfB65elsp4ZC/p4mBfwHpyuTkUfDw5ZR3m51YY+Ht4adSpHHtrRJ0CX15fd
dtOBPgHqrvbmTkjT0f8/+73m8ez3GuI1xCcSn0h8IvFa4rXEa4nXEa8jXkd8
EvFJxCcRrydeT7yeeMOTe42B3Bue9PuJdxHPEc8YSd9I+kbSJ95FPEc8YyJ9
E+mbSJ94F/Ec8YyZ9M2kbyZ94l3Ec8QzyaSfTPrJpE+8i3iOeCaF9FNIP4X0
iXcRzxHPWEjfQvoW0ifeRTxHPGMlfSvpW0mfeBfxHPFM6uP5H9k1hr0=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUYwPGXOzzjjwxOOIiTg+O4P8DB3XHce/6L95FDEVlFLK9prAIy
V1SSkYsJlTEgy4G5QkVvMIese7W8JquVBbsl5+RfirwUJIohpXAGCSTSHGX3
zObz2969e/Z8nq+yaEf+NhHDMB//+93/07f5v9fJlZpP1HXm12X6ZoHTe6zP
zUmaM31qlGMOzR55P92J+3Guslrt+qTmy8wT/P03wUXVd5eNeL5CP81VwNqc
oqe+w/1troUP2p8b58b7Oc6uMr7iyj2Lfp5zFlbmFH5xDv0ClxPS2T7KdaO/
xxW8WFEZtdCHnoG934OzfedF3PuBuzZr59Z9l/BeBFX28ilrp4DeHyyzAS9v
ivwZ/RKIyRdvat07jF4CjWeaVGPKEfSPQG7b7yMpU1fRB8DGiKAPn37zGvpA
aGMGqs8uHUMfDGs09Z86Tl1HvwxMioOSSyW/oQ+BUTu76pvsG+hD4Yjj69eO
Z03gPhT2cOePLyv24n0YrPb2ipzH/kAvhbqilipHzTR6KQglvOFAz5/ol8Pk
+Mkhp24GfTjcyosdZo/Oog+HvkVXg1f7F/oIcLd6WFfXHfQy8Mt68m73nrvo
ZSArlHfI7X+jj4Qt2QUZ09n30EfB6fHW56OfXUQfBbeunG6X/MjYfP5RyNBl
W2xLRDafj4YzpwKZtx4X23w+GrYNq8r0Tn/0coi0Ff+QrJCgXwGsvrFZ0boU
/Qrwm3R9e3N9APoYqJqPFPkzQegVsCPn7Z7SgWD0CnD3hFeFng9BHwt3+Inl
qjdC0cdBxWSzVNEQhvs46BMvdOX1SvE+DoJ3mWBEFo5eCXO2feKusgj0Sii+
8IHr9Zsy9EroeHfIO1kehT4e1m1PW3k0Jhp9PARGdNTJBuXo40H0asjUwGcx
6FVQP5a3WN4Ui14F59jBrf1X4tCr4GptiIaVxKNPAK/HPlS5ToU+AbZ3Hu5V
1iWgT4A20TuH2Ak1ejU8U6o9MFOgRa8G60+PNfRf16FXw8RH09f8apPQa0Dv
3G/v2KhHr4Gwpt5shyYVvQaM7tAgdYQRvRbKBCb4cqIJvRZu+7k/v/xEGnot
bC7ZNV9dY0avg92exqSX+tPR6+DXGLnmFwOLXgfDjjXrHces6BNhy42TL7Qk
r0KfCC16h0R6cTX6RKjYcCEr6+Ba9EkwkCqdsezOQJ8EzZHi1sBBDv3/s88n
P5h9Ppn4ZOL1xOuJ1xOfQnwK8SnEpxKfSnwq8QbiDcQbiDc+vE8yknvjw/49
4nniBeIZE+mbSN9E+sTzxAvEM2mkn0b6aaRPPE+8QDxjJn0z6ZtJn3ieeIF4
Jp3000k/nfSJ54kXiGcspG8hfQvpE88TLxDPsKTPkj5L+sTzxAvEM1bSt5K+
lfSJ54kXiGdWPpj/AdjXMwc=
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUYwPF/QAjyEuB1wHHC3cG9cBxwrxyQ+H94UdcCyUJsYZIYKgYq
CbmZI1itGSZJYESYypvJgQsicYEOQhgwSjj1rwspRL1CmBQCDkG07J7ZfH7b
f/89ez7PV5y267V0G4Zhiv/9nvzpW//f62ZLtJ/0l2UVxVhnjh3Or1BtWnIi
xqpusJcEddPB8jrcW1izKOf++P6mmHrTkzfOtjYIa98814L+b/Y9y5Hs1WHn
cH+P7RhQLBx1+wnvZ9n5tIZUF+hCP8fyw+8oLh7vQT/PvvBG5k6Fdz/6Rdan
Inq6t/0iegZWlB4/VRVvxv1z0BRS9PrniZfx3gbeWjNcrMvm0NvBcN2+K3sa
r6F/HvyvlEineEPo7eHXj7WtimPD6B2gWTgkvLl2BL0j5D1cP6fhj6JfClXu
Se/oy2+id4aUPs/Kderb6F0g90ALJ/vdgt4VChw9DJU1f6J3g6TmoNgPD97B
vRucnTN2BhRO4L07xG/ZFz5SeRe9B9QulKdmXv8LvQdMHS7NmvKdQr8MPrMd
tJVsvYeeB4eiiqLZzmn0PLjlcGjHCf0s+hfh1fpTUdvO3EfPhxqfB136hDn0
fIiLNm8w2M2j9wRec5pt46UF9F7Au/rpregfF9F7gdOOP74KPv8YvTdM2u1e
uWKGibV6AWxPPXOj3s8m1uoF8CiS289PtY21eh9o80mypPxgh14ICwPVP/d4
26MXwp6Npu+LS5egXw5erWqHQLkjel8omKpwumteit4XxvvdRj844ozeD7Sh
cYKybFf0Iuie8Cy3j3DDvQhcm/jpzMvueC+Cuczuwm1ZHujFkLCm/pj05DL0
YmjMj5mfmeShF8O4tGfk+lo+egns3SDyeLvdE70E+joUcX2veKOXQPLmC5Lv
JgXo/aFgo21ubYMQvT+c1Vp2jRX4oveH1m83a35ZKUIfAD5iQbI5QYw+ACyt
iTqH3RL0AdA5oHmUXuOPXgpd1eaPJsYC0EshZSzDvj1Khl4K71Yv6p3r5Ohl
0BjhlxeuDEQvg0T1oM377Ur0MuiWrUsvyVGhl4Mx8ms7waoQ9HJY3VL9pYuX
Gr0cKoMOSjpEGvQKaB8ovOAXoUWvgPyc3gdHt+jQK+Bqm9MqXq0efSCcbFvs
H50xoA+EztMZM4eTjegDwX7v7cFNveHolVAWn/FQmxiJXgmn47lrQ7MvoVfC
zqrLeb+dj0IfBI9VuV9sr2HRB4HzwFbj8m8A/f+z1auezlavIl5FfDDxwcQH
Ex9CfAjxIcSHEh9KfCjx6mf3SjW5Vz/r84k3Ec8Rz2hIX0P6GtIn3kQ8Rzyj
JX0t6WtJn3gT8RzxjI70daSvI33iTcRzxDN60teTvp70iTcRzxHPGEjfQPoG
0ifeRDxHPBNG+mGkH0b6xJuI54hnjKRvJH0j6RNvIp4jngl/Ov8DSc06TQ==

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUYwPE/IHTH+5u8dcAd3MG9eAfH2wEh/8c7xYazFxDXCigU6KYC
KUFMK1yUEx0Wlgi0DMZMPMNWvBQKFtsJSIFRHYgYEEjIWycGQzzRsntm8/lt
//337Pk8X8GOvKQsS4Zhyv/9Hv3pS/nvXWZPwK70lpePqc2zgTUV8AvjTZ+r
zWqMPakVCK7ansX9JPvukeeKsjK/Vp/TPXozbJBKeL27ogX9bbY1pAeMtm24
v8NK8i8eKvvrB7xfYsWbrSqr3fTo77Kb22Z3ybK70N9j9aeP9E7M9aBfZTtt
XqrU1vWhZ2A6rsDpwsZ+3FtAb60o89KWX/HeEuLls2OprxvQr4GPFxqsZ6oH
0VsDf+u383rjEHobyMl47ehq9g30HDhR1NeZYRpBz4UW7yaNbHAMvS04TZd8
0powjt4ems5syjL2TqB3AFNih7BBO4neEUJ5NQmHAqbQO4Mmo6NveukW7p3h
g2SP/VfGZ/DeBYqD/xjo+nMOvStYWeaVRtgZ0bvCaGfInF39bfRuwG3THG8b
XkDvDo61S6Ns4N/o3aHRYbB64cAi+rUQeaakK2VyCb0HuHVwSgsyl9F7gP+W
dP1dZgW9J7SoM5tHv7uH3guqt60/+07ZffReMKUo+eiLwgfovWH4p2Pn22MZ
jdn7wHRrj+FkooXG7H1g+UVpoTLXUmP2T8PKs19V5Zy2Qs+DsO7je1eMa9Dz
YGe2x2xCog16X9hQn9beevEp9H7QePlwTbmai94PtmXfPDf2uy16f3jzFcGy
X6U9ej5Ya+euf5/jiHs+rP2wm7NV6Yz3fEiyOGy9L8YFvQA+FbnIS5Nd0Qvg
t/MrKs9iN/QCaJ6oUyS0uaMPgLfycveCnQf6ANho7Rn8YI8n+gDIdEp6f2HS
C30gFE1VeP+Y74M+EB52W93q9+WhDwSXVwdeiB/3RS8Ei5pTVuWd/uiFwLsq
n0ua4KMXwrWxxvcsFwXoRbA9tZSb5hKIXgRlb+u9i58RohdBxTX/HK9CEfog
KFPHvhFzJQh9ECRz9mT8HC1GHwR5v6yabNol6INBIqgcik+RoQ+GnRe661I5
cvTBsLuyJlUwoEAvhvlmk9EhPRS9GNJXkmK4O5ToxTCyO3u7tjAMvQRGBCH3
F6vC0Uugqp9R8a5GoJeANI67L98zCr0Uog98eeObAhV6KTRENuUu3oxGL4Xn
fauGTmlj0cugil92p5UTh14G9pyHsfv169HLQFx7aTjtMxb9OpDW286L+gD9
OjgYO9ieu2kD+v9ns5c/ns1eTryceAXxCuIVxIcQH0J8CPGhT+6loeQ+9El/
kHgd8QbiGSXpK0lfSfrE64g3EM+EkX4Y6YeRPvE64g3EM+GkH0764aRPvI54
A/FMBOlHkH4E6ROvI95APBNJ+pGkH0n6xOuINxDPRJF+FOlHkT7xOuINxDMq
0leRvor0idcRbyCeiX48/wNpSG6e
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]], 
        LineBox[CompressedData["
1:eJxdzA1Q03UYwPE/G1BwkxvvyNvYgA22MWBjgFb8HzdSqbgQEgm4y5coBkdo
XZJRoTu99FDPJQhmpBQQrlMqCePiKhMOAhEYTOgIWrwd0XkykARtkrbn8nx+
d//733PP5/kKdxan53EYhjE8+B7+6dv63+tg7wQ1JjtsPq6xz2b2s+Q2+fj8
WY1dWdgzxwp+qRecx/00G6ht0Nfkf6350vjwzbFJE0d/P/JRC/p5tqxHpmYc
23C/wH5aFNtfafkJ75fYS/rNPVsWr6JfZruD07hj6k70d9kTx09Nvlnfjd7G
tjf+XHg+6jp6BvTXORsnrP24d4DDp5ttnXMmvOdA+fqRBM3KEHpHsA69V3og
fBi9E0y3DBdL839F7wx7b1275ts+iv5JsNQkv1bEjqN3gZql2vSMtyzoXSGr
e/ehrJE/0PMg1sIT78mcRL8Gnnr95kvrZqfQu8GNbTs9rxyZQc+HgqxF3drk
WdzzQV5xI9DiPof37jC75w3F3N2/0HuA+nSmZ9/yTfQeMKUrtUby5tF7gqlu
sqpEYUXvBT7K1C+mty+g94J+XYPHNw2L6L3hXE5efRF3Cb0PbLwiMy2V/I3e
B4JW+5xO3r+D3hdelpVAdvUKej94VmMQap+7h94P6no+Xq30sqFfC9wVqZy/
dB+9Pzjlf7c/Zy+jtXt/CGVaM/h6B63dB4Dban1+ei1Ha/eBoFzo2yEY4KIP
BAeDv2nI2wl9EFgHF30HCp3RBwM//d2Jg6NPoA8G3zNvcy+/4oJeABd0zaaQ
ZVf0IdC1T9oXUMfDfQiMtmh+dC1ww/sQqKrWLuSE8dELYcEw4lkV7I5eCBmZ
iU0vRHigF0JfdlFumdYTvQjCvazPM8Ve6B/M/V2Huy96oxdBmzFv7FsXX/Sh
oMgd6PJ73w99KAwLdnEanPzRh8Jl3juie2cD0IfBuMlwwfZiEPow6JVXJt32
E6APg4O7DRtqPwhBHw6CCt255DIh+nAo5yVOVR8VoQ+Hqu2KTwobQ9GLQZ/K
/yp7MAy9GJyZzpQD7mL0YtBu6orUF0rQS2CT6p/W2rEI9BJokl3a2rRLil4C
gymik8FcOfoI2HJKv+NQaxT6CJBYZ0Ty8mj0ESDalzJe+n0M+kjwr7lt6/gh
Fn0kKH6re/XDHiX6SEhbdq4onlGhl8Kfde69qd5q9FLouThR5LMtHr0Uepvr
dXlNCehlMMs5lsQVrkMvA5VjqijTuB69DPgd+pyalKfRy+GWOO1qu+0Z9HL4
PKFV3G1i0cthXJArWTMB6KPAzVTdMDa6Af2j2e4fzXavIF5BvIL4aOKjiY8m
PubxvTSG3Mc87vcTbyTeTDwTS/qxpB9L+sQbiTcTzyhJX0n6StIn3ki8mXhG
Rfoq0leRPvFG4s3EM3GkH0f6caRPvJF4M/GMmvTVpK8mfeKNxJuJZ+JJP570
40mfeCPxZuKZBNJPIP0E0ifeSLyZeCbx//lfXRKcfg==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]], 
        LineBox[CompressedData["
1:eJxdzAlM03cUwPG/yDloU1uBUgq2QGkptJSjrS7O/7MEnUYYG+Fy2QZThICb
R2QR2ADBuBGhCs6wyRjXMK64qfPe0IwMt+gW2ZRCiIIKwlwZDOQ+KtP1xcX3
S/755+V93lf67o430u0Yhql4+j3705fw37vG7j80Xw3JRoNtNrMVxyxN3oO1
Bpu6z1rkmvly3te4H2CN5Q3XH2eeMTSbnj0LuzV10y2fqgvoR1nL68LMBV4L
7h+z0odZkuGhH/F+krV490bXTP2EfoZN9l3M1uh/QT/HChI7u/ccv4Heysaw
hyd2aW+iZ2Cfa4umaPx33C+BE43VqaK+W3hvByWRjZUpox3o7eGKRjG2z7UL
vQOM/dGXPLSmG70j+O6RvldXdge9M8TFf5W/aboHvQuY9YXpZsN99C9B4Xc5
/Pn6B+jdYKp4Q/gHHv3oOWAtEY8eqHmIngslYb2fla8cRM+DQoFh89CjP3HP
g5Mfdfec+/YvvF8GMadE2+dKh9Dzof+J42xd/jB6PhgqOTXW/H/QC2BbTuul
keuj6JeDJHr3gOPgGPqnc2vpbBN/HL07dJiPrr2dMIHeA1o+TotzOz+J3gM8
hPXlkSHT6D1hd3xTqM/FGfRC8J80cZRJc+iFwF/fMb7RdQG9F0REGjsX2q3o
RbC9MMtLbFpELwL+5/38nnYmyua9QdwwlFHWtSTK5sUQ8uo59tMRuyibF0P5
hqK2DE979D4QXW9cGIh3QO8Lqyp0b2eecETvC8Uec6+dEjijXwEiTt4nE0YX
9BKA2ITcYB9X3EtA6Kh1amh1w3sJrClYmp2Ux0UvhdgfKkNVMh56KZwNmHWp
Fi5DL4XBDsGWg9589H5g399e0KwWoPcDF6OV907scvR+wFbdMYwUu6P3h/Dx
qxOGdg/0/lBTV8GVq4Xo/cHBeum8U5MX+gBQXPXzu63yRh8AwQULv8luiNEH
gMNd7a6Fvb7oZWBs/7u5fIUEvQyuWA5l13Kl6GWwtywurZTrhz4QKhL16zUS
f/SBULSur+4bCEAfCEprxsiRnTL0cjiWlu7ecjYQvRxMSUOirU4K9HKY3dIZ
82BnEHoF+Gb9vJg+pkSvgHsXLzckHAhBr4CUtF+FjRo1+iCY6oCuR5ZQ9EEg
m35StfKeBn0QjOve/PB0Zxh6JWyeKbFX9YajV8Iw52DeW7MR6JVw8u5kao5c
iz4YPPW5bZYMHfpguKxed6H2ez36YOD0S1c7S1ahD4EUrtdkWc3L6EMg4PjG
vDbFavQhkB3n6fjltVfQq6Bsx+kzLbksehVsa6xPjG4A9Co4Uqp6v/XoWvRq
2F9a5CD6woBeDTeXsg6CWgP6/2ebD30+23wo8aHEa17cKzXkXvOiLyLeRLyZ
eCaM9MNIP4z0iTcRbyaeCSf9cNIPJ33iTcSbiWciSD+C9CNIn3gT8WbimUjS
jyT9SNIn3kS8mXhGS/pa0teSPvEm4s3EMzrS15G+jvSJNxFvJp7Rk76e9PWk
T7yJeDPxzMrn8796+iwX
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUYwPE/dyBHiQECd7wdBwd33HHH+wEO5P8cL1EByjtJgrxWloYN
rnAgIFGDZgbkQhwgi5byZ27KkNDEMFcgskDhgAYIIUgWIS8Bx2tl9yzn77f9
99+z5/N87dKyojNZFEVV/Ps9/ZMv7r/3I30hau+5jA9PB2pnNd0/lJkg3Tgf
qFUTdL8mLy1A2Ij7aVpEv13X8M6VwCbm6fudPrbDRqfni1b083Rmr229A+cG
7hdpWZ1Z8sJkB94v06F/Jcwbz9xGr6Fjq2PyHvA60a/TW28FHY070Y1+izbc
dzJuSfdn9BTo5jDxPwz04V4H+Pu3gg+33cd7FpwtUn7TcHUAvS5MShr7qZ5B
9HrQlqF/cm19GP0OaCrhZi0oR9BzoGqoLu1lZgy9AQivTGbv5E2gfwEKD7x7
N+bwr+h3Qk/Ukb6Qvkn0hrAp53ZmR0yh3wWXRvasNI5PozeC2pWrvNVPZnBv
BKqse/kGgY/x3hjujU4Nxxr/gd4Ecs+slRkvzaI3AbmaUY7NzqHfDV13+DHe
hfPoTUFspdjMOrOA3hQOdgdzfK8vojeD4Ueqau7CEnpz+Ky1cyjZbxm9OTBP
PL0qzq2g50Lmq681tRtq0PNAWKCSRVatoedB++sCPQ//DfQWoCjdKg9d3URv
CW2JSYdSO7fRWwKn6qUnFfFUkNZbAfdrA1VurE6Q1luD63GPkagUVpDWW0O2
xdiF8lw2ehsYqNK0R9TroueDpZ7KEkb10PPh80vF7DSxPnpbiGfvq6sv4aAX
QHNZQdptjQHuBVAZZtic/tGLeC+A35K6w2QSQ/R2MJLYUmbz5y70dqA/IbrR
lGGE3g4yjGJtQ5KN0dvDzY2Dt/amm6C3h7HzpR1v5uxGbw/dk5+6JFWaohfC
gmZ7/L1bZuiFsN520eGhDhe9EG7WRCkDYnjoHcB/k/fGKy0W6B3A9xTr/e+c
rdA7QGdvTUPMNWv0jjDl1MAZSOWjd4RrJ0OrRSYC9I5w+tDRCGPKDr0IJpZ5
P5n9bYdeBL0hQdFfcoToRRCffn/worUDejEsfbU6KlY6ohdDcYK7lTRHhF4M
lS1hl8Oui9E7gTs7MbfKRILeCR7W5IdHF0rRO4HV2X7VKZYMvQS6+rw/TqmV
o5fAYlPpA024K3oJ7E9IKbhb5oZeCpPmd6ad89zRSyFkNn9uPdcDvRQWGwVV
l0s80TtDX6YoJ7DWC70zFBWfKI/rUqB3hl7W44IRtg96GWQlKLfZkb7oZTCm
aj0W3bwHvQz4pakfzDj5oZfDt8EBFaPN/ujlwLIaNF+KCEAvh3yGbhBSgN4F
WAfKj8sfAXoXyO8Y/75/WIneBWb540eSfwlE7wpTfpGLc+FB6J/NWv9s1nq3
5/dSN+Le7XlfRHiG8GrCU+5E353ouxN9wjOEVxOe8iD6HkTfg+gTniG8mvCU
J9H3JPqeRJ/wDOHVhKe8iL4X0fci+oRnCK8mPKUg+gqiryD6hGcIryY85U30
vYm+N9EnPEN4NeEpH6LvQ/R9iD7hGcKrCU/5/j//A2D3jOk=
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]], 
        LineBox[CompressedData["
1:eJxdzA0w1HkYwPF/iLBqifUu1npby2LXbjj+D9q6k23EGV01punC3Es4o1zX
EUeEEHdONVTebu72mhFXiZjc7KWukDutNnE4MVk0Xi8xy13tM9fM7zfzn/88
83yer8PhpMg4LYqiSv/73vzJF/323aUz0m4bHAorDtHMCjqW4Tu/NnY5RKNG
aIcvJPwpu59wP05zLsbWST9pDPlZ9uap6KDlBdesszfRz9IdmTnZH2m34X6e
PjA5WlXzuAPvl+i+QuuZuUdy9Mt0ubR34rfXnehX6Psnt8zulT5Ar6bfn0gd
TJV3o6dgNGhCHnK9F/cboF/Z7rXv/J94rwUviz47UVH2GL0OqC7dKq+v6Ue/
EV6pt+jt6Vai14Xk/BmVm9Ez9JsgPebUVXHCEHp9aNRaO5g9NozeAExiJr5q
9R9Fz4A9vxxdnCz+G70RJBUdvBk4P4Z+M/Q81D/3MH4cPROOipP8w2cncM+E
03tzmDbfv8B7Y3CVVLeUR6jQm0BPS92hnfbT6E3g0yZGMjBeot8KOawLtakG
s+hNwer2Pciym0NvCnNPj1U3Bs2jN4M/dkz76SQuoGeB/qVmlfmPi+hZwE2b
qTq1sITeHDyL4gX8iFfoLUAdoaxT31pGbwHy/MLSPuEKeku40Ctaf3h3Fb0V
hO/+RtsvRY3eCj6olpdNidbRW0PMIcVweiEVqvE2INMrN9XO3xCq8TaQ+iJB
V/qtVqjG24L8xrpZpkwbvR2wrToFT3p10NvB7jCXppO6uui3QbvFPcfocD30
9tC64XmeXc0m3NvDUPyJuVpDA7y3B5U4Y0mUb4jeARYHlcfU5kboHeDI0FTf
QMdm9A5wnBnSoUcz0bOhicMeNnI3Rs8Gn5XvWIc5JujZwJDIuiTcregdYf/8
c+VcgCl6RxCVRv16OtYMvSM0fz4441nGQs8BH92ms/sHzNFzYCTK0JIvsETP
gWs9H8/uu2iF3gk8JF3l1iwb9E5gH/W07mC9LXon0Am+83Vh2Db0zjAY1dZl
lm2P3hlaSq5XxiU6oHeG9f7LJT1H2OhdoKN+od0jwRG9C4zcXxTqH+egdwHB
7GrlhxVO6F2hoOQvXl63M3pXiNdhCztNXdG7gnFeemR7oht6N/BWRaeUD3DR
uwFj45lLzAM89G4QYCixKZj2QM+FRBN9iVcpHz0XCiN4V3JrvNBz4UteYGxN
gTd6d5jrM30tzfZB7w4XpS4pg2cE6N3B3yWQzq8SoufBP7XXliblvuh5wGjY
FWerFqHnQWLWA+fx4O3oPaBywGg6sMoPvQdE7uDs6twUgN4DpFu7H13JfQ+9
J9iNFrd4WQSh94RnQzprrXdo9J4QvKo8r74D6Pkw0pygXXs1GD0fKivaGsJ/
CEHPhxu5TzJaG0LRe0HyzjT5vd9DNXvuu1lz/25+yzMJLyO8gvCUN9H3Jvre
RJ/wMsIrCE/5EH0fou9D9AkvI7yC8JSA6AuIvoDoE15GeAXhKSHRFxJ9IdEn
vIzwCsJTvkTfl+j7En3CywivIDwlIvoioi8i+oSXEV5BeEpM9MVEX0z0CS8j
vILw1Pb/538B/YuNyw==
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
        LineBox[CompressedData["
1:eJxdzAtMU2cUwPEraosFhba8qUqhUCgttEALPnsAgTmRISoSIItTMBtMkCkU
EecrW8ZERwdRDHFIRKbXLUEesk00MvExFQXGBWQsShkorHTUAXUgsGlPZvy+
5Obm5PzOX7gtMy7VgqIo7X/fqz/5Nr9+N9X25YrlDh8cDzPPjPrd/pL8lpHy
MLN6om65tTeU634B9wNqbWauiJdxKewi/eoNq3c1tTKiosvoR9XBhYfip6eu
4P652jD4IKj7/nW8H1dvz3D51q/hBvoX6tIW1XeW7bfQT6qvAvP3bf5d9NPq
xKQHR0cPtqCn4MvquGN1ha24nwMCgeRlaFY73ltAUfGq1J8+7kA/D1SfHDqW
mNeJfj44Tlf3ZpZ1o2fBk601yWltPegtoSCl+av1rr+jXwD2j8pO1mc/Rs8B
ITusvfPFE/TWkLTMtkcYpUO/EEziy7OCM/3oF8Fo1ze5FYsG0NvCzZO9NnO/
HsS9LcSsbISffZ7hPRfSr/VXHO8cQs+Dnvd2eu8v/RM9DzKVlpXDu0fQ84El
azxh8dFf6O1gf1+RTnllFL0dZO3YN6i8a0RvDz9GsBd06p6jd4DK7JKEWvYY
egfgnmgSMqvH0TtCY+4X26WFE+id4PsPM2pGR0zonWDh+bUt2e//g94Z5JpZ
Pugm0bvAJrFpQ7bmJXoXiJ2ZNEaKZtC7Ql5KtjHPMIteAD6aq0qnISrc7AWQ
L9/HPzcwJ9zsF8P483052mGLcLNfAuMUXXtlci76JSAxRneku8xHvxQmEtkP
D0ez0LsBnfY4ZUcxG/ducG/LD5EH9JZ47wbGpC731i0c9EKI4CzLVnRYoRdC
oyFxomHbQvRCKBvkGW6ybNC7Q9aU3om91Ra9OzAOXQ2CSC56d2jSnqXTVvDQ
e0CI3lr1cAUfvQecL/NKMr5jh94Dclxcb1xItUcvAn3KujO5Wgf0Iiix3qS9
+KsjehHoxqrKuWJn9J4Q/szwYkOhC3pPqDsY1fQbS4DeE+7RT/catIvRe4G4
Tdre4b8UvRd026fMyjPc0HtBQe2lhPpoIXoxGNceOBcT4o5eDGK3BqsYuQd6
MeQ779HMhIjQe8PKjjtsxzhP9N5gCj5ro8n3Qu8NtHXPU0ODGL0PTN3qiuaz
fdD7gCp2qCo5XYLeB67vOjI9rPNFL4Gm5DJdc6oMvQR+2X3qs4oJP/QSeLz1
ToBivRy9LxhDP1VekyrQ+8Jtnr53o3MAel9IkKurInmB6KUgK+o/LRcEoZdC
fL1V7JIgJXoptFeyOGXxKvQyqPy8z7XnaDB6GeRXnK4xtYWgl8HLBFsPG+ly
9H5Q+4iXaVO6Ar0fRGwszktyWoXeD/bkzCvlVK9G7w/3m/mnZmWA3h+aDyvG
NZxQ9P7gVjcdETUWil4OyX0FVTv1Yea9RA4j3ibuw9FwvJfDuj84a5ZtW2P2
B9/M5t6b+TVnCE8p3vYSxdt+s4LoE54mPEN4KoDoBxD9AKJPeJrwDOGpQKIf
SPQDiT7hacIzhKeCiH4Q0Q8i+oSnCc8QnlISfSXRVxJ9wtOEZwhPqYi+iuir
iD7hacIzhKeCiX4w0Q8m+oSnCc8Qngr5f/4Xt41Mfw==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5372549019607843, 0.7411764705882353, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4392156862745098, 0.6392156862745098, 0.8784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.592156862745098, 0.8470588235294118]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5372549019607843, 0.7411764705882353, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4392156862745098, 0.6392156862745098, 0.8784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.592156862745098, 0.8470588235294118]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 
          0.5647058823529412]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5372549019607843, 0.7411764705882353, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.48627450980392156`, 0.6901960784313725, 0.9098039215686274]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.4392156862745098, 0.6392156862745098, 0.8784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.592156862745098, 0.8470588235294118]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.34509803921568627`, 0.5411764705882353, 0.8156862745098039]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.3058823529411765, 0.49019607843137253`, 0.7843137254901961]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.26666666666666666`, 0.4392156862745098, 0.7490196078431373]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.23137254901960785`, 0.39215686274509803`, 0.7137254901960784]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.17254901960784313`, 0.29411764705882354`, 0.6431372549019608]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.1450980392156863, 0.24313725490196078`, 0.6039215686274509]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 
          0.5647058823529412]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 24.}, {0, 1.1474995256871062`*^16}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3581699346405229, 0.49411764705882355`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5372549019607843`", ",", "0.7411764705882353`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5372549019607843, 0.7411764705882353, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3241830065359477, 0.4601307189542484, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.48627450980392156`", ",", "0.6901960784313725`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.48627450980392156`, 0.6901960784313725, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2928104575163399, 0.4261437908496732, 
                    0.5856209150326798], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4392156862745098`", ",", "0.6392156862745098`", ",", 
                    "0.8784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4392156862745098, 0.6392156862745098, 
                    0.8784313725490196], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.3947712418300654, 
                    0.5647058823529412], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.592156862745098`", ",", 
                    "0.8470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.592156862745098, 
                    0.8470588235294118], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2300653594771242, 0.3607843137254902, 
                    0.5437908496732027], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.34509803921568627`", ",", "0.5411764705882353`", ",", 
                    "0.8156862745098039`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.34509803921568627`, 0.5411764705882353, 
                    0.8156862745098039], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.203921568627451, 0.32679738562091504`, 
                    0.5228758169934641], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3058823529411765`", ",", "0.49019607843137253`", ",", 
                    "0.7843137254901961`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3058823529411765, 0.49019607843137253`, 
                    0.7843137254901961], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.17777777777777778`, 0.2928104575163399, 
                    0.4993464052287582], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.26666666666666666`", ",", "0.4392156862745098`", ",", 
                    "0.7490196078431373`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.26666666666666666`, 0.4392156862745098, 
                    0.7490196078431373], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1542483660130719, 0.26143790849673204`, 
                    0.4758169934640523], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.23137254901960785`", ",", "0.39215686274509803`", ",", 
                    "0.7137254901960784`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.23137254901960785`, 0.39215686274509803`, 
                    0.7137254901960784], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.2274509803921569, 
                    0.45228758169934646`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.3411764705882353`", ",", 
                    "0.6784313725490196`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.3411764705882353, 0.6784313725490196], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1150326797385621, 0.19607843137254904`, 
                    0.42875816993464055`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.17254901960784313`", ",", "0.29411764705882354`", ",", 
                    "0.6431372549019608`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.17254901960784313`, 0.29411764705882354`, 
                    0.6431372549019608], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09673202614379087, 0.16209150326797386`, 
                    0.40261437908496733`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1450980392156863`", ",", "0.24313725490196078`", ",", 
                    "0.6039215686274509`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1450980392156863, 0.24313725490196078`, 
                    0.6039215686274509], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.922528522266534*^9, {3.9225285557451487`*^9, 3.9225285940735373`*^9}, 
   3.924362576599991*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"2fd7afc8-cf00-41c7-b1c8-da041ce2566e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PERCENT", "Title",
 CellChangeTimes->{{3.92401142760751*^9, 
  3.9240114300788455`*^9}},ExpressionUUID->"ae57e67b-79e3-41cd-8fea-\
2c2a958474fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ol500c24h", ",", "ol500c24hkeep", ",", "ol500c24hkill", ",", 
     "ol500c24hmem", ",", "oltyp"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\ol500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9240102934920316`*^9, 3.9240103293643436`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c397f54f-44bb-480d-89dd-7f58b51ed9ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpgen1", ",", "hpgen10", ",", "hpgen50", ",", "hpgen90", ",", "hpgen99", 
     ",", "hpkeep1", ",", "hpkeep10", ",", "hpkeep50", ",", "hpkeep90", ",", 
     "hpkeep99", ",", "hpmem1", ",", "hpmem10", ",", "hpmem50", ",", 
     "hpmem90", ",", "hpmem99", ",", "hpkill1", ",", "hpkill10", ",", 
     "hpkill50", ",", "hpkill90", ",", "hpkill99", ",", "hptyp1", ",", 
     "hptyp10", ",", "hptyp50", ",", "hptyp90", ",", "hptyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hp500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9240103859481435`*^9, 3.9240103859511337`*^9}, {
  3.92401047108097*^9, 3.924010491957103*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"15c2ecc6-acff-41ad-aff6-86214fa24719"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpgen3000", ",", "hpgen6000", ",", "hmugen7000", ",", "hmugen14000", ",",
      "hpkeep3000", ",", "hpkeep6000", ",", "hmukeep7000", ",", 
     "hmukeep14000", ",", "hpkill3000", ",", "hpkill6000", ",", "hmukill7000",
      ",", "hmukill14000"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hphmularge.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92453055147876*^9, 3.92453056190034*^9}, {
  3.9245305948606324`*^9, 3.9245305973092003`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"f23b05d7-3141-4d9b-b8a0-42a71c42fd2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpkill3000", ",", "hpkill6000", ",", "hptyp3000", ",", "hptyp6000"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hplargecorrect.mx\
\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924545368922036*^9, 3.924545399918423*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"2d7f7e73-fd9a-4dbc-b789-88d8f2930a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.004"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924011209091569*^9, 3.92401137342062*^9}, {
  3.9245532982295065`*^9, 3.9245534440723124`*^9}, {3.9246097572291036`*^9, 
  3.9246097761435637`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7f94e21d-e414-4157-9610-1485d7f1851e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxle3c0l2/8vhkSWRmFCqFhSyTP62WPkL33Xm97773TLjSEjD4hSSFUZmSF
FJWyKjJDUsLX75/fOd/zvf95zutcz32/7us617me+/njPuzgY+BMQUZGxk9J
Rvb/nv9nmHzJp6fpgfe0Jj1abnVEbNAZscs8axCYLiHNKFRPkMXyBh3WocLU
ZzIuz8kbidi2OwNhGQwoYugpV/XnOWGXtJdzxokVr35UlfZOfUmQlfap7aPi
xH42r3HZe03Ey9cXghQLubE44HKXd38zUbkmNCCTfwi3xU9UVzG1EmS0qTPd
S3yo6MVnRuXYRthxTZM54hH8fea+XUxnO1F5TIPzzwUhNBh1iKBV7SCYzpSK
XfhyFH+qVmdXvOsk7HRo1Y+IncDtxMivbTFdRKWNm019tCieEkhRDFLsIWhl
p54Ju4rjZ49Hqz3cfUQlXm1fyZLA9tnNtrtpbwgzTZWB508lsZDLXGTzcj9B
a7A6mvZZCh/OJv8xfjBAVFrcmzHadRKZJEpitAcHCTNHo18HRWXw+VZUwVP6
IYLWi4p81vgUVslXx9gbvyMqA6v3PI2SxbnsY8kble8JsygnzrgiOaS696XO
9OAIQZvMJqDdcxpNGryyfPI/EJVZrWIcv+SxvbytR032E2F2I1B+glsBI6kn
g3qmRgnauwLq5SoEdjm+PjZc8oWoLH1rEOoFaMeQT1JuGiMqzZQeHtZCrKbw
KNl8Nk5QWe8/SfMZ0a/ha0Bm0wRhZr/8bM5PEZ+HVN6NHZokKp1f4wC1EsrQ
BVkl/Z4iqDwK2mtylFAxQScOhb8RZt7h2rdFlLHupvNdTbfvRKW/wUB8kzKW
yah2q9VOE1Qhx8zcjFXwav5tk6+cPwizCIrPOjMquFn0nr05fZaojPngKBWl
inlx6w+KGecJqsSqGU5mNXSkG551LlogzFLTfbbuqWFLaeHqF6ElojLT4dek
rDpW/2VvkKD5SVBdOh3R2a2OD++WbjH+/EmYXWMhf2ingZxUR14ufF0mKnN+
JF9d1UCmwtfNxLcVgupO857wVE2Urdmr5rW8SpgV5F625dbC2z8eFy/uXiMq
i/05VSu1sPuFlYWG+G+C6oHWnWMqZ/HmQBv1mMM6YfWQT4Bp+CzKFGl8UC/8
Q1Q+/nv/l6c2plTlvSRf/ktQ1Q6IfdzWxqfX9xZfOfePsGr478nLKzoopxT0
PaRhk6h8GS9fLKSLTo+/UWvJbRNUbRZNGfW6WFThrX3OkQysOiXV/c6dw3c5
bM+iJMmhsmd3j8nkOUzk9BuP300BFO5+R+/I66G3vs7DB7MUIOppPXcxSQ+N
ew60qb+jBDOS5sOEPj3UcNdjL3lNBfE+J/2DufRxoqZ438FOaqjwO3zS3VEf
/c++Its1sAuGAxjWLcv1UWzW2LzqKw1QBP95pvtbH4u/pEaGU9GBaOjXKEVF
A5TdFXm1XnQ3mIX3o3SGARpZcT4ecaKHxMhGSqEhA7wfS0kIleyBiuj77VwH
DZGMRYOGfo0BhmOvpe1xN0TdFY2z3/T3AlVCnPZ2lSGeH3yTfMGaCUSTSHuX
/xkirUGC1G4uZjBLMR+YUjPCK7y5DDc+MkNimuq19xeN0EbuuoZnEQtUZEiY
vf5ghH89gg2fB7PC8HmeA40CxviiruxG+zk2oLpI9/mhtzGWUjanPxXfB6KX
f90tqDVGl1HGX6+42MHs6rjjNQoTfP7zwxkpeg5IvN4jmKptgoKiva2S1JxQ
kV03E37dBPf0hVpv0XDBcG5RGWnMBNfYSKJvWPcD1e1LPnbHTHHli9O/ceED
IJoXJWkYaIoBl3bv8lPnBot891+qz01x0WPSqdaHBxILjWtlac1QOKljaSWf
FyqKFCOOG5ih1INgHofPB+FDiQjBe8sM10pVGPMuHwKq/7jImb+Z4cyTCR4n
+cMgWkbdSilujvXiInx5M4fBouJn8lqYORquk+8l3eaDxMpRzZkWc+TSYJ1b
MOGHiqrOPZ8YLPCvlZ+hKrsAfKh+0tdraoG3o1Ytsz4KAFVN/uWmfAss1C0M
mCk+AqJ1542rZy0w0CfPMThUECzqwzhLTlqiZXdTq4GeECQ2On/MibHEiZz4
zTxRYah4oX8ns9MS35XvCY5iPQofmhTsY1itUNK4v3X39lGgaj0q4G9thQYH
/uq6/DwGou37vjuVWOFkSh175Y/jYNFB/p/pTytkpA9wopk9AYmv57205K1R
/MuVxrRlEajsHhFTSLJGTRAXNSYXgw+9bctifdaYPH4moZVeHKj6Hz3h47JB
EX/PovxccRAfvB26z9EG2TXMy86JSIDFUJo8bbkNauus/x5tkYDE90Fbf9ds
0PU0cdHSRhIqR+yb5tEWvS0SRob+ScKHjzqJY+m2eLyvrMAiTwqoPsupD761
xW5CUGhdVRo4l1ioHffaodjriBf1S9Ig8jPVxUraDj1Tl3yr8k6C8vLWK2Nz
O7yzQB0yYyADpiuBR89F22HwazEk7T4FpNUf6RqFdijtonBCq/0UJPyym1Ps
sMOxQqekzGRZuLH2Tkd+3g6HAjxeEGfloPy39kNpFnvMzPryx4vtNLSsNzOJ
nrLHpA+dnw5PnIb3f2T9hazs0fsvmZ9btTzM/60YPBRnjzfflXRoZpwByn8C
J/cX2+OwbUZbn4sCcGzmXmftsse9d3IvUaoTILLFtL5nyR47/l7KWDgOoLyd
bL5rnwOWvx0f7tqNYEq2+WxbzgGh7dsDyngEEnkA9x8bB1x8wFBesIGQQDET
tZzggC85cepBiCLkUNp+mS11wEfMnZl8a4pQTjWEX3scMMmzSJYuRAlaqM8W
fF52wIpnWTcd/irByK4mymEOR5yqqCckYpVhnuaUc/+Znbr5HoTQqgAlXXn7
a3tHHEm+yiBzRQW4dvMLtyY7IimzzMbnkCqI0OekNT5wxHD576cFKlVBec/e
2advHJElINvRWEkNzBmStCt/OeJn/25xyvdqQGLcKL+/3wn/vX3LK+qtDgl7
/fYWghN67muXfUejATlM331vOTlhOekn50ahBpQzWw9cS3NC7SyDdzeVNKGF
ZVDqQoUTXhlgKKiZ1IQRVs1rqYNO+MXr+5J2ihbMs71Yi1vfqWkUZs1FzgIl
+0mzCB5n7Mn8cPnT0Fng4nhQF6jkjCuBAaEDsdogwnn4gLerM64lyn6WFdUB
Za4bka6Zznh5fN+bPZ91wHw/w2e7R87YMpl8S+uiLpAOJIDFO2c8eO+/0AWV
c5DA/eeu4YYz3iXFHl3dOAc5PD4UOodckEeJvPiBhR6U8351VFN1QY/aWK+0
Wj1oOWjZBh4uaHlp/6uLHPowcqhfUO6CC046Rk89D9GH+cPqqZLVLmiuNV7O
NKIPlPyNM8dHXPA+6epGvLwBcAlInT2y5YL+Tv1qLHkGIHLkfhkvvysKOEoz
11MagrLgQUZODVe8Jnz6Tpi7IZgLXfNhJrki41e9Ac03hkASpu/ffdkVraTv
BgjJGkHC0ThJqhpXFJm7JMeYbwQ5x35f2fzoii20TZ5/dhvDw+OkX2tkbnhr
9pvmVJAxtJyYNFk64oYXxKaHOseNYUTEvHZGyw0r72/P3dM1gUXRPq5JHzcs
lz8n7ttgApTiqhGfrrqhZuV285HjpsAlUf9pqM4NDY2FVl/kmoKYpATR99kN
/0s++EyW3gyUpUryOijdcSImqzEt0gzMpXnIm4XdkXL02Z2yBTPwOXnFoV7H
HUudBK/m2ptDggxda7W/Oz7GqF7tIXPIORVzpOKGO9I4fDnWoGkBD2V/JZc0
uKNnmkvw+HMLaJHznL477o7C7PsOPJG2hJHT45q5uzzw9O0DIPbAEhblTR9c
Oe6BrDzb/ep8VkCp0LPnvJ4HFj2dbVrLsQIuQtk7OcgDyw4aP5disQYxqOuL
yfXAx8E/j62lW4MyikmEvfDAM3RjfCepbMBcseiy/5QHnqgtvvs9ygZ8lA6s
etJ5olvK9XSqdRtIUL5k7CzqiZqSRnbx/raQo0JTY2PoiaHeH6JN523hoWoU
p1moJ371271HQdoOWtRWwvRve6LSdWXyJT87GFF3/6jV7IlMNnkXXzy0g0WN
L2dUvnuiEO255OJ5O6DUMr6jsMcL2YP338g7bg9cZ7u2ZSS8UENPza3I3R7E
tBXtxU288IIIc1RViT0o69Q0H43wwu7+G0TTV3sw1xUR4L/rhQNs1szd/A7g
c64wibvNC4fe/VHrsXeABD2u7/t+eGHwXR+GF3kOkKN/QWPvXhJqU/ln3hx1
gIcG1P/RSpPwUVPihNUBR2gzjKCnMCfhmV5Jlk0zRxgx+um1EUVC0eknDMHX
HWHR2LV3tYCETKvXXjQNOgK16ajYwisS9jX40H9gcgIuM8NL3+dIeD5VvqVW
xwnEzDuXx5i90TI7odY03QlULcDog4w3Hqp2zq9sdwJzyydPBi298eRwjXIj
hTP4WB3n6In1xtBLp9xDCGdIss4PbS/yxn8FW0+Hw5whx4bjw4vX3rjX8vT4
h2pneGh7Xr5u0RujQ62KQhadoc2O8nYVmw/qKpS1lx51gRH7sK0Hcj7IzCW8
y83RBRYdFm2LbHzQ6Km9wMNbLkDt5Nx0J8EHKYTDR0OGXIDL+SNfdqkPkgsk
czYwuIKYi37ipR4fFKqKrg5SdQVV11df05d98A121t6JdIUT1Xf4m+l98af9
5b0Sj12httr8LcHri0N9mROCM66g9IQtqV7cF5V0N8zDed2g+0nfSVllX+SY
P1BwxNANzJ6mf6s29sX60y0C/CluMPFU9YaEmy8qfDeyJj1zA68aMo2KcF+8
5Sz/dmvODdZr6tePnffFJvkO5QFed4ivDb5fkueLlfssfSfOucOeOgkLgSpf
9KOONT0W6w7ZdXO781t3cPpotqKH7sD3rKSe570vuiiETOl8doeyZw5euTO+
qBLGeeLQHg+Qrefh4fjniw2v90ZyyHlAc/1wzxVGP+z/V5Yr5uwB2g1XopkO
+6EBc66700UPGG7QFTsv5Yd/1Lxoq555gEMj3Ridmh+KH6tuZpvygIXG1ovJ
Zn7op5bNkrbHE0KfxyhSevrhs2CTu/TSnkDx4vRyTJQfZidRGudYeELWi18F
/y744X/haXpisZ7A+bLSMKzAD4nZkPev73lCwUtPqrXqnf512uHuHZ4g2iT4
xP+VH+pdkZuhnfWE2qZx58URP6RpXjxSsscLlJpvsXvN+WGJk5mlkogX9Dab
vpre8sMj+XILw9peYNbCEurM7I+s3zYS3D29YKKlR3iC3x+z2Td+L6d6gXdr
6oiNjD/SE6y2gUVesN6qnP5Rwx8ZFE7un3/pBfFtW6fNLP3xn0DXVauPXsDY
Xjf7luSPSzzHcppXvSC7PfCWfqw/Ot3J4jrIQAK+V2I6vZf9UcB+VNtfgAQV
r35sahX543Zm14WG0ySQ7SiqeFXjj5P2FvFb50jQ3GFnq/LaH88YCmzIOpFA
t/MAU9Mnf5yiolr0CiHBcOe7lwqL/ihInnf9ZhoJHF5f8ntGHoCHmp+ZtOeS
YOG1Nt8ptgA0lu9tWviPBKFdNIOPBQNwz3WhG+zPSEDR3ZwgLheAv0y4mqCD
BFndUdLlZwNQ+seAkdcQCTh7ZL8etQlAD6GO7DvjJCjoWblW7BuA36iPDg3P
kUC0t0KNPyEAbdzUb/D8JkFtr/vvvGsB2M2aHelD5g1KfQKl3KUBSIpU0+qn
9Ybevi9mOc8C8GvwkVFVJm8we5NLx94TgDwd7sffsHvDxBvjZ5e/BKD9KXGl
AG5v8O5n8ty7HIBhLBtKkoe9Yb2/60AmVSDSWR21ZzriDfEDyd20HIF4kMd9
jEnYGxgHFaOSjgaiW9vAvlPHvCF78J8IxZlAVLHu0Ek+7g18b2s+R+sGYuRD
7SXyE95Q8db/woZdIPpV9jqW7+CyQyIYGhCI9TO2zJk785uHppdWkwJRUwoc
8nfW131XmO+XHYhntXwal3b6D7+zMVj4LxCzgiyTovi8weE9F6VnYyDOmmfu
O8vrDQvv3z7+3heINcw+L624vCF0+IKT00QgvksV73nC6g0UI1r7xlcD8eru
h0HmDN6QNULdbk0ThFue36a1dnkD54eXwR+4gtAiSubM+a0d/T9ECJmeCELh
bWN//rUd/T/KDA8SQdgavyuOaX5H/48/U/X0g7CSNVDDdJIESp/K5Hocg5Cx
oint7zAJej+5/tAMDsKaGfW5fz0kMBvlu9meGoSH+eep7ZtJMDE6elb5ZhCS
fr3TOfqUBN6fs/+9KA9CXnX/g2b3SbD+2bD8zMsgDAx4Vrd4kwTxXxht6gaC
cC9nEbF8ngSMY52MMl+D8O9wVZV9DAmyxxJfVP0Owji1on/gu+P/cfAV2x2M
/TPmX7Psdvw//vdQGXcw5pm85tDT2/H/xJN+YbFgrP0jfjgJdvw/4RtfpBiM
kjIGfmKiO/6fPC7FZxSMUQozFnrcO/6f/DZ5xyUY786cYpuhI4HTVP7VA2HB
ONZQW/N3zQsWpqxUszOCkYNmWSV50gtCv3Kssd0JRqG97vmZfV5A9W2g+FJl
MFpvPc5hrPeCrG/nTRlbgtHtxP2JPcVewPldgzZjKBjVdP7bn3rRC+59p6yj
mQ7GwG90XbHhXiA6/dw98e9OP5M099+OXlA7HbafnCEE+Yvmzed28kVlRror
6mAIakncX7Q9uZM/M4sRfyVCkMIo28eAZyd/fvx3IkQlBFkme5lbqbxg6ofz
6IpJCEapRpA92ckz79lDWb7uIWjHbuVxZMAT1mc/EvMRIfhAf5/DvlpPSJy7
vuieFYK7zz/anXTbExjn9e9+uxuCPdQ8HoHxnpA9v0ff8XEI8oRO5066eILA
wivysbYQfKynXjWg5QkVC/FVVsMhWAuHOhRFPUF2UcFx5EcIviiz+SPO7Amt
i+usJpsh2E750/3uigfoLj1uHdgbijIVL9QuDu3k/5J30Dm+UFS5kfuKrGYn
/38eFeyWDsUK4QMSyzd28v/n1DsN9VA81RD6zinUA0KX81LazEOR/qLOAXMz
D6BYsZBV8grFTVutoL5THpC1sm/meXQo3jU449vB7gGcq29y5C+F4idunzKV
X+5QsJqhVVsYitneU0Mqg+4g+kttQ/ppKFK/zHzRWekOtb/Iyx51hGL6Y3m9
t+fdQWmtwUr0Yyi+rlNPc/Zwh961EIYH86Fo0n0jJVrNHcx+Sz4XIgtD2smr
8Yf43GHi97z3PZYwXLXK7dPedAPv9dKDh4+Eodybf9+phne+v+uOb26fCsPW
yM92WlVuEP+HN26/VhhOUl2Y4810A8a/IxI3rMKwei+HRaKzG2T/vTrB6hOG
Rdd33Ywk3IBv49yVi3FhKJzUXE/H4QYVG7tVGK6GIbvZx1WRRVeQ/de2mlYc
hoslu27MtrtC87/Yol11Ych6bZFR9Y4r6G7KmyR07eCqB2bPBLnC8ObaLrLP
Yeh0wGR46KwrOGw9qolcCkPSfoZ8Fj5XWNjycvtDEY7TU5xia79dIHRbiCt4
Xzh2EDPJCT0uQEE22bksFI5Gd981Nha4QBbZnXCf0+Eo99mJuTTEBTjJzY/P
aYejV0fsgKq2CxSQs31ysw3HlrY099xDLiBK0Zf51S8cE4tWjO6vOkMtRbqC
Q2I4JhsOCgV3OIMKperC5+vhmLlqmkp1yxl6KcnyLO+H420ySVEzH2cwo6o/
N1wfjs1dtMM7/30wRRVMZtwbjvVxS642+5zBm1riUf9YOLKyKjVyTjvBOvWc
ve5KODZ2FXSUPHOCxF0lLF3UEciXUhu+97wTMNI4tKhzRiBF+Finoa0TZNPw
BLYei8D7lv0NoRJOIEA7LKCoEIFXzBOM4ymdoIL2ylDjuQh8MqZ6J3DIEWTp
dJNPO0Tg5HW+HMMSR2iloztVExiBHny16vxhjqC7u/W7VEoE/vAKuvZdyxGG
d8dkV+ZEoLbX29x73I7gRH9aU6QsAj9yh4vbLDjAAv2vP/efR2CJHNnOWcYB
QvdU/ifYH4Hv5aZz311yACoGT8vCyQhcJrGy3HZ0gCwGwT2H1iJw6YKDhc9J
B+BkHG+4RRuJEvwb3Po0DnCP8RaJ60AkykWcW1IdsQfRvaa810Ui0avilon+
A3uo3cvSx4KRKNYU3hAcZQ8qTD0xFwwiMe3OQGDdOXvoZUoV3+MciQPUZY3c
fPZgxqw8nhoSiSUuf6oLV+1ginnrEnV6JEaEznjrv7IDb5Y6pfhbkcjyr2tQ
ONcO1lkCV7YqIpGBzOrlCZIdJLKK3YtoisTtapGvtmgHjGw/jNYHI1GSWv99
K6sdZLMVUQd9i8TuTN9dDb22ILDP7unP9Uhcnr/lZRlsCxX7Drh600dh/yXn
OC9eW5Blf8cxyxOFz5V7nFbabaCV/VKHq3gUsoRMLa342IAuh3bYlFIUpms+
+eDHZQPDHDTH7I2j8Nd07g3fFmtw4mz+MOoahc0W4mYrJGtY4IzKsAiPQqlh
QdpNTmsI5ZI98z4zCmfWbfgutloB1f6VOcO8KOQZk1N56GsFWfsrbr95FIUX
1y5etuKxAs4D7ro6rVHY6mPPmPvaEu4dENjufBeFV08FnXUPtQRR7i8P1Wai
8OanXfVdgpZQy51r17IRhdQiu5ObhyxAhceYGRmjUapJoFE3yQJ6eZiaGw5F
I1M4hbLfSQsw4+3yl5OKRlEK/Ypj38xhijeZ/6lqNGYVZzlF3DAH74OKbyXN
ovFiAOUlR01zWD/4L/GhRzQS7NKKkxtmkHio5uSJqGicbVkV/FthBoyH/b+V
XohGx6M6ayUOZpB9WOTGkYJorLeLtp9jNwMBvmn1guporPNTKW7vMoUKvsJ1
3lfRuHn99RGZOFOQ5be5f3MkGieav27InTKFVn4uC865aNT0cqDonzcBXYG3
u69tRePiuQT8e88EhgUu1DMzx+CnVNP4aisTcDqi5ZXFH4M2aBK7xWYCC0eo
eehlYjB9+emPdz3GECr4sidFIwbtapqMz6QYA5VQRDSVZQzu2r5rKaJoDFlC
MmJxpBgMcN7tVLphBJzCP79sxsTgeAn56oOnRnBPuOxi+OUYvJXh5y7jbwSi
R10Vf9+LwcDMYwZqokbw7CjfckBNDIpNPlgZ+WEIKsdGC5Y6Y3D+3PfJxRJD
6D2WbUj6FIMaX65cSHY2BIvjhlQ/FmKwZmrE4Ra/ISzvS7F4TBaLz++wLotN
GMCp61NVP+liUV8qoBPyDSCKXYlenDUWC63uuby2M4Dm63mO3tyx6JtbHdB7
yABoODbry47EomhIR43WuD7o3LBgmxWNxT+GU2MKBfpwmaPW66hsLF4ckBgp
dtSH9zf2tbkqxqJAja1D4hF94OEM4CnW2lmvv+jK0Hc9cMh+EzRlGIsh+m89
c/7TgxJO0V4+61jk2L3N0kfSg/nsDEF7l539DvDPBknogSTXTHSeTyzSBcvm
7p89ByE5au9HQ2NR8MhH7qOB56CR654Yd3wstgonKbFv6QJFLnmqRUYsWlZy
2I6n6oL6ftux7Kux6M6mfSqdTRfO5zbIvr8di64uRfJM+TowsH//pX0lsZj+
rV04QFQHOG6GzBhWxqJYYlbQ4wZtsD4wpHi5LhZTAq1M+s9qQ8FNydw3zbGo
a9zwtfvjWfh+4OIyY3csqt41Ki72Ogsit+a1dIZikXTF4obtlhb4c58tzPgc
iwyG1A3rF7Wg5lbpRuf3WDz1uP9MgIAWbHLvMqL9GYvPohUb3tRqgtJtxzK1
v7F4j+W1G4uuJqTwNFElUcZh3HHuW3JTGtBzm9e6ZU8cmiXsIjQiNICFN/IJ
OXscHlIcKEZWDTC9M8KAB3fwCKExgTJ1uM17yiVaOA5Pz6pWramqw8Sdq88b
JOLw4PY3Uu2YGggdXGbfOB2Hq9SNV70i1YCUd85HTiUOZ7iko/dxqUHVwfJX
ITpxOFdtH/PkqSr8ztt96KlJHM5L3+04Z6wKCofcQldt47CercX126oKxN9t
eyPpHod1wb5bEddU4NUh/qN+/nFoshFuy3pKBRjyY+MeRsQhnLxY+3BEGQwO
fx6ZT4xDvqMuZw2jlOFGvrzkiaw4PGwm00DGpwyjh3PSPW7EoXX5F8n6V0rA
V7A2UXo3DkfZapcSvZXAlc9I/vv9OFQXDa6wY1eC8oJHV448jsNFSy4a/ReK
sMy3d86xIQ57yf/LNXNXhFOFXioFbXEY9eJPQxibIkTxv7411huHtVbfm5++
RGguFPrFO7yjx4IMJYs3Ao1Ako71eByerIt5e54bQefeRNHNH3EY+shU2Swb
4LIAbo2sxGFLlOLipz8EvL9324RzMw7lHeMmKqwJ4DmyUWGyKx4NzYuK37Qo
gEORGc21vfG4VdserXpCAUqOPLUd5IzHrodRu5hunIH5ItZaZr54/OelfFGK
6gxICvox6R2Px/Li1WNVAfIQUtzrliUdj2k+GHX+62loFDzR1K0Qj4sDLFfb
zU8DRUkaF716POZte/xn80YO1IW++2nqxaMBh1aVqaYcnC9ReZ1iHo/7D1ld
fNQqCwNCBXztDvEofl3a1UtJFjhKt8OpvOJRV87gSUrzKbAWth5UCopHQTWS
K6XqKSgofXY8LjoeSebJlz53ysC0MGfii5R4JGMpO8ypLwMi94M+bV6MR71b
s6vlH06C/9FB6TO58aiWuqFwx+Uk1N4XPx9eGI/vJx/VfluVhs2jWV9ry+Lx
6+EOpcQkaVD6b1bh95N43F5RUgvklIbUY5rXT76Ix4GHEqVV5VLQ81/xQkBH
PJ7OlW6QV5UCluNU6lX98Xg1MMV1zxdJMHtgn7f0IR6psgLkD0ZIwu3jL36L
TsXjLyf7r95ckjDxgFuPNB+Pt+t1aH/XSYDwifDSB2vxWK1KrVBlJQGksvdk
P7bj8UopqTSXXAKqTpw0F6ZLQB46ccEHpeKwXnb5kQtLAt7ZznX4pC8OCiJL
dEUHEjC9zbz63F8xiC/XcZgUSECtQQM9BmMx6BB58OywaAKeVdQzmnosCgwV
tKx2pxIwhfu+ahu7KBiIunjewQT8xr38426UCGRXtLR80kzAX4GM+9ynT8Co
6GHuA4YJyKnCoshoegL4HkYHmlsloE1JJ29M53FwE/vUfcM5AWWyh44/gONQ
/lDuyDvvBPz3aawsoe4YLIvdiGILTcCZUJv+XzLHQLZydcggLgF9GNoEF2uO
QpS4geil9ARM8DzXY3vmKDRXPkzuu5KAK2t/xGRahYFWguELw+0d/F2Oru05
YdB55HFKuzgBgW7aonNUCC5LdFxIf7jDb8zFx8FHCIYfHZnuqE3AnGPfr3FQ
CQGPZALSNCdgqFl/17ubguBQNZat2pWA9548DjovIwilksTPhLcJuEjekSr8
9gjMV93UbB5NwD063C03Ao+ApNSffLLvCXhjWryzneMIhD42+Uss7fBxPZxf
2CgAjVLVBlF/EvAi/ZOZ/S4CQFHN/KCeIhFZSu3NuZkFQEPah/IvfSK6fFI7
dO05P5yv7raU3ZeI7MstogHe/DAgfaw6mDcRE+P+eBUe4gfOJyl7ngglIo3u
f9nsQ3xgffKr04p4IvK1vR6qy+CDgidKjRKnE7GyfvxhuAofTJ+8u89XORGX
9J8FaG4fBpGnm6QK7UR86b74iK3hMPjLWLbPGSeiVS1zXXf4Yah9Wst73DYR
qZ6bu9vJH4ZNGfYQd7dEbGR4f/v55iFQqgnoK/FLxC+moYLvmw5B6ql+oW/h
ifjjguOFmymHoKdGNFYgMRFnxrLsNnQPAYts5rDD+URcZKOjmuY4BGa1M+L5
1xMxz8Jlraj1INyWVU/7kpeIrdP2L62sDsJE7b1xnvuJmF1LVTG0xgvCchSn
raoS8Sy7G83qFV4g1dlezq1PxI7H/J23pHihSq7xx3BrIj46ePLH0yEeWK/b
r8zRm4iZUqR7guE8oHA69Kbx+x29zFMF3x7igfhnQytXxhLRvL+jrqSTGzpO
S2kPzCRi1GOP9tRAbmCov3iPaSURDYOOy9gd5gYD+YV/uv8S0bJUSYvjzQHI
rj9rfJ46CRveZf29HnsARuXvl3cxJqHbeYW5LskDwNewa9duziQsI0rE8r/t
B7czTjYah5NQh6KLm/LWfihvaHqafCwJJRYDhEcN9sPKmYN726SS0PoCfRkP
/X6QbYx0pVRIwpIm++CqVi6IUvjwQlEtCY+ok+1Nj+GClsZTnLHnkpDH1uzT
VXkuoCWu+T43S0KTypnvTeucoPN8ueOffRKej9fJp6zhhCuE3mF5zyRcT80K
1gzmhOHn5WFhgUmomXU1MVGGE3iAfqAmKgmtgoQk7//mAMcXbsfWkpPw+ZLq
6n91HFAK7fHSF5MwkuRSGxHJAfMv+D/65yRh23jSC2bkACmMk3pUkIQM5MUb
dlQcEPryc8bigyTMubddbNPJDo14ZkrkSRIuZpo+2s5iB8qmnDNez5Ow6JXT
6dPG7KCh+Pvqf6+SMGtAjYOOmx3ONxnNT79Jwvm6cAf7yX0wqFilKvQhCRcK
zCTkH+wDzua9d5wnk7AlLMX7YsA+sFYirRXOJeHv6OD7Zmf2QWHza92JX0no
EtXCfYF6H0wrCZcc2k7CDN1l5xN9bCDSkrRtQ5uMHXRNMcdz2CBAedL0NnMy
xsiMXUlyZIPaFqz8uD8ZX58W239KlA02le/Q7hdIRl1rg3CFP6yg3LphZyaS
jNJKvcLXW1khVcW87rpMMs7MFdTIX2SFntanzEOQjL3X2P4ctWIFVlU2D1bN
ZLy/mHHZRpgVzNr8mvUNkvE/BvX44VUWuK3at/+iZTIymPz871oTC0y2nQjo
dUpG9XvMAZezWEBYLb1rj3cyXt/M7O61ZAFS+3f+syHJKEd247nmURZ4rKYa
mRabjD+7J/gpfjPDenvB21dpyXhHKjT6TyszKKiTiey6kow39f+UiVxhhoRX
1kkqt5IRuBXv37Fnhg71+tH4oh1+mZFF2uLMwNDBKdNUkYzBZ0PkTm0zgaFG
cNZ2TTJyZRlU2fYyQXbH4DeFpmRs3Suw+Oo2E4xqSEDk62SMfTyx7ENiAv7O
rBvPBpPxdncDuZkCE7hpzi2uf0rGg+Jbl+MZmKC8U1Pj1LdkPFfg6zRevxdW
NEvuBi0mY+58f5Sq9V6QfU315/F6MvrR6N49uc0IUVoO+svkKXhqyNryaT4j
tLx+cV+cPgVv1smNvVZhBNqzPBQ+bCl4wuWXW9A0A+h0hVuU86Rgjjc//7NM
BrhydrhqVjAFryRFEzclGGC46yT9MfEUbNsWenzw/R7g0b7i6CaXgitRt79r
RO0Bx+6l+mKlFDxn8OADu8AeKNXWZft6NgVtaDImL3XRw3z3Ay9+4xTU1t73
qDGAHqR06NrsbVLwb+Xa5E1uegjtceG565qCHx+SFYu074ZGndagz74pyHI2
ZDPIdzdQ9h7u5Q5PQXWqCoewA7tBQzdG0DIhBR0s6h8Rr+jgfO+n6JzMFGTm
EXFtDaCDQd3T799fS8G8OKOTjIfpgLPvhhh7Xgoq+VpEc/XRgvW5XylGpSl4
v3awZCGKFgr7DMYuP0pBGc8rnukitDB9rlK2/1kK/ufAeGZxlAZE3zBc2tua
gqg7qMh/gQYC9DxndHpSkHfKg45fkQZq33QoZr5LwXjerq75lV2wpSeY+/pL
Cpq4TOoll+wC5f6EZdqZFKxyadb/YbkLUvXHtdSXU1DZnO0tN/Mu6O0nCpM2
UjChhnds/ytqYDW4tdFClYqc0+Nqk1HUYDbwx5CCMRVPFZfUBJ2khjsGpmXI
kYo/Su0L++epYHKgmirmUCo+Pspy+1cxFQgbslg3Hk3FXPWx6lE7KvAe9Hmy
IZmKwxUc0ukHqOCxYQ/D6TOpGJvAp/n7HSWsDx5zCVVNRYqfhDjfFUogjFKf
P9VNRY0P3WW0epSQ8PYr+y/TVHSiGFK9z0AJHUbKPlL2qfglz+/wdhcFMA7d
feXnkYpHjN+JU2dQgKHx1sHKgFRkCpyMf6ZFAdlDlqELkam4/LKujZOeAj4b
1705kZyKrZwOfge7yYH/HftRzwup6CGmn/bqPDm4mQTG3c9ORbHNPjZGPXKo
eNc/8j0/FV9FlOcvspDDiomYpOCDVMzM8p5weUcGsu8z052qU1FifD7SJ5cM
ok1/TBQ0puLd5gd7qG3JoOW9uvx4eyrmUbb+4RUgA1qzoisH36SiGY/pdszg
NqE7TDFnPZKKFk4qF5pst4krZnYqtyZS0ZDH1Onf3BYxPNx468NsKv418uni
j9gieM0P/OL8lYrm5TkBUru3CMeRUB3TrVSs5Ly971DuJlFq/q7oGk0aRgdS
in4+tkksjEhtDTKl4YRKTIRXwz9CyuKSCcv+NMx91BL8UvcfEfphoUKPPw1p
s3yVBsY3iOcW2jQXTqQhGP3tzg3aICg/3rftOZmGDzYmLVh3bxAaljS19JCG
Vi2fMk/m/SWyPjoxaWmk4XT7nZt/pf8Sg5bNbqn6acgcGddl2vWH4Px0sKnd
Ig0Dan9WGzr8IWysoriondLwkL5m0uSfdaLw0wc/ZVIahrtMeFNfXiemrWRf
xwWnoe2/A7qPj60ToqPX+F7GpOGGgl/vTMtvIsB6JXwrNQ0fN5izF1v/JmpH
9QbPXN7h09nT8fX3GrFlXXE84mYappgTu0ourxHKn+kT6+6l4UV5ctK0yBqR
auP+6Xd5GiYzJpeUdv4iej+3S8vUpGFMk/jUlPMvgtVW4HzgyzRcyTnTXUjx
izD7Eve1qjMNjXgiT0zkrRJ3bL8o/BxIwzcPixnyFVaJyS9nrot9SsM9Ad3z
4x9XCGG73AXS1zSUMVdoLA5fIbzHfquVLaSh6tz2h59cK8RjO+O8H7/TkK5i
lKm9bplYH6v6LUyejr009BcELZYJwp5Jz3V3Oko4+31n3/hJJIyTSotY0/Gx
YAHtzVs/iQ77LrIp7nQ8eCNMtob4STBOCJvzCaZj+MOQ/d7jS4ShQ/IjO7F0
fKJpNdyeuERkT0zS5cmmYyTFB90O4SXis4Oiw6hiOt7iEPhvNneR4J+88+zA
2XSkYopzKf66QLg5/mOxMEpHAV1B5zcSC0TFpLlntvXO+3r/noTFzBMrjjUt
71zSMTBLV+W/3jlCboqNe59vOl6jWLrmfXCOiHbyDzQMS0dnAx2bQb9ZomWq
r/tSfDrK6b72/dr2g6BzFjnyJiMd+8pPPn504Aeh+zU9ivFaOpocsGdSDZgh
rjhPD2nfSUcj2VmPsu5pYuSrqmhGSTrq39C4uCo0TfC6FCZ3VqZjoQzniWNJ
3wnHb2RfaJ6lo9jpvnrzqW/EfRebU2ot6TjL/Cr+guo3YuFb/YXE7nRMM6iN
fl/6lZBy5ZpuHkrHJuoyKwXGr0TY92Ak/5KOGiJe3t1BU8Rz17fZMJ2OBhkR
dy98mSQopyV+Rv1Mx7/fb/peOjtJaLpd0Gz4m45K8jNTH+smiKzpufy/lBlI
z3chIfTYBDHopvVXliEDeS7xnPW9PU5wzZQYhLBn4BPt2AddLOOEjTv1gycH
M/Bc7K2Yy+ljROGMA+WqcAbOGl2n6aYaI2bcX1pKSmZgllnsq02KL4ToD55q
X/kMFJ5wPeRA/pkI8IjY81AlA+e7TzT3UY0SdT+GneZ1MnAm8lK9NsMnYstD
pvG4aQYm5cWtf9z/kVCevbLPwy4DR03aruSIfCDSPH+SSt135tv2vvFWHSF6
Z3Xbv/lnYMCr9Kooh2GC1auM90hkBvK9Lrhbl/ieMJ+jC3FMysDqyRRa/rJ3
xB0v1778rAxsDtxfWjc8REzOtQqN3cjAq64nJiJ2DxFHSXyxvPkZyBYk1OKi
+Jbwno8ZtvovA3MPP9wVHDVIPCaNit98nIET5BK8954PEH/mT6eNNGRg+Hlj
2R9UAwThnT3O0Z6BcceUNVGvn0hY+CVn0peBc2n3WG/ffUN0ehtevjqcgU/1
XjnNzfYRjIuVPwbGM1D9yMGGkLu9hKEPozLz7I7eqvaiL2x6iJxFz5vnVjNQ
cbSDpluwm/js07lyfjMDX760uuO2/prgXxLU7t6Vie+7pZaCBjsJN9/Ee7uZ
MnHsUoXMYE0HUbE0/k+DKxNdaZLJbIpeEau+YJzCl4klF3S1l2+2E7I/b5W3
Hc/E5xQGhR4324hov7/UVCcz8bx+sfTdwlai9aepjRKRiYzBTkse1S0Erf+T
p7Hqmegs870gv6eZ0F1m2ftCLxPTr/7eu3+xibjq7+u6aZ6Jvp5vGO5zNhHD
yz0v5B0zkbg+nsen9ZLgDTjOGe6ViffMI/mqd70gnFZSfWuDMpFeRYlHJbWR
KA341rEWnYlmK7MxOZwNxMKK8uGTqZn4KLek2bTmGSEdmB8WcCkTU+8/eXrY
qY4IXd3qf5SbiQWGXU9yeGuJ54FWx5YKM1HvuM7Vc9+eElS/6uJFyzPxWdcl
yfFnTwiNII6PXk93+P+jGz15q5rI+hUo9eBFJm72rvC8THtMvA0ayJjpyMSj
OrS3+BKqCM41sSmhgUwUoSmNIUt9RNgEnz/j8jET35YWXt+8UUncW/tx9d5U
Jv6vOyGVt/9//T82INjh
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
j/8PthZodA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde3c4l3/0N0VWA5WMbJJVdmXc55CZPbL39vnYe+/NBwmVQimjFBJCktFC
JaNBioyKivI1SsXj+eN5ruv3u/+5r9d17vN6v97n3Pc55/3Hze/sZ+K2jYqK
inM7FdX/vf/vS/4TJVlPwAH/Hxb/L2950dMB+UkdF7RdOgkBqgLXs3UOGHSz
QrsppIvg2HVuRGHVAU3s8ha2n+8m6HfpC/jwOKJ7pUO1a38PkXTWYKxD1REv
So01ejA/IjY4jPKZ3RzxHBNHU43HYyLysvEp53RHXHLLsMgcekKsHDLd1ljj
iLyT8NDDuJcIuGXWRjvgiENBwn4Zs33EN1nzQIslR9zV2Wm0lPuM8GizELu+
3wlNObE8zvgFMY1WU+vHnTBzB01w0/6XhP0T62I9Wyf04//L6LVnkBjVtzUp
jXNCd4XV4HS2IeL0iB3jj3InlFXcOBoiPky8tHboVn3shFxvZHNeGowQeh8d
I8/OOeGdo86XdBNeEU88nGVmdzpjrOZhu/Ce14Tagsu8gpQzsjXqJjOxvSU6
gt3K002d0cHVNfhOxChx4o+79VioM5YunKeVWBwjGhM8WSWKnbGH7/pZh7Bx
Qoqe1Bdz3xkHRazKB1g/EDU55MSBSWcc9m5lPdo9QRza76PIT+OCJe8bFxR7
Jonyi75LgSIu2Oyw5KRc/5HgFvC/8fCUCzYMGDslVU8RF6oDnNl8XZAc4SUX
cHOa2Hc0iNPzjAvmHDT/l9I+Q+Q2BQ+1NrogBPe4yY/OEkzKoZlMb12QceBu
LNX2z0Rqd5ia3R8XDNnBPGCj+IWg1olYr+VxxftNX67cjJsjYgYiG6jUXLGe
cdU9f3ie+HU6mmTi5oq+hYetoxW+EcHjMQLX0l1xmYVB5mf1d2LROW5spcYV
3wHXkVTxRYI0F5+vNeCKg5Jv+RwdfhCf/BJPXVhyxeKgceVz0j8Jp9WkbV/3
u+GE21uNlp1LxHh0SpvyCTcMmHSJ2fFzibDcnhaYY+uG6nsGhkY+/EcMZ6SL
Tca5YY57TYXj62XCgDlzSvqqG2qNj7Vuf7tC9BVlFSc9dsMQLW7e/TOrhAY3
xeTVnBsy3RHnHFtfI7qu5jCK7HJHucWg7zcP/iaUxfK6w6XckTdEzOCzzjpx
t/5MZJ+pO45eMpT7mPiHkD12VuZgmDteiku7O//kL1F7v2Dep9gd2xrkLKw4
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
R9xcqGGAtp0lT9ZZsvH2tXP3tYQYwNq3RH6AMxvXByuNFkvo4ddAydWrgtno
7ftKfpqdHs5Ll7KES2Qj51diUbiQDhTOlsbpyWfjQhZPcjsrHYwsl37nI7Jx
pV7asPrMDgg2L7NZ0cxGqaO3PL+y7ADWlrLeXsNs/NbWkpB9lhYaOC4fK7XM
xl9h909S2GjBKOpyRaBTNp5qdzf/WUwDP8Yv79UiZeO4W0VYOx8N5BBXEriC
snHbDvXQpartIHH5yuJiVDZa0mRKnJPaDs+oy+0eJmfjnhs/I2vbtgHJpbz/
PCUbDRaX1ZQ1twHjo/ITPkXZOLWqMXNymBqqD12tUi3LRjEX4b6nTtSgmX51
P1t1Nh5kfR8w8JMKPs1dTZqvz0Z34R9q1klUkKx77WdHazaK3LSg+LFRgdCt
aw5nu7PxUbxpzWHzTaJ7d8Vzj/5sNKpRNs9P3CCc/SuUlEeyUZCXLZKn4R9B
NVRxnfl9Nvps2239duYvUSpbeWB2dkv/2KEXTzn/EkRhZUrrQjae/LJb96fp
H2J8tfI/ylo20otS5szz1oloyyonZyoK7vETGPo38JvgbKsaUGCg4NpToP3C
+pto46pWYWKloPiSUzev1S/CMqa6ZoKTgraxUe7l5WvE6odqjkZBCj7I1XkW
srhKFOH1tHQJCh5hI5cUwyohV359xVaeghp0mzL7z64QI9tvuEgTFDz1UH50
am6ZCHS7MUirRUH4ECbDqL5MMD+5AWOGFPzSudc9+cp/RP3hmlu1lhTM4Ekx
t9z2H2GQWcOV5ERB3ts7nWLdl4iFrzUZFiQKsir+e7b2/CeRrX9zTTyIgqXq
0aceHf9JSNTddKOKpmBChdXhicofRB/zreGRZAoa7J2s0mL/QXgG3lK9TqFg
g2jiu08ciwT9yK26mKItfn12+pcMC0SlfC23SRkFgxlK/Y9TfSc0z9VmHaqm
YNilh0V7/30lZn7V/l6vp2CmNFlJl+orkWxd5zHQSsFBJVLsJ4Z5QqC97tXV
bgqupofQvuaYIzq560+G92/F62KnFZPUF8Ixrv623siWnnzHFn+9z8TGZD0v
/3sKep/3/rTi+4koVbtNWZmloOmnO30Z52YJ5Wu3//QuUPDQj6xQzsczxBht
g1fpGgWFH6wdKVyfJiI9Gt4EUuXg9yKe0E9y0wR7b4OGFkMO2lXR718PniJa
xO7c4WLNwTNS54XvtX0kzLPv8P/gzEHFwaaD+3Z8JFa/38l9KJiDazUcRQvm
k0SBYeO/8xI5GDH1scvKeoKQud1I9pHPwf57E8k5LB+IIdamUVUiBwM1b29T
Gh4n/IObtNi0crDbP8edr+wdwfy6qWneMActtCyOSYaMEbXHmgUfWOYgT+rP
Np7To4TBheYzZ522/Nd3p3cTb4lv682bHqQc5M5PqJ6VfkNk2t71UQ7KwY5H
/90yO/KaEOu4+445OgfFRTKvDsu+Ip7ytujMJufgpPUxqeNqI4RnQsvdVkoO
FhxjtDCzGiZ2TLcI5xTloPQtYZev4UPENfXWs85lOSjsJd3+9PIgoV7ZSn2s
OgerbSYf3X35kpiia/Njup2D/8rafibRvyQSvdreT7TmoNTg39KfuS8Ivv42
3cbuHEzSTzGs4H5OdErca03vz0Gti5Lsf1v7CfuceyJ2I1s4L4XZ27WP+Lt4
r1D6fQ52JkkW5xzsJS4Zt2/f8WkrH2/OfP/38QmheKc9YGxhS2/tLbnTjY+J
sX33J2rXcjDkt8c1qbOPiPDQ+/pJVLkYmpVeIBn7kGB/e/+eBUMumnxQLZoP
7iGaT3SISrDmou69EtHtYd2E2cWOc1RcuThWdVGKLrmLWP7bQftKMBcLlbyD
n13sJPLtHwRdl8jF//ETRn3J/8f/B4eKi6c=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxde2k4V1/UtilERCRzMkQkJDKetczKkHme5zHzPM8zPz9CSSUkaeIvIokU
EUpEo6E0SESkDOX1fnjf63qe8+Vc61pn3/da995nr70+7AMuASbuVBQUFBrU
FBT/9/2/n4dOOg8lTjvj/7PPkZW+KJY54wcKpcZV1dtE8CPJXboPnfG4hfwd
x7AG4uSqgIzFd2dMZBBfVuhqJATF2C3cOFyw4z1fdbNgE7FuTRcTjC64WG3D
3HHuDvEiZ/1ioo8L/mwd8ykVbyGu3Z9/lF/sgq+VUhMkR+4SyT+mZs93uGDs
qLKpekkbYXNglLn+qwuG61pk3wttJ46a9sq27nHFY697J00COwiGtDarXhVX
JM4KtctrdRIfmm/EvfRwxSd5jBECLl1E29dLlz+SXHHzd++z/woeEmTu4t6l
Nld8JTtmTh7qJnz1M75vzbjivpDKq3f2PyY04qNZmXe74VeXc0eWU3oIntv+
8ryKbig4+rfx80YvsTztZCvu6oZcTVL91zL7iKdsZokKeW7Ymddwg0PiKVGl
pVOj3eKGhytW/sx9HCBiIpT6zabdUD7q+zf6piHCtE7yhwujO0or3RFRMHxO
SLwVYA+Sc0eeAw0pzKeGCWomdsUER3fUuTfoxmn/gnhL0DnkZbmjSv0VbI0c
If4LXE8u/88ds+kMaQMujxI5l+dr696745T1xZjeNy8J19GpgRY6D2zmVjSx
ERwnlGlHlx7LeGDP2fTxqqhXBJtCL8eorQeK8invwenXxJx3m/KHNA+kL+c1
Ilm/JbrLbzgt3vLAjF+3wlQ/viPKBy+l/XvtgXubSdSf4yeIkK2ia7toPDH/
DGGQwDFF6MlkPOM+4omPUntUGX5PEUKu0StiVp6o1tDn6jo9TWwU+3MdT/bE
1z3z8PHlB2Kkx4nQuu6Jd8fpLHtHPxL1f0xdTcc88daR9x6WEzNEirhOpjOF
F+aSDC7N/fxE2Nop3QgQ37Yl7qbM7vlCyOZLvogz80LKMxKa0cRXgrFT4HdO
vBf6UWXb/QubJT4usfGeu+qF4F14urH1G3FPiE7t6gsvpP9Kcl/c+Z0oMl93
b970wo7sgXhmz3nCN2M++9FBb+z9IS1hNrxAaLRO3Xph5I1lK3IjJOFFgmdu
ZHQq2hsvxk5MuHxZJJZ5e9cWqr0RkuKMTzUsEU8N2/j/DnljeyQQYck/iarE
GxqMa97I/81dY4ftMhHTeMmLS8gHt/YPRUoprxCmM0V5ogY+WGAz91ZI6Bch
wZHRKBfhg+2GK6+39qwS1LrR4xqVPqg5v3F4neE38TbKf9P4qQ8+ElgnCMY/
RFO90wGnXz6YGxU+u862RuS+N9U+vd8XJd5f+WUjsk647dbxjT3hi7bJLRLF
sEGoqCmRskN80WnHbnzlskmwh0jeKavwxbpzmkyOBX+J79UCb670+uKpQS1q
28f/iEdjbFtNS774PHS+PIGKAs7T0wl38/jhrLu4v3otBYQqresOa/lh7Nvs
FXZjStD3m/efDPBDe9foSmYKKhC+MEWeP+uHpWrXrfWbqGDz2UjLRrcf7tsb
OrfkTw2jlL3vdi74YYXykM1+SRq4LttGycnpj/TxMbrLSzSQ6n7j4EF1f8Re
w7vF7TvArvSS3jE/f5zXj5URzqOFY31Fgeol/jiheXa815UOdm2knzHq9Ecl
Ia6yOqSHmcPRbQ7f/JHThPP7ktBOaHfwn/RjP43PCUbvXiYGKCY50cQQp1FP
5sxny38M4PfQ9FCW12l8YsGq8vIXI2iuaBuWkk/jztgOfreVXcB7UCmkpv00
vlRzHFBYZ4IVS8my/z6fRpoGV6pcut0wkCVwv4slAGXLuQv0mFmg+h7bh2dK
AbgV4t3de54FYudp6SbcApAp3feSqRQrmO1fl/ieH4AvJM+Ys/awwmHjeaP1
uwEYIpAZt995D9CkTIXRfwzAsp9NNecp2OD0G2+DHNpAzImWrbpZzQY2IR8d
yTyB6KBywTDCgB20d9kHn5UORFPDjQu8G+xwtGYs9ZJWIPYVio913tgL/IRR
aa1NIHJK/+dc6M4BDON9dTcDAnEm79yeFsF9sBqg0X4nNRBPSS2ftPi0Dz7Q
3x9qPxuIdLfC9pTf4IShSvnp7puBaEtoDDXFcEGb0u3l/u5ATL9q3/jiFDdc
GTlE++JVIC50WH0VFOcBsl8V5+v5QAxbdQkfZ+CF+B18ElNUQVjOxHZS8Ccv
+FwoUf2yLwjvL2Y8VJjiA4vjLEYLh4NwUHgy3uAlP6g/z3L5pRaEX4s1SGXD
++GIN3XYpkUQPuLBg9d8BICbKi6D2i8I3a4t/LRbFADa8tWzDElBKMXPWPcv
6gD8lA28zloShLKUaaG36QRhYmC2g7M+CK9rCl3IOysI/e6uw/s7g9D8HZjd
kRKC5n/vPh58GYTpc7TUOv1CcLnUYlXyWxAGHlK94+otDPnSz+nltoJQSfku
nQSTCET3neBRYQ9GTyKe8/4dEfBw6ZbUOBSMhy6qSSi5HgSTDRU8SQSj48Ed
yQ/3igJR3GxibBqMH9zoyJGDoiAuKe1u5RWMrGZpL2OzxYCjpy7CMS4Y6fb+
SljSPwRUjkLZHuRgZI6mqPnNLg4Lv8+f968NRofz8h6NH8ThLYnjVmh7MPJZ
xLqqN0tA7yFSV8xwMEr8WqrvKzgM/z3cOZr8ORhPTeqpegdIwkXblM9ZG8HY
IxPZrG5+BHJWNv+QWEKwWnAqP0JNCiLywhnLREJwJSJ5ho1bGlwPLvJdVArB
7r7Tn1pLpOHUA2/pK6dC8HOH/p/7HDKgbPVR/YZbCJadESySPicDokt25k1R
IWhCMr0vcOAosGWPed7LD8GasNabFfVHYUvQKPphVQjaqI3ztyjKwty9vty+
uyEocmnnw+insjBupnHx+WAISn2V0P3jdAy659sbxj+EoMC9xk6V9WNwK13+
0cTvEAyWyxw3L5WD8v23xz7tCsV55V31RgrykHH30Oz3A6H4wVfnueJ7eQgx
rtpYlg9Fm59qtPzpx8HxGy/zhl4oarv2v6OTVQC9lBIBKudQ5NxLd5t6RgGO
87LI7gwPxWtFJhq8ZxVB6E6WFktOKP5o1jG3NVGC3YbUVvsuhWLMZ96c/t3K
sPE51of/TigGFvNzhAwrw5eE1ViR/lDM2On6yb5UBUY4AwsOT4bikl/VY7Kz
KjxomK2UXQnFMLHJnVzSBNSfdG1S2hmGzfrl66tUAKUf3/Wo8Yfhzk+Za0ff
AKTEWrzWlQ1DWvpSu1kbhIC9z+dO6Ybh381d+fP9CLY3T/yzsA9DYOrbIaaq
Bjo63SwOwWEo8Jkr91yDGshOqQi5Z4ThvN/jYW0xddgf1Szndz4MH9oaf5es
VAfGPdK6IQ1h6BHY0m7EqwG/r9XZRPeEoe+3xb23z2rARw0h/6S3YfhVu/OW
HpcmPHt3PiFzMQzttFLahMo14V4YB7lgRzgqxh07qrBfC2qZSdUl3OH4HxW3
WGaNFhTV7mypkArHlcsRNXuOaEMCpvRVa27bL7dix+5qg+/rzbf11uGYInXR
9oWWDlgGhy80ng7Hu16HTGhe6oAG4yJFW0o4xpS4mfl46IJUtTdbV1k4Sgq4
blGu6wKP6keRJzfCMUBx6faTghNAN2an8OxhOA4WrCXcEz0Jy6fHTo6Nh6Oj
NVfZeNdJmKQzsn//PRz/bfwL5HLQg6eX+gJmKCMwfMcRp7hNPWhR1Eie44jA
LkaHy1vn9aHqRXvxT4kIhF9FUufBAAp85WvXMAL3sMguG84YQAzN7VYKiwhc
bLpOzZZjCJ4VhwbofCMwhOfzykfZU2AqXzXBnBiB+UaqH9onTgE8413aeyYC
175X6A9oGYGEVwk137UILEss71eoMIJ9lCwcwg8iUODyZ+PKX0ZAfS5LTGI0
ArWbs79SnTKGH0eplY/ORiBjy+l3NnXG8PZprIHivwhc8J5fqKExgV63VUdk
i0Tv+gebU04m8N/fgGAdsUi0Z4oZou8wgYsls6mGqpF4+sIxQW5eU8iRci01
N4nEHnftCtYYU4h48q7OzjMSVcbd7s29MQVXZ4t219hIpH9nSVWjbAan1p8N
+RRGYpdq2HXFCjNQLjoxHXQlEn80ntyo2TID0cPdy5H3IpGf/ZfUZxdzYHus
Qpv4PBJVpXXkV3vMYcu+mTPjUyQaZLcJvpCwgLlVKYn89Ug8WArfwwotYLyg
TvXM7iiUjlYVfv/bArrFhIzOC0ehW0i/K7WjJdzqOu9SpRiFZQWUtjM9llBu
wxF2zTAK4YFPSoyUFWQsF2Q0uEah9z/HY4/KrCAkd+e5u5FR6KeUcaWVyhoc
RVKuP8iLwkfhkXss/a1Br2Ozo+dyFBppK4uVvrIGBcvw4cGWKDy+rvw8VNMG
hBd/fBwdiMK88oxX327bAEuW9+rb6Sjkba3sXOazhc0DH+k/rkZhmpHRVlaO
LXxts+P5xhiN+k+np2vXbGHUdExySSAa02nc4nW87KDz+yn8IxeNTHSmD1zG
7eB6Wp/J1sloDH5/PHdZ2x7K+DXcaZ2i0eWuYexysz2ktrRHMIVF47Psp8O2
og4QaCSfzZ4djXki7h9FyhzAbvbWeZ6L0Xg44t2jkzsdQTf50C3BpmhcM8g3
6452hGM8VV2H+qJxmFwjlvndEQSaeEelJ6LR027/a10pJ9hlUPL5+HI0ln8Y
FfbzcoI/n3avEfQxWJxe9K2u0glm4rMYtfli0LPhEN+/N07wfB81v8HRGKwt
aIt3Y3eG9tux0mY6Mfgj6O7AKwNnuHpiVd3WLgb9msVCLTKcofhDgLlLUAzq
KjnPvep0hsSYWU/v9BicPEtTarvuDH7srtGB5THYiH7Vr2VdwOrGu9yI2zG4
KmskYujvApraFhfjH8fgGcrH+5quuID05LOGtDcx2NlOmNBOuQBv5IlHuT9i
cMVnMBO4XIGetXusiCYW1xNZbG1MXGGlTmX2HFcsKl0kDI1zXGFKvXmj8kgs
ansMDPM/coWBt1LMdRqx2OtZwHp/0xXuhtYJ3LaKxakLDvoH5dygmklItsU/
FtniW7LN/N2AdOW8VkdyLPqEVj1Vq3GDWOCwelwai9kfwn98eecGXq8KfAau
x6ItJX0LsruDWdDOuJGuWPSIn/uspecOyJBS8GYsFsNL49iWktzhcNVm5fRc
LNK1tT5VvusOnCrhTV8p4lByqCx9/4I70Lz80fNjbxxmdnW1nBHygEV/79er
4nGY/iv5QamVB7yj/Tj3F7a/3/RY48/zgCcX7f7RmMehx7z/deEuD2hSGGPZ
5ROHN05FS19e8YBLw6eE2BLicOBLUS9J1BNyffrkuIvjUHyA4tqstSdEUmvo
HqiLw+G0lwJXcjzB7Xy7jVhHHHr2N8U/aPcEIzl5f6mRODzC0LdXat4TVIZu
Jch/jcP722f7BV4vEPM8RFb9G4cMjU52q3pewE5RVa25Jx5p/yovYbQXUJzl
bdETjd/uNzULemu94LtMSZ+JSjzq3L04mDLqBa/6d7+zNo7Hw7x1rgEU3vDI
NWvBySMeTZ0XjqRKeMPtTSpKr5h4XPwjvb/d3BvOn4llCyDF48C7fWasCd6Q
eWRVJLwmHm/b0fyJq/WG0N4Ahbi2eFytfxW4OeQNTk6zJ1OfxW+fNywNMn55
g/6ai33OTDz+ts3X4uLxAQXyuwDyWjy+6mzHG+ADwhIWyWeZE7B+eNiScPUB
lkfPii8JJWBX/9Px3jQf2LQ7UVurkIC5WmsaWrU+8PXXw9abBgkoPslp1djr
A6P5KgN3XBLwhJszC+MXH+gUbZ5oj0hAvwj7Er0dvnC9U2qpOzcB9yefsg0U
9IUy6zrqp5UJ6GOuzx5O+ELqT0GOF80JaB2o3mBt7QuBOefFXj9NwDv5gU6c
Ib5gJ8yhPDWVgKIeh+pv5fiC7v0Cgy+/EvDI5O1jfFW+wF1PIx2xIxHH5yPX
HVp9gRSh1rq+OxFFqnOIkCFfoNWMV4/nTsRUx535Vh98IZbl3lNKkUQUU8u6
w/TLF36++22WJpWINKw5PYW0fuBVd2yCXikR08K9WWc4/GAiLMgzVzMRs581
qdIc9AMz9ZuLu08lIq11r8hPWT/oZ56LKrJOxNAEkakb6Af4VpR6n1siVoip
vjqu7wfNtW65504n4ozKo5skCz84HFq5lz8qEes97iq2OvrBZZy4UJmSiJvX
eCsbPf2Ak4lHTCQ/EW9MbqjGn/aD/NeWDVfLEnEhaOgMX6gf0FwpVjpctc3n
JhtLjvSD6ODh7ls3EvGxbtbSRIwfLBLMBrJ3EzHgncSRHfF+4MGoN9b8MBG7
zcgkugQ/eDee4ag0mIjn3jtf+7rtN6l+9PX++LYecXQ69XF+8CSQMljtQyL6
P1DUN9nGI1SJjUffE3HlxX8DUxF+0LQzJlX3dyKy8+lR2IT4gfhYC9MAZRIa
Zjuqdfn7waXLKyWndiXhJckTDNzb+XAEyAiMcCShzofSdc/tfHOVT9dZHEjC
8fHxuze39aCirz/6RiIJWfa/4P65rVfk6Jd79vJJ2FGfuCan7gcLl4S1pjEJ
KX/+04yX9wM3f+chN70kDGR6RvfskB+8Ubxg+dU8Cc/mlJof5vUDI9q3U75O
Sdj4kO3EOSY/6Hmxz+eHTxJa/Q3ay/fPF1Qumi0HhyVh1HOPubvzvtDoWxi7
mpCE+n6dFMHvfEFMYWhHdHYSlviPF+r3+8IFGsaCv8VJ6PG+aka/xRfYh3U4
ky4m4UuFWYmI7fWXXZFaSXMtCdnyrKqf5fsChU+XeGZTEsqJbJ6xifKFcPl/
/zE+SMKDZhxyvK6+8J1KWbWgLwlfzdxt5dT3BZdnET17RpOwiWtKy+yYL7wq
bzpVMpGEMuNTlCM8vmDotfSKazYJGQXesJyl8oVHx464VCwn4W5jpdxrX31A
idJ3TuBfEtJbLvkyDvnA7cHa0Gr6ZHS47nHvQaMPHDw381eULRm7PvgGPS3x
gQqPAxn1fMnYN3Ej6mi0D7DJOrBIiSXjDfnWpj92PpC1de5s49FkrH0x/PvA
9v6w9XRcUF41Gbk3aZkbBXwgrIz9eqtOMkaScpuuU/rAnJuxnKpJMj4R47q0
94M3OMvkd3TaJWOrx57YxS5vGP/br6PpmYwG9pPTWOkNBv10w71Byfht1MuJ
IdEbuks0bfRik9HiY1uKkYM3KLomfRxKT8Yztnb9HCrecEuqw8+kMBk99PTr
nLi8QWRz/dfL8mR8diogV2bVC8qfHE+wvpKMk/FU47kvvID1TCj9+9vJeFJ5
z0zYTS/IcG4odLqXjJImy7SLWV7wV3KBe+ZxMo4Ot+f8c/OCkHXxas/nyUjD
1dVSDV4w2+MpOfcmGVUaaPo/cXmBY1F18+lPyXi9vGHj0bInvHSchp8/krFj
KC1Ra9AT9A7z94WtJ6PT77EUnyue0PXHxmSNJgU7Xv06ejzBE44/Ln0buzsF
D9HFN9+09IQbhaNuFNwpqP+99+ColCcIObAupAinoKlNcu01Ok84K24YQSeV
gjc0S5zkJj1g9+9sihzFFKwdv24f0ewBad29WcyaKZi/s7ExZLsebhTQsJEN
U/BniGiwpJsHBNmpnd9rnYIPdDZra5U84ItYvMhZ1xRkeM/o9YnFA+x/td3k
PZ2CtP+Wr81+doeRrt/HL0WmYAZ3eGxLuzucyD/WJZSyHf/DL9+Mye7wwCbo
ZG1eynb9spq/5+kOcqI3R8TLUlCrvSPxj4o71C9/s7t5OQXn9VkuMOxxhwOd
op9lbqRgwG42+V+f3aA01y3gTksKBvvFK9y75wZM1pV/FB6mIPm1E8mR5AYp
IhNJ7QMpyOnUJfTJzQ3WlrgZcTwF6wTdBw0V3SCgw7K4e3pbH9ezoReZ3OBT
djGfzvcU/NopN/t62hVsLYev9K+moPGTW0sUza4wLMQsbUiZilvZpub7sl1B
Z/Fk6zBjKsYLyb/Z7+AK99sz1M05UvEcu5Mi31FXkM169PSVQCpuhqdz76F1
hTpzSnM7iVQ8+VZDgPKNC+wXJCYm5VLxhd6xhe83XODMQrSnK6Zihav5nldJ
LsB4r2Xx88lU3FUZzvvY3AWSMlaifMxTMY76TWTzIRf4bSpDveC4jX+yrebm
X2fwFzidG+STihxMFpu3hp3h4/dre3+FpmL9C/3x9hpnsG79ciEyIRUbDnDk
jEc5w7M0YbHNrFQcz+g2pTJ0Bi0T54aE4lS0NBL2A0FnuMd/QYn6Yip29azO
k1adQGbuTXd6XSreXKdb+9PvBLUt+wwYmlLx6OmtkqiLTsCXajaW15GKZT/b
77GHOkGRUaEja18q2hyhshnQdYKdfENfi0dSkcLgse1lPidImGUI5pxIxfR6
fQmZT47w647ORvnXVKRmqMhzLnAE3+TU1P3LqTjdeODEa0VHmDbsYqr6m4pf
Hly/UD7jAJY8/0oO0qfh45vL0/UFDjD4RUng2p40rJk6LMWk7AAaTRF1knxp
uOcsT8zDz/bQmth0tEE0DTcTB8qHyPYgZbB079jRNHweJOJ7DOyhhuuI1l2V
NExY+F2yOmcHPJ99hpR10pC6KWh031k7KGystXxgnIZc/y2nntO2A7qEmSl1
uzSUSH/KkLRiC3F6B3x6PNJQ/b7ly8HLtrC8z2H5RFAa6mofFUwxtgXvmXOx
gzFpKDJCxVBFYQuTt8d3GKenofIVnjSp7f7IPI69YJSUhhWKl26KO9nA0xPG
nFblaejlGxBewmIDahz5lW9r0nB3k8H50C5raPnQL+54Ow0N9UcGeoKtQfIW
XdOHtjQkP539kS9sDVUxmqoej9NQo0ymYGjMCrh0k3pmn6XhsJ6ze0aWFRSw
d5zyf5OGpNIX020qVrBjev3V4kwatrzYEeKzaAkxN467hP5IQxNHtbLSaktY
igqd+72Whhn6QWc0rC3BU7shNIYmHV2eNfQFMFvC+z0Lf/8xp2PKMRV/vkcW
YDopnpHMlY5GCdbfDaItoK/ek4VWOB0rWM+4UMlYAERWn806ko6atGtzyl/N
4Y7mtCCTYjpSMWdf3rhoDhKs/NdJGunIW5c0oW5lDpXvbeTYDdORY8+f7D2s
5rDvWmlHqVU62qVnPvDtN4O88FEdHtd0fCs1kngq1QyoNViHL/inY6cq90QH
YQZRuw1tBCO3+WZc7ratmcKPt9kfa5LTsY2ljlLzjim4X+31O5SXjrXAXmwb
ZApvQ2lWr5emI8/weUeqI6ZgrKaWIH05HQUpowwV50yglymevul6OibOUB+l
rDMB1Tdthcdb0tGUQX3AxtME/rvym/teVzrye09y6hw0gUMhx6qJgXR0PUH7
oeeTMVyEIMmHY+k48NKl802NMezddbNZazodh6WvBqV4GEPOq2/QN5eOoxuM
Q12ixkBZI9qnv5qOXv7laiWzRhAR5GbynCIDK6ImzlFeN4J51cq3powZeJv7
VwBNgBG4Mky4je/NQKtiCbx41Ahej3Ev2Ahk4IV7zso186fgVJVlxIR4Bg6d
0DInIk7B44BiChe5DDwl51vDQHUKlFWGsz5BBpZJzr9hyDeEBnpmNu+TGSgR
mxWKPIYg+vLk+e9mGegyVvirvs4AKiozRAIdM/CVyK27BooGwHb60c1l7wyc
5pA8crBfH7KUKBUiQjOw6HQju7ydPmzREl3r8Rl4d1rFOv6HHoSNRJ+Mz8rA
9Hj5kX8pejB3sWWEsjgDq/x/z7Zw6YGz34pd2oUMPEoaZLh2+ySMK8h8pq/L
wPUggZFR3ZNgsON0QO5/GXiazi9G4cMJ6B6+9md3RwZmM7n0jcaeAMULX5KK
nmTgpigH1TXOE3DLR5hx30gGilaYCrbc0QWR487F595nbP8fLz9tmOpCOfUF
Pv6vGdhSo0eKXNYB1udvrlT+zEAbqQ8Bh4t1IOP8PmmRvxnI2BOaxSGvA3+9
zFqv0mXiPl0ZBvnX2hAiV6h+eE8mmncIGmfHacMs5dDTW7yZ+I77pckeIW1w
HGIwlxXNRE9pUd7BPi14eU5nolkmE2ke0Lu2BmmBnmeqp5JKJiYcX9cY49aC
LtmuxfvambgUv19F8LEmHKf4F6VmnImSEfuqygM14caAEvVj20yM3Hi4W41P
E4TORuTqemRieNLVZtanGnDWvWnvQGAm8geYsjFGa8Duo0sXTsVkYi2dpeRh
cQ1I+ycpNpKWiT8cYVfIW3XY6PdpsCBl4u4on3vv89QhqLRW6c25TGxT61/1
VlOHL64z3fY1mbhA4flp76oa2EsfMJi+lYnjtbF5k/VqMLJpP+bWlomW9Ouz
j1zU4ETfOcevjzKx6KvXj25uNXhwZvyr77NMzFH/xvBmBEHOhT34x+tMHExS
PbQjH6H+iPFG8EwmTu42eah+AuHARl7q6kImOpvLk0g7EEp7+5mi1zIxLjEn
fzwNgKmYrvQvdRbO0nu7V1MBpDhpCiQxZ+EV3wmb5CQC1g4n1dFwZeHhnfRZ
flQEBK7dP5oplIV5b7jz7NNU4fPj9XuMR7LQMFdt5RSDKtiRj2sVKGRh3LHu
PqJQBV44hA7t0cjC/oeTF4S5VUBXosGyxCALNT/ZDG1UK0PH7/kpLqtt/LZ7
RIeMMhx7JO5T4ZKFD/pC1z06leAayXNZwD8LXXLVQxeNlEDAvjq2OiILRbjX
7Mw+KkLJoekdYslZeP+5BlV+hCLsWuUrqM/Nwoh8TacSJkVIfmjDKVWahcnC
1q1eNQrwJ7+0srFye3ychcQWoQCnbUfF5a9nYWZJ37Lpm+MwI8ra1NqchelK
WY7OEcfBZsVAVbUrC+uS1YQPcByH553ZPZ1Ps/Ak/1RhfrM8aOf1ntIcy0LX
yLqrl63kod2a5nXvVBa2knUrLTfl4OhBNRe9uSzsXdbaf7VSDq7+jJsb+pWF
V9u9NfJ15YD/QVuoCUU2Hu9e4aBZOgbFOb//vmTIxsGjem7U5ceAwepYhvXe
bHRYds1J1z4GicJBLO/3Z2N6QtOTjGVZWF28cdZJPBsbiQP3KC/Lgt/9b4Iz
x7KxmOvsiQVjWfiQJXrdE7LxDqV9gg61LFhZuMnNnchG4cc0l+maj8KQYGXH
abNs9Px7S/eQz1HQ/PFe56dDNt61rG67sv8otN3jHg7zzkYvS+eJqDEZkM60
tFkLycaqs5XKFfkycMWs+GNsfDYeKtEXZNSVAd4Dw34UWdk4+lQ5/D6VDJDn
mVZTirJxM7T5yq0OaaBvO5lAdyEbzwymZ72NkYb49Az6nKvZ6O3itqikJA0r
Jo8Kmf/LRmPqfTOFy1Lgs5+Sh3w/G+8/wgMUYVIwNadavffJNn7jH5c7f46A
xd1oybMvspFymHvflfgjMJDa0sz7PhsD355hfUJ7BNSNV+DSl2w0uFiayFIo
CXf5ZPqEfmbjyOu7O8L4JOHIN3+T2s1sjLnkrDdXfxiqm6+9FafLQV7DJnUv
lcPAnfLF7SZrDkqNZXVMDUkA6ZTwggxvDh45/kZcz1UCaHmdI+4czEHGW3zR
FWviEPu1gkJRJgcPvE4+NFgoDj+b3mS1K+dgdoIR9XMJcfBK2seG2jkYfdnQ
rLz3EEwYmJ3vNspBJQrmVwfdD4EZd6GIjm0ODu5TSPWkOQT9nwdv9rvnYJDF
2YumNWKA/zEoGAbm4DRj+uy0jhg0J+h0DUfnoI2x7pmd30XhsH7qSfO0HGyf
3rn8oFAULnN2jbwqyMFjv/+0bSqIAuenv3Z253JwM0r2Q9P0QchvUPo8WZ2D
d77fF5vOOQg08REBrrdyMEbt27nI4wch+mTTn8+tOVgqz6kfPCMCixxLST6P
cnDLrJT7MVkEPD5KMi4M5eDnKDkJL3UReHfLpzjodQ7avhuwNl0WBpPYWr5f
H3NwwcG+Lq5GGJ7ozlyJXMjBV/ln30xaCQOx94D05p8crJcJ7QxiEoamafvW
BOpcrAq/9594txCI3zynTs2ciz2Nf5loooXgUvT403TOXLT5u6j8S0YIOHTY
zRmEcvEaTbHo6jdByGUznsiTzMWBkmQ+yhpBoJrK82RVyMXmigKF3U6CEHm9
f7FYPRdVzSZVOHkFYSGSLprTIBcfHL65Z+/rA+CmpUl93jIXtWctfv8rOQBv
WJNy97vkbvejPKbPzA+A0cT9vVV+uagsk/U6fu8B6Lm2fuFgRC6eKrsWuXNM
AFQijotdS8rFTyRv8CoVgEaN0AbJ3FwcyS82LrYWADGWBqWGklxkkSEsM3kF
4MK7+e5jlbkoWr7qHdu5H9jrxA3u1ufinhNq6k4n9kN2mOeYcnMunhC5/alh
hB8o1KsdH3Tm4nkFWmNPR34IZ57+qv50G+8xT3zodz74/oYvuOdlLooJuok8
j+YDl1qbjRNTuchcsmEVwsAHr0JKUwe/5WKJvgqPaTkvGOIok/GvXFwUrD3o
IckLj3axlo5u5WJgVdVAVScPKL02ELBiyEMn5kPvaMx54HZNdt1b9jzUZ20x
T/rGDQeDe4867s/DZLcrS7uTuOE8QdP+4VAe9o2KONdzcsMeRjUtj2N5eCWg
/YBeAxdkjscNzRLbds3q2dmTXPCvqs3S/0Qe3mq9Uh7/iRNCA39PLZrmIbF3
1IU+iRO+qRzzCXXIwxMcTFKJfJzgtDNo+bdXHr5jJYdNtO2DsZc3YmNC8lDi
4c9T+633gf7lbzu24vLwyAPGWuIPBzw8LVqQnJmHy1h4+ngZBygou3HSFuXh
7pIRCVpFDrhJV1mZVbHN/y+O9+qbvSA8+l6c6Woe0hdZneOK2wvnLnE3kRrz
8CdFIpelwF5g8bdUZb+fh6Gqu3rtHrFDumJxT2lvHqKnwHMJb3bY3DF8iudF
Hi5cOt73gJkdgl8wvb7wLg9FecTUOe+wwdcLJ10Ev+Rhu0QRu6wdGzj4ZszV
LG3zm5hY7KZhg9Hjj0IPbeYhZXya7Y3re+AkDeW/67T5yKvE2MVgsQc6n6tm
SLPmI+kcI+Mhij0gXxHN0sSTj4OwTtDXs8J175azxw/m46639tl1FqwgKL8i
eE86H995Wq3tomaFMiqZ64RyPhaVpD2Rvc0CzM/85R5q5aPxkYohfgcWSC2/
1qFllI9zkrUXn+9igXXPLzp9NvnYe8aqlhy5GwKPCQ/ru+ejwDHfwH2vmeEz
hbPN84B8bOTKsjiuzAx2gxUfTaPz8S6DfeTqBSZ4cfaN33hqPi4PLkdY0TCB
rse+VZuCfJSXvZzp6rsLOo6aJUyczccO6Z+L/KOMcGyLRO9SnY8vfzaukglG
uPZ0sPDTzXwMpuH63X2NAQTKGHi8W/PxV/sOtbucDFDiplP9vTsfJ2+yGEVn
7oRdMqmSgUP5+HdV6syedXpI/tvZvPwqH390hp/I8KeHP31/IeJjPtqmEbs/
fKCD0yVKfevz+TgWa6l1yIYOZlwiTOL/5KNfYUq19wgt2Eg1vaWkLkDBKCi9
ZkgLzzcW3dKYCtCQxlly5ekO0H4iuUDPWYAbcnZRp/R2QHuxT0SuYAH+6Og4
83iABo4611KwSBbgiOHeCkcjGrgqOZNVdLwAzWT/qzw4Rg386wJs+9QL8Lat
U42QAzUU99ifP6dfgCd2/yQ5fqUChqJzIvyWBUg1EfZqOpQKEh3Hb1Y6F+Aa
50H3O9RUsCrBriDiV4AOyfuVPhRTgt8fo66r4QXYYDCrGiBGCR8e5Z08nFSA
vXt+Nbp1UIBVYf/IrZwC9DnIqv/UggKG7OnsZUsK8PPNS416H7cITXHNz82X
CnAvbZsaFf8W0baaGKBUX4D2+6/U9dj/I6S77/+5f6cAnc8On6u+/Je4UrCe
pNZZgM1fc5Wrv28SvHbHGR/3F2Dr6e4vz5Q3CbJYaLHuywIcEm9flCZtEPS/
bvMNTBZggrhV/rPZdSK+a/7KqW8FmEbKT2rQXSdW8sSlR1YKMLmhjPH99TXC
x8az1WKrAN+XZZvbcKwRgWwmB+ZpSLhmHVsmmvaHqI9a/HSEgYSf3uQ066z9
Jj5P5l8L3E1CAQF/8c7g34SgtmRAIzsJeRQdq7KXVgm7609lV7hIeOLimkZN
2CpRtsfnj9x+En5JfRC4Z+sX8SKS/n6EMAmDCvQv9Ob9IpgnryS1HiLhN/uf
z+8f+EXoamlpbxwh4b1Es4xvbStEav1HBtVjJKziK/msZb1CdLAmP4tXJGFi
U3/d481lYj1CoLiTICGztp6dTc0ycWyiw4pKk4RXw098WTFZJgI17fk0T5BQ
VmM5P3XHMnHt2sZ0miEJe6UMllfbfxKfWM5d6TUlYXmO6h6FqJ+EQISC705r
EjYcHzx5VOknYft+TErPgYROVFIr/VtLRIlG2EquKwm9Iq38fvQtEcN1bK1D
XiT8IP5sJaFsidjF0hjHcpqEDiGNvW6+S4ROuJG6SQgJBcXwX5L6EpH8boG2
OJKEP/t4bt7hWyLuq+c9fRlHwqbHz6snNxeJP1clSPtSSMjo/8liYnKRkN3d
b2adSULlLcGF/J5F4nSYF1d5HgnHTaisB28vEnVvaSfekUkowSdnG3phkZhR
q7nMX0ZChWT1i/YFi8T+qxqeThXb89ccWuyQskjYMH+QuHyZhKaH1gnz6EXi
TGji4sdaEmoLF73YG7pIPH/Df0fkBgmfuOkNhgUuEoxq96M8G7f1eLeccTJg
kdCutSXqWrbxncsH3bf9SUzrVHPtJNxVcMSmMmSRaA8p6z38kISsNdflnkUu
Er9fy+ee7iXhjqpzcp0Ji8RRfGl0e4CENhee/NPKXCT8r4Ts/TlMwqRTN/aq
kheJq7v2vJEdJ6EFR8ON4IpF4mPw7Qth77b5AulettYtEvyvDV1bpkloZhT3
41PzImEN86Jrn7fH71+o63+0SBTX5HxX+k7CV1M17Coji8QzRvGG2CUSPpaR
frTrwyLBEPwkrGOVhO+vKFqxLy0SWq88lCg2Sdjx+QSTOMUSkUjs2FKjLMQZ
Mf7rAruXiHvVVd0ptIVoqCnxa3h7vlYZ1DMfMxbilr4jK+fhJUImaEqfjrUQ
K+eIrH7FJcJvPJ71BEch1uc7cD/SXiJqVfnGsnkKsSPoeueUyRLxoereuQGB
QvzaLvr0r/0Swcdg48h8sBD7rub+WPNcIqwC/wgZSRTivdcf7O4ELhFFYyVf
C6ULMVTq3QBr5BIxpCJ3Y0SuEIcSl4t+xi0RO6tGgvYqF+J/v5VvqyQvEZo7
g+UtcTte4ZGxsdQlIiGAZaNMqxCLtWcT6tKWiLaXNx+8OVm4Xb/Mli5s+38p
G6TyGhXioT+1OlVJS4T05TldB/NC3H3nQVx17BLhS5/NdMmmEKNTe4PJYUvE
ldNiL6YdC5GR4vqCg98SMT3aUyLkXoibJevVf52WCF5ld1t3n209aCXl3UyX
CMtKaoHagEI0ynOWytZYIsh0l2e+hhbiNdNkem+ZJWLQH+vEowvxYt38wTXe
JYJ+dMLfL6EQVz65/lGiXSI0lOKO3kwtRLqoyCtS84tE/CWe3z+yCnFbWYXx
4UWilbbtnkxBIWZe/z0k3bRIrPhZJYYUF+LxKzvYNIsXCamRVc07ZwtxzEj4
y77gRcJH8czO3xe29aKpC240WCRqLsoOKVQXoqCzvDif6CIxteMFObquEJnt
9Tl6Nn8QPH6Blu03C7E2bGvvgdofhMULZt5//23HQ/7G6GnwgyhUuDEFrYVI
+2ndqvnHAjFwQa8mqaMQm3/7NUjmLxB0O755d3cXoqtj9cMfYguEum/mkR19
hfjyk0qWeOc8ETd8cFl7qBBv0AiTtkznidbjj1syRwrxwqX7EmUz34mVCtfY
/leF2MYi7LQ/+DshRUOltmuiEPeLvGvq2pwjfHwu7TD8WIhv3KXpb6TOETXP
if6Cr9vrV9fFhYVhjpiSf58/PF+IBvGTT3jyvhE8FTGmbMuF+PDaVVYK5m+E
BTU3p/mfQmyv3tuykDtLFHrffVfydztfBsHrXAyzxMAzi8pXVGQsrfGV+S/t
K0En/8udm56MN9gY6ue3vhDq54vE7ZjIGNPiHrER+YWIozr6o2IPGduiZXqZ
lz4Td72e/ze5j4y8EnXh1l6fieWh05EH+Mj46Irs112Tn4gjckyqroLb+NaM
Vdbmnwjv8nrKGlEydu/2YPB+OkNUU57s+XyYjD5MJ0Sj1GaISc+v2WJHyXhz
8u/mrZaPBPdQ+imf42QMz4kqVTrykTA/JsJ+XYWM3O/3P9Ws+UCQznW/mlcj
49/5hzxrvB+IpxQuFVI6ZFScrKpJPDNN0HpSuATpk/G6fSw99e5pQm3wwsH/
jMlYe6zE7ErWFBErqzq3YkHGjyeX1/J3TBEtZ9/ekrcjY5fCrpAHOyaJn1tR
oZHOZKwyXpQOoZ4gJD04Fds8tvGnfl6LoHlPeA00/93wJWPRoFAn3c53RNVR
84eqQWQMZR+UNGZ9S0yULacnhJORVZletYTvDcG1VajXFUPG4ieCknRHXhNm
7tIs1ElkLBRw/den/oooeDo0qplOxk4eTwo6u3GiX8b/bHoOGTdfjvV/iBoj
dpQxOjwhkXG200Yr/vxLAv/VCTKUkFE7/nzjavcoEeOm+0WvnIwC2aId7osj
RHP/5/q8S2RMPb+ZO31ghFiSTgt8VkPG+3frnsdavSAOlwrJsdaTkYrn5iXF
4mHC82/XmsltMsbLfLpAvHxOXHZ16ii+Q0bh0/tfZfI8J973/UseayPjpHdw
j8LQEMEpXaHD2UnGpqRo+BMwSJiWKO+yeUzGI+Rdh414B4j8zdfPy/vJ2Koe
K6k80k/0uUSeef+MjJGDrc03i/sImj4Om/0vyWhQtWxY7vSEAKk7/M5vyJjo
kPTyu3wvEX3G9OPlSTJa/n3Qk72vh7izsVQ7M0NGrZacJCuqx8SiM8nv4Dcy
yhvuyJP73U1IPDki4/WDjBzWFhN/fz0kPI4M/qpbIWODjDh/9r8uorLYt21u
jYyfSkrmb7F0Ee/WdyZIbpGxUf+ouPrhTmKf81WNAJoiHCWUXAQvdxAmvdr0
DTuLUGc+SW3sbzuRJ/lp4Cdz0famJnVUwfce8aQopfAYexH+1M5beTfbSlCv
H7AI5yrCea5BdYuouwTh1Ml9l78Ihy6d15blaiGiehwm14SK8DBbOgNl3x2i
6fDfKuVDRVjh8Pbzycwm4ge53CvuSBEWWW3OnrP4jxBfU5R8IFuEV84+U46W
bSTcHV8tUSgWYbKEfmwQfwNx6XF4szpRhA+8Nnh37rtNvJXYG5OqUYT/41LQ
7Yr/b/8fFQXu9g==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
4f+P/w/pw3Vp
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
Jaj3VGy5iOIFI+NKr6bulyDjZNsrK28vOJzz9T7pUQnq1HxRJm/wAiGtu+cN
2ktwe2Ds1aPjnnCpL6NopKsE5/IWd65m3Y/Njzgdzu5j6TusImAe7QlDG6WD
tQdL8Nd/a4Q1tD0h/vGHHQPvS5DT/PutF/MesCbq+tbUDyWYellfRf+WB5wX
OCqt/KkESfrSg2FHPIBosOLq+crar8pvuxBTD+j3FficuFiCw81ln7azeUAs
+9tXG3+X4M99ygozLe7Ae+Hcg6fspdiWL//fyQx3qHSIvRDDU4oPZkzn+Wzd
wei7EUl8bSlSue5FZfG5Qy9tVVKTUCm6R7y7w9bpBpGmPcEREqUsPc9GJxe5
Adc40279hlLcKRL3isfFDcqzd+veUijFhn/rI86KuME2TW2ZQJVSfCq+1dT3
tSt0vlzh4tEqxZG9YR91ma4QnvT487Vtpej6TCdLz98V/m4g9XsYlaLPnQf2
EXKuQGv1afoLpZhPm1LrGXcB7Uil6vNWpZjUc4898YILtK3/StplX4rkv871
IVEuEHzzTtKiUymeWzvSzdBygRWfjJAKj1Jcb8Mlo/DDGchsTvbWfqX4mXdi
guu2M6idl9o2F1yKxl0HSFbJztBq/0GGGlGKJ84Prflk4Qx+32pWEftKsWXd
vtO/VjvDAvXI3Ie4UlQ9ZCB2vMcJCk2sXhccLkVe5spgPM0JNo+tb9ZLZuFb
YVZOBThBU9Zg9buTpVhTc6br3WYn8NI4V5yRU4q9BQozdcOO8LU35ohGEauO
sHvRHOsIOYeNQl+VlGLTO7++OU5HkN+wyuE4sxRFUs0/WdF3wZ1H3duUKktx
kavtQZfGLnDdy5TtPFeK48efUopbd8Lsut3cCZdLkbZhrrPUbyek12t9kakt
xSo3f+fxBQeQ9Vl53dpQiqW5o4WpJAdo+NfaHH2vFBcY5qvj1R1g17miiyIt
pTi1PSTkUbs9fLTzId97Wor1jPOr4vfYQ+pXxaNhnaWoaTzYn8trDxLUL6Fr
Xpai7cYaxTWX7KDW+I5D/QBrX19qvv5ysAO70XQ9v2EWH/aQVP9vO2As03ED
1wQLv26qvC5tBxxVl+K5Ml2K0KZRlULsAJHeiS+uX0rxPv18peVHW7iSWDPw
60cp675vSpwstgUr2SMPz6yUYs+wy6yxqS0Mt1hesmej4kYHo5CYGRs4tGc9
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1900}, {0, 0.004}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924011307613978*^9, 3.9240113741371117`*^9}, {
  3.924553388051834*^9, 3.9245534447935486`*^9}, {3.9246097587236805`*^9, 
  3.9246097780932245`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"9b5498bc-e763-4254-b394-c71c6c5b6c48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "70", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240114619062223`*^9, 3.9240115269349165`*^9}, {
  3.9240115676165323`*^9, 3.924011601644656*^9}, {3.9240117076291513`*^9, 
  3.924011772520439*^9}, {3.924553551970823*^9, 3.924553616537239*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"910f5283-08a4-48d8-9fc0-5e1309e431c8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
RLtO1DHL0lz8n39BXPn/9f8BnDSrMg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
zuFQTUbVe4atPzR8II291OPkiWSkySPRsdn7QGbfV4w2TMagcN7xd5E+QC3Y
y1NvmYxunBYfDlz1gRzXMz9n7JPR58agE2etD+TKZj0T90rGf4FlHqmdPnBt
6W22bWAyfrtnMpMx4QMFz5g8Lkcn44S6jgrfhg8UJZ3AztRkZKgkOXMx+0KJ
ceROxpxkxMF4mQEuXyjjbZiEgmSErwuBw3t84d7I3NPAsmQc38E8KCTqCxW3
ZbLvVyWjUVXu7oJDvlDl6+7+vTEZma+S2M8c9oU65Zuwry0ZNb6r1eup+MIj
mhHu0++TcYtX7uFAwhcaW/knMwY3bZv0xgENX2gmmT9t+Z6MIdz7G/y1fOGl
JSlrfTYZ+Vnvl2if9IVWwdduiv+S8dynVQljPV/omKAH720pOMdnSZ+p7wvv
HiD3LfYUPGNdum+rgS+8Dwr9Mcifguq0PlH3N/GPWNO4UzQFO5cfGZM3+f2M
s1QDmRSciRH7VLoZf7DzoFu8Sgp+GihPXd7UH7nsTDw5noKDG9nTUcd94att
Ide8QQoyp6hUI/jCd/HPE4csU7CquuuOiqovTM7wNDrap+BEncJzTwVf+F1n
Qr3qmYK7YlJYPkn5wmxUmuuHgBSk0i1VxYv5wpzOq2Pbo1OQ/6A6m/deX1hi
p+M6kZqCO17aJWfv9IXVPrWJ0OwUNLMQqFhj8YX1gsAnD6+nIL1GgvxtWl+g
c6uk/CxNwRs1S/ekfvsAvdxvF+GqFJTW1mK91OMDjMsHjp1tTEGLkesppMc+
sL3JnpPamoKe3iMOe2/4AFvyte/t3Zv5p3Wyayb4AJdJ32O6wRTUNuk5xuTm
Azx8XBTV7ym4wkB+7aPrA3xfDFwuzKagwIWAN+GSPiBQmqRWtpqCqaJGScpM
PiDo95xjlD4VucuqfW+Oe4Owyvo4H3sqUpdiJdqbveEArcpjE/5UDKRTirl7
zRsk2/4jJ4ukovcvbX/TQG+QIt9zbpJOxculoWLNRt4gd+bH0WXlVHQpkfhC
e8AbFIREOOSOp+J3tRAe3jUvUP5xbtzVIBW/ka+dZen2gqMVuY8KTqciY9Wq
y+hNLyCCP5D67FLRgnyOqzjICzTU2ZzZPVPxBInn1GldL9Bk0j2qE5CKfBH8
x7bs9gKdrjj2qKhUDEgT/ndvcnN+5T4dq01JxTKell67+s35ZbfSMJ2Vil3j
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
3DvXB5j85J8de8sM+H//ksj6v/b/APkB8QY=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxdemk4Fl7QN5EtRUKSrFG2Qrakc4a/JZJdosi+L7ey7/u+3Rs3laRCKgml
VUiFSlERlX0nO9nK673e630+POfDOddcM2fmN7/5MPNhRBx8TZ230dHR/dy6
/u/7v89JmZL8PsYA+P+yZmWhJlU4ANw1hK2KW+OQjmr+hJ56APAJ/tHa5pKA
TteSSf8sAwDEYiMo/EnIWCtDrepyALReqrpwaDoZmbckDrhmBUCh0P7tVwZS
kZVxdKrA3QA4yhE6M7yajmw7QhTa3gZAidG5SzzKWcjhwuXuhIEAuNluKVLy
IRu5DHjFqv0LgCAjm8ARLhLycnORmtkXCHZ3ZqMCfcmIMH2x/aZSILDLJXW1
D1CQv79V6DmTQBAbSt2u45ODQtZMRXd6B8I564WfZntoKDLaoKU+ORAOuqXH
Wn3JQ7FMOpcCbwXCpyONbPUPrqCkdMwvXRcIVIOuTPqyayid63hD749AmPRp
Vbn++jrKpil4UP4EwvsuvUKezUJEEZTh0tsTBDV5F649lS1C+bfEn/09EgQ3
J0+q3PO5iQqkhBwq9YOAylJpadVwCxVV8LG5ugRB+shIxIBkMSpR5qrcHxsE
EVVfE+WKS9C9FzusP18LgjCXj0EKqndQheb2bQlPg0DclrD8p68MPWr6d+f4
tyCwqaM5Z964h54ZrphMzwZB0Y0zxpmh5aj269xqEXswsMr923VNuQK9tp68
YXk4GOQjFZgDTj5ETX1DeuxaweAVPFOsa1qJPrj0zNVdDIZt7x5vPxdQhT5P
deYFhAWDv15FqVNJNfp2qU1DKjcYVOP41TfGHqHulZbxnspgkCH2yT1Qq0E9
kY1Ecmsw+C134xPXnqBBxtrjpya27PP67i5yPkNjqTX9G9tDYEL9odOrnOdo
ivNhykOREKjYfoL3yZGXaC6nTN7lZAj8Znye9r6rFi0L3OritwoBH+f164YG
dWit6FrMJ/8QME/Ss/ikVI/+Hc6VjM8OAXrRZN27kg2I8UF2m+q9EFCX3c2i
cPg1YlFKDfn9LgSSft/zKpNvROzP40SKBkPA7BaroZfOG7RbI6L57GYItHwq
ufXW5S3ifRfot2N/KGjaGIuOkN4h/jOEfXXKoUDXs2/iyPsmJPTFvd7fNBRO
a4iXdXC0oINWju6SPqGwc/DycVn79+hw74XdPSmhEKFzVd751Qck43z2Kel2
KIjzbJA+S7UihUkje936UOjZp2dUevMTUvbTY934GQpRX2JZuKmfkdofzYcV
K6Gge8CPrHKxDeEIdStn7jCY7U5ucZNrR1oMyvT8cmHwJ7Df6APLF3Qq5eid
1tNhcD02eLvb2Bd0hkPSJM41DE4h0wDTT1+RKVV0VSUuDDKWGDPLX35DZ/cL
3JgqCAPKykHTiKoOdP4Gj96NZ2EQE2c30l3RiewOccxZdIRBTu+v7p5H35HT
fZY8tvkwcMdO79IbupDbsW0ar3aGQxytZn2moxt5P10fuywZDs0fj1YKL/xA
l/BS9mHtcGioHzu4d+8vFPhmWvWXXTh8mM3jGNTsQWGnx/qI4eFwjaMjNDqw
F0W39Sfr0MLB14jGsnyuD8Vb/pBbrwqHqCRppby1PpTy6+v3B5/CwedMg9jB
wn6U4dga7TQZDv++kiZz9AYQafzd4X3METBAHfy6ujyAcn3rP38UjYAAsdvd
J0oH0ZWlZ8GxKALS/H7eNbYZQoVh1cIq1hEglvf6P2XeYXSLvrxpMiACHmYF
3BttH0Z3kkoIhcQI6Dbne2tNHkHlO2/wWdyPANb7fxzTLUdRJTm/jrU5AiTw
gxZfoTFUs4/iVjsUAW37e/bOToyh59czOC/TRcL378VSu56NozrxpCeHBCLh
YHnX9Mv0CfTmbrTdT5VIyE+flp50mETN8qEsRLNIGNkfGJGsPoVaay5XaPtG
wuC3xMbsfb/Rl5Pe59ZSI6GOY0ltfvU36nztQvegOBLIr/4p3/41jX7q2ZU6
NkRC5NiTd7TGGdT3ycqYr2crvoEL7wXLWTRsYbbyYTUSDgTFzv39OIsmfhgU
xvBEgd3eE+MyOnNo2l7nlLJ8FLS+01cfejWHFkbx7IRBFKBtHXWCJ+bRH+/j
tOtuUbBL7a1DZ8082lhQAPP4KJCR24xlUl5A9KEyYyyFUdB7oFvnzqMFtJ1O
Ivvl8yiYuWYfXq+8iNgShVQvdUaB8mwo5czTRbSLfV+fxEIUjI0PaxufXEJs
eqyN3szRMPsnf+ZZwxJiZ2fiO8UTDfJ911poesto16dtXqJi0fDUtHx5um0Z
cZI2X23IRQOnncSOhvN/EJfFxp5OFA1j1Xope0b/IB6+VdeHBtFwWpy+bOTy
CuL7sfQ8zToadJ3aJfS2rSL+gnkOF7doEBxLkNEnrSIB+xlHCIyGRbZzxxbF
1pDgwaka/vhoYK17wG1Ys4aER8d2LBGjYShfR8zHYB2JlQ1f/HQ9GoJGnj62
GVxH4t4DVXfuR8ONP6clT4ZvoMNyvczxz6NBNURRWWjvXyS18OO8bXM0MLYL
LklW/0Uyj78/UO2MBn2bpBf+Zv/QkZBvDHuGo6FfTuI0z9I/JKfebvl7Phqq
faTvSedtomObrXff0cXAu54l+3khOqzU8H7zxq4YuEC0W63yp8OqCU1m4QIx
cGIxKWi2hQ6rnXpTclYqBs6IDfHUi9Jj9R0N63KqMZD1gNlcMZweo9Zaox06
MTAhGFp/uZMeaxCf3xw2iwF9o+hlkuI2/J/5kz+v7GMArdU9Kidvwzp7H53O
942BpjttTlOL2/Cp7ofX/SNi4OHvA73e5xiw/rXyBcO0GLj9lWZuUsuADezu
6krmxYDjg9/CryUYsaFY6RWGkhgoyGgZHiYyYpORWzO/qmNg14+PWgObjNjs
zo3/njTEQFfJmuMIYTs+61WQS/ocA58LTBaEhrfjc0evTHr1xMAR4zWvpxeY
sPV8LtadioHTCdTpyU4mfOERhSyyFgOeR+hujJ1lxrbBxNF15lj40xrb+6uL
GdufyDzRwRML2i9feu+yZ8FO/1KzKsRi4ayTSUHFFAt2qU8aTJWPBfF+Ppa/
4azYLT5exRnHQsGbx7dVuNiwh25MGj4TCydE249ev8eGvdgie/edj4V8lqcp
gQY7sO/H0GOLbrEQJ3Y+Yfv8DuyXHZTUGhgLwu25V7KvsWN/M/8fpfGxQKjY
4+NgtBMH8vodjSPFwvfTl5vrmXfh4C7vOJvCrf96MWL073bh0KsenSrlsZCq
evVnQAYHDr/oKs31IhZ4w5OOPZblxFGiTlFTzbFgZpGTcI3GiWOG7b687YyF
px+/5F5j3o3jS20O3RiOhb7L/VcHQnfjRE/rsLCFWDAga9Zend+Nk49YfrKg
jwO65cVDKz5cOHXOTEyOIw7OtX7gk5jlwunVxkFsB+JgpLLgsVXgHpwVdOb9
kFQcvOGo52mi58YkNX2hV6pxsLf6zlwhiRtT/upcztOJA+Ee6eL9kjw4p+6/
d5fN40Dis8F23zc8mBYH+w0d4sD6u4TaF1denK9z0vcwIQ44ozIk4jj34mus
aq+3RcbBBY3q6JpXe/H1D8p7f6XFgajaYve9AD5clHXMsyYvDiwblKVvKOzD
t0zlXhFL4oAh6Ypc2/I+XMwju8frURxs+8n2LbyBH5d+l3TVeR0Hqbk6P0eo
+3HZFYnnwm1x0B8secLUTwDftxXjWO/Zyrfx1TlGiwO4QkTY8dtUHMRzzDqC
hiCuHBKoebAWB/Kh842GykK4umTfjlSWeIix0c0/yS+MH3vwXnTijYd+17LL
2wuE8RPZPVXoYDysvFKiK5YQwc9nOZj3KcTDruB+b+1qEfyyiv38Ao6HbdRm
mx26orgukPXBxzPxMLbL67VwryhuOM7EUHo+HuwTy00fhIvhxo1tlrHu8cDp
rWbaK3QQv321WXYhKB4Y8mMGfjYdxE2xG/+UE+Ihsu64yZcgcfxee9V0Nzke
an6T78/ISOCPLMvFk4Xx0NNYf/nimAT+/H5+7U15PBgGxOialB3C7ZkzhoUv
4kF+o41t6dJh/NVkqii0JR6olZgUqimJO7jHl82/x4OGQTsj9z4p/L1zWP/o
yFa8t3w288tS+Ef+QAHrYjxcMewQ1P8pjXtseucH6RNAfZHunlGzDO4T/qlT
y5EALzqZY1RrZfHA4Pd82oEE6NgtcVbt+RE8VPxt+pJ0AvTmJQZl1B3FI+7t
mmeOJ0BX63s+JVc5PC7zKeeQbgJ4CM+OxM/L4cmZ9xP0FgnAIagwbBYrj6cr
m9BPhwTQKqIGv+JVwLMBb0iPCQlQLrnv7/ADBTyv2jCSHZkA4jU3PUfOHMOL
67Vqnulb/muXD/fNHsPLtc8ztfMTICVsQnGBpohXY54MCJUmQHqt2zeso4Q3
tB4prz1KAE8H0WOjK0r4H3Nl6tfXCbAsWXiA7aEypntf3lPelgBZI1IhLT4q
eFvmXYWU3gQ4+n7plb6CKmY0KU10/J0AS0uKeffXVTEz9+3uk+sJMOx+uZTn
/XHM2nnjCB9rIiR1ZtCKC9Uwe35B7DxvImT0KynFh5/Au2yudHw4mAjGT75R
223VMacwTapEIRHUtXr5H+uexFyDlMgYSARMn+5kpoIwTzGx/bxhIohdbD71
SRbjve6ZEsoXEuE9v4VHCQ/gfTJpoZweiaD/cShvPRewwExS60RQInRfuv9y
+YAGFqyMF32TkAiZk+pRd0s0sHBATOB1ciL46YC9jJImFlWNbAm5kQiUiuHJ
tLeaWHw9VND8QSLMNznc+nn+P3yoNujSkZeJoJTQMSq39B+WjPF/y/I+EaYU
ON/nk7SwjJYf/+D3RBj8IGIjo6iNjzD7+LwcSYSHn185/OnSxnItHg25i4nQ
kcLtuDNeBx/LcOW9tC0JFnwPZ0Qp6GIlYycPA84kUOk5XmQ7rItV9tjXSggm
AeNuSbHnV0/h4x02XPQySfCRW4Tz9jk9rJ5n7fLjeBI8lM/Mk96nj9EFy2eP
dJMgq2Lwo02PPgYh813ZFkng0hDyR6/0NP5vwNjBwzEJHunsJv8NNMDat888
1vJLgumbnaQE/TNY102fTSgqCSgvDwhNixpifWld29X0JMi5Y66pSWeEDab/
q/ySnwRP1QrOpQ8YYcOHwFRemgQt5D2jE07G2Nj/pHXy4yRYmrofsueHMTZT
USt3aEwCUrOR52szE2yxprztZHsSZB463/a31QRbvjx2dm9fEjiz0/G8MTDF
1tFyZXO/k6C95uYI/0dTfOE/2X/v15OgL/S3NZ2xGbZlkjItZk0Gxuaf3wK+
mWH7Zoni6L3JW/PEzEiojTl2TBdbsxZPhuEFcN81Zo6djYQNlY4lgzr/O7sj
ARbYjetAEYdGMmhreq12Mp7FHt/2LY8bJoPjCm8Uc+5Z7EXj1W+8kAw/239a
PJG2xD7n9xQUeCTDTg6P+aEGS+wnyDkfHJwM5Mzb7YkXzuHL/ew6ZonJEC2b
F5izcg4H3GLNl6Ukg3RksdWOXCsc7Mo0zVyUDGnbOKd+qFjjUCkGzYEHycBG
15v+t9sah//epL54mQwz24/EO0Wfx1EVG+M575NhXqHvL8PhCzjm8upJv65k
yJD/yNjadgHHKS8TT48mg9Ub98iqCBucsDo/LL6UDIbXFiVuSdvi5Bczx+kY
UoBp9khm5g9bnBo1ldHNmQIKR0q57TIu4nTN8f5qwRRIm2zzjxW2w1nbR5Sy
ZFLgw97PjIphdpjYNJDirpYCfOINBU877DA5rffXf6dSoE9wJJP5mD3OMfwp
L3g2BS6Ca9LubHtM292VsOKYAkeffcxr+W2P879+62r3SwGPgg09cQMHfDW3
XfZ+VArcrIiN2XPXAV+3/hSTlJECjSRxaiKbI75x4MM3+yspcPL4Dl1fD0d8
s69JUv1OCuSPnGp+2eKIi2++ieCt2cLz6HudvbQTLnVpaJttTAER5+VT+ulO
uEzylfj79hSg/za47PzbCd+feh5yuy8F3OR5eooMnfGDB08+Rk2ngHhuI2X6
gTN+eOmRiPVGCkglTqkq73bBVUqVAYpsqRAqXRrgcskFP14pb97FlwrvZVaS
Pb+44CfP7x4YF08FotaEnryiK34WWer3+lgqwA2Rozcprvilxu031zRS4VTB
S4t7i674FWPRvmCjVOjafTVZxdwN178r8Da1SYUsjkXdo1VuuDH1Sr2MZyp0
Fmu3Rex2x2/P0HiYQ1Ih/33+oZ2+7riJk+ren5gKZzV5BN69d8fvvxBfPqek
wjD3m7PUQx74Y07m7pyiVBhpbLhoH+uBP1mlORMqUkFKIucO908P3CaQ/FS/
NhUO5ZKv0BQ98dfe+J3iH1Lh76PqzI40T9xRFGO/2ZUK1+wOzNT0e+LvzpGP
ukZTYfyHh5KEshf+cTiMtXopFS4AWmJL8cK/JoNsMhnSAEmTR426vXBvuf9D
t91pYK8ttdQj6Y0H/Py2/yeUBq8e02kUBXnjIUUfqwOyaXAh/KNC/GtvPPLH
4/4ftTRYDomI8d3pg8eeudK3n0oDzR0lJ40sfPBkhJPFvbNpcLz5949dV3zw
b7C/k+iUBglHjXB+jw+eYbD9a3cpDX7LK735JeSL599am5yIToPxZSWDt7a+
eDHF8jZPZhoI7FpS1bjii5cNzFdnrqSB3Wx+lvo3X7zKYXKm5U4ajOwRCjZj
IuD19jM3btWkwc5vrW01wgT8l6q/FPkmDSiZdKavjxPw5jldPasvaSB2a8jU
x4SAtwloXTvWnwZ+gt+yHroSMGMvzO2cSQOrCC3JxHACZio6qT22kQZZqgfu
DmcRMKuzWl4DWzqkdBCYWm4Q8I7DKr+v8qXDT2OjItlKAt45eUwjSCIdAm9J
We6oJ2DOcjmqiWI6sLclEWxbCZjLT3ZcWjMd3DWZnop2EzC3otRJJuN0CKdF
+ZoPEfDePxLEPpt06J/ebzI7RcD7nokNP/NMhzhV+vyFBQLeHyF8nBqSDkdq
U5gurBLwATiQ4ZuUDi9GSV8P/SVgYQb+fj1qOuxoiG+02CRg0be8SgdvpkOE
327+4S35YMqelH8V6aC1evfqt38EfMiA89f32nQY/fMo99AGAUty7JSv+pAO
dxScun/8IWDpdtaEjO50sNtmXbMwR8BHqExdrmPpICDcyOA3QcBy5xhkNZfT
YfuOAe6z/QSssJ8uRoAxAyi8p97d7iBgxZ6Nr8u7MyCPg8XXsYWAVW6sHm4T
ygCm/2T6SC8I+LjTcvhd2Qz4bjLvrnqfgE8cWviccCIDohXDvp67SsBoYuag
nV4GuIWp2a6mEDDcnwpWs8wA0XqJp0KBBKxJGP/A7ZwBa4T7zO12BKx9bER4
5lIG7JD36uLVJ2Dd5QH/5ugMkHSvPLQkT8B6T3ubbmZmQEzSRxN/PgI+Hf5T
IPJqBoiTtBVU132xIe4inCvLgPRfCmrjDb7YeFtHo8KTDLD4VHGfPdkXm75p
59v5NgMI0o8kq/V9sUXyJ6/RLxlQ1fV0ao7NF1ue/lBX358BOMHs4/cmH2y1
q5n76kwG5F5KkQuP98EX2t64Bf7NAK64pc2Zkz7YltLwwnhH5tZ8XXX91JI3
trN8xSm9LxPYr0kM5Zd5Y0f+F07bD2VC965rzBs23tj515MnvYqZcLKn83oM
hzd2LXzE/kwzE+wMo8gar7ywu2OlHcU4E/w9UzlMvb2wl8SDah/bTDggfSO8
eZ8X9hm/y6LnlQlSqtH+tY2emHCv9IJYaCYgf+caXR9PfNn3dsXfpExQE0wX
Cef1xAEKRYzfqZkw7/6q8NJLDxy0VHCu8mYmPDjCJqXp6IFDn1y5l/4wExTE
Ux/Qs3jg8DAaneurTCBuePE23XXHkYhqrvExE2rPHpC9Z+iOo+lJpft/ZEJ/
7O0bjbNuOK4xc2NpLBOC0s+sHCK54YSkNOPPy5mgtRASO6XghpP0k2+VMWZB
2L7PFoe/uOLUnQkr8VxZECd9+7+5S644/XOMwUXhLPj85/nnC1yuOJMcWXj8
SBbk/rKQjX7ogolnwxb3qGeBQkm+LMHYBZP3BZ+a1suCxc/Wmhozzpj60/9q
k2UWXHI9eok50xnnXvebLXLOAneTNdMOGWec7+CjFXE5C3BMM0P9eyd8VdyT
ZhmTBT7yQoe6PZxwwZjrlHxWFlgsF/46xuaEb9x12qpdFrzmPVrfe2er3/nY
U0bKsqAt/HLPtJ4jvi1vO1b3JAuyq3wq/CYccOmitfqVt1nwyu+FQnCaAy6r
scwO+JoFtbrKlbtlHfC9UPMho4EssDlOnDT4ZI/LT5qoSs1mQbWkFJ3qJXv8
kM4wnfFfFrD//nq5j8ced9uLE2a2Z8NjMQ1ps2d22Pq1WP5P9myYMHvjcfWi
Hf55ULSxeU82OERlfnu33Q7bJApPP+bPhkIrp+46q4u4Z1SQ75ZINugqa4j1
37HFdnoHNImHs+GrzPg2xg0b3Fe23yvyaDacO6v+6ISxDXZg58/xVM6GpvAW
5bziC3jQm6/u3Mls4HkWoyuzeR47feKd0NbKBpbWTW8G6/N4WI6H+9jpLf2B
qHXpGmvsQtqDhE2zIXDDkrOS1xqPLex222mVDX1lu24UBlthNwtO0trFbLjP
NxJG/+scnni868WoSzZY+8wY/vrvHPbk2zny1TsbWrkzy0/ct8RTITs4G/yz
QbzPVUBsnyX2/sGq9iAsG86sBTHnJZ3F0+osTldjs8Fxj8P0jRULTChgykxJ
yQZjxwwdDS8LPLvJ+CQwOxvidSqzQgbM8SV7hgHH3GwokjnjYHDeHC800LOb
FGQD+V6t/7MOM+x/kE4Z3c4GsVKNW6/NzfBSwr+L0veywSaL9Z/LN1McOLqR
wleVDb3ZU+1F50zxyqn1qu3PsuHGjFquf48JDi5b/TVflw0v+bgPdrmY4LUd
K8x977JB9L/6yg9zxjjMe1n+Y+tW/OT41/pRxnijdfH8s29b/HQ06BpyGOMI
uYWEkp/ZcPf5otbN/4zwP+LcA8rgFr4JFZtr3oY4emGmK2YiG97Q5+ZFXD2D
6SymGXznssHHLnFO6bMBjn08JXthJRvsCgxsa1gMMAPfpKXeZjaI9PTyzmuf
xvEh4zHKTERQLGV9+S1JHzP9GL0rtpMIbxpi3Exa9XCi+sg3Tm4iHHMQcTTb
p4dZCoY2//ITIeBhKqnZ7RRO2RyQnBQhwna90543XuhiNvt+s++HiTDLZT31
jlsXpzX0Rrw5SoRAg5uLkn46mP1gT0mlMhEOkA06qtq0cWbCz7brJ4lbTfnZ
DlNlbbxrtHs9XYsILfP0IbMFWjj7VJd46Gki+P8KYg/boYV3l3UauZpu6VdO
Pf4V9h8m7egIMbciQpP5/BnGWU28x/vrTQ07IiS41l/rdtXElNb2j0dciSDQ
So0xGNTAvHJtf/b7bPkbH+7QdtDAOcRPIqwBRMhxKb9eOQSYb+Hj6eUwItBF
nhSM8gCcZ/4hYDCWCJHmX9iOjmLM/7jl+ucUIog4SX/4vInwlb3NzS+ziRCM
5b6+EERYIOTdQlkuEXiftop8/O8kLuh+c4BWQITGoruzP3zUsaB6o27CbSI4
apUoNl4/gQuvNfhdukeEvR6MzvYdalhks+7KxSoi9PcdepHFpYaL7F69MXi2
hb/ErUja/DgWa3g5c7yeCBxm59S5rqjiW2Iv9h1qIsLbv8sNIqMqWCLh2X/c
n7bqZWTUqKqqgotHnnjTdxDh4uVaHeVMZXz4VE3u9E8ihGlZha6NKeE7dx7V
/xgkAkuxcqPzKSUstaN6smmCCPEf9upb3VPE97wqeR7PEUFQo+NgDbcilmmt
wDdXiBBxdMdv+5hjuPzoA/fsTSIU17A9VJ9XwEeJ98kRTCR41Mt8XdpVAVfM
333psZMEplw7xPb0yWN587JRS24SnDfwpX6/II8rH5Xu1t5PguXqL732v+Sw
4t6SEwqiJBgo8dal2svh6uDbzkKSJKjKTt9Z3X4UK3ffzGKXI0Fm2tNLR8eP
4JoTRU9XlUnQIHyixIvpCFa9Vjg4cpIEr7XuqCApWfz0X8HOr1ok0OVCp4PM
ZbCa3TWV+tMkuMGa5zoZL41f1F+xLzclgWucoZHvcymsLpafdsWKBKR7aHfX
H0lcG097lGxHAu+NdJ3N45IYj+T0BriSIPJqzu5nMYdxnS6V1dGHBBabEQMD
rYewxh3yMeOALfvTjx+aihzCDWwkm5PhJFjn6VMZCpbAWl7ZSVJxJHA+Rbx8
+Zs4bvyY+XBvKgk2bcUe/1QWxzpHM34wEkkQ5xVcsnH1IH6XnbZ9PpcErT53
kx4yH8Sn5lOO9haQIIFF5VlXoBhuNku2+nCbBEcP+qyZT4hi/UeJcU/vkWDY
lneMwUEUf+BNuF9cRYLkbhrzu18i2CA4rpP8jASj6Ryfo2xEcGtXDH1MPQky
Zm77cvYLY6MT0dI+TSRwCtv+67ybMP58NdLi/CcSxL/cF582IoRN/4VHneog
QZlWfoIzgxBuvxh2R+nXFt7nbgochwSxeX3IF9EhEpC1+QmmJgfwV9HgvxyT
JKCc7CGuxwjgs/GBh/7OkYDj2BnXzif7ceewv8nECgmySwOOPVnix+d0L4d1
bpLgITvlgKcqP+4u9bvdyEQGxSKlmrrofdiajfDp4U4ydKs/PZ3Wyod/evqs
FnCTwdmK9+x1ET5s89FLLH0/Gawqjiq1h+zFPUc8z4SIkoFl/+dTKx282C7b
PchFkgyjXDLBo6q8uG/O9YaZHBle8LXEB1/nwQ5mLu9BhQyT1VXeiWw8eKDa
aUkWkWH++6+58RBu7MTrKLRfmwyZXP7F0b/34KEgez0WAzKcv5t9+KDzHuzS
dfHykikZep7IeFb1ceExNdtrA1ZkSB1cCGez48JuVy+8+2RHBr7n+9h2DO7G
E3+t5164ksHIM9CX5r4be1y02l/mQwa1TPIkZYETT9VZaucGkEH/3eG0/mhO
7CV61jc+nAxC3P3vHHZz4uk48zy/ODK0a0yXr+txYMKw6WvbVDLoPGgjyAXt
wrM6Jr9PE8kwK0yvrl62E18qNdp7nEYGsfWDL/oG2PE8q6GGxHUyxP15zrYm
zI79PQ089xSTwW7/I6KN0w68+EGfSnefDAnbg+x+3mPDgUf0Xv2uIgNmOHnJ
aI0Vr2Tpjnc/I0MS387LOQasOHhOe09TPRmY3nA2JN5kwWumWicfNZGh+Jjj
RYZNZhxarela9IkM3uwCmlO2zHiDR4OY1UGGGw6Rr4VeM+HIIPw8/BcZWpyV
vkdLM+F/308Ouw+RYa4l3HM1dzuOVlPnsJwkw5r6dm9nlu2Y7qraca15MlgI
mEBFOCOO/avqKL9KBoZj6jLNiwx420WVDEE6CshqEOczCQw4vk6pZgczBWbq
Tv+dndmGmUQV+1d2UmDq0u4vPZe24cQ4hR0j3BQ48u2KAKzSY5ZhOaUv+ylA
ZV9x3x5Hj5N1jl6sE6VApZcrsyAnPWYrlU25L0mBBxI3aoMK6XAqq0xVvhwF
8n9dfsikSIfZPaV+JalQ4BG6fyyIuokyPxxmDkAUiBuyotvf/A/tOnJI3kGb
AnUkcfi27R/KzhI/b2RAgaB+/bR4zb+Ic04sQd2MAlfCqwMEkzcQyVT0gaQ1
BTY8lARTvqwjrmrhLl57CpA79K6WHVxHFB4hBkY3CrzlQsGEsDXEG3RAds6H
AqOzGaq1naso5/t+y54AChxmS5hJO76K+NT4Y96HU6AsItGmvnAF0a7w3X0S
R4E/bVFftHauIP6/vN9up1JA1Kk7fT3yD8q35dkkESnA7GT4ZXBpGQnU7ZGM
plFAgkFQqN9vGRWIcJl5X6fAvi8TdL3zS0gwjjPCupgC3AEjt5qCl1Dh0K4S
3fsUeCLyhjWeYQkJ6+xsU6ymgKI4XSQjeREVlexYF3lOge4bKfsVDi2ig6xs
4hwNFNhrmr+y+GoB3fJgMdpoooBRWLcVsllAEh+YQsY/UUD3C3Vq+d88Kpbd
frOjgwJmh3sf09+eR4ezGD6+/kWB0qLxzzpG86h0lv5PxRAFQvlY/iv7O4ek
TOlECiYpsB8d9j9QMYfuVf3TT5vf4vdUNS3GZQ7J8Pz1D16lQMIver5K4TlU
Hrhe4ExHBcNrU19Le2bRke+rTabMVKBV3TSGwllUcXxlHu+iAloYLrZznkVy
V5YFZHmocINjeHJSdhZVbizq8AtQ4Zj+t76t2Q0p2i4QmMWocL5bMSGMOIOq
X83lL0pSoUPOqbtEaQYpi8w29stRocjT16O6dxo9jp2eblWhQm7Z8HvPrGmk
OjTF9wJRwUjBejpFaxo90Z7UvKNNBRHbMu/2f7+RWsm4V44BFXSE7lQy1v5G
L1jGcuLMqED51NT1I+Y3UvcYqSNYU6G+j9tcVP83qn0/NGFjTwVBtZLf6by/
EZId5D7tRoU2vcdJcyNTqC6zH6n6UqFm0HVy49kUgtleN/FAKvjuIRMIpCnU
YNJD4oqgAhv/xVPs3lNIq+rni804KvT8Y7W+qj+FGrl/jEylUiHw3ov0r1JT
SCewi7ObSAX1PKaDYTun0NvOTrV3NCqoqTQsnZ2fRKeOdzhVX9/i57O0nmDX
JGrJ/5p5o5gKXX5FcKt+EulvtD/JvE+FoDYFpft3J9EHm7aBsGoqnDi3priR
M4kMXn1id39OhZTDQVxWcZOoVbhV+WwDFdx8TtmnEiaRYewHu/+aqZA0cNr7
ou0k+jzYkir3mQqHqvh5rxlMIlPt5uoDnVR4MsFkI3ZiErUXv+th66FCds79
slrJSWTO8pZlZYgKB60+aanxTaKv7o0Kw5NUkEzdf86LaRKdfd9woX2eCq1P
j/WoLk6gDpn6xFerVKj7JHid0D+BzmW+qrhHlwNFwo4D0x8nUPfMy+485hwI
Vd0rRno6gaxNXjAm7cqB3x2cZ07cmkA/K58d8efJAZa5qaaPGRPoAvfTc/YC
ORBWqpp4NHAC9QTUxBqK5cDUkZnbujYTyLbz0b0TUjmQp1mvQfffBOpTre44
LJ8D8+UJX/UPTSCH/Eo6XtUcOE3K1eZmm0AD6xVSDDgHMqi/nc0nx5GTzQPz
We0c2CT0BtC9H0dDtfcjfxnkQNXeMybsd8aRi/C90hazHHBzdLvnlzCORmLK
2must/Qfo/wU7caR22Dpxi37HChLJ9IZHx9HE1olEiS3HGhdbqO85RxHHsW3
jaN8c2Dp9LNdV0bG0BTzrVCvwBzg5n7w4uuzMeTlXnTLKiIHXtgJssVkjKHp
lsJWnfgckPq82nDbdgwRZK6vHEvb4ut2Sq3hkTE0m3FNVISUAxaR7KQrG6Po
0swVg115OdAiePEDsXkUzRvnB65fzwGFwVVOLeoo8q+kFY4V58DOoFfRrRdH
0eKe3JZv93Ngrcq1SlNyFAUGUBcbqnPAOVVj76O5EbTSQRaseL6Vj7d25+mn
IyhYlXTqWkMO7FulrxWMHkFredmXUptz4MTlgavaOiModD3zatDnHPDOYy/v
2TGCNi5kvHXqzIGONmMxrrZhFF6bNmvSkwMn2ZwM/lCH0T+hVH48nAMPG/ir
y62HUXRMspbMVA48dRZmchAaRnSDiT77FnJg9mWAofzQEIrVSqAxreXA8XP/
itXuDKFtxXENC3S5UK7yvKfYZwjFM8dO9THngnBEBytVcQgxukfztu7KhY6L
Nx0Orw+ixJZIeM6TC2bmF7jiGwYRi0yER6lALqiqS3C9Tx1EyRlhFKpYLrBO
BrMLmw8itpmQ2lipLXutbfi24CBKNQ4e85XPhaOGfDbhEwOIvTKQy0Y1F6wO
tV56WzOA0vcEqOvjXMB9tU03EwfQroDLLio6uXA+urDpmOUAyu7wyz54Jhdk
2ysGKJIDiFOV8Gy3eS7Yk9n9h/72I1Kez9A/61zoWaErR1/7Ede6164p+1xY
jHKJrL3XjygXPFW73HKBoL4nJCKpH/HWuju89c2F5T6/BrJTP8oRckuvCsyF
qim99b1a/YgvxuVxYcRWfj6NskIS/Yg24NSXEZ8L0tuePH/B1o/4tRzZwtJy
oalc23DbfB/Kv22v6EbKhTDHT283f/QhAWY7W4u8XNjdefFZfVMfKnCzTdYs
zIVXD8RLzJ70IcGWC5VHS3LhhIWo8NuyPlQoff6nQHkuXPLilzpQ2IeEM6yY
2B7lwqq+2u6LtD5UNG0p9+d5LjBtWB7IJvchUeOz1kMNuVB9fUdGJbEP3Xpo
Ht/WnAupRTqkt6Q+JLHHrLz2cy4I2HoYt+T0oWJ/k+93O3NBSabnx9Nrfehw
h9G2vJ5c4E4RO5FV0odKVQxlEodz4eldF3fN6j4klWdw9vJULmgFJls3v+5D
ZWv60XYLuTCnVEDH19GHZC7olZ1Zy4Xg9AFT4ck+VP5S96saPQ26DnCdbd/W
j44I6fw7xEKDu3dlJQQO9KOKaK3DPBw0YIjJp5843o/kBjRNt/HSQF40z0LC
qh9V/qcRPiNAA1Iw64enof1I4TYu/ilGg6qKS9ZpBf2omgl9bpaiwYajlml0
Yz9SdlNfeyxPA+pt7UvhU/3ocbPawVuqNCj7Ib5qzzuAVKWPGxIxDZ66iD7d
rTmAnqSrBEfq0MAtrUrG03cAqU0rFXmeoUFDY/G10wUD6IWR4odz5lv4NIJe
Z7QOIPWHCsva52mgl9BZzEM3iGq55IWPOdC25vPPLk8VBhHyP6ov7E4DtbtD
gmYug6jum6z/TgINEvyHhF/kDyJQkSlYC6SB4eg+jo+fBlEDTappNIIGh0Kn
l222DyGttcPzX+NpYN206alzYgg1nj8k0JBGg+KE9Js2fkNI56W4zgMSDfIa
xLNDS4bQW8GDhKt5NBjvz/p7+dcQOhUtmp9SSIN5mdp7wnuGUVO/cGNgyRbf
q198LU8NI/3/hKYdy7f4kD2Y/zt8GH24dYDP5BENlo8vej2rGEYGTAKa6AUN
FBn/nLwyOIxaXfm9pF/TYP91CwUnnhFk2MyXw9dCA+X2Ja5p7RH0WWpv3fY2
GtxHiTZcASPIOJ1nYr6TBh/GzWzvFo2g9t97uPt6aPBCNkyP0jqCzI240Mdh
GuT/vWh2Z2UEfa3gdHs2RQP/Qaumd8Kj6CwXB6lkYUsf/SS8WWcUdVze+YKy
toX/Cd/lXI9R9P+2svP+Zz/7/wBJ23GJ
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
8L75weMK49GHQjXHMrH5rl6sgqMr8N2fc5j7kYkaXj0H5W64ghr7ecO6pUwc
bVenf2ZxAxtjffVIzizkFLdK9rNxg6isMaldQllYeuv567JrbnC+M4vjt3QW
NoSX9+cvu8EDca0ftzdnYTj3ndva1u4w4vix9z+NLLS/TRcLK3MHjtK453v2
ZeEezl02RiweoDKmXL1olIWvVf2iKo56wCHVF+ebjmSh8VDuTmaVB4SGhqfE
OGWh4saobhYuT6DVS4YSvll4KscutM/VE+4sPnBYCcvC5mSWGvlGT+hHb8OH
MVlIu632+7GwF7Ck8KnHp2XhlC6X9e1AL9jYXiNlQMnCrsPVCfPNXmAscJyD
vSgL3+wv+Rek6A3+tiszT65l4cK5p2MSMd6Qk3+5N+nWqj6pbpmxHm+4NWj2
/OD9LHT1VdvzQsMHujfO3uRozUKykkPu/Swf+HuCeb75bRYmBopq3PjqA7JV
xOoxPgtn7ojMZu/3BYO5zyEm41noXTzhbV3kC166GQ48c1nI/ktg6vtvX0iP
VTds/5eFjhlSVZbWJ6DySY9aJnc24hn+4sDKE/CaK1bKQiQbuTzfJ+pw+sGc
xUYOfrls3KAx/avA1Q8kKG0zL7dm4ycaf1DeHT/Y+z6kN0crG5eaxLS5hPzB
RUb8uSVkY+N6njPTJ/wh0f3eTUHTbIw+u8VO95E/XL3qcb7TJhuZI8oPusUD
oG2SO4Xiko032uOKbwcGwJT6zRAbv2wcFR95/epxAAhF2TmIRmTjpbTCTevE
A0Gnaelg99lslFk/4unmFwjHWS+qMUjZqL4kYHOvKRBiDE2kjtGy0bHI5LEg
fxBcyJheK1mSjWGyNkmHnYPg6WvazIfybPT5bHzGpzIIvoru7c2vW8VXPFlk
uhgEfA7DzxweZmOPmP7CuFEw7CxJuyndvtr/MLNKhxIM1l92nO9/l40lEjp8
iv3BEKXyLrloaJXf5qf3XgqFwPng0yEu37KxOhnNLXRC4H6tgoP8QjaymiJ9
7fEQGP7TfPATSw7aRA7mz5wKAQ4IUivlzUF9lIzkLAiBrUkiUh5iOchO6Hjs
bwoBi9bGtRsVclBRXetBYW8IhPK7zXzeloPpOsq8An9DgGbN2XtZJwc7N2ZO
UcRD4Taz8pm3fg7+HSnWVdIKhb5+65ubzXPwQiZjrOFwKLAo/c3/apeDs/K9
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
AAD6qDY=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
gvugxWCZtMrvKCNx/EwIDqhq0KxLpUKmjF8ZxSwET22vVUymUoH+jC1TKhGC
I4uqJB1YVPjzPCPw5c9gzKVSLiSRS4WKoWfjXx4H4+TsIq4v+VS4SAwQ5CQH
Y1Hxgvm8W1Tojm22x0eDMZucPe5XQoUJ64Mn87WCsSIvvX9rBRW+/Lu+7czM
WXwrmtw1VUWFF+6mZ4UoZ7HuXHzLo2dUyIlvO7Rb8yx+GBT9+tIrKoS9WH4v
WReE8VD4E4u3q/lEmadlh4Pwa4+gcsEPVPg+rSyiMhmI7Tv9brW0U+F6UfIt
UkIgbnf0uMrspgK7da/XhEwgPv7GnX60jwqD9eIzkSVn8ICZY4ryz1X816ZF
U7MzOPCxdczPMSo0uIsN7P94Gs/omZ0rmabCL+rGiZerV/OoO8ZnwhZW/a6r
kq+aDcA8m/VOmPyjgvt8/XazhABMztE8yMGbCa02uXmE1XkhLqFi/1owE6zr
J6l+N07h7DRZC7JoJlSdX2nbZngKK/OJmzhLZsJ39LOr/5U/LrokpCsllwmV
UaT7WW7+WO8Pj9o3pUwI/pC34jtwEj8+uyxbqJ4J9wlXRw+Hn8TmP2fXB2hn
QktllEka7+o89Bxfo6ufCT9aVHREmX7Y6fPg8uzOTFggJaTMqfnhTqee6WqU
CdEC9hTnR77Ys7FjONYiE6ovds/vsPXFP81bevbaZoIp3Ji61+2Dg6sbPgk7
ZoKkTd+mjrM+eF6/9u1Ht0yI0qUmV3L74MvFVbVXjmTChtqusqNsb8ynWv7Q
wysTPrjVRnzR9sbpuUV3VU9mAr+Fpg68PIElJQsKRs9kgqG9STz7yAl8NT37
yr3QTEj/xUObnPbCamvoGecjMqF/TVq7e5oXvnuZTNp9aTVmSuh0qHvhHfPx
F7njM0H4xPMvkXWe+ElwdMib5EwYFLwQv9/TE1sMh5/MyMiEXVdcPcuXPPA7
r6BjboxMUKKdo9vv8sCuXX4ustmZoKJ73SI26jjudvaw+Z6XCTF7q7oOPz+G
vd+645s3MuFN1fW0Eb5jeGSP447A4kzI20b0QY5HcegTay398kz4917IxDvn
CF40MFNaeJgJ2Cv3uc/oYUy8a7zx2dNM4FCPT9i/+zAWVNMTJtWtnldl86Ja
5iFMvarJve9NJrh1nwldGD6IpTeqLIi+z4SgJ6Xa7ywO4rwM2d/tbZlwYt2m
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
QQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1600}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.92401149739724*^9, 3.9240115276055875`*^9}, {
  3.924011570219904*^9, 3.924011602290883*^9}, {3.924011708743826*^9, 
  3.924011772974634*^9}, {3.9245535930418677`*^9, 3.924553617192545*^9}},
 CellLabel->
  "Out[306]=",ExpressionUUID->"a90d6433-babe-40e8-9b47-8cca5695a069"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.35", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924013398285454*^9, 3.9240134470851393`*^9}, {
  3.924013532959254*^9, 3.9240135546929665`*^9}, {3.9245536938625383`*^9, 
  3.92455372392181*^9}, {3.9245537760673237`*^9, 3.9245537964537525`*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"63e4d3a8-fe19-4527-8665-8ec02ccdcb7d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxlenc011/8/9veKZXUJzNKO7NEPW4DkTaVjFBKw0yRVHaiEJJsImSPJDsr
kr0je3sb2dvX75/fOd/zvX/ce+659/m8j+fjPs/z9bjnvAT1jC/r01IoFN+1
7v+N/6e9uehf6XUDDqJ7TrJ3eYNye3zsgPBzDBv+R2ec/h42l52WUqtfQydz
UlbMxwc2Mi4k2tkTY2NauY7PPiBPqZrWUtQXda2xr4INfEG5wVOkUBIIm12H
ppO1PoLyNaGANTUUEoJtutM3/CBwrFZ4wj4cdY4vQwN0/EGKZhybr0Ri+nbs
+3ajAOic29aft+MLHPxzeKYd1/zUHzsTNRmLr9oMfZs+ByFESzfavSABcsER
FRaVwegwO+mYqZSE/HxK9l7bEIxL10klJCXDLIzL4Ql/KCiL+n1hW1Oh/LPh
xff8UKzPnfXxsf0KVeGVo1wPwiBg/1rRZTANV0Q+WATxfMIhxf/mnl9KRx37
3uPWZZ9A2OKiTL9/x2gz52zpGu6LlcfV9QUzETHyNTjiRAR0vKpY1F9noefT
o20HGD7D5Jpehsq/bDSMzh21q/gMm/+m7hP1XLQmGq3kBUaiZCyfw08nD4VH
NZ1YHkWhqpqtz2vTD8w3Xd347Hw0mlJUc96W/IC3GM0OqUNf0PE+0OeVdT6m
K8WYr/HEYMCiz8j2UAHsZOPXU5hiMa5+UPFZTwFWf1J7LyzFYk7Wkv+xbyGq
Tm2/e2cuDhS+H7NGKkWY2Gxx/NZiPJgprFUGlGJc5LE1SaZNBHPX5Si91GI0
LY17y7smYn2hv42mwU9cC+70stqSBJ7PPdevbi+B0zqZrbqRSRBw3i92saoE
85T2LGbZZIjef8Ki7FCK3M2DP21qknFIJbfz1JFfEL4fatVkmIIjB5gzjlF/
Yf/uTDZ+jlSQ9Zc8D4eUYTBR0PlWYirOTHy8L6b6G5xetfWp177iYl3Xyb3M
5Xi1lf6RIF0arqft/U8kqxzWijIz35LToONrPslnUgH39LZwpzvfYGCVXcYj
XIkzxWMR/nzpMNFkDOdqqoRWI8WXviV9LU92HWdUqILzOymWSv/va+er7KEL
qQJL5C11Zt0MnLY14aYsVOGIbt3V7D2Za3i8aZevVOMvR7z/wlwmVG59H52P
q0adlZjV77KsNXx//8ww1aB/UL3l+KdsqMrT/pzUrYE9vZ6C1sucNbw7U8Yz
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
yfP/5/8DcmPa6w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/X/5fwBM+yAG
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
7wD/A/FSHao=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
l08=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 6}, {0., 0.9059052120576723}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9240135568490314`*^9, 3.9245537268530416`*^9, {3.924553776773261*^9, 
   3.9245537971636734`*^9}},
 CellLabel->
  "Out[311]=",ExpressionUUID->"6d055ed0-7da9-4da1-b92c-598ae94729e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hpmem3000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hpkeep3000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924553956147667*^9, 3.9245539777702527`*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"e312869f-bb70-455d-a241-f03eee791e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hpmem6000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hpkeep6000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9245539884225273`*^9, 3.924553990420123*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"f95a74d8-38ba-46a3-8248-fc206b79dc8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240136425116644`*^9, 3.9240136858912396`*^9}, {
   3.9245539274693937`*^9, 3.924553952766193*^9}, 3.9245540034999027`*^9},
 CellLabel->
  "In[314]:=",ExpressionUUID->"80ea06f0-0527-42b7-9bd7-13c5f250de5b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk81VkfB/CbJCktylKyx7Vz78VtFPebCGmyhER2KqSbtcUwJaNoUSpR
MpjKkgpRkrpfYSJPq6hMNSp5YrSnDNP0PPP4nuf+43Vf530+r+Pcc37nfH9a
IWKPcCkOh6MxjsP556/XP59OISo3d6qIXIWS0+X/fIQo+JLxq5s+SDj/fLYJ
0e3Qb+YtyS6S/3kvIVYYaRwKGPYc84ZC3CEt/fCgpt+Y5whR1yN1uPah55jv
tMJzCTuiNg0tpXwrrBiMvzBaM2o7lm+F4+KqvLPWuYnG8q0wo6Br+NBpb9FY
vhXKNWTZ52Y6isbyrXCpU69anJv1mO+0RN9Pz+fnm8qN+XJLtIt6MU3WyY7G
b4lnj8jtNSh2p/Fb4ptiKekdd31o/Ja4wT86s+1tEI3fEj/f2mJZvXwtjd8C
F+c/SF4/Q0zjt0DlBe0Tn/4ZS/kWmH1DXkEzLZ7yLXAw9ID7CaVNlG+BexWU
faVFSZRvgW27alvO6qdQvgC/tz4fu3PDj5QvwIBSuZyiV8mUL0Db1yNTbA9s
oXwBDgxdtxpM3Ez5Arzo2TjOPmAT5QtQ9qz4zWr3RMrnY7skreVdeTzl89Ey
dP/gnZmJlM9H25aBlK508l58PBlZib6vEyifj+J4X26lK3kOHyPnf3e49X0C
5fNQrcuq2+1eDOXzMPqUopbauRjK5+HW5gWvb3yOoXwefjxQIzPgG0X5PPR8
WvI4Wy+Y8nn4l9YewRSFRZRvjsWT3o/eDTWm39cca7QKN1w+v2xsPWwzx5+e
Bs7Z+2E1rR9zLNj2BicdW0vrxxy3hp4M7HSPpfVjjq5BpjKh2YmUZ4Y2MPGW
VkYC9TfDt4pd6tPexpA3w3vDriX+pRvJm2LUeadxjas2kjdF1S9yQ/5J0eRN
cXh0y5VwmzXkTTCqt/XXa8lsfCZY2np0KBqAvAl6ZWX/8OVmIM2fMZo5fZ09
fIbNlzEeySje1flhM82PMQZm9rWmOaSQN8KwAkWbhUpp5I3w5hKfq7rX0skb
4abKkr+5KbvIG+LKps6YZvtM8oZ4v01xUNMzk7whmn9oOunnk0HeAPfPhodt
//cG2HBz4hkXwV7yBnjDoD4pAPaS18e6zTm2kid7yeujsOker/LMPvL6uG6H
Q+IJ1/3kuVjrJ61/1GY/eS4GuwUnacdlkedi325ubp7RHvJ6GPLyY1GE407y
eujd4F+wfn0qeT08oVbcnQm0P8p1MXWl+sOGJyHkdfGM+XOFpwYeNP+66Klb
/Xqe3gb6veah3kWHstCoRPq95qETfN5lopdIfh6adDedf3g5gbwOHh/dPv9s
cAx5HXSS9OT5FW4kr4MFv3F1m1TXk9dG5T61X+stI8hrY5H46i8zpgWR/297
Wa7mUptF5LXQoyCveWR4BY1fC4MMpp55fmgt/b9ayPl2v3iqC+3Xck0MuPfE
vV1/O3lNXDE+4nHlpV3kNTF9XnDBfBU23xrY3VgWWJeZTf3VcfBC3k77nIPk
1dFh4vLqpaPZ5NXwmHhmZMKDA+Tn4v2UKMvyzQfIz8VnZntvJSszr4pTb6u7
WnSx/Dl41bdJ/eqCw+TnoKfvH6XtXTnkZ+MLwdxb3AV55FXwzdwjTfc5+eRV
0P21+SuLS/nklfHQpIGZ8zYfJ6+E5kGXDEOWFpBXwpZevsMH50LyiihJ6zGc
daOI/Cy0Geht6Xf9hfwsfGF2+Kmn/UnyM7HVML9QpvwUeQXcbV9Y86athLwC
joh7D5fplpGfgeKgyc0e2qfJT0fD2QUck9MV5KdjkXvB9LCss9Q+FY2PDY2E
L6ik/vL4Ggpz6tZXkZ+Cxu+PJ13uqCYvhwo/SUyP5NWQn4Tlw8ptdu4XyMti
TGSVhk9cHXkZLC2Tsa6oqCc/AU/5tuh29zWQl8bDqU45D7gS8lJY93zj0eiJ
jeTHYcXhf307J7hGnoNa1ms+5omaqP2r5MHDPXXc6c3Uf0TiaXfCTraqmfyw
JEj+ybI1D5vJD0lkMzcNVAUw/0GSLbdNp8Oxifw7ScmxA7yGnxupfUCS75g/
XbXiKvV/KSlSn9eop1hHvkciuFMeHOZ1lto7JdxJ/taWUrvpe4vkqarbt9sF
pbS/OJyK8UeLqnci7b8W0fVu/xzt6Ab63ikS+BjXB8rXke8RveH183utaqj9
pejK+6I9GzSqaH8OiPb/ik5PFM6QfycqzvJ7Yw+l1P5B1B58ROHRwhPUf0hU
4HygymV+MflhUean/uoZfxaSHxEtuaCosZtfSP6r6JGD8JJ31nE2fqj5dMpz
uC+X2sfB7xM4r6IHDlJ/KTg7ql2yfHEWeWmo5IQIJ5vsJj8BQhye9znlp5OX
gdWHgnrW2/xEXhZe9asWNW9PJT8JvOMqbuX2JJGXg+IpAqPsVez5NgUa5aYt
vmEWTl4eOmTerXJe7EZ+KjSu81v+NXIRW/+gd9dzftPvwWx/wFHpmcm+9WFs
/4A4LdXF+2IE21+wXcGzImLKOrb/QCrZdeHt0xFsf0Idrzld9HUj279wkG93
7HPlRra/QaG4TfvncDHb/7B4tv5r5SKWrwQDlQ3nnk/xYc8PqO7iJUUem8+e
L2A227FxVNGEPX+gMrOwpEXfgD2fIECuy21SgDJ7foHYw+sHf1Vpmp854NN+
v0MryJnmYw7oTj3RP22yF82XKmwvetoU88WV/FxY6qGvXjXoQn4uGHTVOuRE
AXk1+G2CUg4305m8OpiYSnnumLmavDpYn7A8bHHRlbwGqOW4L0rMEpHXhIHu
O+FusQ7UrgnL7Ga4qqgEU39NyNF/Fyvvs4G8FlivrA3geLPzUAt4km6XtOgU
dj6BLciHdW9KZecXvKjFtSmz0tj5BrKP4txuTWbrTRuk3Do4cb3p7HwEjVf2
QVKHfmLnJyRfiCxS6mBeB7yXna4vqdjJzl+IGVfrV26Uwc5n8LEumvjJKJOd
31DTdsFALWMXO9/BrXgkpfRVOnldmPYuO7C+P428LhjxH2u+wu3k9eCvZTGJ
7eKt5PUgf9H8O8/s48nrgVVC6rOOGZHkuVCwsCriZZQfeS4kv7jt3LTfhjwX
wvddyPr3Fn92/4EAR7WituXr2P0IgjRq7PaFxLH7E8g1Cs9terKV3a/AZ3Jx
auObbez+BcN3zw4XJaez+xn4Hl9T/3FkN7u/geN3R+J/dGbnuyHITPtaG7yJ
nb+GkJtxWOr142x2PwTPacKHAwsPsvsj6HQEeFWqHmT3S0g2tKl8dImd78bw
qcxG837vPnY/hQ2S4HeHuOy+aAwRSQeadWbtIG8Cgzv+2DLTkeodLxP4ftey
ZzeN2f3MBB41OZ98NiGBvCnY9qZcUcmMJW8KXI+MkPdGrH4xheKf7zvE28WR
N4MZLS4LPk5h+9sM/nCIu6LqHEbeDJYrtvhcE6wibw7b2qIfv61m9Z85fO5p
n35xRJ/6m4POgzDLJQ9cWH0BBfccH4/fF8TqD3DhO8v3y66n+tMcNB6cuhuq
Jqb1wIPGpNs3J78XU/3BgxD9zzszktl9jwfNH/waWodXUj4Pfsycl6u7VUD5
PGh38BQuuu7A6isQnrdKMQph9REflih1duyvYPUTH+SaWiPKKth88eFZLiy9
lxDP6jvYk2U2ensXux/yISIt/C9ZxXhWH4JsbYOm999sPgXQukpDf1lPLKsv
4XNC2Mz3CSxfALnixKGTR1h9J4DM8ieuej2s/hPAHf8bGt+4G1l9C+17xJP3
fC9m9S8cXZGoelklktXHkPei+r3ddvb8twDhq4xZ/RqrWX0NySLblt1unqz+
hnST0esd2h6sPge3ix+VdlYtZvU79AVd2Tq4809bqu/hW1n/x+hEJ5p/S9gq
lDVL/+RO828Jejk6nNhjgez9AYxbX7btuVQYe78AFw1Co5+1hrP3D7Aw75cN
SdZh7P0ENLauevHOP4y9v4A7yxZ8vbwtjPKt4Hyryg2DGeso3wpKPjVc7wtc
S/lWwJ+s9pt8VgjlC2HN9tCwa82rKF8IbXoFRUO27LwQgsHfMqOu+7woXwhl
S/pun6lfQflCKP1SMr4/egnlCyE76sK33fF6ov8AXVmM6g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
s/kNDP3ldrJKYEX6tvDkeOZ0U3sdyX8Bg1l+6A==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92HlczdkbB/BbKFG0addet011q3tDuA/RKCPkFmMsadRIq9uO6lbKUlSk
DVNo0YLKNpbcxx6VJmSZUKHGTqjJlt/Pr+f87j+9ep33+XS+3+9z+z7nGPmF
efnLcjgcAxkO58dP7x+fNmccX3S5tOW5mrCq8sfHGRMnedTFtbgKOT8+Emes
v1IjCi33FP7Peztjaq34weNInyFv5Yy/WHoObnvgM+Q5zrinY62OpeH8Id8m
QJVLbg0xpbMoX4BhZtHfE6drU74AgzXxfGuTh3QoX4AP1SWnS14skQ7lC3CR
bP430Qg/6VC+ABtf3j3VJRMw5Nv4OLE/kXfl5uohX8nHun1fvt27GjzkJXzs
UY74ZUF4KOXzUX6wfcp2hXDK5+PbWbePWVaEUz4f/Q85aFRK1lK+Ex58/Wz2
bqmY8p3w9ur4T2U1UZTvhOanZ4h3xcdSvhPy5wpmny6Ko3wnrLG16Y3LXU/5
TvhcIfh4jEk85TviHPlccVpGAuU74oop0T419YmU74ipgeLBCo8EynfEo8u3
yb4aG0/5jujfHhLsf4rlO2KKT31BWug6ynfAA3ad2vyiaMp3wGnLKtb5N4op
3wFVPdf06InElO+A/TafIz391lK+A3Z89b9SvSSM8h1wzE+ftI1Vf6d8Hi7V
Hn2mt3Ap5fMw6btoYOL0RZTPQ07FsPn7O0SUz0O49UhpfLkH5fPQiBPyqd5t
JOXzcMr3DHGUGpfqxx6Hi9KqrzqJqH7scdkdz8HGWQFUP/Zo8sQutq84nOrT
Hvvu1C4+JI6k+rTHcp9ogzPiWKpPezwfoFJ4pGYd5dmhR+1SN35QPM23w5Ki
Vs6zdgl5O5z19hVvnFYKeVvsrRjkdfamkbfFuk9KrQqwlbwtTvaRjbp8MYP8
BPwzp27isLwM8hPQt128Qb4unfwEdJmaNnDqyGbyNnig86YrdxrLt0H3l40a
kds3krfBtk3ZHdl5SeStsfpQoChh1Qby1mgWYsKrNWLXa43tJhbB89SiyVth
6cC4+uDTMeSt8NfaiWcOy6wnb4XC1NS1h/PXk7fE65P7zh3OjyVviZp7YvzK
vaPIW6LGPzPSew6IyVvgq/yVwdqPgshb4CQt844oroi8BU4rLJKovzWieuFi
sU6m6rklsuS5mClW+bbK1ZTqgYvctR1j0krGkzfHPerNtTVLZ1I9maPPlU2D
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
zmD9cdqrzP/uT/4D7fFx+Q==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
R3hA
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
lKvcNnkzG9K3huwi5zG30VDyP2w1Xpc=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240136877586665`*^9, 3.9245540078579817`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"1dd0a10c-2fa2-4843-a190-a9858716c517"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9250801805032268`*^9, 3.9250802168535285`*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"a6b8be6b-8a09-4830-950c-1ea35824c549"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+O4XqffZwpr0bUC0ePBgjay86L/Yw3fO
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
BTu/Ad386aunpbqSXwQ+M7fqTKmYKf4vHdVedg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8lWkbwPGjkIzKFtnDkfVwHOcgxblQEkJU06IsoWQ9Y0lJliwhRdEi
o2W0oFF4TavOJRGtSqZtRDXUqNAumvFOr+t5zz8+Pvf3+Tkf7ue4r0c3KNon
ZAKLxdKRYLG+f136/dVpg5HqKdp3uRxhVeX3lw3eC65SunDRScj6/kq1QYez
91Y+rnET/s8vtUHv0Gurd0x3HvcmNjgy0dAxStNu3LNsUKrAM0TbkTfuO63R
wFbnSdlVJ+pb492j66+OXvaivjU6Xjq3cmHXCupbYxXf4YjW7DXUt0b4ULxv
58Jg6lujTfzjpeeH1lNfgA7VCRu5ndHUF6B9Z5KeoV8M9QWo6hXXWHhvA/UF
qGlTXBbYto76Apwed8KsyHgt9QX4YKBvjoKKL/X52DTZ6kxJ3Rzq83F/Ys+a
rWxb6vPx6LSdk9q6Z4vH+3z0uCvPKe5yE4/3+ShvnGy1TbRcPN7n47HlzTe5
zgHjvtMKT6xN/vAgPWDcV1qhXH5HRXzTsnGfaoUlX+fWmOUsp74VDirUyxlM
WE59K+Q/PyviO/tT3wozM+26OkPWUp+Hr164tA8eW0F9Hj5b+/bSlBu+1Ofh
MS9JQUChH/V56Cl4XRq5K4z6PGyQ0PDYkRVLfR4eNUjNiXq1kfqWyA1b5+88
mER9S/T8nPOH/6ZU6lviKwuZwMyH6dS3xPvDsRW4LpP6lrjoQ7FqQ3Ym9S0R
fvPKWrAvi/pcPFBuf80ubTv1uTj0qfUR62Yu9bkIhR9ObmzMoz4XdTL8Lvls
zqM+F3luyo+6wvKpz8UQv53ukSn51LPAruBrnJOJ+XS9Bd437X8yVJBH3gL3
xGrUvShmfr45/vh5kozxwW3kzfFEsrwg4kEKeXNM6/d5NvQ4kTwH36uX5qqO
xZDnYEJvyOGYvAjyHDwsAtMNFVHkzZCjsWNQ2tKfvBl6+tx8WmtkTfvTDMM8
m0zwjT/tR1Nsqqzyry9i9rcpPj3kp9VbFUneFPPn3nuVkxFD3gT3nmQ1G5f8
RN4Eza9XO+Vq0P3CMsGWe/OGS2XDyBtjd81BldSsYPLG+J6XfoOdF0jeGGco
zSjLfR5M3ujf+9uw/7jNOvJGqN17wqFGZT15I/zrumLXxI5Q8obYwKuItu0L
JW+IPal+p7psmb4hnrO96T0hmj5vKmdhi3fejXBV2t9LZ2HtfNe8g2xmf85C
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
50/dy5OF/wVbXIEb
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
KF8C56yf3ju+UED5372Fk+l/1LVl/wOroXa9
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925080204829012*^9, 3.9250802175077133`*^9}},
 CellLabel->
  "Out[386]=",ExpressionUUID->"3498c73e-8d1f-498a-b5cd-30195a66dccb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925087546068961*^9, 3.925087580141283*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"ac74852b-82f1-45f8-8f02-34f28b0ef391"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczdkbxytCTSokkrTc9n25dTOM+xBJkUITCS3K1t4tWrUorSKSamyN
rVJjaJT1PiUzGE22ECUy2bL7ZWmK38t4nvn+06vXeZ/PPd/zPec8n8/RDQif
FyQnIyOjLSsj8/Wv19enVYS3I58ZtOmIpFWVXx8Rlh7acKzJTlsq8/VJEWHD
u3VLepP0pP/yXiJsTV5srLpM9RtvKsL+R5cTaicLxP/yMiJceL5Nc9RnF/E3
fQd8WjWhSST2EX/Td8D6bs0b91f5f+NTHLA0qlJeOSbwG+/lgFaXhGZdzsHf
eFMHbFVY2SFVWEn6Dhgg2OZl5xhK+vb4k+K50wlO4aRvj86/FBXrl4SQvj12
v5CsaOgII317bHgqGPF7diTp2+Mut+EFfirRpG+PV+cq+B2Nk5C+ELeoPpDE
1seQvhCHTQ3955jcWtIXYv6HuwvLPqwlfSE+82ktPRNCvKkQH44aJ/HvZn0h
LpambpR8YH07jNxf0ezmFUv6dpjhHPY05WQc6dvhnbAd58YOJJK+HUaHdfe0
HEkmfTu0KFD45XvHFNK3w0kj17xxOpFC+rbYnKBb80QxlfRtEZYfeDBwmvgU
WzzYIkm4pkW8ly1G6Ck5+8smkr4t+mntq/YpoPeVscWJStZWdY+jSd8GD5nV
pP9wOJr0bfD1PqXm4DVRpG+DpdNT4xM/RZC+DSq23Ww8sYXn3wZtCh4PuhQf
Sfo2GLPuVcvlfaxvjdKVMZfy9hJfaY1pkcNLel+Gkr41dmxIch85awXpW2N9
TndZf2og6VtjTtGiY3LNy0nfGlf+HDTfZdgK0rPCnQH2B3rX0nryskJtoauG
l0UY8Vb4x67ELR77Q4i3xIDk6iPn7IKJt8RfT+iUDTMNJt4SO7sqByd3Mm+B
AkXX1c/r6H28LHBd+73bMZvjibfAi9PK7kalJBBvjiZzLu/7eyV/b3PcaZF4
9rjLeuLN0dZoVWv48hTizXCasdwmsxPJxJuhr7nwVEdlAvFmOGv/X3EL9Gi9
VJri1MlLrv5wbT3xpqjpfXLJ69I04k0xsy0wecqrTOJN0LV0lLt3aybxJqgp
qpr5j1EW8SaoE/Hxcr5eLvHG+CxXsXmcdh7xxtg5rHWHh0MO8cbodO2Ld0ls
NvFGmCBYELrgEesb4bCyi9Uj32QQb4Q7la6e7vHKIN4QXe2HT/adlkW8IS40
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
LQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hk8VfkbB/BLG0oiSQZl37mu695KP/dJSqgJE7IU2WWnyFCpJEolLaQU
aTFSoXUi91EhqkHFpH1TqUgZrZbfNJ7v/cfL6/s+n3vO95z7nOf71fCLcgmU
5HA4UyU4nJ9/XX9+WoUot1B8fvCcuuhEyc+PEI/dfx67sddCxPn5SRGi8/bt
RhtzQPSfdxWizIldgxtOWw17QyFmXLaOiU7ttP7Pc4QYKiydFatiIB7OF2B2
pZV99HMj8XC+AK2zOqrKrWeLh/MFaDVY9eh5qdOwdxXgQ+c5Omk1HsPeUICq
6rzQ1+rLhz1HgA5WHTWvm5dTviUGrFZS6/AIoHxLfP+u1ejSuFDKt8TSMmX9
SwcCKd8Sn4muLV9s6kv5lui1BxxOc70p3xLVRvbuequ3iPL5mOv3wuPoWRvK
5+OMiIy03ndzKJ+P9Vv7NF8YdlsP5/MxbZyt2E3TjeaHj2rCSmGNacDwfHL4
mPxtVOKAatTwfLZa4AKH9GcfDGJp/i1wxz5PxVNLY2n+LXBzmInO+ZJ4mn8L
LAib6JddvZryLTDhsUt/UGEC5VugtWxkRfDqlZTPwxXqM3v5nDjK5yEnOzjJ
oyuG8nmo0fOQ/7olmvJ5uP/Muh0zIqMon4eP/grImmsTTfk8DAiQtj42MYby
zTFJVBetXxFD+eY42tFh1quiKMo3x0v3mraNXRFE+ebocjefG6rnR/nmGOpR
m9oo50H55qhxceLODFVnyudizMct0u/C5lE+F6/e2nnDpmMx5XPRduw899lj
nCif++/1aPamCkbT/eXiEnnPLx/kBXR/uVi2/dJ8T9ff6H6aYd4H0YBjjBc9
H2YYNV5lbKQzex7McP3JqSqBOu7kTTH05IGgJxMWkzfFw5uc7q7i2ZE3Rb3y
ZNW4s7bkTdBC+teYpDQ38iZYw63L4Wm7kzfBvIHYj/bpfuSNMaYl+/OBCl/y
xnjVMs/XdLo1eWOcco3jMuYNn+bDCGcJR2S7l9vQ9RvhYHKa3JVuLs2nETa4
OLl0RZhTviFWXqu+/nXaEso3RK3UxA+vPPwo3xDPnH+5fm9OEHkDXPPWfV3z
xxjyBqjUGXWljZtE3gBL7WrqMzXXktfHyQ0JvOfv15LXxzwLu7ClXink9XHT
m6xkY+PV5PVwz6KKxgRhEHk91PujpbuD40xeD7/HKtyL1lpA16uLuUazJirm
+9P16uLClx2yKT4r6Xp1sfjbhWaX12vJ66Dwj4aSqt9Tyevg7O2ZSze+Siev
g2OvX7U7HrOVvDbuDl4ld9khk7w2Bn1OzjRr3UZeGy2bNhfvf7iDvBZWT5ew
XfV3Fnkt3Gtoo+KTmU1eC5W7OornNGaT18Qx6vdvp/Vlk9dE68ik+PEPmNfE
Ry9+tOYe20leA88fV6jbFr+dvAYmTDeSBa9M8hr4xq04LvgsO/9pOLnzm+CB
ZQb5abj81tAa52mp5Keh1DW5iiz/tTQ+FY/oGTXKGFA9KVHHAWnx8TViqj8c
dVz2F0c3Qz2SvBq6yyzveybvS14V1RzCfXq3upBXxc0T7LLkon3J/4KuUt6O
e7mh5FXw2bgruQ3eceRVMKdg/EoNyQTyUzCNvyxT/87v5JVRVnfXBoPW9eSV
MStnlr+6dzr5yfhye92T5OBt5JVQp32Fbmp9Fnmlf+9HcNHLrl3kJ+HJ/EeN
O6v3kFdEyR1yHwLac8gros9iEcw7tI/8RLT+lTNFOH0feQWs3FjlmWCzj7wC
5t79XC10zCMvj/IZeYvkxu4nPwHX1Tml3os9SH4Cumfw5hZJFdL4eGzpSLWd
l11Ex8ui9tw5F6qzjpEfh4r2LjqywhLyMrjI5HJqQeFJ8tJYu/L8VmdBGXkp
HNS8GM19Uk5+NO7d66ApsfsM+VHo3qn5I/z4OfIj8dS0iKnSfRfIS6LOza7K
mC2XyEvgD9m3guWml8lzcPdTr6cX/hTT+IC4QVnpzByTGjr+u7g6RPNB0rUr
5L+KH9zRMFp88Rr5PvG9DX/uUGiuI/9JvGat9p6xdg3ke8Td3xNu9oy4SeNv
xac2vGvTNmii4zvESWVztZWiW8g/FW/Yn35vtv8dGm8V81o6JOJ2tdL/tWKX
wXX5yh/+ZufPsfmxrOtL+H02LnoW6yhRs7iFHS+6lJlo+1SnluWLjsYftBiQ
u8C+X/TtbsAWhwuH2fmJ1rfnbEle5Eb1qkd00c5ErHdzH9W3TyK3SQtK5auO
UH3rE9XeSh5I0ioh/1VU+j0gO6P2JPnvoub+RVKqsafJD4gur89yDLh5mjwH
brVuMghxYuMSwBmvUxMz+xQdLwkFJnM/L+kuJT8SzA5ojG6XKiU/CjZWOFpr
LS8hPxqMqsbnc4uPk5eCsnXR6ee92PlKg8Ljhrb+wULyMqC3wmv20uxD5MdB
nnHP6ar3+eRlYU7t48AfQwfIj4elwXAuxnQ/+QkQtLpgX+W+XBqfAIpDB7JU
D+yl4+Vhjvy5wu78XeQVQN8+IvHIuJ3kFcDaW/3o7e4M8hPhfmP/Pl8f9n5R
hDXJhz5uf8Dep4qQm71EFsbYsd8/lBQdHxK2/MbqA5QuCa8KdPRm9QMs1e0O
6vv7sPoC9yqUDOfPDGP1B9Y/7vVfNxTO6hPs/6dGrjY5mNUvuDHd+wV0+bH6
BuJXnRyZQuZVoO5Ez6YhnxBWHyEh8e/k3LRQVj8hpPBCU9yPAFZf4arGObMt
Lqx/UoPb0UV6MpOCWX2GAUeHXxacCmT1G9pvG7TZ/+PJ6jsk44vypNterP5D
imLh0In0Jez9AF2W8da2rkvY+wMiuxv3XExl/ZgGvGi8u/LbCNZfacDUiL2H
F6/5ZE3vJ9D+Z+fThaas/9GEBe1t/HHlHnR/NKH9q4Ou/OgQuh+aMC992p57
8WHktSDsWUSHbXQoeS1oEr76Jb+ceS3g7bKVa1wURV4bRBJ+UxTD/chrQ/xG
bsDiqEDy2jCvK7MjxJvl68CCfpfPb2QjyevAc272jDenV5DXgcj++vf4KIi8
LjT55EGXpDd5Xah8Glx0NsqTvC5EudgXP2y0Z/0JTHKbZdL5ls/6F8hJuTO2
sceS9Tdg0+3fnt0poPnUh01BX09wb3rQfOpDinuBdciFFTT/+uDBPf52tBTr
Zwxgdk9eBi+H9f8GYOARX31/VAJ5A3hQOX1TuTnzhjDK5XxZp1IseUN426yk
qlwRSd4QxDbKX77VRbH+EIasdMe/D2bvdyOYv9a74Lc25o0g8lTE1rJ5keSN
4ahbaqrhH8wbw7HnnfZe9az/N4ZC0Su1jF+ZN4GBYudZu2PZ+sIEhA8Laz3y
2HrHBLSUJFQPKYeQN4W9RTLhiSuXkjeFT+oKc0PcF5I3hSkrX/Yf2c/6WzMY
DFf3WF5hSd4M5K9P0InfokveDCTHOg9Fqhuw/h9mlI0YxCE7tj6AisAv9k0C
Wu+5cqHjjW32pJcutL7jQs/FY3LfNtB6sYQL8rv/56j0PZzWh1ywet5YXHAz
hvLN4V7j0ufeG2Mp3xwOxxWaqTmw588chp6uzZKJC6d8c2ieGTq/1yeM8s1h
W/nc+UF21A+3msMWoz7Pvm5fyufB19TiNvVEWu8a8sClPuHqlW0hlM8D/ceV
kP+DnucUHhysy8u84xVO+TwwNHynod9J/XwrD9rXSOcV3oqjfAtwk9rpP/R1
FeVbgG1bX4uDfTzlW8CRyubtx8vJp1hAgopTseycOMq3gL+aHAZf20ZTvgXE
Hvsw07+c/b74MMhbmHixi+qzIR9C13ikSMSx9Q4frg3pChLF3mx9De5Nsgcn
f/Fn62+IkbU6fSmazQ8fnqZJ8hM9A9n6HSzPqc2a2hPM1vego5dgPl+K1RdL
yPrmkXi+dgXbH4Cl23IvW5Wx+beEKqm4J1KqYWx/AfaPGLlaJB/O9h8gM2SF
0wfbCLY/ASltnPob6yPY/gV0J/fph01i91cAGsGuu5yvs/okgCmbHzZ/bvBl
+yOQbvT7m+RkJ8oXwltJbr+vrpDyhXD1YWVH9RdpyhfCsnc3w34Pmsn2Z2Dt
gj/rAw/Zs/0buFGV1C+Isqf1sxBsrFbeql0Nov8Ds4V0yg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+2MPZ622GWcVP3D+H7EQi2M=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9250875731699824`*^9, 3.9250875810377665`*^9}},
 CellLabel->
  "Out[392]=",ExpressionUUID->"aed21955-34b4-4759-be5a-28151f15aa20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem10", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem90", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240137340669894`*^9, 3.9240137678775597`*^9}, {
  3.9241230368316574`*^9, 3.924123047120839*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"73f90aca-18a7-4d30-90ed-a4fc60c4dfd2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+O4XqffZwpr0bUC0ePBgjay86L/Yw3fO
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12HkglNsbB/BJuKlIloQsY+wMxpjRxjzRvkg0NW0qQsi+VxPlliQttJGk
vchFt1Vpntu+SItE29WmRZSUsrT8fl3PmX/88X7erzPnPO95nzNc/0ifQCUO
h2PSi8P5/Vf6+1PrikbPI7PXLPBQFBf9/rii/1xeYP6M0QrO70+qK3b0Trwn
nztS8Z+XumKeOydo1A1uj7d1xf61se43Po6T/Oc5rljv2Xvl96Dxkp58MdY8
EWwd5uEp6ckXo6N999AzGeN7fKoY/QuuJ73xk/V4qRh3WFzg5usv7vG2Ylz3
RXfbso/hlC/G0bqFOTmqSyhfhO8lDy2qeodRvgiFG+/H1slDKF+E8voLjRNH
BVG+CE0KVtTPj1tI+SLMao2VPHwvo3wRXu9nlKg7wJfyXfAYL/lBUn8x5bvg
83UleX9WjaB8F3R4f0FX68wYynfBjxqVnyRpPpTvgq8a3vMbNOZTvguObk3Y
+2qvH+ULcePgE76LLKWUL8QQmaA6/+kcyhfiG5tvc1VWj6N8Icau3XdZaV/b
+Z58IWY+0v7A57n3rBdHiMPi0LjG3bNnvWqd8avFp7pfDzxpfZ3RPyTavz14
Fq2vM2rdMsnJ8plJ6+uMyXN2WqdaS2l9nXGlt4WyxplRlO+MnCEpf+2Z5UL5
ApxuFZjaMs+Dxi9A+ZCd0Yvj5tH4BdgsuzrOtSyYxi/ALwHqM8J3BdP8CFC2
7XXRM/1Imh8Bbm+t3t8/NprmxwnLi0fubNSOpXwn1P3hab5HOYzynXD+7cjk
r8KFlO+Ehb1dDn50G035TjhbmhGkP8uLxu+EO1o2vgwWL6T5cESxUfcLS69g
+v6OaL3V/1J0SCR5R5zgazjOrCiWvAPWfdnfTyktkbwDyoPnTcvasZS8Ay6d
6HpqRXcyeT6GVihX5dYkkOfj9KwFo3cMjiLPxzy+rOp1hT95e7x64Nq3zj6z
ydvj+XPPuzhcT5ofe0zcsmPPpcCJNB92GJA3PHgMbwZ9fzs80l2WKf+X1Zsd
ujeEGyXsoeepyBb7tGlVzVkTSd4Wcw+M2JxlH0/eFic+OhXYfTqZvA32GljQ
GeYlJ2+D9dIrPlGT5ORt8GTCrwUTipi3xpGatTtmayWQt8YXWWub4s2SyVvj
EdH2AJlKKnkrzIseHTt23SryVhjBL11i6JxG3grLJF6ppbPSyFvi+NDTrp62
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
BTu/Ad386aunpbqSXwQ+M7fqTKmYKf4vHdVedg==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924013756644415*^9, 3.924013768852667*^9}, 
   3.924123050125219*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"b7bf02fe-d9a6-489d-bbeb-0062d277bed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp3000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp6000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#79b2f3\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#5c98ee\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#407be8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#245be1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e45c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1c33a5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924013849193776*^9, 3.924013968021122*^9}, {
  3.924545422332579*^9, 3.9245455111806602`*^9}, {3.9245543768871765`*^9, 
  3.924554400692226*^9}, {3.9245545328225207`*^9, 3.924554592455695*^9}, {
  3.9245546293051624`*^9, 3.924554660238348*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"7db93024-8464-424c-9502-03b8e69685e2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.4745098039215686, 0.6980392156862745, 0.9529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.2262262397583907`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2262262397583907`]& ,
             TagBoxNote -> "1.2262262397583907"], 
           StyleBox["1.2262262397583907`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2262262397583907`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.3607843137254902, 0.596078431372549, 0.9333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.3107732524268412`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3107732524268412`]& ,
             TagBoxNote -> "1.3107732524268412"], 
           StyleBox["1.3107732524268412`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3107732524268412`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.25098039215686274`, 0.4823529411764706, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.4079250487199733`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4079250487199733`]& ,
             TagBoxNote -> "1.4079250487199733"], 
           StyleBox["1.4079250487199733`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4079250487199733`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1411764705882353, 0.3568627450980392, 0.8823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5227329827127556`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5227329827127556`]& ,
             TagBoxNote -> "1.5227329827127556"], 
           StyleBox["1.5227329827127556`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5227329827127556`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.11764705882352941`, 0.27058823529411763`, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6167798350385083`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6167798350385083`]& ,
             TagBoxNote -> "1.6167798350385083"], 
           StyleBox["1.6167798350385083`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6167798350385083`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                2.6206443088872393`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.6206443088872393`]& ,
             TagBoxNote -> "2.6206443088872393"], 
           StyleBox["2.6206443088872393`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.6206443088872393`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                1.6829432737245273`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6829432737245273`]& ,
             TagBoxNote -> "1.6829432737245273"], 
           StyleBox["1.6829432737245273`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6829432737245273`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.465359477124183, 
                    0.6352941176470588], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.6980392156862745`", ",", 
                    "0.9529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24052287581699347`, 0.3973856209150327, 
                    0.6222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3607843137254902`", ",", "0.596078431372549`", ",", 
                    "0.9333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.3215686274509804, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.25098039215686274`", ",", "0.4823529411764706`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09411764705882353, 0.23790849673202616`, 
                    0.5882352941176471], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1411764705882353`", ",", "0.3568627450980392`", ",", 
                    "0.8823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1803921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.27058823529411763`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07320261437908497, 0.13333333333333336`, 
                    0.43137254901960786`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.10980392156862745`", ",", "0.2`", ",", 
                    "0.6470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9245546393566885`*^9, 3.924554661296238*^9}},
 CellLabel->
  "Out[317]=",ExpressionUUID->"fc64a2df-cc48-4814-93fa-e872ae929f30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92401403164473*^9, 3.924014053491347*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3dd7bf0c-89bb-40c4-aa11-4fe458585276"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.2219966052808435`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2219966052808435`]& ,
             TagBoxNote -> "1.2219966052808435"], 
           StyleBox["1.2219966052808435`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2219966052808435`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.3039337807923903`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3039337807923903`]& ,
             TagBoxNote -> "1.3039337807923903"], 
           StyleBox["1.3039337807923903`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3039337807923903`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.4050738778350105`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4050738778350105`]& ,
             TagBoxNote -> "1.4050738778350105"], 
           StyleBox["1.4050738778350105`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4050738778350105`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5205511795399191`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5205511795399191`]& ,
             TagBoxNote -> "1.5205511795399191"], 
           StyleBox["1.5205511795399191`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5205511795399191`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6211327842282843`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6211327842282843`]& ,
             TagBoxNote -> "1.6211327842282843"], 
           StyleBox["1.6211327842282843`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6211327842282843`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240140548286*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"aabf90c8-ae31-42a0-b7cf-004cd4e8348b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp3000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp6000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#79b2f3\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#5c98ee\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#407be8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#245be1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e45c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1c33a5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240141031120057`*^9, 3.9240141277669673`*^9}, {
   3.924545690162039*^9, 3.9245457285724607`*^9}, 3.9245548224485393`*^9},
 CellLabel->
  "In[318]:=",ExpressionUUID->"ccfd6663-7792-421a-af1c-d98c2d5afa64"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.4745098039215686, 0.6980392156862745, 0.9529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.3375861091402161`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3375861091402161`]& ,
             TagBoxNote -> "1.3375861091402161"], 
           StyleBox["1.3375861091402161`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3375861091402161`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.3607843137254902, 0.596078431372549, 0.9333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.4430008511173313`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4430008511173313`]& ,
             TagBoxNote -> "1.4430008511173313"], 
           StyleBox["1.4430008511173313`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4430008511173313`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.25098039215686274`, 0.4823529411764706, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.6124061679053645`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6124061679053645`]& ,
             TagBoxNote -> "1.6124061679053645"], 
           StyleBox["1.6124061679053645`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6124061679053645`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1411764705882353, 0.3568627450980392, 0.8823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.773940314101326}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.773940314101326]& , 
            TagBoxNote -> "1.773940314101326"], 
           StyleBox["1.773940314101326`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.773940314101326, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.11764705882352941`, 0.27058823529411763`, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.9187750071231306`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9187750071231306`]& ,
             TagBoxNote -> "1.9187750071231306"], 
           StyleBox["1.9187750071231306`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9187750071231306`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                3.50530486948415}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 3.50530486948415]& , 
            TagBoxNote -> "3.50530486948415"], 
           StyleBox["3.50530486948415`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[3.50530486948415, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                2.381387561462218}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.381387561462218]& , 
            TagBoxNote -> "2.381387561462218"], 
           StyleBox["2.381387561462218`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.381387561462218, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.465359477124183, 
                    0.6352941176470588], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.6980392156862745`", ",", 
                    "0.9529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24052287581699347`, 0.3973856209150327, 
                    0.6222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3607843137254902`", ",", "0.596078431372549`", ",", 
                    "0.9333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.3215686274509804, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.25098039215686274`", ",", "0.4823529411764706`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09411764705882353, 0.23790849673202616`, 
                    0.5882352941176471], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1411764705882353`", ",", "0.3568627450980392`", ",", 
                    "0.8823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1803921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.27058823529411763`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07320261437908497, 0.13333333333333336`, 
                    0.43137254901960786`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.10980392156862745`", ",", "0.2`", ",", 
                    "0.6470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240141290575523`*^9, 3.92454573001794*^9, 
  3.924554823919973*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"de11f3ae-2ccd-4458-a7b6-917af9cb24fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite PRODUCTIVITY\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924122940645465*^9, 3.9241229673455763`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a4d1b31b-36bd-41c0-a90c-689e3863fef3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.079455456499122}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.079455456499122]& , 
            TagBoxNote -> "1.079455456499122"], 
           StyleBox["1.079455456499122`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.079455456499122, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.088164576252414}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.088164576252414]& , 
            TagBoxNote -> "1.088164576252414"], 
           StyleBox["1.088164576252414`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.088164576252414, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.1237982382370726`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1237982382370726`]& ,
             TagBoxNote -> "1.1237982382370726"], 
           StyleBox["1.1237982382370726`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1237982382370726`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.1493134429388874`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1493134429388874`]& ,
             TagBoxNote -> "1.1493134429388874"], 
           StyleBox["1.1493134429388874`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1493134429388874`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.1613638201008425`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1613638201008425`]& ,
             TagBoxNote -> "1.1613638201008425"], 
           StyleBox["1.1613638201008425`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1613638201008425`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite PRODUCTIVITY\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924122968858141*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"5b1c883d-ea60-45ed-a910-84016d78b5c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp3000", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp6000", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<protein titer\>\""}], " ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245308376901712`*^9, 3.9245309241778307`*^9}, {
   3.924530954651969*^9, 3.9245309682937803`*^9}, {3.924531010923421*^9, 
   3.9245310440215554`*^9}, 3.924531156838972*^9, {3.924531481616082*^9, 
   3.924531504450596*^9}, {3.924545534510494*^9, 3.9245455433775997`*^9}, {
   3.9245549230326257`*^9, 3.9245549314133034`*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"b5ce1fd2-b1aa-40f1-8ea8-2d417774fb0a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614]], 
        LineBox[CompressedData["
1:eJxdzg9I1HcYx/Gfzv95p955t0ptd+fpeefdeXr+i2C/Z2dZLlhkaX90IxxO
s5wWFCqBc26TlsuJpaXVGI4avwlGKLZBtmXWHDV149fcCM5S25jUUitMsb/3
UOvzheN4eF7Pm5++oCy70FsQhManv2f//3+udt1bOc9fv7h38osyCtrl8syy
OLN37s32azUujxwV3f+51TubD/B+QuyQ3nesMjW5vpOevX/Fn8ynhR2RR9nf
FVfU/9JTfe0r3k+LeQuPA7/RtvP9fbFmffbuD1pPsp8VW29+NnSsW2I/J2p6
0ouiUjvZL4gXrZZpZcIZ9gKVNk8VB3d38d6Lclf3WQu29/C9N5Xc+nbIWP0D
ex+q+Lq8JPnSOfa+tGHzdNtc64/s/ehSrZ8ru+UC+wAKubP201+HLrIPpO3q
svUfpl9mH0TvKepMDe4B9sFk6+y0VwxeYa+gAzsfrFSPDbJXUnnWvS21+4fZ
h9Lo/ImNltzfeR9Kh5TOzGizzPdhtLXEVeOf9wd7FUUMdTsC5D/Zq+iq4oiq
cdN19mpacfBRV1Osm304bW18vCZad4N9OBkyK//e13eTvYa68o5HjtePs9fS
RMAno0v23GKvpaNjtub+9n/Yv072dR8He2km2S8mhbVj/+622+wX08/r6uof
2e6yX0Jlh78s7eydYr+UzuZW/LYxf4b9Urpjjci/p7rPPoLkvOGByukH7CNJ
UWr+Xgx7yD6SZi4fMccUzLOPom1Zfu/MTi6wX0YR+kO6p1+X4fHLaPmmvrGG
Xq8Mj3+DaqsWclRFr2V4vI52nWkprVvuy3sdFY07C3fY/fleR5qHIYbz0YHs
9eT6a1CZ2byIvZ5un7b3jwQp2eupQ/u5z7aqUPYG2nDB/faEt4q9gcLOFjdF
nVKzN9CAceRd/1wN+2g6eLK1ITxTy/7l7PEvZ483gjeCN4KPAR8DPgZ8LPhY
8LHgTeBN4E3g48DHgY8DbwZvBm8GbwFvAW8BHw8+Hnw8eCt4K3greBt4G3gb
eDt4O3g7+ATwCeATwDte3VsccO941X8EXgIvgxcSoZ8I/UTog5fAy+CFJOgn
QT8J+uAl8DJ4wQl9J/Sd0AcvgZfBC8nQT4Z+MvTBS+Bl8EIK9FOgnwJ98BJ4
GbyQCv1U6KdCH7wEXgYvpEE/Dfpp0AcvgZfBC+kv5ieYDkPY
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
        LineBox[CompressedData["
1:eJxdzAtMU3cUx/ELU6IMXHlZ5GVbHqUvWkqhLgzvKagJCWZKZKjZfDAYxMeQ
zSwOE5TMseyBCEajzhkim5HrMD6mLo5pmGEgEuvCLosrC1UwgBNiJxOHq/jo
iZu/f3Jzc3I+56suKs8v8RcEof7J9/T//5fdpHIUPHvt4rmu4saz/ZuyfbMs
eoKMrx25UJ3tk24xsKM4M0HzOe9vif8M1r3a3t2QfUx6+m6LJw33Zfu8fezv
ivtzK60hZYd4/5e40PT11XuVh/n+b3Fwp9JQ7X+E/QPx/Iq5Hd01zewnxUNV
tsb+iy3svaI36qC6xnOCvUBl6fWbdpee5r0f9W1soU7dWb73p2r324UTU9+z
n0Zrl4/MqYxoZT+dhqOOVnzz+kX2AbQorOJ3ra2N/QzqzFtzYLvpEvuZNPzO
1tJ3s9rZB9Kq/DalvqqDfRCV6x3zzTcusw+miThDkd/mbvazaKC57IdlFU72
CmrKLbTcKfqF9wpq2fXvmanpPXwfQpVjW4Idw7+yD6VtrswvhcFe9qEUsjTr
ekL0dfZhZN0Q2rX4Axf7cKpOftR6zvUH+3DaMWtr7OLVbvYR1Odav2TIeYP9
bOqp/3mzYtUA+9l0wnNwZZ7+Fnsl7XT/ZLHFDLGPpJU1rZdeFkbYR1KO+1jj
uPpP9nNow+j7Vbqro+yjaF1tt3rMeJf9k7luQtHb4GEfTWkNYR8NBN9jH0PN
4tidUdc4+xiaXOcS1Rfus4+l4g9vX2n/8QH7ONK+tCjr26lJ9nEkRhr2eEu8
7OdSp330qzM9U+xV1Lb04f4rhX45vr2K4hXRdZ/c9M/x3ato45tvxfSfmpbj
82rSf7p+gbc2gL2aPs5fkmctncFeTeW2+Qu/yA1kr6GZO5wrDIeD2GvIYWm6
6dS+wl5DtRHjxSqPgn08fVawq+v4G6Hs40lT4Dj5XkA4+3j6Lrbk8si1CPYJ
1Nv0W5+5Rsk+gcaPDu3NdCrZ/zf7fOLz2ecTwSeCTwKfBD4JvBa8FrwWfDL4
ZPDJ4HXgdeB14PXg9eD14A3gDeAN4I3gjeCN4E3gTeBN4FPAp4BPAW8GbwZv
Bm95ca+3wL3lRb8dvAReBi+kQj8V+qnQBy+Bl8ELVuhboW+FPngJvAxeSIN+
GvTToA9eAi+DF2zQt0HfBn3wEngZvJAO/XTop0MfvAReBi9kQD8D+hnQBy+B
l8ELdujboW+HPngJvAxemPd8fgzmHMac
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUcx/HnTogENTyPvyfcHw7vuD8cxx3HraXPN2giDmdjuvVnWatB
aIsynQ510VqJDrSZtNkSFtKxeiDnWgLeFK242JrkRJ/DXJKA5J9FgIhwMLqy
+y7z89uePfvu+/q+9a++VVqmFATh0D/fg///X0Gz7umN/76AuLVB7/tS805B
ZJbFJ/Z0DDcVvV8QkdfF4ZKEM6F9dbwfEa37O3O6TIcLWqUH7464RigMKWI/
ZT8uWp3b9DNvNvL+rrjjmCH0wVPH+H5KlNtspWt3+djPiBt3184dNX/FflZ8
6WL4lXWBNvbz4ufNifXtVSfYC3Q57flJX903vFeQJmb1yvq4k3yvpKK48bLe
tzvYR9HWyt990ot+9tG0prrm3o+vn2H/GCnKPRVF68+xf5wUp/sVc9Hfs19I
n7iejfH0/MA+lsa8t7o3dwXYL6LBGnFi540e9oups9x3yZn8E/sl5Pg5vWqs
6Tz7eEpuXdLbWnqB9/HUGUttevVFvl9KteaVtabGPvYqcnuSPqpZe5m9ikal
1VQSFWS/jAIHz9rPpl5hr6bz5Zl7J2xX2avJ2L5CsFX+yj6BjF3Ov4LdA+wT
aZE/tt7Wfp19IvXXS9W+rCH2SVS803ukrnWYfTJVTM+GU14YYZ9MDXsz9q/K
vMk+heRxY/uq0C32qdR3qSJ4ZOQO+1RKLZ5K+005yl5D3nta7YVdY+yXU+OB
zu451QT75fTFtuCmji132afRgd0bEmpuTLJPp/6jvS3Ht0+xT6fp+YFhrWma
vZb6po9f26MKsdeRjZSTV+xzvNfR5ODpDU9Wz/O9jpqCLSfHr4XZ6+mz2fu3
v/UqCiNeT5sNunfdDcrCiNeTbyDcEaWOKox4Az1jP7hvmS+avYG6Sv7091TG
sDcQ3Zzd4diykH0GlX39ncZ8KI59Bg3dN69LOreYfQYt+DB7pmpBPHsjaQ1l
mk3PLWVvpNyWX/JHT6nYG8n/xxvbb1vU7DPJVRl8rdmXwD6TzO7mq0Prk9hn
0uDLgVNOcwr7FVTsbzkR/jiF/cM54h/OEW8CbwJvAm8GbwZvBp8FPgt8FngL
eAt4C3greCt4K3gbeBt4G3g7eDt4O/hs8Nngs8E7wDvAO8DnPLq35MB9zqP+
PfASeBm84IS+E/pO6IOXwMvghVzo50I/F/rgJfAyeMEFfRf0XdAHL4GXwQtu
6Luh74Y+eAm8DF7Ig34e9POgD14CL4MXPND3QN8DffASeBm8kA/9fOjnQx+8
BF4GL3j/m/8G6gyy1g==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
        LineBox[CompressedData["
1:eJxdzA9Qk3UYwPHXGaI78AaMMSYBAwZsDBj/Nqqz99lQOJSQk3HoHaeVYgVy
g6AsSdI6LvIPnR6kdmmU2uHLgSxaURYRSqQHSIx3miZghOk0j4GAOJCyPWf5
/O7ee++55/N85S+a1uYLGIbZ/8/38P//ZzgWrM/593WyL7xV7AxzLzG4Zp6d
MF1yTzm2y+CSw+zasTZZT/tu3I+y0u823+K2HzA0cA+fnT0/2ThtKzmIfow1
nlJO9Dg+xv04u0pcc+Plkk/xfpLtqJVcW153HP099tpzUffLPevR32cfGC1B
P+5oQD/H1tpk3n3GU+gZSAtyNttbzbhfADtPppa9PtiC9wIwcxXVkdlfoX8C
8rPEXRnft6J3A/8Hm9M2mU6jXwSHNqzsnc5oQ78YFr6RZZo73I5+CbS6i6aa
nupAL4TsjVvr+Ikz6D1gY7nkr4NnO9F7QsJvuXn8z13ol4Linf4vLsydQy+C
exkVn72q68a9CC5YfxnvauzFey8QX6x937e+D703/JG+pv5br3703mDptbZ9
0GhF7wMhOT7l5mwevRh+Kt1TOei0oReDpXH3lsKpS+h9wdp5ZiRcfAW9BJa8
ZLqlfuYqeglcz5WtV1UNofeDspWxd3NvDqOXQv9w/nrRit/RS+F0mWT0w69H
0PtD9YGbQ7IVo+hlkGn9s48fuY5eBrNFxan6b26gXwbJyZuOTjbb0QdAQVqN
oarlNvoAONkxekJ/+Q76JyEzq6Io+qMx9IHwZnn37NB5B/pAmN5W6tAETqAP
gjt5hSJd5V30wWAzbug9J57CfTDMd7xn28NP430wCDyF3eOWGfRyeD6vZvWv
FU70cvBpb5rfd3gOvRzUjle2F/TMow8B5a6Aq1X+C1JcPgTsjqfTP18nSHH5
EDjbY6xcY16Y4vKh8K5ZkHNI6IY+FNb5aI9aji9CHwonPhnQ2lIXow+D4ovL
k9TuQvRhcPu1oplkdw/0YeDbNLP3S7snegVoGn6YMitE6BXgN5tWLcz0Qq+A
y8ojS/fWeqMPhwjn1gE9I0YfDm/rrwynb/NFHw7jbqu37JD6oY+AOg9LvnhA
ij4CSvf3yQtbZOgjoKD5Wflg/TL0kY9ml/9vdvlI4pXEK4lXEq8iXkW8ivgo
4qOIjyJeTbyaeDXx0cRHEx9NfAzxMcTHEB9LfCzxscRrHt+rNORe87jfSTxH
PE88E0f6caQfR/rEc8TzxDPxpB9P+vGkTzxHPE88k0D6CaSfQPrEc8TzxDOJ
pJ9I+omkTzxHPE88k0T6SaSfRPrEc8TzxDNa0teSvpb0ieeI54lndKSvI30d
6RPPEc8TzyQ/mv8Gwfh5TA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
        LineBox[CompressedData["
1:eJxdzA9Qk3UYwPF3GDRsExzj7xhssPFvG/+2AUnxPoxOOyLuwHR5CpFdcWkd
V+qdnEbFIdYusWWLs+xQEIm3NBE7YdKNIhQMuazeYiGICB6QAk7odghatucs
n9/de+8993yer3JzWeHLXgzDWP/57v///0wNiux1/75uVr52WmgrfMPkmXn2
wL4Srtb+rskjR1h56kC1f6YF9+Psjif62Ox7VtOX3P03xe4qX3NyNK0W/Sw7
n3VMfrjxEO5dbLc9+vxLwUfwfp7dudPcvqe3Ab2b1QW1XRFLmtAvsEf7C09s
f59Dv8TWvdC+ae34cfQMFLkvPxkiaMG9ACZUL/p8HdCK915Q+VqG7XPzN+gf
geqPii3rj59B7w2G8cV7w3Pt6H0go1ZmNb/XgV4IpfNbz80VO9D7gm++M1Ai
/Q79clhhc34o6PwevQjKt1fxFvMP6MVQcr5JfFB9Dv0K2L277bAgsAe9P3z1
+NRwc8AF3PtD1PCi3zp5H96vhJEbmrvJ6/vRS6Dm04s1raU/oZfAkRztycUf
L6EPAJ/8ycaGlF/QS6F3kqsyH/sVvRSGZLdPnc7+DX0gDA793M/c+h19EGwT
zzXt6nOiD4LnrWNP5/UOog+GFqNx78zCEPoQsNimt+kiR9CHQM3G0KylzKvo
Q2FZxZYSxZ5R9GFw2bH6atvINfRhcI1vtNVvGEcvg0LHq0sdzuvow0G+QXRQ
+eYE+nAwTHbPtGim0MvBK+K5bL30BvoIEL1VtIZRTKOPgLYyoc6umkUfCZu1
+e6ZvFvoFaAuCN5xosaFewUUKGWRmcO38V4BRSO5rwyZ5tEr4XrXacdQ11/o
lXDorKjibLEbvRLYnqIEu3gBfRTw5Xu/cE3cQR8FrR+/fmDpyhL6KPgso1qf
5MXkeHw01KucF7aECXI8PhpKLZVhuWqvHI+Phk3iiYrGqmXoVdDxjO0MCL3R
q6DE2vn26mYf9CqoXhUZKn5KiF4NFpU9q3nBF70aRFvrA5b3PYZeDbOlftaj
DjH6GBgL75ENOP3Qx8B+16U/7zy6En0MmCp0q/LiJOhjQX43Ul9XFoA+FgYq
n/2k9ZQUfSx0DU45x+KD0MfB/s6LDRsdwejj4KbkDzeYQ9HHQe7NpMQIVxj6
eCjgPpiM+TYcfTyMttZ5pxbL0f83e3zCg9njE4hPIF5DvIZ4DfFa4rXEa4nX
Ea8jXkd8IvGJxCcSn0R8EvFJxCc/vE9IJvfJD/t3iOeI54lnUkg/hfRTSJ94
jnieeCaV9FNJP5X0ieeI54ln9KSvJ3096RPPEc8TzxhI30D6BtInniOeJ54x
kr6R9I2kTzxHPE88k0b6aaSfRvrEc8TzxDPppJ9O+umkTzxHPE88k/Fg/htK
/mBI
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
        LineBox[CompressedData["
1:eJxdzA0w1HkYwPElr4cNeVkv2V1rX1gv+4bMDfvEuSulC+lspYumudBdxSmZ
60537jgUWr2gULoKG6W8XEKUIiGdFUloSd7ymmo7ddftM9fd/mb+859nns/z
pYbu9N+mSiAQ0v/+3v//+zzzKcsD/3kNQsj8sl64aZenYpYKhz/zVInIifNU
yH4heUeay4nuRNwPCZ+J4v3SOtI8iwrfv1Hh5Sftr7XGM9BPCVfsK5ltDsvE
/YyQE2caOLguB+9fCGsfNpVfjTyF/pWwkh//dmQiH71cuEZ/vm7lwbPoF4T5
dLFMQitAT4DfQit0RVlFuFeB0m52XfSZYrxXBcpKfnj+tYvo1cB38PYKM8NS
9OoQky4y1su7jF4DttWtfCEhl6HXApN2CfNCYTl6bag0/bzTx78S/UfgFRC7
hke8il4Xbu73lV+7XoVeD8rWmhn6SarRE4EhF7cafF+LXh8MR67cyyq4jnt9
qGzYsjaqog7vDeDNZM6hhpp69IbQ9l3Eam7XDfSG4BvO48WM30S/BK6Uqz1I
sbiF3gi6CSdvUX1vozcCSXghmZzaiN4Yiow3sXfXNKE3gRhIfl7EakZvAo06
VeLQlLvoTYHqtD7ZVLcVPQmgb/p8/dE29CSYrpfuKM64h94MthZLEuYj29Gb
A2+iV+i75T56cxCQSQlytz/QW0D5nqZibdsO9Jbw7dBeCwMbKXpLCA7uqdhH
70S/FAaD/BbV2D1AbwWE3jyrMo8u9FZQlZKt7RzRjZ4MHrLRPdEVD9FT4MQJ
B7v4yR7cUyBQ51FLKLMX7ymQ0NGyc1T8GD0VfEonx35S7UdPhT3bxH2VV/vR
UyFRJpC1xQygt4bAHBJ5xPcJemvYeiNjWTBJht4aAranBQcMyNDTwFCacyi9
ZBA9DQacHj9eyB9CTwOzsGFL1tGn6G2AdkRtY8nxYfQ2MO+tNiDJfYbeBtxE
u3UPlY6gp4PcMjbWu2UUPR2cmme8vnk3hp4OPjHHPTo2TKBngGZIvLf7hefo
GcDoeVnRRpxCzwCr2qGuqbop9EyQ0Sky9bhp9EzozR7ImvtkBj0TQoafGu8l
zqJnwemQA5T2/ln0LLAgnjG/WT+HngXZ7lWbxRdeoLcFs/Olh9PE8+ht4dda
P72DSS/R28L43XiS80+v0NvB4FfFJ6uTX6O3g8hH61Nis+Xo7eAhFMzZ/v4G
PRsq2BP2Jr1/omdD6qqI2nnzt+jZcIn1Y/Cuje/Q28OnnesOdogIXgpvD1q5
0esTjVS8FN4ekqyW57p1qngpvAOwPP1mNLJV0TsAl7ng2L99EXoHiGKLWxs+
VkPvCMRzYyUluuroHSHiVN4XfnJ19I6gTbhj7/BEA70TpFb2FN7t0ETvBPKI
Xp0b41ronSD4HsV796Q2eg6wEqNLNdV0FHs7DoQb/7DJjamL9xwIWWIp0Vit
p/BxHJhjLKj6pxOxxwGfAPe3v1QsVngpByRBNXlRifrY58LY0bAFjqsB9rmw
8diGGvK4Afa5sHmm0ftcqSH2udCRSZR5HFiCfS5M7AhwJAUZYZ8LDjGXGu+s
MsY+D0y2zIousk2wz4MMG8LLZntT7PNga0FRVh+ZhH0eBPrTylwoZtjnwdi8
u6PQyRz7PJg+si+VLrLAPh8SmJcDMr+2xD4fFg8cn//57FLs8+HS82RS0oQV
9vkQdJh5OtKMgn0+dHlKlrr0UbDPB99qTtv9FCr2BXCFES60XG6NfQF0ZbL5
ZE0a9gUwFts9rt9Bw74AukcuEkm5NtgXwP5H3q30KDr2BRAt0lszEsbAvjMk
VfNKmoKZ2HcGUy71mHULE/sfZkX/w6zoK3mpkie4/N/buSj1XZT6Sr5QyUuV
PMFVqe+q1HdV6iv5QiUvVfKEZf/OfwGnPXCr
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
        LineBox[CompressedData["
1:eJxNzHtUzHkYx/GUUi26qjSp6X6bpmmuIfv71BAmFmFjlaWTUCl23Z0QRSGM
I6uyLicqQyKTXLIKRW5hipTLVFRauWTShdi18/yxzzm/8zvf87yet2NkQugC
XR0dHfm/3/f//ycohx0487+pYJ5tSXa/bLYsSPuuZY5XfVLUj0kK0ko1M3uZ
cHXB8jTav2KM5kwZd9JSHnRC8X3amS1tyl4gg/x7hjXq9Y2ahEzadzLy3KzD
Bff+pPsuJtdCMyna9wj5Huaaf0r8olU55PuY5uDF1voXjpHvZ3ZUVdSt8s4n
r4P1nSuqN8YqaD8A/jkTtpY8P0n3usiIGb36ekQh+YHotRwftKXzNHl9pByv
/nreq4i8AU7JBe2CuLPkDRFfb1jzsFxJ3ghjsx5M7hadI28Mh8MbU+YeLSE/
GHpvLD183C6QH4Kvu6znMwcvkh+KrAsB8UUepeRNoVoX5dFYeZn2pvjNoK90
7sQrdG+GZU1rR3QmlJE3R55s+sU4UTl5cwTblB9lDK6St4DxreGazJar5C1R
fL87PrzmGnlLzKsVD3x25jr5YfiyNLGjt7iCvBVWv/s5++DVSvJW4DiHuLJu
3SBvjX0ry45kt9wkb4M4Dnt9clcVeRusurZHeNzwNvnhKNj3se+S1R3ytmje
23glPeQueVsk6v1+KHnHPfIsVDuMfcd9WE3eDsZ7YyLvpt0nb4eY4ip+he8D
8iPgvDUua1rlA/L2mD1j/2Of5Q/J28Ok10rZ660i7wDlk0MnWltV5NlYZmMo
W6SsoT0bS9sg/iu1lu7ZyJtePGvM5EfkHREUJV0kc3hM3hFY0HcpuvsxeUdc
XjfvCFdVR94J6mS2c3j5E/JO2NYzYeV2ZT15Jyg78w5uLmgg74yQDPH8Rwee
kneGpO521Pr9z8g7Y5T7iK0Ofzwn74LChBnvA0pekHeBSr1HHrFITd4F7FbP
XVM/q8m7wjbrp7AhexrJuyK13fzeMHETeVeku7JiXz9tIu8Gk03q7BeJzeTd
YFTE/jFA+JK8G/iJv0xrffuSvDtOlRU4cXJfkXfHzsaSoYqEFvLuaO9PVpzk
tpL3wMKpU6RcvTbyHrBbzXUxVLWR9wDL2H/O6bzX5D1Rqr6TsS2lnbwnGsb3
lMlj/ybvievpTYmfZW/IeyF/K/NBzOkg74XdXjEye/e35L0wNSxD+szuHXlv
XGkY7bvK4j15b6TtPJs1MPM9eW9Mj5Kmsj0+kOfgVXjEI97ZD+Q52D1XNLJw
Uid5DvjK9tJ4TSd5H6xxZu9ozvhI3gcKnXquoVBD3gfm+/KzDnRoyHOhG5hZ
lJbVRZ6LyR0KuEz9RJ6LGs7L5HMW3eR9Eb09ZMOgqm7yvqhwYy23kPeQ90X+
ycikhoW95HmwuiRjK4P7tHsvHtYEdC1Pd/lM9zwEvVgj67L7ovUbeYjRLy5q
M+mnHg8TO0J2rzX+qvW1PKyt+9YwSu8b9f1wqjAqktHVkWr7fogQKNdvSNKR
avt+OFFadvH8oAFSbd8PXa2psdfkA7Re4YeVAfr2Qba6Wl/rh3eDLecYl+hq
vQ4f89/Y7aibrUd9PqJ/bRxX36NHfT7WaaqTNZkDqc+HcuQSWdJYferzkSyO
jYvr1Kc+H813UodqCgyoL4C0v771ZuQg6gvwqOp8eIq7IfUFmFSywoj3yZD6
AvjNDFN53TaivgCsN0v7k/YbU1+AvrpAbuWKH6gvRJn/mZ2JYYOpL0RVKpPj
xhtCfSE8Z4X7jncZSn0hTGdHsaJcTagvxK6Ip0yLnSn1hQgMTUt7kWdKfRE8
JGscl0jMqC9CxOudx0JvmVFfBHmtyRL1DHPqi8A2Dddd2mdOfRG21WxTKw5Y
UF+EGO8Nja6wpL4YmwtzjZguS+qLkTJY1X3l6DDqizHrlvscTqgV9cXoLzfL
uaxvTX0xXpYIs8OU1tQXY9/mHw3OJdpQX4LKnGPBzhOHU18Cm8XRroksW+pL
8Cld49Xy1pb6ErR43pUdULGoL4FxyKa8phw76kuwt3/Y89jsEdT3Ryh7cdlT
ub30HwBIjNQ=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"protein titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 3.3497364562310515`*^15}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"10xMean\"", "\"20xMean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4854030501089325, 0.5742919389978214, 
                    0.6527233115468409], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7281045751633987`", ",", "0.861437908496732`", ",", 
                    "0.9790849673202614`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9245309487182508`*^9, 3.924531048848817*^9, 3.9245311585877223`*^9, {
   3.924531500396373*^9, 3.924531504946655*^9}, 3.924545555291422*^9, 
   3.9245549334992933`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"25fc01ff-3cba-4d65-8a50-6dabca112f14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp10", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp50", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp90", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp99", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp3000", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hptyp6000", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite titer\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<hp=10xmean\>\"", ",", "\"\<hp=20xmean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92453143524802*^9, 3.9245314437360506`*^9}, {
  3.924531511550308*^9, 3.9245315253844233`*^9}, {3.9245455808734894`*^9, 
  3.9245455858759975`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"f64539da-c505-462b-98d7-c27237034492"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614]], 
        LineBox[CompressedData["
1:eJxdzHlIFHEYxvHR8io1s1ZdM9vV1dVdXffeCmpeFLrLo7JTiejADioqqLCS
sku2ww4huxM6ZiUsjBLrjySLKBXLKY2gopMOU7PSxO3al6LnB8Pw8n7er3r+
iqyF3oIgFP/6fv/xTf/zasVGx8PHL9fuSfXMsqj+lD5wkc/JVI96JmZqpj6u
GH6e969El6R2iuUXU13S7/dO3NJTdnzsuCvs28RRDUHfIvKu875D3NNUd9Xe
eYPvv4iLP+cOydxQy75L9G4trKqcfYf9d9E3KHKX/6k69r1i3t3V+R2qRvYC
tbdOeas+9oD3XlTTNaHRNfMh33tTfXpvpSmrhX1fajSMH5Cx5gl7H+r/vj27
tPkpe18qk2rihPrn7P1pgF+2e/mLF+wDKG/u+h699jX7frQxsGSBs+wt+0Da
XBW7uDrzPfsgKuop7fIf3co+mDafS37lKm9jH0LaN9dqVDkdvA+hedtjlWZb
J98PpFth+6a6U7+yD6Vv5Y/sWTu62IdS+uSWgM+d39kPomFX75QGlvayH0ya
ommyQxTSPH4wfQo9VnWz3ivN4xW07cJ+ZX5hnzSPDyPbAloZPNuHfRjluJt3
ps/wYx9Oox3yma1FAewjaHvLukOO9v7sI6h6XT/frP3B7JXUNGaXpflyCPtI
mpFbV18wJpR9JLm82rL17kHsh9BHRVPJuxYF+ygK6zZKr++Hs48i8XCh9lK3
kv1Q8j94QnlkThT7aMrXFp8c4Y5mH01HVxn3Sq0q9sMocNlXmrUxhr2K1i5Z
6Sw2aHivooroim6Lbzzfq2hk7fPbfj+07NVUkLt7eZ1Ox15NC+9Vx2YcSGKv
Jquz9sM1awr7GDp7pWTeUh8T+xiaeHrS5adOM/sY2tTgMn9xWNnHUnhOwzSF
wsb+3+zx/2aP14DXgNeAjwMfBz4OfDz4ePDx4LXgteC14BPAJ4BPAJ8IPhF8
IngdeB14HXg9eD14Pfgk8Engk8Ang08GnwzeAN4A3gA+BXwK+BTwxv/3OiPc
G//3BeAl8DJ4wQR9E/RN0AcvgZfBC2bom6Fvhj54CbwMXrBA3wJ9C/TBS+Bl
8IIV+lboW6EPXgIvgxds0LdB3wZ98BJ4Gbxgh74d+nbog5fAy+AFB/Qd0HdA
H7wEXgYvDP87/wQWXvsz
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
        LineBox[CompressedData["
1:eJxdzA1M1HUcx/E/BCcIAsJ50InnHXfHPXIc3KNT9/8KutIimYNqgM8PDXNp
NatpZVPGho+D+YSuZTlF/1f5AEts6RYJcU6nA/8OFBsqWREywzjtFE2772x+
ftt//333fX3fukUr5yyNFgSh9sn39I+v9L/XKh7+1Gc7/tHWgsgsiy8kve6q
SdhXEFG94l7z8bszvId5/6tY917M+2/uPVYQkJ6+fnGg79qFGtMJ9nfEWfpd
tTfdp3g/JC4PZlcNdv/I98NiyVeBQ9tLW9nfF8tWNTUHE4Lsw2Lw+uRvihLO
sx8RG4oO3mz89iJ7gRIXTFLZFZ28j6LVtw9Nse6U+T6a0u1dwxtKu9jHUFq+
vHtb8VX2sbQm2FZ7peoX9gpa+Ltv7tpwL/s4OllRfLT/8g328dRen0zze/rY
j6ajB0f83yf9xj6RvAfKTYZ3/2A/hlo84VFd4T/ZJ9E/bnvpuROD7FMo/tL6
9aN67vA+hdYobl9fsG6I78fS+KSW+oaX/2afSpXNr74W7wmxT6Up1Ts/uTzz
Pvs0SnV2d1RvDLNXkmb2xJHeew/ZK+k7V1Pbpj2P2Y+jh4m6B9OnRhVGvIqK
S5rKAp3RhRGvopbt4/ov1cQURnw61VWUly+rVLDPoAFNRaj7rTj2GUQZS9pn
bh7N/kWa22m8ta0vkb2a4pLdbzS+k8xeTXUNQ+qX1GPZj6dmQ+DI2c9T2WfS
lkdff/EBKdlnkql/OOMvhYr9BKqv7FkSupfOXkOTJt/SzlGp2WsosHpayv6K
TPYT6UjRGZujVcNeSyU/DPRGNWp5r6W76+yLT5mz+F5L7T93VK86rWevo5Oz
Y4+VrTSy11F31LyWRdNN7HX09uZzoanTLOyzyGSZ4L5WaWOfRcaCtPK2n3LY
Z1FxVewrMxxO9noyxHQMfrkjj72eFoaWbilKc7HX0wq/UulvcrM30Bn/g0dd
H3rZG2jfx7MerzjtZf//HPHGZ3PEG8EbwWeDzwafDd4E3gTeBN4M3gzeDN4C
3gLeAt4K3greCt4G3gbeBt4O3g7eDj4HfA74HPAO8A7wDvC54HPB54J3Pr+3
OuHe+bz/DLwEXgYv5EE/D/p50AcvgZfBC/nQz4d+PvTBS+Bl8IIL+i7ou6AP
XgIvgxfc0HdD3w198BJ4Gbzggb4H+h7og5fAy+AFL/S90PdCH7wEXgYv+KDv
g74P+uAl8DJ4wf9s/heJDJSW
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUcx/GHUwJuGAgHx+EdcAcHd8ef4ziOA5I9X+7UmShjGrjWGsg6
/xSo0WWh1KytBqFCE7PUrdaajCdahc4hkVtOU0sboQ8gizDdLY+lgiUQcVl2
3+X8/LZnz777vr5vfe22tR6FIAjv/vs9+OOr/O+dFXujDhR5qve5grMs9vsr
e6YjPnIF1TVxc8dwzXuuLt77xOXfdQrdHV+6PpUevAnR75k88uL9E+wnxYN3
1hXfmOjn/V1xuvxZf8mRb/j+ntjyzJPywNQZ9rNi3ScVJxe2nWc/Jy7PUGjL
Gi+yD4g9T8y4qWqAvUCd98enDnQM8j6ETtiO3S796wrfK0i9xjtWdXCY/UK6
Wbli5qfNo+xDKeTryg/DNo2xf4w62l9JHlxxjX047VFvSN818wv7CNq+Wyzv
v3iDvZK8gdBzTed97CPJWbx65otbv7JfREc10VuVxRPsH6fYn/cs1X31G/to
0p5pvbzy+Tu8j6bA7wNJ/vQpvl9M+qotbTu677KPoePj61Xasj/Yx9D+pkhV
V/Q0+1jaMD673qKYZa+i2m/nvK8lzrFXka2mvHnouXn2cXSqeWjonbG/2cdT
849do0dPCe6gj6eT7db0eZPCHfRqeul669s50gJ30CfQ1bH9pppVoewTaFXf
0z51ZBh7DQ0su/LC/FQ4+0TakdJw+Pqckn0iVRtvl4wULmK/hNJdFYadH0ex
19IHTa0jEbrF7LXU/MMa04XXY9jraGJpQqNqPpZ9ErX4Qjz178exTyJl71N1
p8vV7JPJdnNrhdWuYZ9Cb2avMzhKl/A+hT7XXbIlbtfxfQqtLPLWXD2XzF5P
o1HKP5cZ9ez1tFZzqHbnGwb2eqrfdVqnmUtlb6CGwX5F914jewNdKtsY1laa
wd5A2rfC8xt1ZvapZO5r6Tsbn8k+lbwX6tyBkmz2qfRZT8++/nYr+zSqWR0a
WKC0sU+jV30NvS9vzGOfRiP34jr3DtvZG+l4ePKtSY+DvZF8XRPbHGoneyNV
H9s0rPAXsk+nyyPf189sKWL/cA76h3PQZ4DPAJ8B3gTeBN4E3gzeDN4M3gLe
At4CPhN8JvhM8Fngs8Bngc8Gnw0+G3wO+BzwOeCt4K3greBzH91bcuE+91G/
G7wEXgYv2KBvg74N+uAl8DJ4IQ/6edDPgz54CbwMXrBD3w59O/TBS+Bl8EI+
9POhnw998BJ4GbzggL4D+g7og5fAy+CFAugXQL8A+uAl8DJ4wQl9J/Sd0Acv
gZfBC4X/z/8AsWvLIw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUYwPGXU0EqFO7OkzuP4/7wcsdx3J+XO05o9T5xTXE5VJiS5Yrp
1NHaxBbU6I+w3ImOaojJChrnn654VdCxsTT/HWE4EBLkxW4WhpQUmuApdWpY
2T3T+fy2d++ePZ/nq1u7qWC9hGGY2v++B3/6Vv7/zvC3VksOGfM/yo3MIj+5
6IRXjPblRtTPfPKz7qwJQzPuf+X5GUnS7ZVHcg8ID944v8RbWujpa0c/yR/J
6M1v++Q47kN88qqLr5etC+D9FD959A1OfawTfZjXXA9//kz2WfR3+Svy78Jc
qAf9NF8U2j30Q+h79Azs/1jaVKQcwH0UBIc27dny4iDeSyCqqLVi7TdD6GdC
3F7VoSpPEP0saOvSfWpgfkQfDTL7u6U77wyjnw0Dcd6qBsUI+liQBbvkNT1X
0D8BXYtXTL/c8Av6p6B5rLd1346r6OPAeL+8Y+Xu39DPgdaefeEPz4yjj4fe
bbP/LFD+gft4SGVNz1+vmcD7BOiOCRaOKG+il0Kpf9wRXRNCLwV2ouNGjuY2
ehnc/b26U90/hV4OCsfN4jm+v9DL4XT/OdFSdwf9PGgfCLyZd/AeegVI21ZY
E36aRq8A5/Yqiy+B8UT8fLB6JdWupVGeiE+EQCh+Y4NP4on4RCjeaW53zJuJ
XgnSD+qXlzXPQq+CLxLXvD1dFINeBe+r5Lves8WiXwApn3Edf7NPoldDRUvC
jXJ3HHo19LW8ULp3w1z0SeDW3vLrxXj0Glh9ac07hrlS9BqI8mt3eTfI0CfD
/W26gOqyHL0WFNW2PH+FAvdaWHjOuTwvOxHvtZBt+eeqV6lCr4Ojo+aLxUo1
eh10V5b4OKsGvQ6OnzYX5nFa9Ho4NtZdEHhFh14PnSUnt55v0qPXw9LWxq9P
hA3oDbDYGH5pcDOL3gCm2sHG/hgjegP45x/uqz9lQp8C1oLRt4ZrzehToOzS
V+X5WyzoU6DRm2m4V2dFz0L1yMDG2yV29CwkPeeXeZsc6FlgLl8YW3CNQ58K
MyrZbxXLnOhTIXaH6UvjBRf6VGC7zq5v2exGb4TRen8wR5+N3gh1w5zvtWs5
6I2QPqp79dTU0+hND+eIfzRHvIn4NOLTiE8j3ky8mXgz8enEpxOfTryFeAvx
FuIziM8gPoN4K/FW4q3E24i3EW8j3v743mwn9/bHfSXxAvEi8YyD9B2k7yB9
4gXiReIZjvQ50udIn3iBeJF4JpP0M0k/k/SJF4gXiWecpO8kfSfpEy8QLxLP
uEjfRfou0ideIF4knski/SzSzyJ94gXiReIZN+m7Sd9N+sQLxIvEMwsfzv8C
yhp6xg==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
        LineBox[CompressedData["
1:eJxdzA9Qk3UYwPEXQQwBhTGBiQPG/jDZGGOwDfTkfca0c1kif0aeVqeVf45I
b1FphBxR4Xnkn8wpd+Sd5iR4sSvvVAoFs9zFUkTU1+gU3CpOcOWAIiEgyvac
nc/v7r33nns+z1fy4taCDTMYhvnw3+/hnz7rf8/JPhv/kWvktT25/pln80LP
B8ZEH8n1Kzc7/Wl11djSJtz3s/oPwhtb95zMbeYevnvsUsdnP73jOoN+iD0t
mtW4aN053I+wSbVORZ3+At6PsmfrqnsGSy+iH2M7egPhl57v0P/FVhlbozJt
l9BPsQORyvUFxi70DBgalPeDjnXjPgAuX3tPVOa6jvczYOyH4o+9wpvog8Bc
Gb6pZUcP+pnga5Nsts+9hT4YEozn3th5sRf9E/BWyFOm0GI3+hBoGFctv9bn
QT8bouKkmfve/Rl9GLQUesq/tfSjD4crjm2Bi3R30c+Bb9Y5h+P1g+gjwLrr
5eETVi/uI2C0rKbeZf8N7yPBmd27ZPYDH3oBaG43VqyEYfQCuHQkK3Z3/Qj6
KHAPVYrEkX+gF8Lq5waaww6PohdCva1IvurJB+jnwemYFzpNkePoo2HO/vxl
noAJ9NGw2iQqaBNMoY+Bs1351snl0+hjwV22+NDE94zZ72Phx4N3tq2dDjD7
vQjWNx8Xtz8daPb7+WA4/3vX1VNB6OfDZK+5csgQjD4OfLXVr3bys9AvgEOF
X3/+5cEQ9AvAavvzzgFbKHoxtI8Kyl2l4ejjofjtr5S6mrno48G9ZvDoCU8E
+gQwHuu+XiEQoE8Ek3jvAV1RFO4Twf6345XKL4R4nwhN/e+HpSmi0Utgo6Mz
ZF5rDHoJhOU1eepKROgl0OYraj2eFYc+CfL42C0b5GL0SZDzZvnzJaoE9Elg
32ffr25MRC+FYO5qR1+nBL0UdhR5s1cGS9FLQXwmudyyRoZeBppxub7QKUcv
A1N21YqjlmT0MnBcvvJ6/l0lejn4fjVe2Ho4Bb0cTKd097w2NXo5bJ66YZna
qEGvgIpVuzYpQIteARP5tRNFa9PRK6Ch1MF279WhT4ZbOwP6t9zOQJ8M3Tc5
i8KkR58MspJWb1+7Ab0S6uH+io7CLPRKcD4z8MmNyWz0SlimfyltZsti9AvB
W7Od3757CfqFINSqT8pzctD/P/t9yqPZ71OITyFeRbyKeBXxauLVxKuJTyU+
lfhU4jXEa4jXEJ9GfBrxacRrH9+naMm99nFfRTxHPE88k0766aSfTvrEc8Tz
xDM60teRvo70ieeI54lnMkg/g/QzSJ94jnieeCaT9DNJP5P0ieeI54ln9KSv
J3096RPPEc8TzxhI30D6BtInniOeJ54xkr6R9I2kTzxHPE88k/Vo/ge/BAmj

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
        LineBox[CompressedData["
1:eJxdzAlMk3cYx/FyiNwtp9wtLffRUloOReyPQ9ApCAjMqBxhCh6ZTGEbMhVR
MQIqMIFJJiIKm+BUMKgkOOJwqBU2PABRYaDIVFAsh1yKbq5Ptqz/5M2bJ8/n
+VonJEesV2YwGAV/fx//ii/qn9cs+ezsMZeaNYf95XOHJAnFU+gt85erPol9
ZCjHYfg07QckYtXwwGfLa/3PVH98g5Jf6680liReIi+TOKokfVp5uYH2o5J6
71s2/O+u0v0bic4f5z5XTb1Gfkpi1TtSUbX5OvkZyR1pg5XDDin5WUluoUp0
eWkreQZ+KWpFzYM22iuBHZpjdOzoHbpXBkNp5PCa6HvkVWH8vm1/tm0H+TkQ
fGPYJlW9T14NjvtHTExfd5FXxyboGbW8eEheA95TgWVp493kNXHs+N5bZVq9
5LWRt22oQ6ekj7wOontLYzfUPSavi5B9U8ygrifkWdiSbXb5htJT2rMwfJ1/
0tpzgO71UDubsTMs5U/y+rjn1dkXf+UZeX2c1O/c3af3grwBpNWrUrhfDZI3
hOPV2RqPoSHyhkg1LXF+lPyKvBFkfYIDCUqvyRvjUkPzhuAIGXljRPa12vc7
j5Cfhw8XXAQC1ih5E0T5qR/hvh8lb4KxJIug2NEx8qZo0dFq9xkeJ28G29Tu
qivjb8iboatak5mlOkneHJdCfNmqFlPkLTDiqP3koM80eQu4BhfvUk+aIW8J
y8L83cOlb8lbIfP70rWaA+/IW2Fa/6KuaNF78mxssrQqaq38QJ6DmoeauXF5
jAD5noP2jFeFYyuVAuT3HJzQrTKMYSsHyL019LLORmyVKZO3xlTUruOrpSrk
rRGSmuz6vFqVPBe8VUma9sVzyHMxwCpaVJqtRp6LmBWHmKH755LnIXS48ExC
njp5HjzDZO9myjXI8+Adz9vR2ahJ3gbt19ayBc+0yNuAyXrLrbPUIW8DY3el
aI1EXfK2CNsovX2hgUneFuyKttQH+SzytgiMLmFPLtcjbwe1+057qpj65O3g
nNodWdKpT94OtQmc3O5TBuTtcZe3VMc83ZC8Pd7EV6Q1rTEib48Gbv9zs2Bj
8g6IXPJooe6ieeQd4HV+OizU14S8AwLHhCpbgkzJO2Jd93Rn3Woz8o5obH50
4tzX5uQdMRI5WO9QbkHeCZs1pDWcLkvyTojoP50fY8km7wTbli+YrfM55J3R
wwjqjhvkkHfGzfDE51EnrMk7g5+XvGLBWi55F+wsmgxazeaRd0FDHstX6yWP
vAv2tRUnbmyyIe+K9PEHuRmVtuRdsXJb7IuCI3bkXbEtO7PoZo49eT7W5dzt
uZjrQJ4PbvpefZWjjuT5YOl92KFR40ReAIm6y0Wju87kBdDxK3CdYbiSF8An
MVFk7MMn74bIpGsHEvcI5HsnNzBFtfUxm93o3g09sd/6lpsL5X63G9ht6l4e
t4XUc8O+nHjtpFx3ue9wQ5Zn7A1WuIj6QhiVdRooccTUF2JZ/L1DdW/F1Bci
rdivSemxB/WFWGxzixPa5kl9Ifi/20z0NHtRXwhpgGd+3A1v6rvjVDPP1KVz
PvXd8XPT4jQj2QLqu2P2ZXhIgsFC6rtjy3aL9q0BvtR3h+5j3l7tzEXUd8eX
nAVjLtcl1BdBrSLOtP8gqC/C9vTGmqcL/agvQkpD6YHMMT/qi1CZ8ZPVDxf8
qS+CzDf3cHx6APVF6DdYb1L/SSD1xYgrSDnvarOY+mJknTebKJwbRH0xfKsj
kuLHg6gvRmr564mpoWDqi3GkpddY9GoJ9cX4bSJbGDy5lPoekG2EsFB7GfU9
cPDHIfuHZcuo/98s7/83y/sKvkPBMzz/7508FfqeCn0FX63gOxQ8w0uh76XQ
91LoK/hqBd+h4Bne/85/AUpicdA=
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
        LineBox[CompressedData["
1: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
m3IxJvY/koRtKA==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"metabolite titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 1.55511673852598*^16}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"hp=10xmean\"", "\"hp=20xmean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4854030501089325, 0.5742919389978214, 
                    0.6527233115468409], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7281045751633987`", ",", "0.861437908496732`", ",", 
                    "0.9790849673202614`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9245314446348133`*^9, {3.924531520549653*^9, 3.924531525717411*^9}, 
   3.9245455886927967`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"c0222629-9225-49ad-81c6-ea968ecb647f"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{Automatic, 1288}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 641, 15, 28, "Input",ExpressionUUID->"c70eca31-d8a8-4726-be4d-4bf61c8b48b1"],
Cell[1202, 37, 720, 16, 28, "Input",ExpressionUUID->"46ef932f-654b-46d5-8d7c-620514ad424b"],
Cell[1925, 55, 530, 13, 28, "Input",ExpressionUUID->"d8d44def-109e-478a-a035-d77f46188e91"],
Cell[2458, 70, 637, 14, 28, "Input",ExpressionUUID->"a84b32af-27d2-4ed9-86f7-fd15a4b2cff2"],
Cell[CellGroupData[{
Cell[3120, 88, 4124, 96, 67, "Input",ExpressionUUID->"e726ada2-0aed-4a5c-aacf-b0e6179bc7cf"],
Cell[7247, 186, 91160, 1639, 263, "Output",ExpressionUUID->"c764e80f-5f95-4c7b-a0d7-6682bcc274f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98444, 1830, 2705, 76, 67, "Input",ExpressionUUID->"b49474f5-f46a-4d2e-9513-641fd70a267f"],
Cell[101152, 1908, 80989, 1476, 250, "Output",ExpressionUUID->"a7ce0e5e-ea2f-429b-9aba-1da80ddb7ca2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182178, 3389, 3012, 80, 67, "Input",ExpressionUUID->"26aef642-e3c1-43a7-af0d-131bd3c99996"],
Cell[185193, 3471, 86547, 1568, 256, "Output",ExpressionUUID->"ac6b860c-7cb1-429f-a4cc-006c2f63b64b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271777, 5044, 2714, 69, 67, "Input",ExpressionUUID->"c7d2f35a-9e8d-45a2-a1bc-157e2b91ef92"],
Cell[274494, 5115, 86568, 1567, 263, "Output",ExpressionUUID->"1ebb23ef-213a-47b8-88b2-e06bfd4627a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361099, 6687, 2251, 58, 48, "Input",ExpressionUUID->"329d02fc-dfd7-4e20-bba2-0b3d04d203a2"],
Cell[363353, 6747, 40291, 791, 269, "Output",ExpressionUUID->"a56fa83d-50a5-4420-a598-097fe29618d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403681, 7543, 1931, 53, 48, "Input",ExpressionUUID->"57b58f4a-d677-47cd-b1f8-236cac00e15e"],
Cell[405615, 7598, 40294, 789, 261, "Output",ExpressionUUID->"d6f85ce7-d640-48ec-bdc9-323ae725ed0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445946, 8392, 4342, 102, 295, "Input",ExpressionUUID->"9a6a3c49-1b66-449b-8078-5677f1fc91a5"],
Cell[450291, 8496, 58213, 1257, 236, "Output",ExpressionUUID->"453b7a81-b45c-4750-b7ae-a91aaa15a774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508541, 9758, 3785, 95, 295, "Input",ExpressionUUID->"cf68ec5a-1566-4674-ab08-6e8fab9665ff"],
Cell[512329, 9855, 58177, 1256, 236, "Output",ExpressionUUID->"fddb3009-38bd-4b68-bef3-639b0abd51c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570543, 11116, 4169, 100, 295, "Input",ExpressionUUID->"28decdf2-ee01-4731-bc84-2f0c7595d36b"],
Cell[574715, 11218, 58392, 1260, 236, "Output",ExpressionUUID->"e767967a-0051-47be-af90-d4c98776e674"]
}, Open  ]],
Cell[CellGroupData[{
Cell[633144, 12483, 3280, 73, 295, "Input",ExpressionUUID->"493d0515-9620-4c23-8daf-cc57dd308aba"],
Cell[636427, 12558, 58376, 1260, 236, "Output",ExpressionUUID->"47c7c938-6c30-4d56-b574-10d7d076ea69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694840, 13823, 2696, 57, 295, "Input",ExpressionUUID->"210bbccc-b140-42aa-a24c-182946b9a882"],
Cell[697539, 13882, 74320, 1486, 229, "Output",ExpressionUUID->"2fd7afc8-cf00-41c7-b1c8-da041ce2566e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771896, 15373, 151, 3, 96, "Title",ExpressionUUID->"ae57e67b-79e3-41cd-8fea-2c2a958474fe"],
Cell[772050, 15378, 471, 12, 28, "Input",ExpressionUUID->"c397f54f-44bb-480d-89dd-7f58b51ed9ea"],
Cell[772524, 15392, 854, 17, 48, "Input",ExpressionUUID->"15c2ecc6-acff-41ad-aff6-86214fa24719"],
Cell[773381, 15411, 663, 15, 28, "Input",ExpressionUUID->"f23b05d7-3141-4d9b-b8a0-42a71c42fd2f"],
Cell[774047, 15428, 449, 13, 28, "Input",ExpressionUUID->"2d7f7e73-fd9a-4dbc-b789-88d8f2930a6a"],
Cell[CellGroupData[{
Cell[774521, 15445, 3759, 106, 86, "Input",ExpressionUUID->"7f94e21d-e414-4157-9610-1485d7f1851e"],
Cell[778283, 15553, 136358, 2449, 263, "Output",ExpressionUUID->"9b5498bc-e763-4254-b394-c71c6c5b6c48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[914678, 18007, 3814, 107, 86, "Input",ExpressionUUID->"910f5283-08a4-48d8-9fc0-5e1309e431c8"],
Cell[918495, 18116, 131272, 2367, 263, "Output",ExpressionUUID->"a90d6433-babe-40e8-9b47-8cca5695a069"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1049804, 20488, 3197, 87, 86, "Input",ExpressionUUID->"63e4d3a8-fe19-4527-8665-8ec02ccdcb7d"],
Cell[1053004, 20577, 122615, 2227, 259, "Output",ExpressionUUID->"6d055ed0-7da9-4da1-b92c-598ae94729e3"]
}, Open  ]],
Cell[1175634, 22807, 282, 6, 28, "Input",ExpressionUUID->"e312869f-bb70-455d-a241-f03eee791e62"],
Cell[1175919, 22815, 282, 6, 28, "Input",ExpressionUUID->"f95a74d8-38ba-46a3-8248-fc206b79dc8d"],
Cell[CellGroupData[{
Cell[1176226, 22825, 2497, 68, 86, "Input",ExpressionUUID->"80ea06f0-0527-42b7-9bd7-13c5f250de5b"],
Cell[1178726, 22895, 59166, 1161, 269, "Output",ExpressionUUID->"1dd0a10c-2fa2-4843-a190-a9858716c517"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237929, 24061, 2424, 67, 86, "Input",ExpressionUUID->"a6b8be6b-8a09-4830-950c-1ea35824c549"],
Cell[1240356, 24130, 59217, 1161, 261, "Output",ExpressionUUID->"3498c73e-8d1f-498a-b5cd-30195a66dccb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299610, 25296, 2422, 67, 86, "Input",ExpressionUUID->"ac74852b-82f1-45f8-8f02-34f28b0ef391"],
Cell[1302035, 25365, 59049, 1154, 293, "Output",ExpressionUUID->"aed21955-34b4-4759-be5a-28151f15aa20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1361121, 26524, 2465, 67, 86, "Input",ExpressionUUID->"73f90aca-18a7-4d30-90ed-a4fc60c4dfd2"],
Cell[1363589, 26593, 59124, 1154, 261, "Output",ExpressionUUID->"b7bf02fe-d9a6-489d-bbeb-0062d277bed4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1422750, 27752, 2667, 67, 143, "Input",ExpressionUUID->"7db93024-8464-424c-9502-03b8e69685e2"],
Cell[1425420, 27821, 37823, 819, 236, "Output",ExpressionUUID->"fc64a2df-cc48-4814-93fa-e872ae929f30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463280, 28645, 1999, 51, 124, "Input",ExpressionUUID->"3dd7bf0c-89bb-40c4-aa11-4fe458585276"],
Cell[1465282, 28698, 30110, 651, 236, "Output",ExpressionUUID->"aabf90c8-ae31-42a0-b7cf-004cd4e8348b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1495429, 29354, 2549, 65, 143, "Input",ExpressionUUID->"ccfd6663-7792-421a-af1c-d98c2d5afa64"],
Cell[1497981, 29421, 37819, 820, 236, "Output",ExpressionUUID->"de11f3ae-2ccd-4458-a7b6-917af9cb24fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1535837, 30246, 2012, 51, 124, "Input",ExpressionUUID->"a4d1b31b-36bd-41c0-a90c-689e3863fef3"],
Cell[1537852, 30299, 30106, 651, 240, "Output",ExpressionUUID->"5b1c883d-ea60-45ed-a910-84016d78b5c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1567995, 30955, 2297, 50, 162, "Input",ExpressionUUID->"b5ce1fd2-b1aa-40f1-8ea8-2d417774fb0a"],
Cell[1570295, 31007, 55079, 1136, 243, "Output",ExpressionUUID->"25fc01ff-3cba-4d65-8a50-6dabca112f14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625411, 32148, 2097, 47, 143, "Input",ExpressionUUID->"f64539da-c505-462b-98d7-c27237034492"],
Cell[1627511, 32197, 54930, 1134, 236, "Output",ExpressionUUID->"c0222629-9225-49ad-81c6-ea968ecb647f"]
}, Open  ]]
}, Open  ]]
}
]
*)

