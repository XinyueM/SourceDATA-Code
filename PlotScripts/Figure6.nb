(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    746172,      14432]
NotebookOptionsPosition[    743160,      14373]
NotebookOutlinePosition[    743534,      14389]
CellTagsIndexPosition[    743491,      14386]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hypgen1", ",", "hypgen10", ",", "hypgen50", ",", "hypgen90", ",", 
     "hypgen99", ",", "hypkeep1", ",", "hypkeep10", ",", "hypkeep50", ",", 
     "hypkeep90", ",", "hypkeep99", ",", "hypmem1", ",", "hypmem10", ",", 
     "hypmem50", ",", "hypmem90", ",", "hypmem99", ",", "hypkill1", ",", 
     "hypkill10", ",", "hypkill50", ",", "hypkill90", ",", "hypkill99", ",", 
     "hyptyp1", ",", "hyptyp10", ",", "hyptyp50", ",", "hyptyp90", ",", 
     "hyptyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hyp500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924092117004408*^9, 3.9240921436850843`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"69370e93-a15c-4bb3-984c-fe8b9c40f1bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92409221692334*^9, 3.9240922885577526`*^9}, {
  3.92409232904055*^9, 3.9240923743161445`*^9}, {3.924092503031451*^9, 
  3.924092581225854*^9}, {3.9286745211618567`*^9, 3.9286745364981785`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"f9d61a38-2ae8-4301-9978-98c3570d688e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
SV60pb38mFhriE9gu5+N/+MnDYPc/4//D7WV3Nk=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
XH/BdigL/59PEbp5/1f+H1yDc1I=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxle3c4F170Pwol2ZVRyCrZZSb3HiMrsmUle4/32957iwZJSlaiUhENMyEq
xMeICtl7vLMq8+f7z+95vs/3/nOf13POued1zrnPvff8cU/aeOrbU5CRkR3d
R0b2P/P/GSBZOHelE09NnV2Y+TmFyPLvfmUkrWG2K//x/Kc8g8jYf5uyTOyD
xV/bA4Z1s4jMNqONq4sWzvn/l+qiNY+Ge7Nz7vxigk1psolXiwvIKohkwmF8
DI4TeEn8j5fQMKcyU14bB/hlKQ30VJJQ6cgX+7ST3LCdMXSbtuQ3Ip3zUfpm
wQNNeWkV558uI/G4E1xsmXyQcnlDsLtiBRH6mzfNuwWAmrnolmnbKio9Q+h/
SCcI2SnBX0x+ryFSCNvrEQ0hILgnVhry/UHiHQ23+GJFILOR3uiX/V9kddLN
w7FeDPqjs+0S3/xDnZVJ/L3b4nAZDr7tPbqJSDa/0vw4zoKNzYKlefwWYqCV
pGCVOwcNNferaw/sIPHXCYRKY0k4bPTXNvP+LtK1HBwy85GClOuewZq5ZJhA
fVZ765Y08P79c/JMCDm+WRpXnf1SBhL0k9O/WFPgUtOfgrhdFnTYyv4R9fbh
TgrxzOFZObjd53k58tJ+THoWQxV1QB6EHufwX9GlxAeMvvvwClwAQeuYr5pW
VPj0jshYk7ICdO///qI2mBqrF0XpOVgj2M5dC2QoOICddPveU4dj6Cgl21f8
7SBu2jpy1/AywFG2auLM0UPYUA8u8w8CNAaa/ZK2o8XjhS6U666KULswzrVd
dxj7bKTXNG8oQuri9p/8U/R4v85777uJSpCvoGaopcOA0wtmzjixKgPXdCmX
ABMj5vvLPCpbpAxy75/I3BlgxKVa6N5BaRWo2uCX6n7BhCHPSfdHkwq48vX4
cyQy486129TPDC7Ch/bafcWuLNhKs7YuePQiNN88ElZmfASTHk75ahFV4SGt
RIe35lEcscIocoJMDaJtWk4Jqx3DDOoXxhdS1WD+daECuzYrzn3gcL/uhDrk
csjoh1qwYfHfN/VvlKhDzjuJnRu+7Lj+YvVBK3kNWOnI6EjL5MC6WRP14l80
4PVqecHnj8fxwCJ9ALmpJshUpLcQtk9gN+XzYl1TmkDll3D5C+bCW3ftJvP9
LsF/ZndXU1S58fX51GxvSi3I6SRqdC1z4+OKlYYq6VpwLNhMoPfRSVxyZ+zQ
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
8/+//D+AvLdz
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924092585009267*^9, 3.928674537966486*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"81c45f3d-a1d2-4de8-9896-793611967421"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "40", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1500"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240927504663935`*^9, 3.924092823394409*^9}, 
   3.9240930396701045`*^9, {3.928676665831585*^9, 3.928676675864276*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c405cce8-77f9-4c39-8ecf-9ef9857f465b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
jKAzTHHLxP/x01HAlf+P/w/voiBg
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
/9f/B4Gnmj4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
yrArOxeeisllwv/4ycnn7v/H/wcn37p7
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
k3Oc1np5ly/1U/XrU5Q4T3YyRX6NBKsTSiV3dCkxo9HvoxxbJKhnSD4W6UuJ
7XxmXsxTksF4uFq2NYMSf707J/WNjgy5t+1vXq6gxIKlf6qz95LhZ0m8dk8f
JQ7vWrzqw0IGAein8/lLiYf/LvdqHyQDdTnN78P7qTAcXLU+yUmGiSmWT4XH
qHCW5NoiJS8ZRj93VUico8KbuhuBfQJkGKT2TbyvQIWNb2/ueX2CDEc8ZzR/
alDh98Tt1HgRMqjOBDxc06PCHCUU/LckyODyufHDuBEV9myjKrh4ngyPePp3
ck2ocPsCjdzBi2QIdU8/cN6YCoux0H+dAzJ8e2epdF+fCieJ7tH5qkyGdY/S
Ly1XqfCs5t5fWepkEGSJ0exXpMJXXPY7eGuR4VlUHketJBV+kci8qqVHBppO
145kASpMn88adsKIDGssB19fZqbC1k0HmCjNyJDvY2Gw9I8Sf545mN5rRQYl
Y6HvmT8p8bG9h4VKbMng6jSapF9FiYNPcZbEOZGB4oWVnfBDSvxLjRvddCdD
v+udUP5ASnzRnqfhgteuPsPPagYGlDg9hu86uz8ZklpLXbvPUuK1Z/wjs8G7
/lwjd76lpsTXvx13+RJBhgNvCoLpuijwmwmhjczYXX8XRgm/cikwG93JKK8k
MsTpqkro3abA7oKn2bRIZMhc5YkNQhT4u5JIlvA9MlAKCTy9Q0+BRW6JnqLI
JIM+s9n0k4wdFB8u/q7nERlmfO4amgrtoN855xSLn5Jhf6urp1reNlKpkWqJ
fUWG25ljdtlnt1Hu8HljqyIyOA/nx6blbyFqSrkJubdk0A4qF7E9uYWs+C56
HPhABnt8MFY9ZxNVYbQ9U0mGNh4U5Xd4E/GYQ1ztZzJs+V3MFk/4DwUEKXJk
1pGhqMv+3cutDdSXqZRzp5kMlk4if/icN5BMxeWzmu27fpG/RH3vW0dpA6of
hLrJIKOmlL94eR39/U/98k7/rn/2o2Y1xWtIl+tqe/cQGT7I/JAP4FpDxXJa
ZkXjZDC8+9bJKOIfYja+Nh0zvauv85M9aXYVOfvqeln+IcNI3Oy0ld4qaryn
TyW3QoZKas7ynfK/6OR7gyS2dfLufdzi3kOBvyi624hzZosM0zklB/zjV9DE
qsnTz1SpYJ815f55eRkpcZhJZNCnQj2zblLejWWUI2VR6bkvFQ6+Wqi0/bqE
KPSt1K+ypsJaqvmH4+JLyMzzVpcgRyqY6z4KZs1cRB9JNlbbnKnQ5/kFGzMu
Is7XdvNdvKnQvZCgdtJ3Afm0O/gVHk+FT6Gn5q92/EHdi050MSdTwctR9MJy
6TySYnUlWpxNBVvOxO24h3OIJObOI3suFXJ5M4OMEmfRotbtl6wyqaAwQVmU
FTSDtFzvSE9f3MXrGkJpntMoP8m7pkYhFSyKlhm8XX+jvQW+mg8up8LblJh9
nq5TyKHZv+/2lVTgEDvlVu45iepmA200tFNhLI9txyt4AgntC1k6rp8Kmyxn
OZqSx1HE6bCgLaNUGDS4l9+fO4ZG1CMYu8xSYfr1oHVN9SgCh6i0gpup4D84
cu/e6AjKio3hj7ZLBeFQXhePvSNo83lcgblzKjA/hSVz2WFkUpcgJ+ORCqLW
H8SdnYdQ2WTSVxbvVDiNffOUtAbRIfoUnd/+qdD4OCaRvvUnuiNE+lUdkgqF
nPzk46YDqEM51SE9MhXsHkVcT1vtQ+LWd1c94lLBGX+q0s7oRckR98OuJKeC
hyKntYJmD5p7/IDpODkVPIdufNfa1400Pmemb95LhacjHn2mXT/Qy5FsoR+Z
qfAqbpVeNa8TMVDllOTn7PoBgr3jiR3I5tgTFPUsFXpI304w+rejWnjaYJaX
Ck719yLDb7chfovn188Xp8L79xUJ3N6tKCT45Qjzu1QoeVMZLbP3OxrMynOZ
+pAKRWU04wnyzUi+smCj6lMqXOv0XCmNaEQPfhZF3a9NhdmucmPpoXq0vlnC
5lGfCqXCDSohWnXIgPttlnrLbv2JXeFmbP+K3l4oPSXQkQoPL11mVLb9gg6Y
lL37rzsVlg1ti7KZapG7X7li50AqTMn7F0Z9q0Gt9yta8oZ39feXyVqnVKOz
ZZ+MIydSQUYx6kGuYxVK6KmeMJ1JhTDfd343X1Wi6X+fPaQXUoGCTlt+MvMj
Uj30dZvpbyqcTRkgvsr/gJ5K18VNrqeCtjtFYHTve0RzvYGjajsVhPYS3+jx
lSKrO00596jTAG2I3FoIeYuqyS1n3RnS4ElHW8eFjdeI903rB7X9afC54C7t
0fgSFNjRfpmfLQ3oeasuBUsUo/6lzvYNjjSgKiXBs1+FSJat26yDKw2ChNua
+EPz0V3x3ulXfGlgee7OppP6K/RXu98rQjAN0poNopJlXiA9t59UpqfSQESF
4kGO2jNUkjyYJCWaBmcsWcyb/XMRS+EwJ5NkGmQtH9O83PwYubSMPp2QSYPC
JoVo3Ys5qGluXOKTfBp8SbpAc+XbQ3Rq/1TlXcU0SFFc8hXszUIxZ6bV3VTS
YOOKk5uCfgaauDLbpaqRBlGH8w+u7txHyo7zVseupcH/+EnO7e7/x/8H4ge6
yQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
VLqjVwauLNmNmnCmYDD/4CaX4h44VeYkCQIpaFw0/jKtbA9k6br6qUqm4H9G
njeCt8lC5KjnzT0KKRil2x48GyUL3pm+80IaKXiYz61G8Kcs2O4JUuPCFGyM
nWrj9NwLBi/CYrebpCCd2cOdM1/2gmpYVOuGdQp2OO6wbXWRA4ld8dS/nVIw
ulu1pnJMDjibkw9OeaZgafo/x1v+8kBzLCP3S2AK8peRbtEuy8MCVe6L15Ep
KC/c9fN+tgKMVRWyP0tKwcpzfPmfBfbBoDHF7lF2Ck5cN4siN+yDxzOnyupJ
KcgopOUbKasId0hnP9eUpeBbds8zm/GKUKlaKXr+Ugpe4eBS+/1SEUjvqrxL
rqdgP90BCRcpJUhJuHYt514KPot4+cQkWQlCRep+JbZu6STBbY8/KIFr512l
8O4UlLh5/vXWhREsfBsjfV+mYBJvinhimTIQzA+bj71LQfqq67/frCuDwu32
fzajKei5TSZhwkMFhGy7DhhPp2DamKHY/ecqwLLyLFN3MQVl7xhKHtJQhX9n
+58pr6fgx+etHxqrVWEGXrPI0Kdis4KD+T9uNfj07a21IGsqLnwtEZPOV4O+
7E8nOXhSkcfxGhNBow4P946+ZxBJxfDjtJamCepw/eV3wX8yqXjo/XLA4b/q
UB4+7b6glIr/dgtfcYvVgDye/6p/aKfiSteerth1DYhrWZz6pJ+KGZNXHK6k
aYK/64r8oHkq8i0zkH/u0AIn2n9hT+1ScSOE/z+rM1pgcpW64aFLKiq/tvD4
JK0NmmbbVu/4pCKNVvAy5YE2yPzHRFwNTcWqTCOBeCsd4C3ZmVYRm4q+8QMi
5VM6wKjB1U1OS8VJxnX+35n7YfkDL1N2fiqOvmhwKZLUhR9JghYJpan4cTbs
emCPLrwRE6OEnUvFy4dN3pUGE9DdLfXm+JVUrAultG7nBWjw38vvfCsV7S5e
/NbfCXCFVdHFuikV7wQZjIZrI5y8q3rJ8PFWvYydQnKlCBn2WhM6vanIOtcy
S/4PIWJVV1bpdSqWsSx6XTE/AF7n9YKlPqWiYFJcesD1A2CrZ3R39/dUdBcy
eza2Qw/0J8z+sM2m4p5Tux8xB+uBSp6V9rblVPx+/Ivyz1d6IKZgl7S2mYpt
SaHbUzT0gWPQsWOOMQ3fRMZX953XB5ool20T7Gn4a1rl0CsGA1jg8zT9yJ+G
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
u4mwie58xzhQgv/jEVPo6f+v/w+EAQ/j
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
EM/93/h/AM/9tDs=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1500}, {0., 0.004529552397033061}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924092806108016*^9, 3.924092831074926*^9}, 
   3.924093040837126*^9, 3.9286766773994217`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"d25c4d2f-e558-4146-8b48-77ef02b61526"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hypgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.15", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240928986135836`*^9, 3.924092926848188*^9}, {
  3.924092979566837*^9, 3.9240930258704076`*^9}, {3.928676738867985*^9, 
  3.9286767482274923`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"a3d9ddfb-d57a-4e67-921c-7061f602a4d7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
719xG/+v/D+IrCn7
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
P/3/ANEnlcE=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
1LmsO3US839dSvX//Pp/AKUtzDU=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
oG/R6v7yBrx3ec6oUbYGvH+n3G7WbkBK9utFi+Y1yF0cy1WN2oCGEY/f74bX
wEVOlfnziw2YYwxNDl9ZgxMhx77y3tkAnNSXd99I16H2cp/uHtMGCNl+16k8
vg469unMXNProJL860Yn9zo47bh9TP25DrZdrcxzIuvA/GTONtxnHSIpR1YP
ZdahWnZKYUdzHYqvL/89ob4OMWalr/sursOA6WEar8k6qP7aEpLeWYPDKDr8
7TfrcOokbyhqWAOuptMGKr7r8OT6kE9vOPHcDi5LGEevg2yJagvbszV4LnDz
pHPGOhD6Hq9RCq+B79N7W4Fl65Cfk6qcQ7IGGYGa7cnN60AewM9yipjn5l8m
WcXD6xCaXndVOXoV1tbsfVtW1mGWWd3iCVGfmc55PZ8g3YD9C2LojugqiD0O
v7NzfAOi/psjoydbBQ18Mgf9uQ14Okvzt655BZwLf+xyiW7AP59CZ9voFYib
qe66JrsBiPRuAYcJsV781/FdQX0D2DgoJpqI93zi3tgHfZMNOG/sII4n6gSF
86qZ3ZsNcJC+pfwlZhl4M0nk/Hw3YNrlY5e52DIoDB3jjo/eAMfmy4w2rUvw
4tiZox8ZG7D4ff1DrdkSBCKB/t9lGyDYum3+knwJvlvdLhxq3oB009MKzvGL
0JWoELI+vAEt8eS2hJuLsN3x5CXV6gZ0DLbmzncvwEly8/vsZJtwL+aWuaHt
AkiIOV64emITznO6h5gwLoCesQ9G7twm9J3fyMBmz8P7yMjhJ6Kb8Dn2ywhS
nIeU36klr2Q3oRt3MMezMAcNuwURnuqb8OdLFXep3xzMXa6ziTLZhBS5WVda
vjnA6XQqZb/ZJPYhDiGn/s6C0IeJyzW+m5Cnbh6y/mIWVCrWKXujN+GQ8EE9
itiH2K6QTSxmbMJrMR1tlvwZiOQ8XklWvgmLnK01lpozUKzCGcPasglHx/i1
Uw6JfZm7kAPfyCYYG9RG1CYR+7Yf8EhydRO+5nyLbL0/DVxTD4TUyLZAUE6b
v2l9CqRZdXHmJ7YgU1SjozSG2FfKW864ntsCUsvvP1Nkp8D3jXNNqOgWcOd+
KAtYnYSMdL/4NNktGDYKfv06dhKa+6Ocy9W3INda7qL+vUlYw6VrdJhsAa7V
qlt1ewKYJIpEZoi6cfOBhtjD1AkQe9nAcOC7BWUxpPka6hOgEd+9wBizBUEB
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
Y6aPHv2//2Jj+L/2/wC02Qih
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4}, {0., 1.4716364073147867`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240930107484303`*^9, 3.9240930271454687`*^9}, 
   3.9286767504596477`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"272042cb-5948-434d-9f6d-0f19d948577f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240943445424223`*^9, 3.9240943906103354`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f8f1abe2-d78f-4630-a097-cbaf63a90f49"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlczekXx69QoZoU7Tttt+0u1WWke4oMGqVSqBStF23aLkmbNpWKxpKU
5aUosmQ35Z6QLCU100SWkTWGsWVn+o1f55nvP/eP5/39fM99tvM5xzgk1jtc
jsPhGA7jcL7/+n5/ukU4KWpyq3PlRPH+uu+PCI3aLRVyDKaKOd+fDBHuXuLg
tuPiDPH/eV8Rtp/6JWPLIbchnivCKa4j0q90+QzxHBHWbZDdSF0WOMR3O2LV
Xw4fPrkuJn1HvC+fK9e9LIT0HdE2VO9Mg8oS0nfEoAOHej+UBZC+I+5rThBI
wvxJ3xE7gt45l/QFkb4Dtjx3qtetYfoO2CzwCtisz/Qd8PO+FK2wk4tJ3wEt
I9Q1v7UuIH0H3LffeoeH3UzSd8B527f27a50IX173Ol80EmzzpX07fHv64OZ
85tnkb49tmuv+bLdazbp2+OofXmTttyZTvr2OFAeNRAbrk369rhKUTO+38dT
NqQvxDO7dRwS2hfIhvSFmJrPNfat8ZcN6QtR2ur8tq3Ee4j3FeJVfaXj47lW
QzxXiFuaDz2e5sMnfSHuSb53yj7diOIX4Dh7J5+9BwUUvwDVRPJNYRHTKX4B
nhnZNGy/Np/iF6AlCLb2znWk+AW4c+f+1yHNQPoC9DNJWxYX8hPp8zFQQboo
OWUa6fPx87xB50W+HqTPR92msn3vbcJIn4+jbAqeqvfGkT4fJxSN/T3gVjLp
87E7zfbjJn4a6fPQ6XHriUHVtaTPQ1O5h0qjn+WQPg9Pp3n1v+TmkT4Pe/TV
G6fr55E+D89LjI4stcklfR7uWTSv4/fSXNKzw8+bdOsLeLn0vh023D908FVm
HvF2+PyzTp7IZx3xttgW0O5d8oR9zxZboTzzHDebeFt80qBwYv/LdOJtMPpo
rKF6VQrxNija/KS5d28S8TbY8bqwKqpcSrw1lhek3FZbtJp4a3ymzI+sXpdO
vDWefBYUM7wtk3grNGn8UdcwIIt4KyyMPwDnLDKJt8KUuxLfX7JTieeiUjAu
/1MkJZ6LdkeiHQrXxhHPxUvyp+S9RkUQb4mt8paNjhfY+bTEAx4lF/orI4j/
d/yPbO+F4mjiLfB5Y09S/fto4i2wpndV3ZGsGOItsETYYXGnmta/zhwNFS1G
1mutIN4cDWy0WjQcE4g3R9WQ2MlGy1cQb4b/CKz1OvSiiDfDweNPrZoWsfjN
8NjmQ1ddbJOIN8X0nmfKEr81xJtiyS89F0tys4g3xcMDRmbOTmx/TUTtY74V
ZjvXEj8Rw8LMBS3HGD8RVwTaz99ozOZ/Al4WmDVU7mX6E3CUWfNlNb8U4idg
eA3GH41n62uCSp1vOLauicSboFzANduEySx+EyzbPfDK4NlS4o3Rr7gtrMN6
HvHGePCndQrrvV6fHeKN8edYxb6OwiC6P4zQ42aZrfn5CLovjNBLp+qa67bo
ofuEY4TP/c1cU4evoHFDPPA1+EaafSK9b4A50a7W444kE2+A152C+bL6VcTr
o/XMrku/vllNvB6OXZR1XlOYTrwehut45u4azCBeFy+baRdfWJxBvA4erdy+
Z/qVTOJ1MLA/0CDrVjbx2ljoHfp3RWE+8Vr4fEbwgqANhcRr4QMVg+xOp2Li
NVHhrenMoPYNxGvguL1rNHsulRGvgQ3lJ94Ejd9C/HiMG6vqOC1lG/HjUOXN
TN+m8irix2GLUd7eyPm7iVfHM8OS3lmnVhOvhsbq+c5JC2uJV8PyT9cUpDPr
iR+LfO15+3bXHCZeFXcmBmgaDDtKvCp6dCUmK7sfp3EVtFLJX9525SS9r4xC
vPTe+Nlp4pXwXdbfuZ1qjcSPxpuuyctfppwlfhTeuNUffSsPiVfElPFRPSaH
m4mXR/uXV1fWc84TPxKLvqQLlRdfIH4Ero5vH+fd3kK8HMpjZonnnFbih+EZ
TuRMjxuXiOfgQZOQCzZbrtD4N9nO6g8/DAa30fufZe+9p1dIlK8R/1F2vEHz
/tO6DuLfyb4mfEjZVX6d+Dcyu5G7fpgk6ST+lUyUrcTpeNNJ489kn8VKCu/5
XfT+I5nK268VEXpdxN+TVa5O7p+/sJPGu2VbuzxWOp9k32uRbR3jNMZQeoXF
z4nxvRgxv/AcGxcPN6+yTLrdxN4Xx/TMdjFuOsX0xSoK0hGLHx1j3xevc8g7
HCc7wuITq1WMqnFyPsjiF9txPY8MfKll/09cPFBX9ehsNfv/4ga3+sdu+bvY
/Ij1NgZhYnglmz9xx/DTZQkn2H79Ji4tqswwusb2MwckcU1qpcdK2frA6LLj
C/1zitj6wTif4/zkjly2vtAdf/DxqrOZbP1h0L61VeLDzq88tEx0fzpwNoHt
H5j6tXGt68c4tr/ghDunWKMsiu0/iF8TbGWaHMn2J6wo8hd47ZCw/Qt+zYmK
YZ9j2P4Gm3BFJfOiOLb/YW66msm3K3HsfICNVvYUK9d4dn5gpbPL4kV3Ga8G
tt0Z7l+0mZ4aNNjqTXeYuJydT5j7ounhWgcJO7/wj8uDU7FlS9j5BknHpruv
Vf3Y+Qe5sT4v6x/NoPtWA5YpnOzsC2H5TgOkJm5Ti42S6b7VhKlOqu7dVhnE
a0GjG1Q9as8mXguU2/JKNhYzP6ANMdLp/QuK1hGvA6d0A3sTjQuJ14HFzhW6
uTnridcFu5vKj+e8KCZeD5RP3shfc7qUeD3g2vt8cRxTSrw+THIpLF2qXEK8
AQjrFMLT+SXEG8DH6iWTniQXEW8IIfcr9vjrFRBvBPwFmdri6HU0bgS1ek0+
oVHMDxmBRlVBzENP5meM4ZGF4ZgxS5i/MIbOPeD/pTeF5SeYtGup9rJgKctf
IGcUHPBK8b/8Bj7vS4oNzsaz/AfH5FMGNWYlsvwId+5nnd90aCXLn7B1mbL1
YcfVLL/Cq/Bm7rutqSz/wjjR+/UTeJksP4PQqvb8gM5/+RvOqkffuSHMYfkd
IjTcInurc1j+h9QmYXZQYA7zB3BmlEP4nkzGmwHfomrW81NsPc3gxUvJ2uwK
5v/MgOfodO6tNZtPc/Dpk6vO28Z4c3h9IZe7Q5HNpzkIC8dqZ41m+hZwSJLn
2FXJ5tMCUrML1dKS2HxaQNBf/6yINGPzYwlzUgNruYfjmf8CE7iacVmYwPwZ
eG653aexLZ75N3i5zJM7wpvxXJD7bfZRiRfjuZDzrnzFuljmt61gYOXF9dVj
kph/hItuUqV7kcyvWEFdRUG7XuAq5j/Bfa6/YuPRVcyfgvmUjy616mnMv8LG
RZvDz81OY/4WpiclDj5oS2P+F5Sse3Y0PmfrawOesZGa1xpZPLbA0bktijFk
ftAW9nYq1RtqRzH/DX336hzmS0KYPwe76E8P+vTnMP8OT9xVfD41WDF/Dy1f
e7mXukR0P/AgQXFjtNmPxlQ/8SBv8dJNyaem0f3AgzttoWfWHrel+osHZZLh
8XFRxNfx4OqRP0pNf51K9RsPTtjdDZqi6EH6fFi11pp/QH4h6fNB9+ngwCaL
cNLnw2O/sJVJlstJnw8/b0iR3ZnC7lc+zA735/TPIH/WzYfWWn2XM5/Z/SyA
mskXdh6IlZK+AJ7zIlpuFKSQvgDOTnCRv7BgDekLwG/LyYJhD9NJXwDdNx/N
8pCjfNAtAO/Q4S8eiJgfE8L2kNNHN97PZPUldItfPh32hPk5IQTkXssvCkpl
9SnwfLkb5XSlrH6Fy87dLf53WfxCMLy3faY5hJO+PaimTvjTVH8a6dvDHojt
KgvRYvUzzDUrfZdf587qa8jfMfnK+FofVn+DqY7KzYX7FrD6HHq2jc19cGMh
q9//vW87Sn5csITV99Cn/SxwRBSrXxxAdVjk/t+2/9cfgOvJjXN/dg9l/QOQ
ulSUTTsRzPoLkBl+gCO96Mv6D3A+bpp5TeVc1p8A34pvQSfr/Vj/AtTj3BsG
apew/gYk8iQll8tCWP8DDviMqMq+EsL6I6DWPp//wD2M9U/ghJfjLM2poay/
AvFf9kqslFn8Igi9drfg/Md5rD8D7cHrQ7kr3Vj/BtYcln6YFMv6FyKQzu+J
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHlcjN0XwAfZQ4pEpX2b1plpZlSYkwgtJEIplBKlveyqmVReFVpsCdlC
9sgbYU4llSxF2Qlv1hJ5qYT6vX6d+/zTZz73+3w7z73nPvecR8cvzD2gN4fD
0erF4fz56/HnqhfjpB+FvQrixPIT+X8uMS4wlVwe62Iv5/y54sWo5hFs6NLf
Tv5/3kOMblH9OD/2TejhuWIcf+bfMyplRj08R4ydoa2Zk6VKPXy9CGMU+3ns
aJwk6fGLcEDjuOKJmbaSHr8IK3aevjDouY6kxy/C0uCy7Ki6aeQXoSEcWzvp
yxzyi9DLxHjDL/0F5BfihXvv2jZvWkDxC/HugA013S3eFL8Qn76N/bDqmjvF
L8SRp/w76rs9yC9Egxc+iX67ZpNfiFvt9I2NNezJb42Ty1YtiEih5823xsNu
kw4p2wP5rfGuWPog94opxW+NDWaj42xyF/Y8L/e/cZu3vkOeLO55Xo41PvKc
muVb7tPD1wswrSgjy6jcl+ZHgPl2d7eNGxNI8yNAWYhNVo1wOfkFKCmJCPgZ
FkB+AQoGPO44ct2P/AJ8qJ192Hr7UvLz8VHeEBd4voL8fFTYMtoitiuI/Hyc
NUkSP9s5kPx8bFfS8ApbE0h+PpoM/lgvkwWTn49lbrdUwmQh5Oehhf5NHSfn
SPLzcFt7xrJPDyLJz8Pe+zwd7ztEkZ+HQZryH+muFA+Xh/0Mu1bMGLiC/Dz8
Mj4oJW2lN/mtUP18445R713Jb4UnFxfoRN+YQH4rrF0cPCcJ7MlvhV/m9Z4R
5axAfis8eKR9re07K1pfK1z1SEP58mEHWk9LdNrjuKH/Bm/KD0tsNl6w9v65
AOItcbngtLlmQBDxFpjh9qS1wimEeAsc3LgitDIhnHgLDH0woHf6w0jizfGg
191SG7sY4s1x+W7peOn5lcT/91vBtC5h9GrizXCyXe2KbQkriTfDUPXpxQlr
Y4g3w4vZ9jmH70UQb4rN1dMe7ElaRrwpnj1q//R4xWLiTXGQeqxYOYNHPBfn
3rh4/NAWd5ovLrre/hkTHsXyh4sKCi+fuu5YTvNtgoFaWc9/9goi3gQ1eWVe
KtYRxJtgvnGc2p6tK4k3RueHacmrC9l6G+OJSxaa63MoHzjGGNe4S2wyM4p4
IwzZpdt2uDqaeCOc32tY0d3YaOKN8Mu2fN2aghjiDfHb14upqiVriDfEF8+v
vg/SjifeED95z3q5dVkC8QaYc/Tz/thjG4k3QKXKmpQWnU3EG2Bdy7rwQzM3
Ea+PT1Ia1YZqpRCvj7sT9vbRd99MvD5+KPFMbp2TTLweBqVFffw2ivn1UFxt
7yb7KCVeD79Y7TNftj+OeF2cdwj+ii1eS7wuemuHhIirVhKvi4nzcMmIzgji
dTDF0yb96Ea2/3XQPLKq1MMOiNfB3tVD98aMt6b11ca8Rotk99pFlA/aGD/i
bfrBTJbP2qh8x8dH0WgFjWvhyFc5N+bXhdL9Y/FS0PZjP/dEET8WvQ1c7l1s
Yfmoidp+ede+R8cTr4GbT3990HlNSrwG3vnZYOWvJCNeHX3dXvtEyGXEj8Hb
GdpuS8wSiB+D6kZ9T92rTCB+NGYKcgp3d0qJV8OYtqlBffnMr4aD7/77/Wot
849Co9VNs9IPJhCvimHdWcNzPyUSr4pR1Xc6FyhsIn4kao75USarSSZ+BLqZ
+ayJXrWR+BGYP9HhnsEZFo8KOr0cUq1y5y/ilXG1ZU53xZ5txCujjck6pUeR
WcQPxx8N482qTuwmXgnd+1y/2XFtP/FKeFej66yt1SEaH4oZt/YPh195dP8Q
3PW1LbVXdT7xitjQXup9ZcwZ4gdhXsG0H+5J54gfiL/tjb/XXzhP/AD0k6ne
bv23kPh+6PH9642lpkXE90VOUKrq8QOXiVfAiTvftHrqXCW+N9YeWK+rUyUn
vhd2Cn5VyLqQeA7uq/fdFd9dQuO/5ZNTYyv9JpfR/Z3yA49jnzw+e534DnlJ
pBFvbkc58d/lpmtsXSxabxD/Vb6qO/lZ6c0K4r/IvyZolT2uq6Dxj/K6HXmc
f2Iq6P438qfZ1475T75B/Eu5y2DzN3Fa12m8Xt67+9DL2idIv8vl6+cqNfJV
ilj8nIatOx36+B5m4xKXjvR9cUb72P0S99DmYw2vdzK/pNm/3WHbILa+byTC
lg5pqVo6i08ShjfOlGzbwuKXzJCcH/L5xWb2fJJ5XUkDg/qmsueXdKcmHlk5
K4XNj4Q7NDRnb14Smz+Jyy9JYElIMptfSWfdkSyVb0ksfuDDhA1H/0li6wPX
Z+QWO9xj9/eGoptZ13SrGK8AibVC99LzG9n6Q+nvYW3tRWw/9oMTWcV1z3Xi
Wf5AZbdj9INKKcsvWLe1XHN9K+MHQdmt1k2Xc9l+UQS//DE8LRHzDwGdm/1f
xTQwfihEGT91O98lY/kPwiWF5+Z3s3ElkBidsTR8z/7fcIht+7s04U0s218g
qXYtcJ2zlu0/yJwraN5XE872J/x6WmmfOcKP7V+oeu/0MN7Ghe1v8C7fXhHQ
OJ3enyMhMXtleWGLL70/VSHqktPI0d3svFOF0IWyjfYnIokfBXO33qrxObCB
eDX4dmpn7qwtscSrgSB16Ydpl+OJHw3W/fekhCbIiB8DaarRziXV7DwaA+6v
znaVXpQRrw6TpF0WLnrsvNAA/2w18aVaKfEa0Nym+M83IfNrgp7N23JF9fXE
jwXXcgXrE3WriB8LJt9UdJb4hBOvBfOvzZyRpsjOd23oXlcoSRLPpnFtqHZs
7ed31Znu14aPAp5uBM+ZnS9wurNA3f6CHzt/oNcHhVFBZz3Y+QSDNok/5jyb
ws4vmGprnv/1tSs73+ASV7HuhJEtO//AqUZ0OlJfi52PcJrTFLN3tA6tpx6E
T3y2//VJL1o/PQhOL9qeMpadX/qgO1VPJm8KIF4f5uqPu7pgsz/x+mBgKz2c
GeBJvAGUvXmRXLROQrwBzInkiB7fFrD6AD5w5Jr7471Y/QAdDzQNd20JZvUF
jKrYsvXk7TBWf0BhlWfgIlbfcozglFJErejoCla/gNfxM3zdqYtZfQMgVLA/
LRCx+gcS9Q4W+J51oHiMIVn1oMz0yCSK3xjUmyQP7R5Np/hNIOzgouG10ax/
MYFfxV6ffsa6E28CO2arP77iPIN4LiQ6FIg+pU0kngsJFx+MX3vaneLhwlbN
+mzvJSwfTCG48mqTnUUAxW8KfR0XDp7znur/fFOoublx6JVjy4k3g1cl+2wq
v1D972EGVpzbhY/MQ4k3g6ZHp6aENkQRbw5SK8PvYr9VxJvDyn+eFv62YPWf
OdRnvW1vyGPxWEDaFJHI+fU04i1ApUnKcZPbsvobOiSZWe8uObL6HIp3T5ky
Qcol3hLEf7VotCl5kt8STrSde1OoQ/0Uxwp+msx3OpcfwvoDWGIy7N2HfLZ+
VjChTVdUvzqc9RfgmVKj6a8WzfoPeHY2u4/9kXDWn8AOAW9/7U82Pzx42D/B
Uf3uPNbfQHOqvbDjO3v/8CDPSM5f9JrP+iMQx21oUZg+jp6PB6be9fmBL6dR
/8mD3+f0DVwzWP/Lh/CDH0sFjfOof+VDvdYnrlBvNq03H1q7E5szDGdSf8qH
L4pizuAnrN/hg6LfyHHL1ovIz4ecTQqjtmSak18AxSaf/bMnDyW/AB7KldOO
J3PJLwCpq0d2+3I98gvAtClwgXquM/kFMH/KQtOqd57kF4Dyd630lGNLyW8N
wakvgj5vo3qTaw1/d1+ucPaNIr81nKxSyEzpjmb9NVgs9EdVhWjWf4OjeE2R
RC2a9ecQ+HWG8bv7rF4VwsDCrtC3nRGsvwcHYf23YwFhrP+HSTFXdwfciGDf
B6CP5ePmgjXh7PsB+DStm2JWHsq+L0C1Wlzq/eRg9v0BOmTNJmqfg9j3CRAP
U559i+tPfhFkrdG7p2K5kPwiuHo033bdcbZfRdCS7WitLXZk30cgZCIUZ9sZ
U/6IIXe67fTZv+l9zBWDUFsrw0s6h/JHDGYXZ4JMbQ7ljxhWrX+X6XSA9cdi
WJsbNSGnfQrlpxiqM85LH88XS/4H/eGUUg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
++i3VYfujwDmvylsi3TUFP0PpcJxEw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8VesaB/CdI0kImcrMNo97s3Gj9nNFruZQqZByKFQyZ8qUKJRjKkSj
TiklqdNoPx0apDk6SnMocnAVSbnd0/G8Z//jsz/ru37Wetf7Pms/r86aUPcA
MQ6HozWOw/nxd8mPT4sd1nonlvWq99cdr/zxscP7SxXcvJwdRJwfn2Q71BhO
DXP5BqK//RI7VM52VtTbvkD0tzexw/op6hOmzVw25jl/fee+njtLbc2Yb7HF
vZdXqsp3rxvzlbaoKCOhYG+4nvJtsbGjof0/3E2Ub4tGfedP3bsRTvm2+P5s
27nloxGUb4tHhiOlggvCKV+ADfMGHxc7k68U4Ccl3+4g13DKF2DWwZ5Z7usi
KV+A5R7eq+q/RFK+AGs/VtZ01UVRvgCv39xy9LZeNOXb4NLnU18O//X/x/Jt
MKr67v9MfoqkfBs8oOR4TEs2ivJtUMXFKkVpiLyJDYodaMjbtTGU8m2w0clu
gcsdNj7WKNdZmv7tMlC+NXJ/7k+61bpMOJZvjbH1sg16/QHCsXxr7P/61L3w
apBwLN8adQ70KFXlBo95jjWCWJZ0qF3QmG/h46fZikoWR0LGfCUfV7Z8nr/z
WRDl81FBdMrm/d5NlM/HG4bfGk5zNlI+H9ctyxoNkdxE+Xwc+m3qR+8zGyif
hxd6ecHpW0Ipn4dp/265ZZIcRvk8fDT5Tm2ffTjl89DPfcYqnahwyudhdXxO
cckk8hwedkT97+KjtWGUb4UafL2BkKsRlG+FbRUylq4vwinfCrvdJF+dOkR+
iRV+eWcRY2e/ifKtsDHiiXXgaZZvhTN9fe4FSrPxsMSCSmG+W/wqOt8SvV8a
Sa4cVSRviX7pue0Fi5fS87HAYgW5l0Pn/Oh5W+CXpzeipn/6mZ6vBfYP126o
UA4ib45dt6tvJU1eT94cc28Y3/+auIm8OS6tlJp/uyyMvBnGv7qruSKa5vcS
M4wILYjeMpN5M9TmNNX4O68nb4oqD8/2mzsHkjdFdwktMUUHf/KmuHX/23X2
KWz9meALWftKrZwg8ibYqrP2w5OZgeRNUMdr/3sfrj95Y8xalvpK5rsveWPU
u7h6WKHRnbwxvg240rT8szJ5I/T78/ymLQudyBvh0N6YvktnlpA3wtqm0yfq
YteQN8QAteJyhXnsegyxItNtdENdGHlDFK+1aQgYYOvPALtDZsp8UGTrzQBn
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
2EMzO3nh/wEjRnpr
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
nrOW9L8AIJcI
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eWm2fKb6XyeAjxONPv22wVT+X68ThNQ=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240943922218885`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"e9f3677f-c7ae-40d5-b9a3-e5beb0e61bed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924094482718825*^9, 3.924094516885671*^9}, {
  3.925136152891206*^9, 3.9251361532582736`*^9}, {3.928707788805237*^9, 
  3.928707801939717*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"611db49b-7a9f-4efa-b79f-159affac3597"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9mHlczOsXx0dkKeSmjVIz7atmpqlINaeuFpUuMkVCq0o7ZbuWok1uSGS5
oSxJkpT1h+ZIlisjIi9USLIUbii6Rf2uX+f5ff/pNa/n/Xw6z3nO8zznHF5w
3JwwOQ6HozOEw/n5V/Lza7DFm7G79q1sFYlPlPz8bLG75lDNrSIXMefnl2yL
jRKb9afbXcX/4yW2OML/uLNB/cxB3vTf+QdDlSNw1iDPscXIS5dnxSz2GeQb
bNBMY4jZIW9f0rfB+N5Tyec/SEjfBq/pFE+slC0kfRvU1X4xLkUcQvo2eFk/
593nw5Gkb4NhM1KPuL2OJn1rdLEzu3fAI470rXHum5xVR3JjSd8a44vMemoL
IkjfGmHWaMfrnwNJ3xrrrfx37d/oR/rWaBmwcX5010zSF6F3Y9VEbV8P0hfh
vPqn4b/XzyZ9ER5q8rmwZowv6YtwfOynXMiSkL4IDeqHTbk1jPzJESGve8VX
iYOzdFDfCi95KHAD1Lylg/pWOH2b2oOg9bbSQX0rNNH6dW9rgPogL7HCr03+
/RZv3UjfCpOeVGYez5hP+laYYVETtG5TKNkvxG1ZLlp+dUvIfiFyMjqE+gdC
yX4hdnU6JwZWBZL9QjR5yfvPZnfaL1MhPhcMWzx7kZj0hdjZMeREu+ck0heg
1gU93VQlIH0B7llU5uC8XoXsF+CCg7K185PcyX4BlqReFnlvnzO4XlMBfm9Z
0qfZIhnkOQI80yacGnvMn/zDxwLjDzniAR/yDx8rhF43hcnupM/H/JqphbZW
o0mfj6/j2zxqh6mT/XyME+ktVO11Jn0+yldeGLtaEER6lhjUypX0346k+ZZ4
8YbUX+YST7wlDhzNqilPiyN+Mt7OdN2rCvHET8ZhtUF9zemMn4ylA5cEDefj
ibfAbJdog657CcRboPJwh4qnhlHEW6DE8WKNyqGFxJujnqzq2ZJZM4g3x+X/
Cf8+4uVk4s1xm7XOIodiF/K3Gdq9408c8tyL9s8M7+p3NafGs3gwQ50+r+dh
a4KJN8XmnIrqy2vCiDdF/sg3Fzw1lxBviuWnvTZYnI0g3gRf+0oPtjex82OC
/u/blxXvZ7wJChd1pJ0zWUy8MYY78gRDNFyIN8bPc+61zvwsIN4YE7pnfXuc
p0u8EV5Qqdk5RW068UZoqfisYeGpGcQboUHF98vvq6cTb4jFHluuH1lkRbwh
tttV/dZ9xIp4QyzNh3ljSlSIN0DNBXdEBiN8yZ8G6LjxVV5euR/50wB5n96t
3NwRSv7Xx2ubJhQmKYUTr492xZcSdeRiidfHU5OP3Ql9vZx4PTyjZvUkLyWK
eD180PIssjP6N+L18FKQlm5OZQDZo4seYxySZSdjyH5djLv711SPSwlkvy72
e9mnT1BKIp6H9lGBjp5uK4nn4Y1ug0rbyjXE89DII7P+auZG4rl4amjv+Mea
6cRzcS8nRSlkexbxXDww/6xXv9NWGtfBnT4qm95s3E7ztfHtvD77otJtxGvj
y1i0WFPH+EkY+fHtxiT/bOK1cEjKL9mrErYSr4UKTZ67d+7OJl4TGzXSzJVK
thE/EbubkmXTTmwnfiK2q5fJ/2ORQ/wEfKAokLP7xuzRwLuSpbL7AYzXwJsR
TTbzpmwjXh0/5Qck6N7aSrwaHj/y0PnseWaPGq6qSzvMTWH2q6JJfuzSTYIc
4lXQvduwb++KXOJVUG4H1/nFkjzix6NRRku2gd1u4pVxoZ5Pi/XhPcQrY1P7
ScNvwj+J/wUdcwUrbjTuJ34cvr/y0brSt4D4cQj7rzutnXSIxsdirfNu7uGL
R2n+GPzeppJaUF1M/GgsjShvzdc/SbwCvhg9tmDK2NPEj8Lwezf5ShmVxI/E
qzHBomrlc8QPR98ffar6PReIl8f34/Vumk64TPwwnC1JCFM4JyVeDvO+Gf1h
kH+V+CHY7NxVMq7+GvEcHMo7OA1tb9D4D6lnxi/x647eovm9Ur/X38rb+m4T
3yN96zdS3/WWjPhu6SnXLxuqVt0j/rPUvdvOKcatnvhO6Z2OnZ4zPB7SeLtU
2c9avHjVI5rfJk2LmGn06f1j4l9IQ3z0Z85Ja6TxBunmV2vK0OkZ/b4uzfNP
rpJlvmD2c77+dv98ocZLNi7WefioM/L2/+eLW3LPJoonNjB9sWF1fbuTwj32
/8WX8wu6NsWw9baLQ900NpxPrmb2i+PyjE6HD1xi6xPXPc/Rjb92hq1fbDFj
atK8r2XMP2JObXDS7PJi5j+xplixvXzSEeZfsWrW/h89VSx+OPAgRTsl/2s+
2x9o1OzZ53aVxaccfDp2YNW4yp1sf6E30qKtVmEn239o77l+NXdHLosPuNLW
ti937i4WP3BZ5Vzd70ks/kfBayvL718nMX0F4B19Z3B/VB6LT2itSVz/99Rd
LH6h0KsvztaB6Y8FReXS4NgrOSz+4d2fK4a3+7H7Yxw8CdQ32teUxc4PjFaJ
W55hksHOF0ytkPgu/ZbGzh/czFNf7LdjPTufkG7bv8yCm8TOLxSdXxLfkJrA
zjdkZ4jNIs5GsfMP4SqNJTUjI9j9ACUtdh3aVZHs/oC1Ctv/anaPZ/cL6Mpa
s80rE9n9A/P8++99Hs/0//09kP7lQzrTnwDrQkaE6UcHsvsNPJrezc2qcGf3
HxyqK/qwcpQ3vRea4I4j3DobI+m90IIItSD7VZKV9L5ogdtD37HVw5OJnwTq
dRN6Mow3Ea8NPPkvOR0/NhGvDYJMszdqO1KJ14HOsp4FIR3JxHPhydHj9099
XUvjXHDzrww7272K5nMhpuRS2drVScTzII8nv8fmVBzxPPjVpGfce9NlxPPg
4rWbMcdHs/xHF0rfFCtmPmHvoS6YrkbPTs4S4nXBK1xebY9HKHsf4e4HWYTx
nPns/YS0N7PKx6TPZu8rHLr6+GF1Jp/8qQ+9R0Y3tdiwekEfMuIdJSq7o8m/
+vC8tV7I2x5FvAE4tqlOE10MJ94AhsxV5cWPCGT5AViaqCiq27iy/AGCXzwK
HdOozPILiOu6mzCqmU/2GIK9XsHKpfumk/1GcPWbcbtlWgjZbwSla512RO8P
Id4I9hpWuP7wCiHeGJw0xqofu83WawxXkrccVVu6gHhjiM5b5LCgLoh4E2jL
uNJdEBNMvAkUuUa5TCxi/jQB0eNXP6RjmP9NwbQhZ5rMOYl4U/ioesHj2fHV
xJuCW/PsK0PnrifeDE7Zh3f+8ymFeDOQW62a+0oplXgzOHLnQ3rbwRSWf0LU
OH58k8Ialp9C2VL7O+fOsngwB+dgbqV9PluvBezRq9344YEPy3+h0qeiwWGH
hOXH8DHz63XdWg+WP4NZ7vIbecbWLL+Ga2MmPSt8YcLyb5DJ7d/QqeNB+2UJ
259EesunhtB+WcIjrHPb2RNK+2sJW06Ie1X644jng6xi7/VP5stZfQDPCwNl
cr6JNJ8Pu+24MWVnllF9xAenUWszRq6IJT0+LIspSHQJpvy5gQ+tD1paC+0D
SF8AAXXaK5uM+aQvgM2rf9c1bTQjfQF0bhuYInplRPoCMBj+x3PVXAVWP0FK
wsmF5icdqP4RQJniin25IbPJP0Iodb3W+9Q3kOonISw3732SXEH1kkQINuml
f8lvo/w2WQjefL+uxCziS4QQyC206/cIIn0hKGi8OfvcOJj0rWCzYEN6vibl
w6ZW/8b3jJGF3iy+rSBphVONLDGU1afw1uAxV6TF6ikr8B5uPKf0qC+rb2F1
RXODq8yH9EUwdW1O1Po7TqQvgknH1dIezJ/F6md49mGuYtXNQFZfw9uIzuOS
sDBWf0OzulpzTS+rb0Ugx3vao50ZxOp3cH8dVqQ0YSGr78Eu/lagcfEiVv9D
WoD88F8/hrD+ABxSre+/Vc/uf2sYH4UWb79Hsv4C1CZ1zeLejWX9B+BoDkw5
1xTH+hPw4GDf32/+jGX9C1isUa68b3Ek629AgSIMdZEw+23gy4BCdEBXIOuP
wJOtf6+bLGHvhS108lbMrOmYz/orkL0l4uQ/Kz1Z/wVEKm7S5a+cWX8GhjVZ
HKg84cj6N/B6IN6oqNqI9G2h4nrCi/ejJov/CyE+adY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9mHlczekXx68klTYqtCAtqtt6KyXKPaKMIklXKZJS0UJpJS3aVLSoMJJs
qZQuKSTpnhhrhpIkWTLZlxAZGsOP6Ty/7z+97ut5P5/Oc57lLJN917n6i3E4
nEnDOJxffwW/vg4rdIvo2dP5+HZTVeWvzwp9O281/qi15XN+fUlW+Om8XPKp
Zlf+f7zACnPNFLfI/L6c/x/PtUKPxLDyZL7fEM+xQueoa1rldmuG+A5LtLl7
wWH1zeAhvtISdVQLJeQd15K+Ja66e1zDgxtO+paoqyDvkj07nPQt0Xqpv9uh
jnDS/6mn9PiTcs960p+KsjPcJRaciST9qfh4er3/y42RpD8VTW4dtE4cH036
UzFi8KDy7SPRpD8VpSJW3NkfH0P6U9Hh7Bx5p+WxpG+BWyXNr67zjyV9C+TE
GNZWPd5A+hbY9OSG+PRTG0nfAt94y3ieNokjfQsUb+TV6yXHkb4FVkVLxcrv
iCN9c/wcqDdNwXkj6ZtjTRl8evWE6ZvjDpHH8y3SZI/AHBvbBm9NS2L2m2Nf
RlJvnV4Y6Ztj8OJ0x70Lmf/NsCsl6nXk0jWkb4YSy1uuLtP1J30ztNkM9tYB
AaRvhryLZUnfg1eRvhl26n6KCkpdRvpmmKmg90DxNzPS5+HJR/drfepdREP6
PJQpcvzw3XWNaEifh9YuXndlD0SJhvR5WB53qvmbcNMQz+VhQalwWajWpiGe
w0PP1NjzJ6U3DPEdpmj30a5ds3I96ZuizkOxiYcPBJC+KQqfK3lXrLckfVPs
DUjcWjhqMdlvir6Hx5WHhNJ6OaaYtrfOq3ylH/nDBL8Ne+Z75JI3rd8EPY9N
aO2+4EO8CUpbL/acUsZ4Y3y57WRljqc/8cYofOI+z8J8JfE/x/f5uTw18CHe
CEur58k1JXkRb4Q7axf92zzFgngjdK4Rqdp7LaP1GeJBezujU8GraT2GqB5m
d9RFbT35xxBLinpLQucyfxhgmUTiw3K7GOIN8N9vV+MO744m3gBnvugbMLQP
I56Lk/z3z30f4Us8F9VeFpq5Bi0hnotb+1Nljo8UEK+PRy1vK75dtoh4faz7
FFwTf8yJeH3ktLa6bgrQJl4PVXocs65n2dN69ZDjtujGQ+N5tF49FFs84Bbq
s4T8o4sNGdVVRnrMn7r4TfDQZoV+CPG6OCFilLXJHnoPKqdgr6hwyeUDUcRP
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
8q3m8ESx7L+P1Wqc
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
GDgEdH62ArM6s+t6sVNF/wEFxmLZ
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240945183709517`*^9, 3.925136155988002*^9, 
  3.928707805193466*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"7c0d4205-679d-4d63-9f6a-921ec5c0d31d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem10", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem90", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hypmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9251362008254204`*^9, 3.9251362247036486`*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"e31c2af3-2e93-46d5-81fd-722a3bc15108"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81HsXxyeXytJVqOiRJUuMbWaYQak5uUkLKimRvVAp29imUEguaY9U
uEXdbrRIUrduzWmRkEcSWUpUtEulfXueHuf7zD9eXr/39zPfOef8zvdzvvpB
Ee7BchwOR3cIh/Pz78Kfn2ZbPCd9k3PWzVpWWvLzY4v2L/2GOP/9m4zz87Pe
FmvCvj7aNGe27H/8QlsMKPD2WOU+Y5Dn2qLRkcdRF69NG+Q5ttjnO8I57p1g
kG8W4YoxceGmz+zEg/oiLHucYlbdDOJBfRGGDJE3DF87TzyoL8KgQvn5R8Uw
yHNFyM87MbSiy470RZiWVFNrzptC+kJMb/IdaFFXJX0hKnGvV4VYi0hfiEK7
/IAWp4WkL0SJx8AqJyVP0hfimG51W2OtRYM8R4iX+mUH5M97DfLNNnjlmd87
hQJf0rfBgku7+paPCCB9GwzLq05VeBdE+jYoP1WuzE8hhPRtcCZn8snq4mDS
t0EfaXMgL8+P9K3x1TGuUrdpAOlbY5HQqiy4MYj0rdFx5N/nOw19Sd8aByxa
tNeE8knfGlOW/ai67OxO8bHGgMMjFNu7vCg+Aly95MKwhP2+lF8B6tbpTSs8
HkL5FeCZe/d0Pl4Lo/wKcGxbF//5ueWUXwHWHE6p6wsNIn0B3lnoOqtTexHp
8zHPs3zP57mOtH8+hn78ciG91Yv2z0dv+5gcbAyl/fNxyViNqg/TKZ5cPras
a1tsmxhC8eHj+631z1f4UzybeegT+bBZbt1y0ufhwSl2BYqJ4aTPw0z3yb2f
I+NJn4czRisoJ6ivIX0ePrQ7Lq1aKCV9Hgbc0CvSdYglPSu807CMr5y7gtZb
YcOsuj3cVh/irTA0W3mDy0w/4i1R2jVdqSMxgHhLtFqop3qoLZB4SzS9deNG
YD3LpwVmcuvEh1/4EG+BO7zuHpBLZfVggdX77vQYPV9FvDleG/CuCdOKJN4c
p+/6pTL3rS/x5li+9FD+zj+ofkvM0MrueO70Sm/izVDfLiay/w2PeDMcO+qm
plqRmHgurvushZt3uRHPxYbTLrVTs12J56LD1prc2gNziTdF67BHiTPbPYg3
xfKyt7tM0pcTb4pD2z/cr54cQ7wJNj+NmCQqiCHeBF/PvVRonxxFvAmOC3eo
kF8dR/xElFQcdusbHkv8RBzf8aCifmUk8RPRj3+lq0nC8m+MTm4qLXUbw4k3
Rs/wiNNOWtHEG+PyVqeGmveU/xIjHPbGOuq2SxLxRmic7/3C3DKNeCPsuFid
+ujPdOIN0cvl5PvMymziDVG+pfrKhDVbiDfEnAy7tzN6NhNvgDoztpge1mO8
Afppt9sUeGURb4BfX7rGPk3fSPwE3D9it0KaTyrxE/Bp3IfsHNVk4idg5Jr+
9MkqUuL1seSbmtq7YhZPfaza1Xvu120riNfHszGg6N+0hHg9NFjQJzkwZAHx
erhWO0KveQr1K44eRo1I9roiZv1KFx2Kt0lzXP1pvQ4Gr43RSKszI14HP19p
zz7i5En8eOw/pRL4VjCPeG2sW/Gq91CZI/Ha6CLdFFO3YQ7x/8JKccjDNmWm
Pw5VMudc35gdSvw4VH8czX+4N5B4Lbynrjy6LiWYeE3U6S0z4nxj9aaJJRUx
r4QCtv+xGKty9qasIZD4MXix9MfeB99mED8G3/Q92j7vn7nEj0YbhahqQyem
r4EvZifMK/p//WjgcIPaAnUpi7c6vta6GhJnyn6vGuZvuVhnoLma+qEafvCV
mN31Sqb+OQq9k6X8aXszqN+ORCe5i682CbYRPxIftavq5/Jy6PmvGOtTmjvb
OJ/Wj8DYD6kOo+IPEK+CTUWZY1bPOUS8EnrMXNu1wOII8YpYtyRna3z6MeKH
Y6GWy0LFxSeJH4r24z6Zn8quIF4B9accymh1PUu8PJrJPmGpzT/Ey2HD7pbO
4iAkfgiqmDWeW3f7MvEcPOJSet2yqIqef5PtiPTSaIEaWv9ZVoQTDYbn1BP/
UcZ3eiJaZ9RI/DtZ7v7Lf4VfaSL+jSzwPSfIUdJCfL9Mo+p+Z+2RVnr+TPbX
+/yQ+uvttL5HZvJW8GWp+13iu2R5TcoX5Ovv0vNm2UGJQiR/Swf9XyXL+7J0
rlbeHbZ/Tt7Og2+v2Dew5+KoWrd19pNr2HrxbKnzkf2nrjJ98XDpteSVapfY
94vn/FNc5HmexeuZOMNo36heXxbPfnEHd+XkV5zT7PeJB5RED4zXl7PfLz6e
4ZpnyC1j8RHfvqC0ZZx+KYufmG9cur3w+GEWX3GK2YbVqm0H2f7h7sYHH8ds
LGL5AX7pV5+GlQdY/kCnZtQtz8T9LL/gl1ze1avD6ksBDqpFH9e7tJvVB8Ah
h5Rb5jtZ/UBb1no5i9QtrL6g5kdlv4//RlZ/wJsT1tHevY7VJxyLlc86/kXK
6hck/b1H05TjWH3DQ63oPy+8jGH1D3XP23rmt8Sw9wMKp4UUF2ZI2PsDruIc
ieetSPZ+wV6lTxcM95AfKVEDkzOubVX3FxCvDvO8JJOeznZj7y/4pXponZSE
sPcbVMs6tcUXo9n7D2ujholSXeNZf4CSPs9hOY3sPBoDdjnjw23cGT8Wcmx7
xp3rXMP6D1Sc4JlXBK9n/QkGeP/+7VdZGutfsGF9dUaWaAPrb7BDAcybvNJY
/wO/z27PXn9MYf0RQic+yBvBXc/6J7i/C71/ri+J9Vdo3r/AflSrhPVfkM8u
j69sjWD9GYyf12pa9Sxj/Rs+ftmp7y90ZP0dHP4oOHrSewHFUw/yLn8O667w
oPjpwXT/W1vKk5zZ+QGjCpO+iyqYH9OHqrb8/MtO7HzWB5Wxwy6VB7B46UPm
xm1vM0Sx7PyCgEkjVmrHJ7LzDZbZN9w6/YTxE2BzjUKxrpDF3wCkA05jZ2nE
sfMTZtmdes2TRbHzFaIXDfmt58lKdv5C9yP+ct+hy9j5DN0vs76u2RXKzm+w
sqqJz/q0lJ3v8OxccNL8X13Z+Q81nR23V6c7Uj0ZgXzlfsdDbULmH6Bp5IzS
Jw+WMn8Bmbty5B6mhzH/AXmKhh2KzjHMn0C8t6vkwVe2/4lgeUb7m7dlNPM3
sPrgi6iNR1Yx/wNDMv7Yp6rP/KAJDC+eUOUf78P8E6h3hJjXvF3C/BXM2Gpa
MTaM+TtTyOsdH999wo35M5iclCFsfTqP+Tfom7DZdJwf86dcMDpuUH9vNIsn
F75nDpzxDGL1bAazc9WfVoUlMP8Im1qyFp1LZf7DDMJSVO2bzzP/bA7KURuy
Pd5ImT+FBZYjX1bPSWD+FRK3h2RtDWB+xgIcxLY37iUmM/8Lw7PHC0clML9o
AY0WFbKeD97MP0Om4jfOtC9+VJ+WIPTf6yhnK6F8WcKmqgcFpXWsn1hBQ59x
MD6OIt4Kzn5ZpBypEUa8FZie73zmJg0gngfcLk9/7oUAmm948EpHtlWzYBmt
50HN+L3OUfneNB/xoHx+4Xa5DzzS48HeyRHK9o0ubD6BpBaHl1cjFrP5BRTP
X2yqXebF5hsI2BD1J/8Gqyc+tC5uryrJ82fzEUxyjPBo57D886H2U/fy6x8p
f8188Hly9WCPF82DHAHs0w85ddRiBekLYHSryZ2mkWGkL4Ceo+W/108j/7xe
AG7SM7+sn87qUQBPZ3utGHeC/E2zAFJLdN1rVONI3xr6uT++XBqTwOZLUCn9
fdbcdvb+W8OPVyZZxtXRbD6F5lXni/bqhrP5FXr1m5Y/nr+CzbcwtVxH7uA+
Nh/ZQHLt+zc+yh5sPgb5cl3dY9nmbH6GRfPbCs1ez6P428Brjcz3rrP8Kf42
MG/2zRMx7qE0f9qAc/Gx29/Cwii/QtDWnLEj3oHNr0KQpdXdMlcLpPwKIaLR
ZIF09FLSF4JELiq0XMGH9IVQ6Lw4Rd3Eid0v/Ld/l3vklbN5SgTuHwt15He/
nkr3E7D5w+6F3/04pC+Cf3XvDl1VNIn0RZCbE7lVEuFG+iIYnet0//pqT3Y/
Ans6TU6axHmy+xNoW9RSaRnhzu5XoEGxJMNG0YXdv0CjwCvf7Caw+xk4rCR3
5caZaez+Brq/b2ow69ckfVvQSlCd5hSoIPsPADdoZA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81OsXx0dXilSSvchYI8OMGZSWOVQirp0QkiyRsmRSIWooUqhuq6VS
SjstrhbmlHRFG8XVqkXqttcv5Wr71c95ft9/5jWv5/18vs/3fM/zfc7ncMPj
vSMHcDicMXIczq9fv19Xmx1avrky+auGkezQwV+XHYa0nzgAunwZ59eVaYd1
xnOu1EVPl/2P97PDnrdKdyv/49nPm9vh8h+tpm/vzernOXZYv+haVW9cQD/f
ZosLtxcInWICSd8Ww23NLmRvm036tvhReOtGWHYw6dui8v7hxa1NfqRvi6ll
P5IvO/mQvi0qaSptjfIMJH0bFGofrr0yg+nb4I5DZ7wU3Ji+Db6/haWPxoaT
vg3e6RtTOsotjPRt0LFnYLowOoj0bfCVnKeBtslc0hfhZ/37cy5EziV9Eba7
LFv7NIvpi9B/jOKipWw9fiLc/DVxQniNP+mLMDznYMgIqSfpixCee43IL/cg
fSF+8j69pcuS4nlQiB2D5nfnc2k9mULcaN9lcmsBxdNPiOM2K7/ruzqd9IXY
HMLpmjiWK+7XF+L3c5sNH+npkL411lpM+FyToi/u17fGPBXuqlADcT+faY2V
sd8Vj5T5i/v1rfFhDafq+NbQft7cGkUva67WqISTvjX+pj+peuSFyH6+TYCS
Gecult+NI30B/uYVMTh91WLSF2DNX4HOBXXJpC9AZRtQmLh9CekL8OQVowMG
BySkL8DB9qpFvAtJpM/HjzqSyK0tyaTPx5T8htOLyhJI/+e4plLJ/ZgI0udj
dcb0qDfSaaTPx9QrW730NR0o/j/nD/MydOwcSfG2QkGF3Er3j9Y03wo5LRt/
a5IG0Hqs0Mko4UyhaSLd3xJ/rNK8c804hXhLlPzTee3P8jTiLTE2Ua2gMllC
PA/NnJd3F45JIJ6HneuGt2rtYfHkIafC5GvVNm/iLfDT1yvDead/J94Cg3Zq
lGo0+hJvgW/uqXT9U+FF/DisDfymr45exI/D5z4JtjtSpxI/DiNSNzgYxKkQ
b47R3VUJRW5sP5tjaGhhpquPK8XHHIsHLirL2BdB8THDvYdOlQX4JxFvhnYj
zETr3iwh3gwDikMVbx9dRvxYlIlCss9LVxA/FtU2WfEOyGcSPxYLQqpyBdtX
Em+KusZr7asSpcSbokvZk5jhm7KIN8X8LF/7DZNXE2+CCloOw9xXriHeBB3l
7U7OC2a8Ca7/4vrqc/kK4o2xuqJ86R33ZcQbY/qWXXIJZYnEG2Oj0/6p0zXp
e3DQCFMOv1iROdWB4mmE2trqr0aOCqR4GqEgOcVgU8Nciqchcl/Hg1FTFPGG
aFjVMU7dNJ54Q6yM760tORtPvAGeed/0Tk89kXgD3Ndxx9qiIY54A3Qwaj86
c0YY8VyM/ipntWJlEPFcPP6Yp9s12Yt4Lj5y8txx28KDeH30fRu00flvlg/6
mCv50trzgU+8Pir35n4ZWiqg8TFYenqz9e0p7H56OGfI+0bH1VHE66Gxmt5H
tQb2fLpYr7o4NYATSfxo9D/kuUTLl+XzaFw4pHvrqxMLiR+FU5oTfB5kBRGv
g5LUMyW1mQrE62Ce6KHHaHlv4rWx1FMlWaF5HvFaeLg495Nm9GzitTBh37ei
lGfziddEB8vG1q409v3RQPdJ2/9+NzSaeA3Urf6eFfLz+fp5dZw5VfdB+55p
9L7VcLCcEue+XCTlgxq+46zOb7KfT/kyElOMnkVZ74knXhVNFF/XlhSy/FfF
dBXPOBWn5cSPwE2XM4Mq1kuJV8Gr0Zse8/PWEq+CE286rXNT2Ujjw1CWY7nB
2WMLzR+K3T80sv5tKSJeGdfcFOlELN1NvBKqry/ZXibZR7wivsvJ6lVJOET8
YKwuCAkzd68kXgEzz34bFO95gviB2DLKNmFF6J/Ey+PmxrZXrurniB+AJ538
5zWnI/FyWHm4osI/uJ54DnKCw6TthZdo/JusAepH94mbaH6frGxqz4uAI9eI
75X5iEqON8laiO+RmSi1Np+ceIv4D7IlW6akjmpqJ/6dTH6fY/sx1ds0/kLm
u22jUofgLs1/Kksz1NwafeEe8Q9lfdtfuhi73KfxNlm2/fpsf9V79L9B5rni
qTjSooOtn7P+emVqX9INNi72tJer8q5oYvPFE0rcCv4928D0xaeXJzwuunCe
3V8sS82XV5pby9YnntmZ/vyqTw1bv/iR/tnOr3kn2fOJT6yT1zq2q4o9v/il
n9o0kfQIi4847NKddu6yChY/caCr4pfc8r0svuLstvXHTG/sZusHbPCx0vHY
xd4PBB+b3/KZv5O9P0h1f/97fXMxe78QkOuqvuDxDvb+obpD9R/p0q0sP8A4
XSHspnQTyx9I0plSsHZ7PssvSJpj4KWck83yDwYsqtQzDUtj+QmmyRsP//sh
huUv5HZVnMmcPoflNxS/OjCozW4By3/gz70xrOVLEtsf8D2mPNV1gYTtHwiX
n4PdU5ay/QWyx69nrZm+hO0/yJArvyUdxfiRkLempufDlIVs/0LKp8KIWf7z
2P6G8cGnHz0Mmk28OnSFRd2ZJPUmXgP2PuEVvToQQrwG8GNjZOcKoojXhIuT
nwomOC8iXguyJapDr7tLiNcC23qHc88esvVoA5Yq3TzikUS8DvAiQsrzghOJ
14GTlW8cGqoWET8KUtuyT01NYufRaGjLay3TCUshfjSMd5QdPOiWSbwueFQ9
yMmdLyVeD5T71opHncgk/uf/6pz4dT1pxI8Bl8t84Rvd5cTrg92pSb0Wzak0
rg9TWkNmu+Vk0Hx94AnKimZvYOc1F8obd7vl5GUQzwWt+tvN13XY+cqFuk4n
neNbVhBvAInhRWEl51cSbwAJhQPHxxWw/DGA701qs6yn5RBvCK0/ruwZfDyX
eEMw5A9o7+5eQ7whdO70ch3QlE28EYwudyg4PI/VC0bA912mWlq3ip3fsGB/
wF+xpWw9xhAhqJGGWP3//IfGj0OPv33LvufGkLj/4tWe11GsfoBxKsITR+zY
+zeBHN62NNcAL1Z/wHPLkm3FvjPpfDEFp0sfH1w6Hk/niykYJUocroRTfXvQ
FGJG1untfZFC/FjYn6JaH32d1Y9j4U3x550rby4nfizMGOpwc9NLVk+agfuI
2j9iApYRbwbNlQOtjKsYbwbZ46wTtPSYvjkEhf8doGVN9bOfOWi7KM+JHLqQ
1X8Q3idQHBEXwepDcG6/K10fGcrqR3DvPtXkdiCA1ZfA9U0PFoXbUnwsIKNR
pXGZfizFxwKOT1wVcUOYTPGxAO68J10nXJYRz4MdCkOyMn6kE8+DsO62E/Um
LF958MS64V7MA5ZvlsAdqZ057T6rHy2h29VGEpKcRrwlxMzu8/4ml0K8FdwQ
Jb+5Wcb2nxX4P+6c4cJh67GCY4qTTzl0Slj9D0odjz5/v0zj5nz4lP/2QcYf
yTT/5/jijpAKedqPmXx4v3tXL3/TAtLjw2bfh4GyOvKTbXx4vK9V7w8h848C
yJi67ULbXz6kLwDXiwv9x+iGkb4Ajur0rF6cFEH6AnBOEFZ93BJM+gJY4Gi1
Js0/hPQFIM3beareZjrpW8OCrKy2sCRH5s/Aff7AnRmxAcy/wUfuoLkWu0KZ
vwOuVpxE1BjK/B9w5rkmnHT1IH9lDfVBR2OVd7F6UgiyXQpfcwOZfxKCmf2Q
Kq2HFqQvhDDjnpqCaRzSF0KNtn6pttoM5l8hp0z9R14a8+dC+Bweq+SWH878
LwR5K/b29cQwfwzVm9VTIlrimH8G9Tsdx7pqopi/hoquRtNx2dHMf8PVye8k
CjfmM38OYdU37D+YRDD/Dtuka0au8J3N/D0YiNJ31ygxf24Dbye2aCh8CGH9
AWh5Ol4SrRfJ+gfgMnt6XaZiFOsvwJlnG9Z8+xTC+g+w/vxa3sVA5u9tf55f
uuJBl/1Y/wImWOg8tSzwZ/0NuFgUOuDyBubvbWF11CKLwgpn1h+BFF5zw0Ie
6w/Ywdk/r8/47uDK+ivwqMnE8ZW+B+u/gFAp9sPgVm/WnwGt0d1jbvd6sP4N
ZO7ytpj7wI307UC+2FW4Lgdk/wVUM4XP
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
gfEne5Kvd+lTfgQw4fE1m6QwM+H/ARWanAA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHk81ekXx+81KqSEdmXf18u915XKPSa0jqRkqRCyhGxxGVlTESWjkRoj
0a8pipJKmronJWlTCdMybUIhlfaifr9+zvP9x8vreT+fe57tPJ/zaPlFuK6R
4XA4GlwO58dftx9fqwgNvi/yLNovFFeU//hEKPz8b36kibWY8+NLFWGovleq
+Yg54v/zbiIc4SlKGjBYMswbi/Dk4Nfnz/RWDPMcEW6YljUe7/oO863WiNFt
1dde+pK+Ne5wu77rtuZq0rfGlDa9voZTq0jfGm8+/ye79bEn6Vvj+bL0pj6L
5aRvjVG33t8ft8OV9IW4VUHHwSCS4ikXYqJtnO3kgaWkL8Tac0kPJGtWkr4Q
X3Y5cpuKlpO+EKtbmyp/f+xF+kKsWDG6OcJlGekLUGutXYMqfz7pC/BffXu4
FgqkL8DBF9sDkrvsSF+ACQlVWTGfTElfgGdLiyUbrO2lw/oCDDkRm17faCUd
1ufjYcWw/HUlc6XD+nysOWDtWXLIcZhP5aPL9KRdv4yeQvp8lDml0lpcYkv6
fOTPuHbFPcKe4ufjvM52w2cpYorfCh+5prp1VruQvhWqnh/qUNVZQ/pW2MH/
U7vDPmo4HjcrbDpjNMt1U9wwb2yFA8aBYdkuCRS/FbYr3Q+bKY6n+C3xg1fD
nqc6saRvifJFgjSrdbGkb4lnJN18QXMc6Vtica/D+uK/YkjfElcN7mz//CSG
9C0xV/WqywTdaNLn4fGyK68GBogv52G8sqZwMF5C+jxsHyVz98hsCenzcLBP
UlIjiCd9HtauTO0SlVI8HB6Gliptd/gURXoW+Gl5/9uyuZHU3wIveASWOv4T
SbwFyn4xGRx8yHhzPKjhZqEgQ/G5maPxzI027+oYb46+IXllBuosXjOsvtcS
52bBeDNct31bQZNqHPFmGH72aj0/lOa73BRVPAoeRmax8ZiiY5fXoecBNF6O
KTYmPLuYYsN4Ezw499es7Tm0Hm4mONCbFxWvnkK8CeZXFR1U3ptOvDFWy03d
LU1KJ94Y0wYNB7f/nU68MV5603RHqS6DeCPM1Px679yuTOKN0O72K93Wgi3E
G6F6yh67fLmtxBti0eL39Wn3txJviLE11frxJtnEG+KY3yvkL9jmEG+Af3Qs
/avYIZt4A3zXZdcsX5ZFvAHqDu30fDm0hXh9NDipuM4giMWvj7lnP8aea04l
Xh8Lr77cPHpjKvF6uP5Y+NLeLSnE6+HnuFnK5erJxOthcUNDSH0Qm09dvL58
a9vbzhjidfHwreRVNz6uI14XH3nafw/J8iFeByfOnFg+jedNvA4uSix+tX6H
B/E62PBz3ZF5tQ6UP7SRI7HPOWbkQedZG8XdZ7hmppSvONo4S6vhSba2O/Fa
WOikNSUgaCHxWvjcvvj4TMEq0tdC6WXNY0MP2H7TRFeN0DaX7ASKRxNPGkT6
qEuSiNdE/6bjTzbtTaV2DayNDeM9zmX7Qx0VMv7W09uzkXh13Of5fohbyeZ7
Ol6vyl1YfZTN7zQ8+MBtoKWXzf80dEqs6a78K414NbyStCa55W0a8VPRQrpa
u9klg/ipyBkXrFrny/Sn4Bp9jbj2XsZPxlaD9tQ/17P9ORl7PAWNtU3JxE9C
GbXN1T4yvxI/EWVHD07NkGXrOxGdVFuK+HtZPBNwymfO9xM7NxM/HpcpvRBc
D9pK/HiMf6rRHlywjXhV5C5onPo1Ppd4FfxceSOz7/wO4lVwpfPxmPSzecQr
o5lN543MJ3nEj8NjL5LhiXM+8ePw+oavbka8ndQ+FheMyeH+VvY79R+DKmlt
G7zrdhOviFlis+ZJVcXEK2Bst7J919NS4uXR6V3jiNK8A8TLYVhOTcXMt+XE
j0SH9uhFC5OPEj8CV790ys5wryFeFudd6b8ydLuWeBn0sNvb+8DmHPFcjFn5
U4fas/PEc7B4YK0g59FFah+S9nsnzDeMuUz9v0gXKCfKVWZfI/6TtKfUpi9j
703i30v1C5SNeEotxA9I/S4s7F61opX419K0b6EPuGnt1N4j3VOqM9El/C71
75Q2Om9zdv16j/jH0lNHnM4Lt92n9lZpzeZvnGTve/R/g9Q3yz/M4kQbi59z
Wfd6s8fXG6xdbMENsOo3aWL9xdPHyuleCbnI9MXmOWHV7S7Ifl+cNth7M31y
HYtPHJCQeMR7wQkWv3hv4dU5STuOsfGJbW/LtxTkHWbjF1d7n91cfput1yex
5m87H53O3cfmT9zvbltj4l7E5ld8dF+Pf9zHAhY/FLYlKm3s2MHWB85I+Vt6
vrP9LAMv9qjWqq5k51cWxkfLQ2XQBrb+MLL35vyjLdFsfwAnsDtLPTSU7R84
e1Ug4dQFs/0F9p2Guwu5nmz/QXqg0FPGiOUfRVB2TtgvNF7I9i9weCnNG+rt
KX+NBXmFZ79wDX0pv42DoqbJ21Pzwql9HHwr9LvaujWG8psy1ObYpBzYEkW8
ClQfOWl653Ak8Sow8tu0obn9IcSrgnyta9hBbhDx48FG1nbN+93exI+HstYL
+ZWblhA/AYa+H59i/G05yw+wuLxBrz4xgOUP2HXOkXupIoDlFwjpT17gYbyW
5R9YgosuDh0PZPkJvtz0H9X00p/lL5ju5NY9xzCA5TdQKlTfpee2muU/eL7P
wefDf1ax/Aj7Txp+/rkWWP6EPH/3gFIe+dPyaTA/1/K06U1/in869LZ35hiV
RdJ41WFdZ4fio/nxxKuDeYiM6z9j44nXAIUJqXPCVSTEa8IRtXNV7c7R1K4J
Jl3mkz00o6m/JvSscR/anhxPvBYoepXPm2O+gd0/oCPvkVdiJWH3E2RwtcVZ
CyPY/QXR65Y2d/T6sfsNGgxlTcM62Xi0Qb3uzOixVe7E60CmGje02oeNTwfi
7XqeeVSR/y/XgTDDnluS1Y7E68LhoFFZ1fdE7H6GCSmbXa/FM3+rC+Oi3v2k
munH7ne4di3h2expzN/pwfEVJS8CHkiYP4DDsyzuv6xm/kofODEBB/OnMF4f
sq+cEB7qXcn8B+wcOBAcPmkO8ycgO3FxwPyST+eGeQO477lifQhvGvM3EDvn
ra2nvQXFbwi5HK8xB9faM38EGo77kwvyHJh/AhmTzFMVXkbMX4Fk4np/KxNL
5r/getHnpn5dXZofI4jNXxQ7e7E+6RuDEsx6LdJexPwdiHINW/XKvJn/A52Z
rnPzt7HzawIK1ziPbTrmM/8IlUr1XScztZi/hA9h9aJTPrqkbwpBR1odIqba
Mn8KKe/cqmRjtJl/hahNMWeW5ZsTbwYRlyoyMi8Z0PqawaRlHdHpm4HiN4Nn
t4IfefW5EG8Ody/+HPDiGOPNofvty9VPT9sz/w2Silk3HGa7M38OEp3XdmV+
7DxZgIFFXovU1535e+hZkHYrw9Wa+f//zdffadcLdFh9AAkbn/YUHxKz+gEe
dnDfKK5bwuoL8Asq0pwoYb/Pg8aEfvmoRGeqr3ggc1Z7z6PxgRS/JZxMakwZ
zAqi+swS3KZevLUr2IfGYwnH687khez3p/rREpoC9fRmhAfSfFiCwtfJPneW
UX5rtYSPWaKe+p9CSd8Kii45inYKo0jfCsYYVpT6zmP50wqEB45+SYqMIX0r
kEkYfHVnVwzpW8HS0x07Rl2IYvUhbGsp2mKTHM3qR4j41nY4YkQMqy/Bsmm2
9LIFyxd8UA/utvvjbhjp82HeK7k/HZeGkD4f/NYH55rE0flv5UNPkeSy50P2
PiCAk6ERsRNsfVh9DKsbDcxWGLuw+hlGeucvMEx0ZfU1NPQ1vVb7/gurv4FX
uazwy21W/wtA603NQ3i8mNXvsP9DjvnFbD6r76GgT3WsYJeQ1lcIXQ82ZksW
zaP1FYJ64NNRjwQ8Wl8h8GZwE74NCNn7AkxYsa/7TcwS9v4Aapuk7t6qzux9
AgzOn3Ja+nQpe7+Au8lq0rIZ7P3BGubaF0r6NrL4raEy6bGc0Rg19j4C2Srh
75/3s/Mlgho939r7VdNpf4rggmJoY6KXGcUvgqISN2fdQWX2PgOLuv+t5Ck4
sfcbsBP45Y7c40T6Itif+VrupoyN+L94EY/O
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.8549019607843137, 0.8431372549019608, 0.9176470588235294], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925136220646126*^9, 3.9251362256325603`*^9}},
 CellLabel->
  "Out[398]=",ExpressionUUID->"99f3bb4f-0325-498a-99ab-ec8d51fa5421"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240945654123774`*^9, 3.9240946458143477`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"03d2bfb8-5b2b-4e1e-967a-05a20f5220de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.544374603205313}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.544374603205313]& , 
            TagBoxNote -> "1.544374603205313"], 
           StyleBox["1.544374603205313`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.544374603205313, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.2391641547358758`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2391641547358758`]& ,
             TagBoxNote -> "1.2391641547358758"], 
           StyleBox["1.2391641547358758`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2391641547358758`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.9680537243371442}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9680537243371442]& , 
            TagBoxNote -> "0.9680537243371442"], 
           StyleBox["0.9680537243371442`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9680537243371442, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.8142830193511741}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8142830193511741]& , 
            TagBoxNote -> "0.8142830193511741"], 
           StyleBox["0.8142830193511741`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8142830193511741, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.6558474792656962}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.6558474792656962]& , 
            TagBoxNote -> "0.6558474792656962"], 
           StyleBox["0.6558474792656962`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.6558474792656962, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240946476451144`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"340246a1-535f-4bf4-a4fa-793279059347"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hyptyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#dad7ea\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92409484057642*^9, 3.9240948682716064`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"226ceb86-9f20-421d-96fc-dc7915866a5b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.8549019607843137, 0.8431372549019608, 0.9176470588235294]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.024077051580699}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.024077051580699]& , 
            TagBoxNote -> "1.024077051580699"], 
           StyleBox["1.024077051580699`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.024077051580699, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.0046719466633685`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0046719466633685`]& ,
             TagBoxNote -> "1.0046719466633685"], 
           StyleBox["1.0046719466633685`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0046719466633685`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.0060350773445164`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0060350773445164`]& ,
             TagBoxNote -> "1.0060350773445164"], 
           StyleBox["1.0060350773445164`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0060350773445164`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.0036858045042054`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0036858045042054`]& ,
             TagBoxNote -> "1.0036858045042054"], 
           StyleBox["1.0036858045042054`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0036858045042054`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.9847315901209015}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9847315901209015]& , 
            TagBoxNote -> "0.9847315901209015"], 
           StyleBox["0.9847315901209015`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9847315901209015, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5699346405228758, 0.5620915032679739, 
                    0.611764705882353], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8549019607843137`", ",", "0.8431372549019608`", ",", 
                    "0.9176470588235294`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.8549019607843137, 0.8431372549019608, 
                    0.9176470588235294], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924094869469822*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"4a52e01f-abe4-4113-8ccd-4bd4bbaa1a3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hyptyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Protein titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245316353597326`*^9, 3.9245317082247953`*^9}, {
  3.924531738434306*^9, 3.924531739416131*^9}, {3.9245317923415318`*^9, 
  3.9245317925518*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"0708d296-8a1d-44b2-821e-1ead048c3dbf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]], 
        LineBox[CompressedData["
1:eJxdzHtIU3EYxvHjNC9l5rXU1KZOp5tuOp1WFOfNEQiDoGLpkCy0wsCygujy
h1mziEorFK0sii4GxyKjm2LRxa2wC0R0TCKWEQNZGasMTZTK9mL5/OBweHk/
7zexrGrFeoUgCMf/fBP//1/BBeUSy9/nEFulhteXr+0u8M6yeKrurLu890iB
V/aLltGBoebBJt67REWTT4A74VxBmzTx3OLGkvbS+b8usveIzmpjT9k2ifff
xOSEwtZuQzvf/xBvf15u6zx7g/2IGFO/Z2/hiTvsR8XSxq+3nn7oYj8uFt97
fLhu3QP2AnUtXFetV3bz3oce2Wv1C4YdfK+gqh2vNtiLetj70VbnpifZQ8/Z
T6MZJa3GhRtesvenoz9NjtSOV+wDaTCy3Xo0WGYfRMf8tmgDu9+wn07j7vLQ
Itdb9sG03OW4MlbpZD+T7rfV1DnUH9iHUHFT38fwio/sQ+nBkMcmdrp4H0pd
2nLr9pUDfB9G0YubNDb1J/bhZFk65jSv+cI+nOIfOk/uGPawj6AFHqmmMfQ7
+0jqKDuf5pP/g30kBQa8KFx2fZh9FN1dvdYcVz3KfjZp7o/sfHd5nP1sGnh3
yTzSIpi8fg5VWsUM+z6FyeujaXN/b+XbZj+T10eTzmGzNg76s4+h2xXNilW7
g9jH0vcDY/VXq4LZx9K1Bp3ScnIW+7nkO3JiUVVtGPs4Onwm/nzLygj2cXTz
YEj96eoo9vF07pDq2fu+OewTKD3GvD9qVyz7BLLrfV01M+PYz5ucvV4J+3+z
914JPhF8IvhE8Engk8AngU8Gnww+GbwKvAq8CnwK+BTwKeBTwaeCTwWvBq8G
rwafBj4NfBr4dPDp4NPBa8BrwGvAa8FrwWvBZ4DPAJ8BPhN8JvhM8DrwOvA6
8HrwevB68FlT95osuM+a6mvAS+Bl8EI29LOhnw198BJ4GbxggL4B+gbog5fA
y+CFHOjnQD8H+uAl8DJ4IRf6udDPhT54CbwMXjBC3wh9I/TBS+Bl8EIe9POg
nwd98BJ4GbyQD/186OdDH7wEXgYvzJ+cfwMKPyse
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]], 
        LineBox[CompressedData["
1:eJxdzHlIk3Ecx/FHU8lyqU3Ncprb3HTz3JzOwHq+akX9ExUeFUQY9UcSXbI/
Ijo1VkR0H0aEUSo8pSxnl1Z2OemiNB8ry6zskCw7zCgru/al4/ODh4cv39f3
rZ67ePp8T0EQtv38fv3/fZmHIjNyfr8G0aGvq1XU2DLdsywa3jxuCPOyZ7rl
I9G2+Xvvt6nbef9MTOv2VJedKsk8Iv16L8Wmomb92Jul7N+KTkX2mb1FZbx/
L9aWb7pacUvi+z5xdp/C78l6B/tP4tDrOybtX+Vk3y8mHK6ZMyvmJPtv4szK
Kw05/nXsBcqrr54naup570Ft07ymmAcu8L0n+bsWaT7UXmbvRaa2uI2Klkb2
3hTR3HtfZbnG3odCq6rvFA66yX4wRW2N7jie38Tel/Rfdlc6HbfZD6EZ6WMG
Boe2svej83Z9V/vTu+wVFFx58EB22AP2w0jleHBMe7SDfQC1njVbKloe8z6A
VpPpxtIXnXwfSJ2urx+XmZ6zH04n6p0Trzd1sR9Oyt57vjV7utkryZhfMKXk
fQ/7IGo/vdjak/uOfRAt3JC/oGJmL/tgUreO9159oY99CBUszzPcoU/sQ+ji
Plf6w9v97EfQ1NeFR4sDBtiH0q66FZ33KoUstw+lZ+GvtlgXema5/UiqNl+r
8rB7Zbn9KLo0NNHSIvuwH0Uncxtta3N92YfRUt3kI0q9H3sVrczozzEU+LNX
0bkJKc2uVYHsw6m82mGvX6JkH0GlxUqbdlMw+wjK+Lwzedy6EPaj/8xuHwn7
v7P7PhK8GrwavBq8BrwGvAa8FrwWvBZ8FPgo8FHgdeB14HXg9eD14PXgo8FH
g48GHwM+BnwMeAN4A3gDeCN4I3gj+FjwseBjwceBjwMfBz4efDz4ePAJ4BPA
J4BPBJ8IPhF80v97YxLcJ/3v14CXwMvgBRP0TdA3QR+8BF4GL5ihb4a+Gfrg
JfAyeCEZ+snQT4Y+eAm8DF6wQN8CfQv0wUvgZfBCCvRToJ8CffASeBm8kAr9
VOinQh+8BF4GL1ihb4W+FfrgJfAyeCHtz/wDqHVLrw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]], 
        LineBox[CompressedData["
1:eJxdzHlIk3Ecx/EnW6aWpaZpc7nNazrd5jFdIfl83SiSCCFRSbo0/DM6iDIo
UrA/uswOo7Sgw64nUliXkIRJYqQUYo94pukiKBdmZWbpOval4/ODh4cv39f3
rS3cuqbIQxCE4z+/X/9/n/WyJiPn92sW854JIa2ObVb3LIvO06c8s5WlVrcc
FK+0lu4r6T3E+9dihf1aaGfxSetN6dd7K0addSm3GarYj4r986vVW6ULvB8T
Owac3cOTNXz/WTwzu02l23iD/YS4f6y/cdRSy35SHPmSbvD0trOfEodXD66K
0d9lL1DPTnOd42Y972fQQF9awbnzDXzvQZsq37dPZjeyV1D+nriy69ea2M8i
Ta+ip8S/mb0nVbwbqT851MLei8rT5t4qU7Sy96Y0Y+YT24Fn7H1oey8VhK1o
Zz+Xli11qCoPd7D3JYPitnq50Ml+Hu0dllVLt3Sx96Mm7+DnHUW9vPejU+bP
xtiGl3zvTzuEwWnz9CD7ALqXVdeX7zPMPoDWHdz9NXfla/YLyFI8/rCz6w37
QPIv1w552d+yD6R6+vDC45uTfRDlP/rmWt84yn4hpbucNRNVY+wXUmnokqct
jz+xD6aMza4Tc96Psw+h7kDVeM3yr+xDaF5AoSNT/Z39IsrdcDfnWJaLvZJS
atte2Ytn2NxeSQ/qTNUf82ba3D6URi70FdkuzrK5vYr67dtT86Zms1fRrivr
mu7f9mG/mJRl6oI7/b7sw+jI1QiV8Ygf+zC6tDY76GilP3v1n9ntNbD/O7vv
NeC14LXgteDDwYeDDwcfAT4CfAT4SPCR4CPBR4GPAh8FPhp8NPho8DrwOvA6
8DHgY8DHgI8FHws+FrwevB68Hnwc+DjwceDjwceDjwdvAG8AbwBvBG8EbwRv
Am8CbwKf8P9enwD3Cf/7EvASeBm8kAj9ROgnQh+8BF4GLyRBPwn6SdAHL4GX
wQvJ0E+GfjL0wUvgZfCCGfpm6JuhD14CL4MXUqCfAv0U6IOXwMvghVTop0I/
FfrgJfAyeMECfQv0LdAHL4GXwQtL/sw/AEY0NbY=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]], 
        LineBox[CompressedData["
1:eJxdzHtIU3EYxvGjZngpS53mvM7bpnPqdNOJBudVo5Ig0TAhCdIUMilTIlIo
oqAyAjPR7CKRq7Cj/mFSRhFUInRhaOVRaxmpWWpJJpYlRre9dHl+cDi8vJ/3
G1xQml1kLwhCzc/v1//fl2ZWpeb8ft3i+4ca9cKDkjTbLIvz9ZMxE5X70mzy
lZjtcnsstuQI78fEsvaUB5WlJ9JapF9vUlSNj+cuDNSxnxbd9qxUbt57lvcz
otWcv5Drd4HvP4nbvRqG6vsvsv8ihh1+VnhMcYX9vOjpVml4nd3G/pvY9G7D
okxFO3uBkncfX90x0MF7O1J2ac5sfHKd7+0pr2BwwNnzJvtFZFFcr1aM3mbv
SC+uuTUVq++yX0yNRedP5qR2sXeiqClfa8ZUN3tnyro6lzPSf5+9C51uzaq1
fn7Efgnll5zr2lrRw34pNXQfVDbfeMzejapc95ue33rKfjlZlEFGZ5d+3i+n
3su6lsCaQb53p7KETv3Oait7DxrK/b5FnHzJ3oNq1/QZ3ZXD7D0psvPJzfUe
o+wVNHTmrvOG8jH2Cqo87uvzcOYtey8K6px96tMzyd6bhicqUg7NTLH3ppE4
rTXv0jT7FZTp0upoqJ1h70MfCkL73vTPsvchpaxLOpY5x15JmYevWYoff2Xv
S969q5adtSyw96VtGQ5HHRyEdJv3o8DGXea2Zrt0m/enj+VV5mWnHNJt3p/c
1xXe+X7PkX0AJTsF7bDb5MQ+kKbNWVfWurqyD6QAU2mTULeUfdCf2eZVsP87
2+5V4IPBB4MPBh8CPgR8CPhQ8KHgQ8GHgQ8DHwY+HHw4+HDwavBq8GrwGvAa
8BrwEeAjwEeAjwQfCT4SvBa8FrwWfBT4KPBR4HXgdeB14KPBR4OPBh8DPgZ8
DPhY8LHgY8Hr/99r9XCv/98fAC+Bl8ELcdCPg34c9MFL4GXwQjz046EfD33w
EngZvGCAvgH6BuiDl8DL4AUj9I3QN0IfvAReBi8kQD8B+gnQBy+Bl8ELidBP
hH4i9MFL4GXwggn6JuiboA9eAi+DF5L+zD8AB3z2aQ==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], 
        LineBox[CompressedData["
1:eJxdzGtIU3EYx/HTMrXy7jK1NHXzss1531a9OY8zu1KgVKYQRDKoKOxCKUmh
WS1SyiRLyjdRkZ6sDJFEpIu1LguqGQdLkFVDIrGyZSVmUraHLr8/HA4Pz+f5
xm4sybcoBEE48eub/P/7zOdjstf8fjaxzd/seLR2k9kzy2LjuiVeddYys0e+
ElfmrdDudB7g/YC4+oK7rXh7tfmyNPkGxQLl0IJbQXXsh0XHu4KiWarTvHeL
zyuHh9btbuT7L6KtvbUkynCO/ahoLU6r3brrAvsxcfOubU8/hjax/yE+fJQ7
x6xvYS9QUeDxBvf+Vt5PIaW/IuC6oo3vFbTZMpFa6mpn70UNyvK7kT0d7KdR
od15329vF3tvej+1vGxs1W32vjRS1XLl9ZFu9tMpgkZdzvF77GfQ0qjSi4qa
B+z9aMvha+YF3Xb2/tRss53aW/KEfQD17eu4P+jjYB9EwVc7w9d/7eF9EOXv
3Fi7b6HM98G0zL5H3tDVyz6Ecq0f+io6+9iHUJAr40blWD/7UKquMfQanr1i
rySf9h2zNV1v2CvpVu1ylXXqAPtZdPLNjh8hi9+yDyPHy/5Cm/Md+zBq/nYn
2N40xH426QuqXuS6P7IPJ8OxesvRx5/Yh1NgkfPMJddn9hF0SX2o3W/6V/aR
VEIDRmvdKPtIKqg8G+hr+s5+Dg1rFNmWmRPs55I6rL5rsFHI8fi5NH4zODSv
SpHj8VE0sjj6rO64V47HR1NERfGiJLc3+2gK7Ul8dvC5D/t5f2aPj4H939lz
HwM+Fnws+FjwceDjwMeBV4FXgVeBV4NXg1eDjwcfDz4efAL4BPAJ4BPBJ4JP
BJ8EPgl8EngNeA14DXgteC14LXgdeB14Hfhk8Mngk8HrwevB68GngE8BnwI+
FXwq+FTwaf/vtWlwn/a/rwAvgZfBC+nQT4d+OvTBS+Bl8EIG9DOgnwF98BJ4
GbyQCf1M6GdCH7wEXgYvZEE/C/pZ0AcvgZfBCwboG6BvgD54CbwMXjBC3wh9
I/TBS+Bl8IIJ+ibom6APXgIvgxfm/5l/Aod9b4Q=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2, 0.0784313725490196, 
          0.5411764705882353]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7058823529411765, 0.6745098039215687, 0.8588235294117647]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.5490196078431373, 0.4823529411764706, 0.8196078431372549]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.39215686274509803`, 0.27450980392156865`, 0.803921568627451]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2784313725490196, 0.1450980392156863, 0.7019607843137254]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.2, 0.0784313725490196, 
          0.5411764705882353]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Protein titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 1.974036649266161*^15}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.2, 0.0784313725490196, 0.5411764705882353]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4705882352941177, 0.44967320261437915`, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7058823529411765`", ",", "0.6745098039215687`", ",", 
                    "0.8588235294117647`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7058823529411765, 0.6745098039215687, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.36601307189542487`, 0.3215686274509804, 
                    0.54640522875817], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5490196078431373`", ",", "0.4823529411764706`", ",", 
                    "0.8196078431372549`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5490196078431373, 0.4823529411764706, 
                    0.8196078431372549], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.26143790849673204`, 0.18300653594771243`, 
                    0.5359477124183007], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.39215686274509803`", ",", "0.27450980392156865`", ",", 
                    "0.803921568627451`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.39215686274509803`, 0.27450980392156865`, 
                    0.803921568627451], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18562091503267975`, 0.09673202614379087, 
                    0.46797385620915033`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2784313725490196`", ",", "0.1450980392156863`", ",", 
                    "0.7019607843137254`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2784313725490196, 0.1450980392156863, 
                    0.7019607843137254], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13333333333333336`, 0.05228758169934641, 
                    0.3607843137254902], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2`", ",", "0.0784313725490196`", ",", 
                    "0.5411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9245317342595205`*^9, 3.92453179294876*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"473bf1b0-572a-4b6a-8462-00e3d31b91f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp10", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp50", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp90", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hyptyp99", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924531750586376*^9, 3.9245317769940434`*^9}, {
  3.9287069165421476`*^9, 3.9287069648293886`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"25466ea4-a3c9-4521-8474-6f08be554e32"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
       "]]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzAtIU3EUx/FrZVipTFM3H5VzTvdwPjYfaY973JJRUERUFJKBYmJEGdkD
CzItSpQelmaQEQmlN4oIyTJbJWqgRRLeSExYyeixxNKSSqPXDoW/P1wuh/M5
X3XujjX50wRBOPX7+/PHt+7v6xR372w4MF5z3OqZZXHVATq9P+Ci1aOcYtHF
Q5Wvdjfx3iVedg5X3p5503pV+vPei6qD5sY3Yy3sP4o91zMV1n0O3o+KWQVn
yp70tfP9FzHnmm4g7UUX+6+is+PWCn97D/vvYl2vsuJOaC/7H2J9mLl9cvAZ
e4EGj9o7z7pl3ntRePKVg9WL+/l+Gj0ueVx4cuIl+xm0wVJepax2svcm86bs
Fl/Xa/YzqebY53TlIRd7HxrIzGvP2vKW/SwKa7nszK50s59NG59196u8R9j7
0qO1uRl7d31i70dP16887Lg0xt6fxm3BmbW+4+wVZPJamd7V+ZX3Clo9lLok
qX2C7wNo/dqC1q1+P9kH0oO3jghLjpfN4wOpRJX/cNm26TaPn0t5juHrpmZv
m8cH0dg+e80J0Yd9EHU3O/bXBsxhH0yTdUfaRvX+7EOo7UHT9j3PFexDqPh+
meJDdyB7JS1qfedfMRLEXkV761S2juVK9irSD7pj3a5Q9qGU2dAQIvdHsA+j
byXrMgzKSPZhpKv5UHVvWM0+nGoba2+Uj2jYR9CMNnd9kTaGfQTZ7efuZlzQ
sZ9H+uzi7bTJyH4+LS119Q4VxrOfT32bXeeV0YnsF/ybPT4S9v9nz30keDV4
NXg1+CjwUeCjwGvAa8BrwEeDjwYfDV4LXgteCz4GfAz4GPCx4GPBx4LXgdeB
14HXg9eD14M3gDeAN4A3gjeCN4KPAx8HPg68CbwJvAl8PPh48PHgE8AngE8A
nzh1b0iE+8SpvhS8BF4GLyRBPwn6SdAHL4GXwQtm6Juhb4Y+eAm8DF6wQN8C
fQv0wUvgZfBCMvSToZ8MffASeBm8kAL9FOinQB+8BF4GL6RCPxX6qdAHL4GX
wQtp0E+Dfhr0wUvgZfDCwn/zL+gdYXI=
       "]]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/GjNpuVQ21etizd5ja36aZzF7EX52GDwBKKoBfZhRoViZRF
Fhq+KKGwwqAikQwKiqijRFIUCZkGRmZtEZyi7DKzVeQl04pVhF32UPT7w+Hw
8Hyery5Qs3xjvCAIR359v//4Vvx5faInyRFt23bYF5tlMRBOUKclnvbFVFgc
6D4TyNx4gfcRMbDBtK5iutPXLv1+78VnoxXxBx9fYz8hqnpsZZuXdfN+Uhz8
eq7LdesW338Wm7aHQqrQbfZRMVo77W9bNMD+m1h5ZubN5PkP2P8QGzoqb59+
+5C9QL1Dh1yDEzLv46jozVBf7+InfB9Pe4PLS3vVz9nPoLKqE2uHzofZKyga
ei42xQ2zT6TCqddyeUuEvZLGXBcsqdXv2CfRaNXnrs7jI+xnUUN2fWmr+QP7
OXR0PCWYfuwj+2TavWr7sqf9U+xVVBNpHh/xfmGfQjdKX3Sfj0R5n0LC1lDV
/cHvfJ9KztWVa26Yptmn0WRdWXnq1jh/zKfRpVWKxvadCf6Yn0svwtWztZcV
/phX02qLsvWOW8leTcY6RWAgYTb7dNqn7z5QY1Kxz6DmHcaTjfdS2GeQdv3S
8ZcX09hn0qlXBpetX80+i+wKjUNpzGSfRRPN9aa2Xg17DWmCY4pHndnstRR/
/e6K+2M57LXU0d9zZX+Pjv080q6MnB29aWCfTX2WLeW+r0b22TRyuDZ1eFc+
+/nk+7QwWOW0sV9AV/VLkpPcdvYLaGXGoU0t7Q72OX/nmM+F/b85dp8LXgde
B14HXg9eD14P3gDeAN4APg98Hvg88EbwRvBG8CbwJvAm8GbwZvBm8Png88Hn
g7eAt4C3gLeCt4K3greBt4G3gS8AXwC+AHwh+ELwheDt4O3g7eAd4B3gHeCL
/t9bi+C+6H+/B7wEXgYvFEO/GPrF0AcvgZfBC07oO6HvhD54CbwMXiiBfgn0
S6APXgIvgxdc0HdB3wV98BJ4Gbzghr4b+m7og5fAy+AFD/Q90PdAH7wEXgYv
eKHvhb4X+uAl8DJ4ofTv/BMMLD8V
       "]]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzHtIU3EYxvGjpquRtamZ13TTeZnO+y0tzosDRSqDxjQyQkS7UGEQhmg3
08wIIhMr/wiDbngMTYhUiiibSoWstANJRhEIXphkUdnyUrYXw+cHh8PL+3m/
mqLSHSXOgiDU//0W//jM/16v+Lsjzd5YdTHTMcuia2et/yWnG5kO9UlMnq1t
mzW18H5UrPoZ9D7A1pHZKi2+CdF5xmS+97qT/RfxaO+R+/HbnvD+q1hmy7xQ
0NXD99/FpvShoaZbfexnxO3tYfrzilfs7WJHv0v0oZ9W9nOiqbO6rKh7kL1A
FTEfC41PZd470RdL95EB/TDfO1POSJZVNTbCfgX1XbN7Xz71ib0rWbLFOhfL
Z/Zu5HluWv0jd5T9Sio2zG0d1I2xX0V6pQfNbplkr6SUjOz24oEp9qtJ0XZ4
z4hpmr07va1paK0+9o39GnqnXpg1Dn9nr6IPuZttm87M8F5F49bHlW7lv/le
TRmKpBxb1zx7D8pqGfXfGupkdHgPKtpLL08Euhgd3pPSle3CzjxXo8N70e5C
r9elgwr2XmS1aG7euapkv44+Xi839992Z+9NniVdk81VKvbeVNnQOP5itwf7
9bTw68HUyYNe7H0oozJ9SOjxZu9DpSP9x+/u8mXvS/nqrPm8qAD2fqQof9M8
bQ5i70f5dqV64z4Ne38yjW/T+hWEsA+guoYDjxrP6tgHkO7r87z9tnD2gVQV
uHaioUnPfgMdWruiZr7ewH4DNdU8q7jyMJZ90NLs8MGw/z877oPBa8BrwGvA
a8FrwWvBh4APAR8CPhR8KPhQ8DrwOvA68GHgw8CHgQ8HHw4+HHwE+AjwEeAj
wUeCjwSvB68HrwcfBT4KfBT4aPDR4KPBG8AbwBvAx4CPAR8DPhZ8LPhY8HHL
9/o4uI9b7k+Dl8DL4IV46MdDPx764CXwMnghAfoJ0E+APngJvAxeSIR+IvQT
oQ9eAi+DF5KgnwT9JOiDl8DL4IVk6CdDPxn64CXwMnghBfop0E+BPngJvAxe
SIV+KvRToQ9eAi+DF9KW5j+DDaPz
       "]]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzFtIk3EYx/E30WXDldpcZjrdps5tzk13sCR6H2cXiUQH7GBpB8WoqMQO
F3VRilLRJFOMLiw7GeIrFYUUHegisKguguKljFyjUkmttBSWJzrsoej3h5eX
h+fzfHWlFavLQwRBaPj1/f7jW/PndYm9Pf6tk00nPcFZFnOWrxpeGHXBE1R+
sfL7xwjl4Xbe94qjzlN9TeM3PB3S7zcgnmnQffI9u81+WJx2hipdtge8/yYW
XT5ysbjtId+Pibnd4xZ14yP2AXG19XGFHHjKflxsubR2dNmH5+ynxIJd65/v
v/6CvUDXPKVvFDdl3s+golZf11dVN9+H0Kzj6+5qO9+yD6UdRcZ8X5mffRip
JhN6HO3v2SvorH77kShTL/tw6ulTf6sd72c/i04MVl9wagfZK+lO7V5rfPMX
9hE0cchzLJA5wl5F1TvSbvk839nPpo2X7B2qxjH2kVSRu6+5yxngfSSFnfeP
TKZP8H0ULTlWU3d20zT7aPIqHdssn4W8oI+mDSvLawpfhuQF/Vza6rhyb/Nk
aF7Qq2m3pmVo7s6Z7NVUWDBQfS1RyT6Gng1PDbQaVOw1dHRo09J6ZyR7DZW6
EnsV4dHs51HxubjOGSo1+1iaeDTkvVugYR9LP5rLFO4nseznU7z2zpb60wvY
x1FC/kDdweta9nF0aNErf/ccHfsFtNi3orAkoGcfT97tbW81MSns4ym55Ko3
p9LIPoE+fO0/oI4ys9fSnvuvY96FWtlrqdZUZbh42cY+8e8c9Emw/zcH75PA
68DrwOvA68HrwevBG8AbwBvAJ4NPBp8MPgV8CvgU8KngU8GngjeCN4I3gk8D
nwY+DbwJvAm8CbwZvBm8GbwFvAW8BXw6+HTw6eCt4K3greAzwGeAzwBvA28D
bwNv/39vtsO9/X9fBV4CL4MXMqGfCf1M6IOXwMvghSzoZ0E/C/rgJfAyeMEB
fQf0HdAHL4GXwQtO6Duh74Q+eAm8DF5wQd8FfRf0wUvgZfCCG/pu6LuhD14C
L4MXsqGfDf1s6IOXwMvghYV/55/v1zmr
       "]]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzHtMjXEcx/GnlHSkjkqFLk6nU+fWuXXqnPzh+dZJQ6wLx2UxxjJ/UDb8
0ZrRhrkkbHKJFcaWp9kcMrQla5jIZc2DzS1y5m4dZ2FMyPmO+fy2Z8+++76+
b9XSqrKKYEEQ9vz+hv/43H/eVXGyIqEmdmt9fmCWxYU9yi1FQ835AdUnfq8z
mrvnneS9V2zffcI067Mnv1Uafm/FyoKjzfqu8+wHxHMz8qZY8y/x/pNY+X7g
neNiF98PirpzCxXTjl1j/1X0d1gbt/pusP8mHoyf3x/RdYf9DzHH5dO9bOhl
L9AyX2/b6AMy74MosrC+eP3gQ74PpoKw3JiOI4/Zh1B75PLuprl97ENpUb26
JPXQC/YjqeTR9bPXk73sR1H3TmFN+etX7MMpyX/fYg9+x15BTl91btKGj+wj
qPDjzcOywcd+DLn7wo+0lPrZR5LnQHP5Ns8geyU9qSkrCSn6ynslffm5/94b
x3e+H0t5xVG5IWuH2EeTd3FDrzc8yBXw0dRZHbrXPnqEK+BjqELpLD/jCnUF
fCzdneO+Un05jH0sudztz+9vUrAfR1UDeet2NYxhH0fxT1csulCrZB9HuyNO
le5YHs0+npqa66oSa2PZJ5DXM73H+iCOfQKtbBt4vH31ePbjybwg3Fs7J5H9
BFoi1J127kthP4HKbFMrQ5pU7CfS5pZZN7Ib1ewTaa57hbH7loZ9InWuKlwy
06lln0RDs1cWyh/07JMpqv/47Wf+TPbJNDJIvtWqMLNP+TsH/CTY/5sD95PA
q8CrwKvAp4JPBZ8KXg1eDV4NPg18Gvg08BrwGvAa8Ong08Gng88AnwE+A7wW
vBa8FrwOvA68DrwevB68HrwBvAG8AbwRvBG8EXwm+EzwmeBN4E3gTeDN4M3g
zeAt/+/1Fri3/O83gpfAy+AFK/St0LdCH7wEXgYv2KBvg74N+uAl8DJ4IQv6
WdDPgj54CbwMXrBD3w59O/TBS+Bl8EI29LOhnw198BJ4GbyQA/0c6OdAH7wE
XgYvOKDvgL4D+uAl8DJ4wfl3/gVFqSGM
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[
      0.01]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[
      0.01]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"metabolite titer\"", TraditionalForm],
  PlotRange->{{0, 24.}, {0, 4.543283462496212*^15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.924531761034882*^9, 3.9245317776036587`*^9}, 
   3.928706965722608*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"3ed2f654-7045-411a-885d-f3ac82ec4140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hypkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hypkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hypkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hypkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hypkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hypkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hypkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hypkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hypkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hypkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#b4acdb\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#8c7bd1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#6446cd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#4725b3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#33148a\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9281983080015097`*^9, 3.928198349389222*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"86f889fb-e373-4c34-9d14-f46acbb1fe11"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIk3EUx/EnL7mVlXNuKy81N7e5Oae7uaXRc1opIZllZYV2tZVWkmVE
lpkE0YWyzBQkkohKevSFQQUVVL4ozRxB8BDdoDf1IoKirNZA7Hbo8vvDGIfz
Od9XT/r6bWXBKEEQWn/8fv7/8/RrzkUFlv1698SCzuNLJkoxPMvinmmrGmPe
jQ/8pq/EZ92JdWO1St6/Fu8WKG9aPPGBHunneysqdLfrzxdPYf9BPPJ5Y2N7
hYr3H8Wzba7W0iI1338W2/0NQWuNhn1YjG7qjGiGdewjYnVf9iP1lmT2o2KK
021XlaaxF+h+vjPuSqGe9+NocfPGh33xBr6Poi6NQVcdm8E+ht7Yn3f6/Wb2
sVSnVrYVX85kP57KewfEwYos9grSfLn3KVDpYK8kr0M/uv9FLvsJpOg/NDL7
jot9PPk2h4WI7GE/iSae+lZx3ORjP5mexG0/oLw2k30CBUbsaeLJWbxPoI7R
cMh2Q+R7FSnyHzT1dc1hn0ilp491jXXMZZ9Ih3tf7j46VMheTdcboopqaD77
JHKpCo2vIsXsk8ie0K3dFy5hr6GDgwu87y4uYq+lE1stlwaby9hrqW2vY8m8
Y0vZ68jQZFpbGipnP5WCq1PKHpesZD+VfOqWr7W6SvbT6H2ovr8+fw37ZBpq
7GkJLV/HPpkuVJ27Gx2oYp9Cw0f6uw9tCLJPJcXT1WdmD21in0r3V1j0dTs2
s08jy86FsQ3BWvbTaczq114qr2M/nQZMt67umrmd/Yw/M3/6sP87/77Xg08H
nw4+HbwBvAG8AbwRvBG8EXwG+AzwGeBN4E3gTeDN4M3gzeAt4C3gLeAzwWeC
zwRvBW8FbwVvA28DbwOfBT4LfBZ4O3g7eDv4bPDZ4LPBO8A7wDvA54DPAZ8D
Pvf/vS0X7nP/983gJfAyeMEJfSf0ndAHL4GXwQsu6Lug74I+eAm8DF5wQ98N
fTf0wUvgZfCCB/oe6HugD14CL4MXvND3Qt8LffASeBm8kAf9POjnQR+8BF4G
L/ig74O+D/rgJfAyeMH/Z/4OYNdo4A==
       "]]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0nlI03EYx/FfmqKh1XR2eG5zzukO55xbF/2eVppTstRalJZ2qBWmJmWg
GCZFdPwTkgmVmhnVb/VXEZEgUmTnP1G//ijLdUmHWNiJlZ0PVp8vjPHwvJ73
Xz/16orcYh9BEPb//P36/+epCtt8nEt+vytiqquo+ezpsTzL4tNhZZf03t/5
h3rF2u7M/s6aQN4/F912Q5XGFeT0SL/eK3G45MGNjJIJ7N+KK5Z+b29cr+D9
kFj5PP9jR14o338QS58cKJu9JYz9Z7H9bl3rPnky+2ExbnvJjou14ey/iZ+L
dlz1rYhiL1CmtbR+ZYGK92OoYedURYxJw/c+9OJmz9cMs5b9WNqzurDyxjod
ez+qrm2utnv17P3p9aueVnOTgX0AGQd9amKOmNkHUlpEQNPIFwv7cVTvPly9
qtfKPogGyhcWdQ/Z2AeT58un0n6Xg/14epj06UT54HT2E2n3ZlVHft8s3k+k
kFvX1zYqiO8VFOWf4r32eA77EDqptLcNPprLPoTup28bmK1IZx9Kw9qZx1fW
ZbBX0vlTz9JyjFnslXSvt8XVZ8xmH0bOgXMZDZcWsZ9E2jsL/N4czGU/iYLT
P2YfO7qY/WRS5e+986bfzX4KlSS3Ni2vWMZ+Cl1uzfKEuQrYT6WWd2NGLGWF
7MNp66LHL2dUrmIfTg8WOnY15K9hH0HvfMsrvHXF7COptmNgyTy5lH0knRnf
F19VtoF9FK2vCrjdmbORfTSFdrm1F+ZXso+mPP0hT+OcTexjRmf+9GH/d/5z
rwKvBq8GrwavAa8BrwEfCz4WfCx4LXgteC34OPBx4OPA68DrwOvAx4OPBx8P
Xg9eD14PPgF8AvgE8IngE8EngjeAN4A3gDeCN4I3gjeBN4E3gTeDN4M3g08C
nwQ+Cbzl/32iBe4t//t68BJ4GbyQDP1k6CdDH7wEXgYvWKFvhb4V+uAl8DJ4
IQX6KdBPgT54CbwMXrBB3wZ9G/TBS+Bl8EIq9FOhnwp98BJ4Gbxgh74d+nbo
g5fAy+AFB/Qd0HdAH7wEXgYvTBudfwDFrkzB
       "]]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0nlI03EYx/FfZpLS5TxmatMdzm3ObbpNHZW/p3WQkliaknQsNSuiw04r
/KND/wkqw5IysBQj+q2yLPIvSSytdUBQvzSCSMWQNIguOozKfLD8fGGMh+f1
vP/6qYu25ZT4CYJw4s9v5P+/F+s57+fO+/s6xELF3h/eq/48y+LSnXcbez8F
uEfpa7FWqYjylgfyvl/MG3qeeTRritsrjby3YkRdr/1G6XT278WVvmy9qjyY
9x/E1u++ae7dIXz/WVSvrTwt1oex/yoq92xytAdFsP8uXizralvVEsn+pzh5
/dyY4Muz2Au09mR7QVV5LO8nkMrovX8lW8P3fqQMOtOzL1fH3p/MnXX3zNV6
9pPoccbUr9owI/sA2u/qGT7VncB+MjVYXGkNryzsA+nO4cglt6OS2AfR8MP6
EOWXZPZT6PKyrtVF/k72U0nx3ut4lJXKfhqlP+k/1PPCxX4GrXhRrX/XNIf3
M2jrM4+ur0vk+2D6qG675PTOY6+gquYwP1ftfPYKam/Jzsq+u5B9COWmX7dN
tC5mH0pS2uCA+00m+1C67vPZK4ay2IfRIq3Bq7mwlH041T0oOHatMod9OB38
tfHjgtrl7JU0sFk96BzIZx9BjevOrXy0rYB9BLUMfKuJnbuK/Uzqy88MvLXG
wz6S0op3xT/dUsg+ksTuJ8PNnmL2UdSUURa4+0gJ+2h6Gd2qKvywgX00ddys
6Txev4n9LKpKD6+g2i3sVWQ6ag1as6OUvYp6z84+VuHazj5mbOZPH/b/5tH7
WPBq8GrwavAa8BrwGvBa8FrwWvA68DrwOvBx4OPAx4HXg9eD14OPBx8PPh68
AbwBvAG8EbwRvBG8CbwJvAl8AvgE8AngzeDN4M3gE8Engk8EbwFvAW8BbwVv
BW8Fbxu/N9ng3jbeHwAvgZfBC0nQT4J+EvTBS+Bl8EIy9JOhnwx98BJ4Gbxg
h74d+nbog5fAy+AFB/Qd0HdAH7wEXgYvOKHvhL4T+uAl8DJ4IQX6KdBPgT54
CbwMXkiFfir0U6EPXgIvgxfSxubfRb5x+A==
       "]]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0llIVHEUx/GraKloOY7mVuY4MzquszmOqXSPtkiLVJIm7loiqZVmPbQQ
ZTHZg0IGJYZmC1JXexAVKgaKyCgNheimEZGBhRpBmllY2Xqw+v1hGA7nc75P
V1W8J73EURCE0z9/v/7/ecEFrY4pGb9fr3hLUVVb0eHEsywO7XapiX+3IOUP
HRFP2vRZVOXK+9fiyNzG+6p495R26debENe5Zb+6uGEx+/fitrLERnWOgvdT
4vDj3JpHpOT7j+L3zjRbTZ4P+89ixxXtmMnuy35WvN5y9e1MSQD7b2JA4Pny
idxl7AWarlVv798SzHsHisroD/dQh/C9I7X23ht0CNOwd6LSHv+a48Wh7J2p
4WZh47enOvYLKNvSFuhcF8nehd7sb27XN8Swd6XBM1ava58M7N3ocsJTt4VP
TOzd6VjDpTu20Vj2HjTds+/EnMnKfhF1HREHpuwr2HuSxV2ZOFyXxHtPato1
1qdoE/leQQl5Y1WaU8nsvajN4PXVY+8q9l5kLc+83Vy/hr2S1rbnWO3jqey9
aUXRl0Hv+vXsvenZQ5fnnYfT2PuQNq7zYmX+ZvZL6NKL6oS66HT2S6hpdFeu
0riVvS9521MnbRWZ7P2or+Du5JfxLPZ+1D1seLC6PYe9P608u2P3BXs++wDq
rh6pbFEUsQ+gBnOh4DNTzD6QziXZPiQvKmG/lIYSNbnNxaXsl9Khsv0HB2Z3
sl9GXepNpdkvK9gHkXFo7kCZSyX7IPKYdLvRr6tiv3x+5k8f9n/nP/fB4FXg
VeBV4EPAh4APAa8GrwavBq8BrwGvAa8FrwWvBR8KPhR8KPgw8GHgw8DrwOvA
68CHgw8HHw4+AnwE+AjwkeAjwUeCjwIfBT4KfDT4aPDR4GPAx4CPAa8Hrwev
B2/4fx9hgHvD//4oeAm8DF4wQt8IfSP0wUvgZfCCCfom6JugD14CL4MXzNA3
Q98MffASeBm8EAv9WOjHQh+8BF4GL1igb4G+BfrgJfAyeCEO+nHQj4M+eAm8
DF6wQt8KfSv0wUvgZfBC/Pz8A8FEVCo=
       "]]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0nlI03EYx/FfUiPDpW7Oc0t3uM3dm9N1kL8nzYroWheJZWVJjYwxkPKf
UCK6yKJsVliSYkS/TkgiKv+oMEohofqREB1QVpRFrALJFl0PHZ8vjPHwvJ73
Xz99dXhhTYIgCPt//H7+//PyVh5PKF3y6/WIt+52TXddGM2zLMbnar1Zw4rS
3/SZePXxvnPDDYm8HxSjtTteGucmlZ6Wfr43Yt7Z9uu2mmT2H8TMbmNbWyiV
9zFROFjhDgfVfP9ZXLh1ielURMN+WFQpLSU9DzLYfxGT0xfrh+qy2cfFqhpV
3F+hYy+QGAr2izPyeD+KBt+GnmxTGvg+gYJJpnRHgon9aDq0fX2sx2NmP4bW
9HY1FbVa2Suocvb9W13ldvZjqWHLeM3rSS72iWS5cmLWi+se9uPo2tD5va8O
+NgnUfPuh31non72SqrLdSQ29hezH0+HIzvfPS+bxD6FVs+Mp534NoX3KZRa
Mq9vj0Lk+1RquXOs7LxvGnsVjfgP7m1KKWOvooGOluxOUzl7NX29XNl5pm4m
+zTKzWoeaVHOZp9GoW0NrSMf57DX0BFXIHJPs4B9OnXn3Gy1Pw2yT6f53W96
5z1axD6DOjpC5gLVUvaZFI3FxkZ2LGOfSc72+upoaSX7LDp9dMpy7fwq9tkU
rFcoNgysYp9NuzbWNfVeqmafQxd1gTmTb69lryVaUVPiVa9jryXdzantwbYQ
ex1tbvbbP4Vr2U+g9zfUJ19Gw+wnUHvTSN8mR4R97p+ZP33Y/51/3+eB14PX
g9eDN4A3gDeAN4I3gjeCN4E3gTeBzwefDz4fvBm8GbwZvAW8BbwFvBW8FbwV
fAH4AvAF4G3gbeBt4O3g7eDt4B3gHeAd4J3gneCd4F3gXeBd4N3g3eDd4D3/
720euPf87xvBS+Bl8IIX+l7oe6EPXgIvgxd80PdB3wd98BJ4GbxQCP1C6BdC
H7wEXgYv+KHvh74f+uAl8DJ4oQj6RdAvgj54CbwMXiiGfjH0i6EPXgIvgxcC
0A9APwB98BJ4Gbww8c/8HSMupWo=
       "]]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0llIVHEUx/HruODIaC7jmtqo4ziOjjqOW2bdk4bagqEgikjuZZaapCAo
YlP0oqWlLeBLT4HXCh/CENRILAIRK7pFtBCmoTGUGpMhKWUeLH9/GIbD+Zzv
0w0pr8+rUgiCcOXPb+P/v6cpuaVIz//7HouFr2x56kEHnmVRvWZzuL7ilL5J
P4rXGi93dVuUvJ8TR/f1TvfmqtIHpI33RXzX0XrSuXYH+0VxOuzs6q9aD94v
i7WpFz7oCrz43iYe9z1tbWrxZv9THOp5YrJ/78t+VdQOrAiKtgD2a+KPvgea
8Kog9gLNZloWMo5qeG9Hpj3f3Mr8Q/leQbrg4qUEXy17B6rTFM7PHdKxdyRj
X1OW/pGevRMZvlZVHLFEsXempbX84eYbMeyVZEl7O+XqaGLvQneGlAr9Yjx7
FbVmtI1KqkT2rmSrmZXHKpPZu1Gc7FJpU6Syd6fa129ablvTeO9O4ytFWqWa
+N6DJkusufaf9rP3pJqcTkvafAZ7T7roPu3fFZnJ3ovMfp9LS/uz2avJaf2F
qqbhMHs1rfcUqMs7cth70/z9wkqrIpe9D7kHnbMalvPY+5C1ea9w1TufvS+N
GPv1M3UF7P1ofcbY7upcxN6Pzh+snhiaL2bvT8+zlAvP3ErZB9DDGQfB+rKM
fQDZGSbGn05VsN9JC8d2r/SuVbEPpKTslLHsymr2gWTu6G5p9DjFPogmTzR8
71TVsQ+me3Z3b14aPMM+mIbr03QjBxrY79qa+dOH/b95814DPgR8CPgQ8KHg
Q8GHgg8DHwY+DLwWvBa8Fnw4+HDw4eB14HXgdeAjwEeAjwCvB68HrwcfCT4S
fCR4A3gDeAP4KPBR4KPAR4OPBh8N3gjeCN4IPgZ8DPgY8LHgY8HHgo/bvjfE
wX3cdt8OXgIvgxdM0DdB3wR98BJ4GbwQD/146MdDH7wEXgYvmKFvhr4Z+uAl
8DJ4IQH6CdBPgD54CbwMXkiEfiL0E6EPXgIvgxeSoJ8E/STog5fAy+CFZOgn
Qz8Z+uAl8DJ4IWVr/g0msUD8
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7058823529411765, 0.6745098039215687, 0.8588235294117647], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.5490196078431373, 0.4823529411764706, 0.8196078431372549], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.39215686274509803`, 0.27450980392156865`, 0.803921568627451],
       PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2784313725490196, 0.1450980392156863, 0.7019607843137254], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.2, 0.0784313725490196, 0.5411764705882353], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24.}, {0, 1.1866820044229827`*^12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9281983503251333`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"6d63eab6-1fb1-4686-813c-2bb56e4d7334"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9281943125581245`*^9, 
  3.9281943130228243`*^9}},ExpressionUUID->"845a1943-c0ff-4a6f-bf35-\
697a8be57cab"]
},
WindowSize->{1904, 997},
WindowMargins->{{Automatic, 1288}, {Automatic, 0}},
Magnification:>1.4 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 837, 17, 69, "Input",ExpressionUUID->"69370e93-a15c-4bb3-984c-fe8b9c40f1bd"],
Cell[CellGroupData[{
Cell[1420, 41, 4047, 109, 181, "Input",ExpressionUUID->"f9d61a38-2ae8-4301-9978-98c3570d688e"],
Cell[5470, 152, 131872, 2369, 368, "Output",ExpressionUUID->"81c45f3d-a1d2-4de8-9896-793611967421"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137379, 2526, 3919, 107, 181, "Input",ExpressionUUID->"c405cce8-77f9-4c39-8ecf-9ef9857f465b"],
Cell[141301, 2635, 140568, 2513, 351, "Output",ExpressionUUID->"d25c4d2f-e558-4146-8b48-77ef02b61526"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281906, 5153, 3352, 89, 181, "Input",ExpressionUUID->"a3d9ddfb-d57a-4e67-921c-7061f602a4d7"],
Cell[285261, 5244, 136763, 2451, 362, "Output",ExpressionUUID->"272042cb-5948-434d-9f6d-0f19d948577f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422061, 7700, 2416, 66, 125, "Input",ExpressionUUID->"f8f1abe2-d78f-4630-a097-cbaf63a90f49"],
Cell[424480, 7768, 58564, 1137, 376, "Output",ExpressionUUID->"e9f3677f-c7ae-40d5-b9a3-e5beb0e61bed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483081, 8910, 2759, 71, 153, "Input",ExpressionUUID->"611db49b-7a9f-4efa-b79f-159affac3597"],
Cell[485843, 8983, 58909, 1146, 376, "Output",ExpressionUUID->"7c0d4205-679d-4d63-9f6a-921ec5c0d31d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544789, 10134, 2423, 67, 125, "Input",ExpressionUUID->"e31c2af3-2e93-46d5-81fd-722a3bc15108"],
Cell[547215, 10203, 59865, 1186, 364, "Output",ExpressionUUID->"99f3bb4f-0325-498a-99ab-ec8d51fa5421"]
}, Open  ]],
Cell[CellGroupData[{
Cell[607117, 11394, 2009, 51, 209, "Input",ExpressionUUID->"03d2bfb8-5b2b-4e1e-967a-05a20f5220de"],
Cell[609129, 11447, 29935, 649, 330, "Output",ExpressionUUID->"340246a1-535f-4bf4-a4fa-793279059347"]
}, Open  ]],
Cell[CellGroupData[{
Cell[639101, 12101, 2009, 51, 209, "Input",ExpressionUUID->"226ceb86-9f20-421d-96fc-dc7915866a5b"],
Cell[641113, 12154, 29942, 649, 330, "Output",ExpressionUUID->"4a52e01f-abe4-4113-8ccd-4bd4bbaa1a3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671092, 12808, 1724, 40, 181, "Input",ExpressionUUID->"0708d296-8a1d-44b2-821e-1ead048c3dbf"],
Cell[672819, 12850, 40616, 876, 331, "Output",ExpressionUUID->"473bf1b0-572a-4b6a-8462-00e3d31b91f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713472, 13731, 2129, 51, 209, "Input",ExpressionUUID->"25466ea4-a3c9-4521-8474-6f08be554e32"],
Cell[715604, 13784, 12223, 251, 368, "Output",ExpressionUUID->"3ed2f654-7045-411a-885d-f3ac82ec4140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[727864, 14040, 2838, 75, 237, "Input",ExpressionUUID->"86f889fb-e373-4c34-9d14-f46acbb1fe11"],
Cell[730705, 14117, 12280, 248, 309, "Output",ExpressionUUID->"6d63eab6-1fb1-4686-813c-2bb56e4d7334"]
}, Open  ]],
Cell[743000, 14368, 156, 3, 40, "Input",ExpressionUUID->"845a1943-c0ff-4a6f-bf35-697a8be57cab"]
}
]
*)

