(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    785624,      15364]
NotebookOptionsPosition[    782236,      15298]
NotebookOutlinePosition[    782610,      15314]
CellTagsIndexPosition[    782567,      15311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hmpgen1", ",", "hmpgen10", ",", "hmpgen50", ",", "hmpgen90", ",", 
     "hmpgen99", ",", "hmpkeep1", ",", "hmpkeep10", ",", "hmpkeep50", ",", 
     "hmpkeep90", ",", "hmpkeep99", ",", "hmpmem1", ",", "hmpmem10", ",", 
     "hmpmem50", ",", "hmpmem90", ",", "hmpmem99", ",", "hmpkill1", ",", 
     "hmpkill10", ",", "hmpkill50", ",", "hmpkill90", ",", "hmpkill99", ",", 
     "hmptyp1", ",", "hmptyp10", ",", "hmptyp50", ",", "hmptyp90", ",", 
     "hmptyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hmp500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924095044383809*^9, 3.924095070273879*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"449199f9-8078-40ca-b217-387502c75c54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1300"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924095145186079*^9, 3.9240951997994895`*^9}, {
   3.9240966283257637`*^9, 3.924096672524784*^9}, {3.9240968641088347`*^9, 
   3.924096932155492*^9}, 3.9287100581390877`*^9, {3.928710096194985*^9, 
   3.9287101129533625`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0603c68f-7b02-45f0-8511-cfa867ca212f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
Jv6vOyF6V/9//T8xpth4
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
M/B/XDLRv/r/9f8BhaAcww==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
//npw/T8/8X/A8eS4RY=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxle2c0F27YP7JF9t4kZa8Qfa+LrOy9955fe++toaKkUoqUUURUvzSsjDKT
GYVSSRKZCT3+b/7nPOe539znPtf8XC8+53O9uIXcg829yEhISKj2kZD8v/v/
nNU/bYlrM3DrdlkGn8Q7QsqO0luKrj/gvPOF5rzREAFTlF3v6lPgDf+HeX7J
wwQSsqHRk3X0KPDV66BKywhhWuO/8nU6Fqx/5jhdyjJGaE7L8tADDuS+7fby
UvQ44VabpcC1MB5s6qpKqvr5nuBKLjLx444ASudqF7dHTRJulcZ0Fy8Ioebp
aepGlo8ExjaXSl1KUfzMma0S3j5FSPmsk70kIIYl1Lt1JzumCUv7pL2uqorj
Ox6zVYFHMwRTUbYTmhZHMLezNKn8wSdCs9a24I9ASawxqzDRf/yZIOv1efdi
ljRuh11pv/Z6ljCg6UXkN5XF49vyY4LzXwjU72w//HaUQ0f9AWkHzm8EFQ9D
w04/eVxdK+Dvs5wjhKzAs6IoBbzWRr2P99Z3QkW6wpGQdEUcuW/4tmlrnjDN
cuiq1gUldDQMJo3yWiBwlnFTc904ihoXe+OeT/8k6CkyRP+sVEafSwm1kkG/
CCmvSL+2PFbBljyPJy8zlwj/Wa5ZXm5TxYyjV6mlnJcJS7Nzbf4DxzC+3ldZ
EX8TxCMn5eGDGs5w1m4oS64QXCkGSljm1bGB5KPTOeFVwoWCNsa59ePINsXh
lCuyRug6+CT5+T7AxZrXccUy6wQSB6toPWrEktEYlNDdIPCK9Nc8PIfocX3g
V7r/JkHlh95XXjYNvDuwco/z2h+CaX0rX3aRBpL3ZRTaj2wRAuPVrZaFNFE5
nsykRmCbkHPi8VmHCk3kb/K/mR21Qyijk33VLn0CqX9euuA0sUtoflf5V+bR
CSyNLA00OkQCY0UiCtfUtDB9v1WT/RwJrHrc8Cdv1cL4X7KKrHWkwCjJUUrU
08b7x4+JvUwlA8nVC+NjfdpYGpzvnGe/D/Se0zKdsNJBetUXa2/VyME1I0Ov
ekIH7U0YhBsPUkCC4W4yh7surilzal7gpIQrrDFPUud0cWypWPg6KxU0TC4v
/iDq4aZ5db4QNzUMlAWIWa/p4f52H2vPwzQwF/jFqTn+JBIOvS2o16QFciWX
giNk+qhWWONs6U0HgjtjPZdy9JGvmJIq99J+UG83J//HYID6+0es7/fSg21u
j5pfgQFuHjm9uc50AEKsdMLf8RjiKlfs00+yjHCWr7nqeKkhMqtvXnzwkREq
vqh+Khc3wq16qrHT+Uzwqrqei/mBEaoN+RsXGzLDdKSUWYKSMT4PbqBipmeB
zePlOV+fGWPNvdeJTEMswEop1GyqaYKrLQdfvyphBdm+axuNXSbY/S7d3CaK
DcQMThfmHzJFby3fhDUzdlCU0a3v9DfFWM4XM12KHIAs5P3b1aaYIFsQTyLA
CcYbzfNyy6Z4c77uYicjFzhOJFL6KJrhVW3niJO03ODfdEz4erQZ8nnkxj+k
44GY2xvH3zaaYULKEws5Nl7IyG6wo9w1w3Kmq5c2xPggPyA0Uk3DHOdMP2dI
a/DDLRPpvJAMc+zYOJ5H6ykANQo/7t/pNEdf65b697qC8Jyjous9rQW2M+cS
ZD8Jwpu/nrMHjC1wypfDiC9VCEamhEi08yzwwNdvSY2iwjDb9pEnbsgCA+S/
lwr0CsPv8iLlBxyWqPhH+oxHnAiQnLW1mLW3RN/n3hU3JUWBIYQtmKvYEulD
7UwXPosCt+XgaeMZSxwtdRFzv3UQxFXO300XtcJlVi49TncxOMpr2PqfjxVm
Xf43fOjwIdAiofn4s8oKIyZy2CrXDoH5bPsf4UUrnKzz8KnvFAfnrjQ2Wzlr
tKRtueB88zAE3ge53AhrPHR837u2hCMQd2HbsPWJNT4d6lX86yIBORFPfTe2
rHH0M/86z0lJuGwblSFJsEGtQnF6gooUlKor3HJLtUH+Fpm7cVLSUCu49Ozy
KxvstIoWmROXgZfk1aPdVLboyv07yphNFnrm/FZIDGzRS9jgpu1VWXjfI3bg
6DlbXNKnbL0hKAdfaz8fCXhri/GvhKcP35OD1Uu3dG6x2qHmzOdFSlV5IIt1
ch+2sUMx+9AYfCMPjE7cSbRFdtgudnV5xlkB+DVGr8JHO3x31tV0bV0Bjhy8
9ChCyB4Dzdw7MvMVQYXG7G2lpz0ePquYfkNOCXR+0v/8WG6PLYesv+oMKYHl
2zfUrD/s8bzukaXTcUfB/VG26ElpB+y+dyUrXFQZiFe1MCnUAVvlF6JoB5Uh
IZHUsb7BAesme2/ZpavAabeX0XMbDvjf+Dy3n4oqXNGOv8in5ogVLlxamsuq
cPewygPzJEfMklsLWag+Bg/p195ktziiY2DqgxCiGjQv1319Tu6Eti2QPyKv
Dn3DRLLfuk7o/6KX+uBfdZh8KsF/6IwTLupYUnh0Hof5G3Oqjn1OWHC4Y6Gw
kACbqXes8picMeaExOfXAQDk3u6hHZbO2N69rPtPCIFZXyD3b6Ez/ilpMuG/
gCAoPVkhO+GMlMt9alokGiDNfPWVF78LivoGpIaHaYD6utX0NTcXvHMiIKbm
qwbovWfe7i9zwe3KzoV1R02wfdnPQTHngmzHihuNhzVB3qyD6wabKx4Obzd+
YnICVNrKypWVXfEFqdp3uZ4TgErpSoO2ruhA0/urSV8LdMrd2gLjXHEsUYjf
vVsLjLnQjOq6K3p+mnzHaawNlmf4p0peuKILi/mz2UFtsN/ZDlSfckWex0vJ
7XY64B48sTVC4oZjBl3fGj/pgO/M05xQYTdU8WX+/SpIF0IsrrDv13LDOmul
pk9buhDVHlV218sN1ybVOVlO60GCspW8RrYbGsxujlnynISMSoXmiQo3VJ0m
eN+tOQmneZiNo964Yf4k7TCFlj7k5y5NMC64YX3eI6nQCX248q/P7x69O+r3
+dF+jTCA4tDqDW0Zd5x4fSLbjdEQ7n4+kzlt6o7Uw7Ht09WGcN/KnyU+zB1/
yBzwcTUygoZOvRK2S+74ovSd0IdFI2hUPSRT+8gd69/1njXPN4bmexQv9Efd
0UE7/dNzZRPo4pvV/7LpjjYyR8M5pkyg73zrWDK3B9KnidyV1jKFEdISb251
DxyJTxt8ddUUJsOTVxucPFDoTH+owZIpfPrilGaS7IGVXDI1TbpmMG+jzjh/
ywNpfp2r4L9lBkuvuYszWj3wAJ2rlNcfM9hU+yMhMOuBOZfZS85bmMNu9ejT
pxSeSPEvuPlajTmQCz7WtTzkifp/OX6n0VrA/vxLw4t6nsgwnB2l5WMBzOTh
Hqf8PVGtYcJ54pUFcEeZLYuc9cSKvo5bJ0QsQXBOJvlltSe2FjwTiU2zBDF7
Bnq7fk9s1Kbyiv5kCdI9C9dWljyRJHB3/7ETVqBI6BY/x+yFjIWNAc/LrEC9
tvKxuKIXdt768PQPpTVoCudotVl5oezTSIGfftagd8l70CnaCwvPUt3O67UG
U0pt180rXkiWd21nRs4GrGNEFvMbvfDrbYqNscs24DxPmiA16YUsSzI8ods2
4Ok4TdO144X8fNPTZe624N/3stBdwBu9tEL7ia9tIQxvHNxBb3Qowb4uWTuI
eRhfX+jujZ6VpQLVV+wgRdReQz7DG/9jV1lmI7WHrMsq/T13vDGcNmV9288e
zlJzOPl0emO67+s5h3f2cClubZ70uzc2fVy/LHncAa4tvIu5TuuDN9jNCn3L
HaDU+SGlsqQPqiwVuNIwO0LFwIVLb418MFWe1os60RFqNYOFA4N9kCr4P0qX
OUd43GBUS5nng4UyWqcoLZ3guZgkoeShD/Kw/NnaaHKCV1doe9SGfPBnOvlp
SUlneEP73W5kzQdfyhFO3rjiDIMJnd9COHwxs+Eb2wkKFxhbvBNJp+qLKx8c
ZtjDXOCja8a+u/a+ODu0U8E05QJfB93zMMEXHaj/UbKLucKClobAxA1ffMkp
FPHA0RVWHwtURzb5YraeVo7ZRVfYEt89xjjji1+Xyy9svnYFkqLJrioyP9zm
9v9wi8QNqOmfWWuL+uF4ndlrHWU3YEi+Ojul7YfMrMllX4PcgH05OizOxw8P
1V18kFDmBrwe1iRsp/zwguIBpJhwA+FhxXMPqvxQhpd4I4HJHY7osvDq9/jh
xttd9ildd5B9ulw5+9MP6ezGN8WT3EFFYkA5+YA/SvqqXLBucAfCjZp2Ljl/
1MwyUvScdwetA7kWDeb+yHCOVdpY0AMMUwNmjCP8kbG/YJTR2gPMV04Gfy/w
RxNn8qSKMx5g7yW+k/7EH/HJrUSmFg9wHaU8wz/uj8PDlOp66x7gffIL59Mt
f3z+of7QSQlPID5ru2vBG4BfF3/dZnT1hAipUsXF4wHoUVDDU3TJExJuprTm
uASgya8Vhi9dnpDG5GIqkhqANse4due3PSEn/fjHF6UBOHLsWmSlrBdcWOMJ
tH0VgDp2h8n4PL3gss/Wn99fAlArZJGgWegFxeNj2blUgUh+VaCb7Y0XlBk8
YRM/HIgrrLPml7a9oOpFwe1W/UB8VPLyfKO0NzyUiZBzCgxEaNc6kenqDf+V
mDdt5Aai1Oh7WM7zhmYWOaP8B4F4Mp7f6m+rN3RkHpiQfBuI/lZBPrdWvKFn
46dv5+9AfLZ5LfCDiA8M+fWsu7EGYUzBK+cHFj7wfqIqY1spCDNP1WmwpPvA
J6NTzIU2QahvXqtK+dAH5pp8bsnFBiGx7ZdT5rQPLMrpSPdcC8IpRvnJXAZf
WL8t+tz7eRAKMx35w6vuC9ts+/RJPwYhyzPTfbJ+vkCeMzNa9C8IIws57F4V
+ALtVpPXUSEiPro6ajva4guMgcUrA5pEHPd0S/H+6QucHxNSAzyJ2HdIzC+Y
0w/4TR0OUGYRUeQZ5v3S9AOxVtUbt8qJeJM+6NJsoB9IKnJKqL0mYh1vhJzh
ZT+Qv7v+3/A8EecLxw+LNvnBMc5hnZD9wQiD+4z9v/kBnq4fopUOxrrooDTe
A/6gt53nfsckGKvfx9SoHPUHY2LIEoQGY5eqUf9zR3+wnDZOep8fjISs8n93
0/zB0Vxqf2RDMF6XscW1cn9wf0V37cBIMD6R1e240+MP/kfnD1VtBKPAUf/+
x0v+oGI5a1+6PwSJYreuirEGgFruu5JgvhBU+3w5duXonmDoaJ1Tlw5B1j7B
SR67AND8VydDCyHYwCxysDguAHRUSqJGTULw3hXu9zFFAXAy9MKLMtcQdCQ1
z656FgCGVcnkYaEhmFBR0y03EQCmn4kGkBaCm1SRyvRbAWDB65y//2IIXh+i
PqPGGQg2Vkbj47dDkCPIIvuZUiDYn1MXLG8IwcQknj9nzAPBqVPCJ6I9BDsH
o57eIwaCGwlPjcZICPLtnq3mOh0Inqq0awzfQrCCwq5jqCwQfMP+qE1uhOCA
hj/J5MtACLg3l1ZJHYoUopF+0mOBQJwdfR3FFYr3tWfoupcCIYyvk1HrSCj6
fz1EWUcdBJHWj22Y1EKReWYibUogCGLP3yn+aBCKK4EvHlkdDYKErktf7jmG
Yl5t5jdmwyBIIc2QjA0KRR4DK112tyBIPxYerpMUivEXRqVdIoMgK9y9keV8
KK4XqP1ZyAmC0/fNSGduhqLsuAdNU1EQ5H5BvZraUDxdd6h7qDoI8vhlz8e3
hGL+Of56qaYguGQjMKI3GIpd54MIr/uDoPACAx/751DULy/8fXcqCIpe73h8
XglFC2K9W8diEBST/ayqJQ9DtrQZoUM7QVCqNrmcyBaGwzXlnV20RLgT0a1i
IBaGVzS1ye5xEKGiujGZUzkMOyarY3tFiHD/a2XHF90w5GP88l5GhggPBK7S
19uGYetN1l9vVYlQb5tjmeIXhjAhEVN/ggiP86KLjOLC0GfjjPyQIRGevvH+
xH0mDP9t8/1RsCLCi33Wh+eKwjDa+lbZoCMRmtW1Qx7dD8PA6XqeWg8ivIpU
fJL2IgyJp3dUe/yI0FkjsmvSF4ZadokrYsFEePONWZtvKgzZ1xKgOZwIfYJk
Z+d/hWH5Ih3zlWgivLVbHnxCEo4hFLfjauKIMJw/zZXJFI6DNHop+xKJMNbd
72ouHI7vKFGiMIkIE+RN5QIK4eizPVXkl0yEqeM1iwsnwjEzT2w1bu/9KeqG
UqNlOJJ6Mzt17/l/fXA2IdsrHMmYIqgc9vJ9n4tvs4wKxzN6LJJH4omwIBRA
K5wdjidWR+hUY4iwZG9v9qswHM/v/vqVHUGElYsnrzyv2Kunpi/FEUKEjR6V
qVNPw1HHkozvmz8RtijExWzehKO8cB/PpicRdggcQaIT4fhS0fmavjMRSGMo
G5Z/hCNNhSTDlDURyOvWtl5uh+P0Qan1R8ZEoJ6f1ThLH4HlghQT/dpEoBMZ
yrHjj0Ajam0TKXUiMDi29YvJRKCAANNKnxwRmAsesq9CBEr86Q14JEYEtr4S
pxbTCKwolfWa4SYCF1Ve2Tm3CPQm579rwUAEXkz54RAWgQd55xb2kxJBIDZY
/nB6BMob+jMzrASByEPn2PWLe/6Dzcs2s0Eg9sOoua0sAtliosJ+DAXBEdHj
VHmPIpBO6eTF16+CQMpJ0ti5IwItmHqMV+qDQPYyT4HEaAR+5c557FcaBIr9
tJOb3yKwK3fzh9SFIFCm3hLu2IxAf89XNBqJQaCm8d3vIk0kXvf6olvmFwSE
uLFaV+5IfEJ19JetVRBo1HduSElEYmuruL4rBoH2wmPCX7VIVMwsrXt2JAj0
Dt7N7DKMRLKRlvxA1iAwdC7oKXCKxKtXGj0jdgLBpDCDxYMYiRfiPO4PfQkE
84Fwe9nkSGxrfvfvXG8gWNN4lOycj8RwdcedsoZAsNM0n3tzKxLHr4UacRbt
8VW8hsyVukgk7mrVzqcEgmuDbJRXaySK37zzi887EDx+CryQfxeJJMlHP9fr
B4KP2AFyktlIfBPkHVIjHQj+Lrv6vauRKKjkcfoA8x5fXfmZd40iCjt/47Hx
1QAIfTs55sMehX7M80n0owEQQdsjoHQoCnOuPYiv+S8AYk488yZTicL9Yh/s
Xl4NgPiEqup+vSjs4V42gT3+Tn50dfW6XRS2e0SUKNgHQNpijpq/fxQ20nQX
31ANgMxDMWnK8VG49utfWTJnAJxy9XlNfjYKb7af4Ztc94ezV60ZB69H4X/A
kfRoyB8uDGrb3KyOQoVKaX2Gh/5wkU6pOPBlFDKJ3WL6fs4fCrVEv6j27/VT
ueiuF+AP1xJZJKmmozB53eubtK4/3HhMFj60tIdv1NPoprA/lPxaflpCGo0L
96qMru/4QZn4DEkwczQqzf6tEh/zgwq3AV11kWi0eN8qp/vQD+5dazpHoxiN
IxUdtVtn/KDmXc3wiFY0upC2Muh4+cHD/cW8ZVbRmM/YLCdJ8INH2rkeod7R
GElHS1/L7gdPkxKqCNHR2Jp3rGBo0ReePwlYpsvZy7fl1H69wxealuxVxq9E
44WYzRK6Yl9oO6yffLcyGtt/9CqJRvpCh7tqR3hjNLI/8c/7buALb4rE6TW6
o7FjteqNs7Av9A5xWDJMRuO3+e6NrE0fGKCnKppY2MvXCASvvj39o7M+U7ET
jax3FVq3b/vAWPIX8SiGGOwk3LtrGrunh/4bCj4hEIPZQ8OsnsY+8HG57TGj
bAzyzuqqHNvTT5+O1O98wBjMZE8kjGx4w6xHqdY9sxh8bG1vrdbjDXPX887E
uMegq0ztg8Bb3rAwnDKoHR6DviUv4oIivGGRIYSLJSMGH5bUf0M9b/it6+I6
fSkGWQJUxeZ5vGE9xbi8+s5e/f5lz8BfXrD19Phi3OO9+DrSt29avWD7t6SS
XmcMlncXFlBf9gISSd4EtrEYjP8ZOSHu5wXkXnRtn+ZicLo7vkta3Qsoi7do
av/E4HqOQjLfAS+gHf1umkgbi60MrvybM57AwDheqM8Ti89tc5tbGjyB8WTX
Rw7JWBx8VRqfmO0JrGlPDn5Rj0WZs7tO0vaewPnsbuBDo1h0+xsRMirpCbyr
BfXJzrE40OHWEv/PA/ilMrcMg2NRlzzciH/QA4S9IzS4U2Ixg5Ruf2uZB4jd
9Mj5diEW1aWTVv2iPUB8zLy/oSQWlaJ/zXHqe4AkkyZ72sNYbJI/1v+W1wNk
9eWcTNpi0eNHcHrhL3dQTBcs4x2KRcUoxTeBre5w9PmBH99nY5GWwirSssAd
jq3tyj1Zi8X7A7n6Zr57+4T0YkwGZRyWF3mReau5A/p8aDLjiMN1EjOtAoa9
/eJWD6WAeBwKt+vcm5lxA73xZ0YLKnEombgwZvTIDfSZ7116ejIOi7d5nSdz
3MDY4NpEln0cMqREPD3v6AbmGaeELQPi0Ed+2ctf1g2sX8T4CSXE4ZnT3W+J
5G5gu+5Tu3g2DvONflveHHMFRxmbjWc34vBvRbj17n1XcPXVIZyqicOm+BdM
51Jdwb1EKdO6KQ6pHBpem1q7gvd70R6RgTh8axlwT0/CFfxZWFmWp+PwXsq/
mWgSVwg03Gf/cjkOG7nEGVvuuUBI5u9bZ8ji8f3Xt7o0Ni4Q8XLmmy1LPNpJ
uxB7yFwgZmNAWkw0Hhnipa0ZHjhDnGxz5IpiPDKdFp4cdHCGJL8Hz5u141Hy
8+lCPhpnSCst3nfOOh6TfiYr/H7sBBkTufoOPvGYwrHIZ+nlBDmsiXniMfFY
My99W4fVCc4aBY6t5cSj7WNvtt42RziX5SDQdjUeX7xiTpsPd4T8Jn3vC1Xx
uPuWe7NE1BEub6pWOz2Lx48jwT7rw3v7t9zh1SM98bjcG1cyn+0A1/051TYn
45HvRq5U6jEHuHWbKq39ZzyyXx5vfv7THsom17vyd+Nxzv1B1c0Se7jL9vWA
64EEvDVX5CFpbQ9VxsPWUoIJ6Dr7Qd2Lzh5qsl/d2JJNwH9VLoyGLXZQ21w/
26mRgHNktJSfo+2g4U+pRIF5Ar5xUmWVlLGD/+Tzw9w9ElBbx+G9+DdbeB6Q
+lQmIgG/d3ORTNy0hZdlISQ7GQm4rypQUsvOFlo/uOi+KUjAut6BSi8WW+hg
NzlXeDcBOZcyH2GfDXSZEIY9nyTgQkxG6cgpG+jJkeKV70rAY/a3/cR1bGCg
hdfj31gCBo+Fzh7dZwODW3RVPd8T8NGLHxL7WqxhROHv0tWtBCSjS2zLTbaG
94Hzyj50ifigy9lvlGANH++MJynyJuJyS1Xk9K4VTH/saieVSkRB1mzryiYr
mOX4b3//8URMPCCmJ59qBXOm5RbXjRPxp5ZDSPwJK5g/dfman0sifvR4sZRB
aQWLrZkzR0MScdfyYb7xG0v4/TdCnDw1Ebsw9fDYOUtYVfQMfpuXiKXxa6VC
lpawGWTxuLg0EeVI/NKPcFvC9l3NnYD6RHSlGRX8PW0BJNNyWqqvErEmLpUq
psICyLiEzlAOJ+KSiE7IsxALoDRnHHz3JRE5SqqTn6laAO2Zf5wl64l4Rvq4
ffQ+C9j/atGFSJWEh+squBZ7zYFx58NdNc4kvOh4PZ7/qjmwHu39SX04CfXf
xSdReZkDe/BzxRHVJHzltvtfuZw5cFfci7+tn4QOkr/adnbNgH/mWmuIQxJW
3S3joO41A2Hu0zSEwCRkIDMwbS8yA1GLWFO6xCQM2pB9qRBgBuJnfQvHcpMw
vHIuw0zNDCTbbT7eKU7C934NvHz7zUB6V+dg+IMkHAiVcr30wRTklY8GYnMS
ntwiz3v0wBSOhhysp3+bhB0kUWVJaaagUsm69X4mCc05laJ+WpmC+qd9GhW/
k7CFjNj877ApIM9KduS+ZGQ88+Oz944JaFl+6tNkTUblX7zp+ytMQCf3LRvj
wWRskL7R/MPCBPQ7mh0/KCXjJZubmf9ITMD434PbVTrJSKKiffrEA2MwVbk5
H22TjJSW9+MeOhuDZeg5OW3fZLzT3GOte8AYbKsSY5hjk1FeSa15u9kIHD8H
Nk2dSsZJgYy+3nAjcOZ1pKy+loz8ja3Gjw4ZgbuVgVHcvWQ0vHvnTPWkIXif
O3ZJ93ky9vbTBNblG4Jv5+EJ1t5k7Lyno//spCEEknAJf/qQjMLiHrfbSQ0h
RJXa78FiMl6Niet902gAYWEbDxL+JWPQtcM17REG8Mwq/K8odQomLWhL1coY
wPHf88VnGFNw6Xf/p4wf+tB0zl3zN2cKDjH98ydU6ANKvP9iK5SCX/9xDIx4
6UNrp9mppsMpWB0s7Konqg9anq8lxeRTsCfDozj380loJ9EYOHssBQW7OshL
bp8E3Rv/ha9opiAvyfqDBM+T8FpVlsPeIAWHu3WDecROgv5IeWOzRQq6G8sf
iZ7Tg54wAedDjil4YaZk6vQ9PTA+UEh6zjMFP18olDIL1oOBewx3VgP34kWD
XF8p6IGZXpaeQ2QKZkY/557a1IV3szs/WhJTcLGJR/H6S12wSo08L56VgteD
1MTWM3RhhO+n/PlzKSgVQ0syZ6ALto2eI2uXU3D9zPGFQBZdeG89Get4MwW5
i/lKkyd0wGHFgq+tPAU/sQof4CnTgQ/nu5sP16agSL8rjVqQDrhInvC88F8K
3tI5fvr9UR2Y6Wqk2mhOwSO5XC9XSXTA3Uv+ntPrFJwsJXhkdmvDLGmV8au3
KZhx9fKP7Mva4F0s9PvI+xS8Pxg1t+GmDd+OXS3I+5SCbjkr8W+ltMFvlFF1
cz4FmU4EXWHc0oIf4TmTzispeNe6kFDXoQWBjCQp7X9T8CdJncaDi1qweD9a
RJI8FdUFRD2o3LQg5OSvjvz9qdiAz6YfSWvB7y/e/n9YU9HqAnvnk+0TEJ72
kd6VLxVXnbrzaLpPwBq/dV3HwVTUv/v6e/nVExD9rNdSSjoVl8glV877noBN
G+3Ni0dTsbrq5r4m5RMQt/q8aIuQiifv3dmSozoB2xcUwU03Fat0yAq/jmhC
otT9T50mqThSLVvz/q4m/HstkiVtuxefMtRBF60Jqd5FhwtcU7FQXlYtRlcT
9u1j6f3rm4r8EZNefJyakHHzdIh7aCquJNcs/5nTAEp1MtbXsakot2bPur9R
A3LGYp/IpKWiyOJTYfMzGkATuWx/+XQq+mji9BtHDTjD5Le7nZ+KDC7skxHS
GkBfM13iUZSK+zwVdUxINOCcvq32m9upeMNgi9VuEIHxW/+c7P1UrL15wD6v
DCE/XfdsYUMq5pUy1m5EIbAKNsnsPk/FR/XWx86cRCh4fvSdZ/te/z+edhrw
InDY1UR19+7Vqyy+EvYR4OraQW75kVRsRNLk8gwA7vwbL658TMWza/hHSQLg
ujSb27+vqdgkxh/NN0gA/u6z5N6/UnG7/2ubSywBbvqQV/RspKJxQpjitiAB
hMgTDBRI0vDOJwmeta7jcPvWyuJV6jRcMubdbxB6HA4eD8gnYUrDqxqdBf+4
jsPd8U9KPlxpaFMyscjSpg7iUfbjvUJpWKrntnUqUB2qmAcTFI+k4bFvV8GT
XR0kHpwULJJPQ9l33ZJlzWpQbdDSRqqWhnVuMqSGAWogM6fi43siDX9dekXp
zK4GtRm1tP0GaWi2bez9oeUYyAuJ1yhZpuGNlWNePUHHoOHFTbPrjmnI2z7z
UYr7GBy151gj80pDCnaiFEWnKjxZP3fFLygNi9dH460iVEH1IqX6QGQaPnb5
aiIkrArPZJKmjialYZtexGzAgAqo96yl3chKQ5plvbcqySrw0jdIjPx8GpJd
Oql/RloFkOLLa//CNOw5+Xjd66MytJY4Br29mYaa+SrjPeeU4QRhiFGlIg0d
9Nta20AZ2t8bNBTXpuHwemi20fJR0I1us6F4mobj//V2B90+Cl0san8DWtIw
nOmU+SHro6Bf+7B48HUajuKDuiSao9BjeERTdTANOT5hZdQLJTD6XvLl5vs9
/NOvNpjClKA/k+sU5ec01KeULrI8pARmwnmSQT/S8IPOYxaND4rw7iX1wLuV
NLRQzLj3/qIiWDqkhB/bTsPjtKIKogaKMLKxwV5Cno5pdNnRQvsUwfZScCMV
fTom/RP7M/RMAcZlvzkR2dJx7CUflUakAjj0OpMO86XjV12Tqz4yCvDBb6RM
TSwdq8Q8KQzn5cGZ0livVDodTfg15n/dkYfp0vYf1Mrp6MjMHmvtLg/ucPx8
MKRjItm3hhQBeZidaJAf0U1HC4Gh/0I+yIFXjOSIumk6Do7vrxe/LgffWMti
b9umo63F+PEqBznwq+Pho3VLR3vj/bTrPHIwb3SxOcQvHc1M20/Tf5CFwHla
z9HQdIxiiGL+XSwLi1lpVIS4dNR8+S34tpssBItsVZWlpaOHSrO4yEFZWG4K
NaY7k44KH+qEPw/KQLjj9+XQi+moFLVgwuckA2ubrgVjRekoStHXujYnDVEF
YypQlo53GP+OBkRJw6ac6eSd++lYZM7rmkwhDXF9ncn7H6XjuFh9qsxlKfjr
DyLhL/bsO3lXYsWlIJHqScd4ezqKH8v1d3wuCf9uS/tjXzp+956vGzGThD3m
pS8fScdo/YKa2TkJIPvAV0c/lY7ZkXMKmakSkBFbYBnxLR3XLQO4H/FIACU7
/eb7X+mYsiElEPzkCGQ/zCjS2NzDQ/lArtbyCNCYbBMqSDLwNAspfeTKYTjz
I/wTA00GnmNTfPDfxcOwP+dHZiRTBoqxE/OilA7DOVGPw5NcGVi2FrpaOSYO
jC3vezSFM9Dzwc15w0RxyHMyD6k8koEz6Re/2YmIA8vWaxZGhQxUbXk/0f3m
EBRc1ngSpZaBnT3CytfDDwGHwlP7Dycy0IDyJFU73yG40i+7e8IwA61v3Gki
vBYD7sCKkirLDOxlnBsmjxKD69SC2kxOGej4yfYNg6gY8N0pnIv2ykD5jx4Z
1u8Owk2NA2c/BmXggfLS+OH0gyD0MUtGOyoDw4WYMF3pIJTG7Q7eS8pA3mst
HnZzoiDKERXFnJ2BGfbpnqbXReFu/U+u2PMZqMf897OLmSiIm3q9mCrMQNND
T9ZTqEShcmHSVefWnn0fW0DNSxGQOGVJXl2RgT4/+SimokSg+mBPOUtdBt6Y
YVehkxUB6dYTBnFPM/D6ekGaxLww1Do/W5xuyUCj+78fqdwRBvm/8vm6bzLw
fueyk4SbMNQXVinVDGbg6uZ0zF8+YVBSFB5nncjAC9cFj96eEIInA1cT4j/v
zSfX14n7mhCoBjEJfvqRgfM3bbPs7YSgkeZUm95qBgYNfNtw5BIC9bskPg+2
M/C4ans+93tBeKkZQ8tOkYnX1MWCzxYJAkz9qk6gz8RtYoFAtZMgtMT7mH1m
y8QvA+ITkYKCcIJzavUkfyYmv/MZb+kUgFcN1ldqxTJx+aDkwoCJAOiY9alx
yGRiRX7NCu04P3T91J5KVM7EhFNuWv4e/KB/+kXaLGRisJ7o+5lFPugWUxIz
0MtEahZTZa94PjBqu/+6zjQTJzSuKCxS80G/i2gQp91ePxqj9yIKecF0u4gx
2S0TDySbCC2K8cLgFZaGL36Z6PU3oc38CQ9YKp2xMQzLxH/ec/eK9Hhg5C3Z
34dxmUgn9sq05T032BDjirnSM9E/lC7meRA3jNP+1kg5k4lnDzQJZpNyg0O5
35evFzNx1e5+I99lLpg8MZNjdH0Pf0knWZwEFzhP20o2lGXiXe9omsIWTphO
GOjnrs5EXZG8y2G2nODGpRee+igTr/cmFVMvccDnR03scy8y0ZwuW8UyhwO8
zJUbjTv28utbjVgJccC3xRqnR32ZeF91ipn2GTv4nhEj5R3NxCBquVtBVuww
f6i4LG0qE21F9HZSltgg8BWb3vdvmcgds0ShdZYNfrrm/jBZysR9FOxmj8TZ
IHiH/PzjzUz8vvTu71A7KyxfTZDnI83CGSqJ/Xc8WCHs6OpwOk0WhjW8Yz1I
xgqrgwGx80xZyE+m/9K6hAWigj/zmnFnYbWoCrWaBgts0jk0PxHOwtHItx3v
ZpghtmLQg18iC+mVD3KJpDPDXy19qkyFLBxrcIw+cpAZEmdaqn6oZWGtn0bl
z04m2E1UNTbXysJiV79ZYgATpHDXLf9nmIUtDpvnHx5gArIn4gUCVllYx83c
8ayBEdItbqlkOWUh7bi7Ya49I1AscUwueGXhTsizrsOkjJB99nyyBTELA85L
aEqaHQCaw1QijVFZKFN3c6W6hAFOtyd1CCZnIduof+HHFXrY777ul52dhTlH
9ql16NLDud0g+sXzWfhRoZ4l8MZ+OFD0pdbyShZ6DlmGj6/SQZ6yk+WzW1n4
04/nOLsxHbAMDW0IVWYhqZdtoUQlLVwKMSzKqctCkWqeRiFKWmCnf0X49TQL
i2L0mEm8aOBKpdonq9Ys1Lg3VN7XTg3cOvWZz99k4fGdh8yXxKmh6NORwyLv
9vy9BZTtc6mAL7m059REFu6JGEvxVUq4ycMdsvQ5C1uJR3XInShB8L88FpuF
LHy9dLZrrZMCSi1pnrxYzcJwdeUZciUKEF1OsRfdycIfgvm3FcvI4U7u5s5p
imwsHLAKP8dGDoeOhJQs02fj6/NmDzlP7YPKjm9atuzZ6BAUKTe6SwYSHi5z
L/mzMd+nuqQvigzu/xs5c/BQNt7Zf2WLbJkUpK8by5yVyUa7d+ty8UGkUKvS
MfhbORu7TtuHqy6QgNzw8Sg7zMaQs9wf1YNIoD70EVezXjZyPVnZ4p35R1Bi
kHohZpaNTQVaXZ4Lu4THVWWuuXbZeP0zZ57x9g5BRZeXfNUtGw2d2C9/YNwh
NH6+WG7vn40BmhmSrEe2CeopdAYtYdk4QWPgs6z7l/CCN33xUHw2kn0bNYr1
3yLA0628c+nZeFl3VeJe3h9Ci1WY0tqZbKy3v9Ga9GKToPn7+5jDpWxc+PD7
9u7PDcKrc24Jrdez0UJG64CQyAZBR2Jc4PCdbPww1co+5bhO6Ow0bTtfnY3z
dEIMKkVrhJOeXd7rj7LRvft5y8GPq4RuEqR1epmNfNuGj64fXCUY3XhS3dax
h6fIc74odIXQpypjdqQ/G1dYA/w4Wn8TTEfurl4YzcZQImhScvwmDIbxX9mY
ysawl8ciHEOWCRYHLqs5z2XjjH67CXffEmH4Hv3Uq6VsfB9WFSklu0Sw0ctM
k/iTjaSc6QksUr8I47PbB/NJc/AcmX2SNtkiwT414vUmTQ5Wfp6fHZlaIEzy
LQS6MOdgm8GrhPvtPwjOjR6MHdw5eH/1x1Zl/TxhynqiXlIkB912mOkfVn4n
uK2Y21yUyEG2u7LSJeVzhM/n32z9UcjBBD/2f67V3wiekprFruo5+Cy88PhA
41fC166nGp1aOUiT6fKou/8LwddL7ouUUQ5qU7Duyi7MEuZJK3MuWeUgU9Tp
0HcHZgkBxYKSf51ysDpa9G/5sc+En8eu9Lt55yCrkFNlSuAnQvDogfAuYg4G
RvHLqNyZISyFZ7PLROfgusVGQtXsNCGM8d/TguQcfK6XLl1/ZJqwej/KaTs7
B5Udjyo4LH4kRJ5cJPG4kIMRHk6N3y9+IGx88Sp7fSUHb1skT3VqTxJi0z7o
ypbkYIO/buTtfROEv/xWPy5X5qDGMON+hd5xQsKznnM7dTm4//QbJJSOEXZt
tOQ9G3Nwn6z+jnfaKCFl9dnwm9YcXCq8KUYMGiGQ5inEynXnYM3iZwUOj2FC
utQ93ivvcvBiza2BHfchAsUb4ebdiRyc2/52+0PgO0KW9zUPr9kcvE47rHAq
ZZBAvY+Zqmdhb37GvwTKbrwlnL55qkp+LQeT+3l8vrUNEParkxpf3cnB3Pry
o6Rf+wm5YzHL/yhOIfHBXHaaVR/hQOTSJW+GU/ifnbt77XAPIY/JV6WX/RRW
1nwl2/HqJjDXTE0oCJxCYZZLp/dRviFc0rdJvnboFHak+CwwPeoisH/rEyaV
PYVDVF62jWGdhMJ0nQ4flVMo+Xum9zahg8Al+NKvD08h83seFkXOdkLRcyV6
pZOnsPPcuuzibhuBz666tsjsFLq//VFj/7uVULwmaklmfwr/158C00v///0/
J4jYew==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxlenk0ll/UNkIoQyJkypAQJfOQZ2/zPI+Z53l4zDOPWSUkSSpTKqEyFRUl
MoSKMpYK8UtCMmWqXt8/31rveu8/7ntda599nWtf59zrnLPW4XMJNHWnICMj
m999/b/v/3mEU4cbSY0gpMbm1aM+QSDrMl0WUv4FlqUDLSLik4TWG0VSfIlk
WJ47qETDN0UgGz24eN+VBn140nvmj3wlHDmrbs4jwIQPVzwenRafJqBQwil3
FhZsesPxN01zhuDU/pihmoodz5wXuaXj/x+B5LT6Y3mdE0eMVro5yr4RSv6c
eKUwy4vOuT9sr8/MEpxeS5u1zvNhpBQ/tYb8HGGJ890L1xkBbNpfof+48AeB
5BMosffzUYyamjpwjX6BcOTx/uLK4WPIyWdwJfPiIqFmbyW94VsRHOLWf114
cImAllqxv7qOI9OT7ZCyb0uE/vLpubxWcZyIlr8k1fGL4LSSeEb+8UmMVchI
vlO9TNgoYZxeGJXAk1GKqyZFKwTUdrgGQ6cwlG/Nu7RwlZDxs9r04oAknvd/
MLJTukboz9+m/fpaCoXfXvj0uGGdwE7QfSHdI42OCzLs+u9/E5xmCiLTOmVw
fuXKEbq/G4SKzG8nR9tk8Vvp6AVXmS3CkpTsN5Hncsh9wyT/ddQ2Qf5jSlHM
U3l89fw6e2PvDoGU9N7idaMC9goZuJQd/0voFuGn521QRFeK0MWFq/8ITAPE
l8QaJQw1ND984TwZWEc+j2mrPo2sW1cch03IoYSXQYrlrjJS+KTUMxyhgNlO
uzn3WwScO1POF7VOARIBVaWNpYBOUw8mTIb2QDNdXDWlESJ3Y+jEh2ZKcHIQ
zBB/jXgvQ+6vwz0qoKzrdbXUU0GiiPSWwB1qqKAKgYRXKuhXajjkUbkX9M8c
5qzQUsUoc9PooEYaWKp+sd7foYpLNZ7Dl97QQh6Z97tNNTUUfjXcx7FEB/Lm
TPf529Tw3jm2R+pc+2H8TuNZPVTHRjEBWk8zeiBtO7iHPlPHkd9Oc/2XGUDQ
iFrlxmkNlKuoYx78ygjdZfe4Op9o4LAN+cR4ERP4rZtvLMpr4kPqyWtzJgeA
SXfnPVujJrZd155W3scMDTduPkAZLdRdenaZvJcZrH/pnveu18JNQ+UBh4sH
YUd92SP3lDa2dVbsITmwQEnBVdWnD7TRMosyLVeSFdTnkWdaXAf79EJHW+kP
wSzMbu6v1kHp190pckuHIPNS9pCMqC7Ofd+xE/rABhLfZGsdKnTxntEtpcZe
dhhV/JyZLqSHGuJ7jx7u4IDYrFSvmnI9bKjfyI/rPAxHpsTUx/j1seFTQTpT
Pye8lBnkpSjVR1ZTlwyKKS7wOhuzLcprgDz3O4pJO9yw/xP/iNkNA7w50DvT
wssLNRI9dbGchjjoPnxs9egRME8Jyrp11RB/SPLJF7YegY0Rdp83bEaY8eC8
5KwjH1w/3qrx+7IRdrTPaK3v4YeS5/VMTHTG6HubjfNLNT8Ee6fHC+oYY/f2
m/QnNgKgftB2Xj7DGG32c46V0AvCoZYTNgZdxsgUnCZX1SEIsx4U3c7UJhjh
lGK1knQUnjANy4RrmOCaiCPfRQ0hyHxy9+a5FBM862fAXUx/DBzc4g4Ut5ug
YTvnuuzHYyDBYJJQT2GKvvZZbcH3hYGiSXChS8UUJ34G6vqmi8Cg84bNOMkU
2+INexQ8ROH2vr7upeemOH9aoG9d9zhEPiyWpfpniod2RLJaZMRA1zGknINg
hhnPtd7eFhIHLlot5hNxZphgMZHUw30CFusOk1SbzdCnOPCSGudJaLVbXLDc
NsNhA9ZPeYwSkEvdZuuraI4bJWMpvXkS4FZz+VVClDnmjS8zmXKfAlkbb7m8
JnPs389aI3P3FNBQKt+q+G2Ozv9xZCbKS8KHe0wHW2QtUGQ/Y7ZqryRUW02T
BsIs8LtEenmqsxTEkzctzjRY4NHZ/DqLbSkwrjpvt7VigbfLw78+K5AGfgvH
HgYpS3x3TS31tYIMrP6VlBcItsSFGMWoC59loLOC+rZcrSW2JxHU6NJlocD0
w0H9JUv8U5UbZSQlBz479xKdTlohtZPOqudXOTh9O/FnaIAVXuymNHG8Ig8M
xhb2Z+9ZIZ8pfTYaKcDUpnDvjXkrTK+ejjm0TxEabu7I1x23xksdaVs/ehQh
zaD/dqePNXLvn/HpzVIC6983WT7etUYBMdHrzy1Pg2hpRNLPWWukvUpeOcCv
DDu6ekt7hM+gnlWZ4/4VZXizyuPA7nkGm39nTkZ1EaCkaLlX7PYZ5LuhfJ2/
BCBYu1NBZeYMMlelb6cTENSXr96xELTBnFuBRkcfIBy67s/q42qD81FJZQt8
KjCroZIcX2aD/YuSR2fyVeDJT5ZfuZM2+HRKYQ8TgypkXp11uHPEFj+X/kcf
nK4KDmrNfU8dbdFo6LAw4x41kFjIVuwvssWM9qTBOZIaUFxxrZj+ZIumvs8j
aMjVYRDlDm1y2SFZabGjb7I63J6jS6G3s8NXX0puHqLRgMi8z7/4rtlhd18R
DX22BugS6hxlP9ihsJ6fhAm7JnDNpr7W5bBHzqMH387c1ITFi2eUHK3tsTl2
Nfb1KS1oVRK/G3LFHofoMrno2rQgd4aMLWPYHhfoz7neMNcGt+zBlOusDvjF
7izf2e/aIK9QsVxj7oDHNT3fvCHpAM3XGKeOSw5IGkt+FXhYF8Yzjd6MvXPA
aGpHOv9HulAtK3B68YAj+v8R1e0y1wPSxPpdCpNdTKPAn7CmB8bnetjYchzx
0ORwZ16BPghKF6Uef+uIUZ5fYmkIBrC12LTJu9cJKXlUVsdmDGC6vUyiUsgJ
J8UPNNLkGEJfQaantKYTek0sMeedNoJH/uFFz9yd0Oj21mr0DyMoUnUa0k51
wuHnr37aGxpDBpvu/vflTrgDdC2iFcZAnJdSs3/phMymx1b495iAzQvu6G9f
nfDW1wsBGo4moJq/tzZojzPOPVeYz2k2ATHfX9+2+Z3xcAH1AUpOU2DBjzxp
qs4ofCXZ6ka0Kfxl6bBgcnFG22szLLYfTeG/7/czCxOd0XPT3EFJ2Qz6nxW0
C5Y6I1f6puLpEjNoupS0db/VGaVE9yrZUppDmZffKYUJZ2RJ35DI9zaHc8qW
Xu3/nJFDbOvC3FtzCGXGYgNeFzRLqwuzkLMAu28iwyMEF5woGpIYLLYAzeaD
9C4OLuizOH7VldYSTlz8ozYf54KuXfGBZKGWwO7xLTr8hguevjcCd75YApnS
QC1Ziwu6P7TzNde3gjnGp7Pnxl3Q87oXP+UTK3g3Xc7LuuOCQRW3/OqEraH5
cZZlMacr9sUJidgWWEN5VuQFESVXjONkpN6iOQNZri4v621c8dBFSvlz0Wcg
XF5/Wzl6N15hxLt34Qw40ctKdl91xa80rj2+TjagPcXrbfrYFbcifVjrB21A
spG2ZHzUFQeNV++P6NgCV+bKsMeGK55kXz4y+NwWKJ0/0f9ic8Mq2pnzZbJ2
sCjTpR4j54bCayGsyvftYJiuNobKyg0f1+fdvSFkD61fCuuyw93wwJsnMy3F
9lDRkPKdI98NPVleOV3hcIDcswFHyh+64f6ZeU+BPAeIdrC2OjHkhk9vKvyx
YXQENynVrKZVN7xXbH1U7rwj6NOIdaiyuKNAyi3T0T1OIPuJdadPyh2LVdU2
HVWdgKfun6SVmTsytf18cCLRCWjSv3tPBrujyWODAmx1giXb9yW+ue6oIktd
c/GfE3yQaBlZq3XHS03sY9zgDG1UdxhIA+7IUqC3OBHvDNUfcjTofrmjDsWF
O8PPnCHvQXRsHpMHbgmZ1m79dYb4FLd6HgkPbB05n6cNLuBxxnCuwsgDeWll
3z9NcAHjE/J8UoEeqPWxaMSo1QXk9/Bbt2R54JqR5cw/MlfgH92XrXXfAz/5
dRK6VFyB7t5ax8BrD/zw/ix3aZIrrCZ+2bFd8MCOe9m3MtpdYdzyldR/+z1x
y/ZPTySlG3Qer/chinni46LIy34abnCf7Ebplp4nlj4yW3JIc4OCobTRFF9P
zPVdeqzb5QakSiIj43lPnDUtaBelcQefBBvNq5WeKHXdsn1T2x1MzdXjBHo8
UV7/W0jdWXc4LXKi4d53T/yq2ZBs1OMOgn/ZfsjReqEyw61zvXQewPCenL9N
2Gt3PmcI8Ol5wPqdH9b62l74RcepX/e8B0zEDmUPe3phunnyYbVeD+g2ed7p
lO6Fdf9GSZT7PKFO6O6fudteOLWVEHtW1xMKt3Olwzq9sDEhLr3vrCek9Mf6
/pvxwqAf03u6uz3B75ZH2Vkqb6x9suYbvtcLLKONxw4e9cbpP2ES7zS8AI0U
mYrUvXHzyOv7Q8leICwoqCXs5o2KosrWMS+8gHmTPr4u2RtNWTnLW/56wdbr
3w2nb3pj7DmdnXwlb5gum/zR2eaN26o8o+SR3tAX0ctvMuWN1r9bmjbqveGR
/sMzH8l90CBamD/8pzcU8RXnuPP54JMWl5JQUR/IWM/o+ok+eL+rvHvRzQeI
vcF/o5x88M9zCZUvRT5gU2InQ0nyQas/eZU46gOqYZp+WcU+uO/wuQ76A74g
pitxk/25D558u2GoouMLLLyHP5R99sFokznuYZIv/F3Zc0D8rw8GDgpwdDX6
wn/dC1qN3L7Ia5msy7joC/03RuJVlH2RfaK0/K6AHzQFv3jYa+eLBxxz5C9a
+0GZVtW8RawvWlXHab3I9INzXJcFJq754qEbJ47ItPpB6K94G5+nvhh4s4F2
dtkP7Dq9Lq5+8MUh/rScIUF/0Lxm2h2/5Yu1c/ckNi384QTx9D+aw374acw5
2zDNH9g1hGQvKfhhqoFd0MBDfyA7zOTPfcYPgynlHsZN+8Pc4ubNO5F+eHAz
y8yIOQDetX/9cKrADx96bDirQgA0F7w+0Nzoh/sr2g+a+QZAuX+jtuaIH9LI
Nj2Jyw+ALNXShP51PzwV2tH1rDUAwtnOP7I55I8KR872M88FgNN86MK0jD+u
yHzMCGcOBO0XDoKBFv6oUwy1/ykEgmS+tu1mqD9y+vBrOzkFwmFfydzkPH80
rrxDnEgNBErkekXf4I+nYk6YuFUGwjwLNVnBe3+U57eB768DYfj7T1n+FX98
NS7Y5rcUCM+ejflXMweg9JC4xjoNESoutZfLSgYgy/W5I1IcRMjxuvex1SQA
eQLfL/wQJkK08hVmvaAAjCvXq+eVJ4Ibc6LOUE4ASqWNn32tSQT9bz4kx5oA
NF8+en3VnAiyzeaN398G4OKDL0J5LkTguUhYDPkZgD6Tg5FVgUSg8RA++pch
EF/dHltWiCXCkiKzXcaJQNSheroXMojwgXEnl9kwEN9PX4Enl4jQNj3z6rp/
IL59Y3K8qogI1Y/fkh27EIizdO6hB+4SIS/rsVxtdSAeT9cZmq8jQrzrzQCl
vkBUzvnNrtxMBA/5C7c6fgTiEe5YLoqO3XrTlBbvUBEx5kvOG6XXROAKqqH1
ZyXiYLnVsblBIly0PXpU8igRn3eclKcfJwKVZiH+libi1ffP+G9N7fohwWjX
rE5Ejs4qprpZIiweTolINCfi39YadelFIrhSbeZquhHxIjZSi60QYeSn//19
oUR8zVPSdPX3rl8fpl71JxMxfu7O87htIrS+tJq5fImIv589Lhj9SwSZB31k
tjeJ2GUT3VtJHgR3r6pwHaknIv2s4sLqniDgSXkkN9NGxBKtayWNVEGQG3Dc
rPIdEfkNf11eoQ6CvWdKAgKniHh8OvT83b1BEKPGek56mYgXWqzVPuziJfFz
tzbJg7B68Ede2i52Y//X+uxAED5cLXV8sJs/RhE6nswXhHFV8xcsdvkNFmZ/
a58KwtUbQyzRu/23jdgfZFAJwuTaghXuXX2ybe9OvDcOwjwNgpTqrv6qai3d
AqcgPN4o89+3LSLwXml2tycGYZaX1nGm3frzEk8l8pOC8PcVCb7m5d354Hf7
+rfsIPQgWKzNLxAhzpKzqbo4CE28Zr/c3PX3F+a8D3oQhGejX7JN7frvcZzq
p+zzIPSZF56o2B2fj6zRdDtvglC143ry5hARjMh+Hn3xOQipnedNht4Q4eWc
q0raYhCOv5ktUe4igvzQqJ3e3yBsYWDqk3pOhHvPDSKZGIIxKEdO+vEjIvBV
tl0a4g5Gc2YFeHuPCPl5cg8KxYOxervUKqKcCHQJ1T2OysGoqec+X1dIhARv
vv8EDYKRWSKHmJxDhBWzfPI5u2BsciC3nUslghdhH/cDv2CclhIQ+h5NhHFh
knxobDAeq6kwStz9H0wOrpkpZAYjFV+tbYMrETr+eAf+vRaMq7763clWRFCc
/XyuvSoYy8v7uX7pEuH+O7PbGU+DMc82Z+qPMhEEWrpfGPQGY2KsQHmVBBGu
3FH+xPwxGJ8OsC5u8xNhf27dxsjcbty7yXCJhQik2GMsN7aC8fPgmsU5aiKs
eVw/6UIXgk88TUWv/AwEb5MDescOh6A1+ZKy70AgfFZK85gXCcG6A/YMeXWB
YCq0nVirEIIv9hA6WC4FQhcT8Ua4TgiGa1FnLQUHgtL2dJPSmRDMcW+9LGoa
CDUzZwbJvEOQvfUDXadEIAj2v/nZERmCQz0bXJ0MgXD1idq+8xkheDe5e0d8
PgDobzUJGRfs8v/8+JHsVQAkZYurslaEYJhT2rzKrQBYjyqz/9C4yxev6LpK
CgBfN7ao4q4QfOA5FsFpFwBfDDPz3EZ29f9YNnkiGwDmCuQ1It9CsF7RXGyQ
KQC6BcJ7F9dDsLA3Sclvzh+UGX78V08dircFZRtS2/2hdsORIupQKK7raPcK
XPcHoa+D3AShUCx7feehTqg/FL7WUdgjG4qxp/UqtvT8gbHpmXm3RijylRwd
VRDwh+QyKeIFi1Ac+jVOotvyg43MivOm7qG487OqP7DfD/wjuO+whYViL/fy
lt9tP5h0zm0bTwnF+Yehp6hi/cBSf+/n0rxQzNRNqlYy8YMe2dhNj/JQTK4R
Kjko5AfA94tFrCEUZTb4MGfLF+r3eUj8ag9FVoHx5w1vfEF4/YPeo/ehqFNh
ZZpS5gvXJ4w8Y77u8l/kF6UI94UDvS+TcCUUXf5pRJ3aXa9THyoUUe0Jw7sf
pYJYuXxhq/j+4x7mMDQorFOtXfSBgHMCQ9n8YcjU38lN88IHvoYWLJlLhqEe
qfAU9yUfsHKk339YNQwntpyrV3b3D306Sce+mIRhmCjhaZasD6D0b9Vy5zB0
/OKU9WuvDzzk8XPwDgpDud9N+rxj3iBCOxl1IjEMKTMHDnNW7u5PViwur+SE
oUy7kOBstDcwf+6paSoJQ8HLdlln9bwhvRv64mrC0CTuUBwFlzds1zV8U20N
Q/PEjgOW815AvCGyh6Y/DMePhfimN3vBdHoRz+svu/ocz96+mukFZ4IPKub+
DEMjuyvj2XZe8Nouw8LqXxh+8T0o6C/mBapaf4hcjOH4Z4QjR3rHEx6dCs6c
5AnHqjFhie+9nnCc69ud2yfCce+jMcasa55QTG3X7ksIxxq2K7JCvp7A8qv/
s4RhOHq3GN9pUPSEjI8aW2v24Sh6VczpNJ0n/Ol4wvrUPxw542VsWsc8IKjm
5ClSXDhi/N6zanc94L/Ccn2NC+E4zBn9oTvSA2xSObzoboSjW6i2rJm2B7wN
zEp+Wx2ORlmNcTNsHqBms6c4rzkc/TODMpK+uUOTeuSTM33hqHEyXFS80R3E
Ti4M8YyH4xgHt9xsmjuUcrj8+vojHCsLLvo9snQHVsqR/Xe3w9GRxyKtUMgd
zi3qCQfsi8D1MCW5K+tu8G+0VU2KMwI/cNOKPOh0g5B2GccN0QgcNTiwM53v
BrP3KqNbFCPwRUm5ppKnG9gV8OYn6Uag4D37Sw1ybjCQlFerZROBVCpqfmY0
bqDhT/t6v08EvmwYIRwec4UnVvGzA1EReMt2PWRfpSucUF3Zc+VsBEa79QSL
xLhCmZgXr93VCPxkvno2XN8V2Nk+KfLdjUC79Ta6NW5XyCQ3tfyvKQKP1bII
3/npAmTznUFV3RFYWiRNk/3CBUKHlS4QRyPQ87nayP1LLjDXWlMhMxuBmjvb
12k8XMCh6ujLrd8RSHn0mHeRvAu8u1z45fneSAyWSRcJ3ucCmiTG7RS2SKxm
aWhL/ewMzT4ph3SPReIGrT7dx1pnkLDYPMUoF4lBWX3vQlKdoRwCDAY1I/HY
FZk3JmecgV30q9dVy0i0vXn2Rri4M2SxWKc4eEQiqW32+1dyZ6D411csEB6J
lh6MUteGnSD8u8rT2dRIpH0A329UOcHc+0fD9y5HIrcTV8ICyQmcnh1fDr4V
iRc4CLrnLZ1gsKKEXv5hJOqO5OZEijmB9iVWkT8vIzH0q0/yIwonaI47p942
uKvfPi0us84RJL3+OaZPR6LX5ROdJk6OcNs0NEZ/NRKZ/xYNPmNwhMPK3/MP
UEbhQgJz5FCLA2Qdc6gbPhiFFSXqaVf8HYCS+f3rawJReJKb/QI1jwNE7mh9
d5KKQgGRm/8E3trD/H/NlEJqUfhzLFriF8kenAZOHflhGoUGtGIGgVL2MPz0
tlKNSxQSHclsiv+zA93bnFZhwVH4cv8/vaRCO3iWkxOsmBSF/4KbvrAb2YFk
DFXWv4tR+MKgesaV0g4q3KPvviyNwjVbUrvrk93zvvHPl2dro5DCLnOIPcgW
chTdJgxfRKG4bo5dsrAtUB8d2z44EIWdBLe8mxM2EM1oyDY2EYXTWcueUVdt
YHGzTbJoKQrJv/m9oDSzAZdpOUNXsmjMUDserEFvA6Nvqr2FmaLx5edBBqXu
M6D/mC91gTcaa/7lcs8kn4HWm/kldSej0VT03LIqngHprH3NEbCL5dbnzf5Y
Q2UkaeS0UTRy+P62Y3tqDTyua8vkjtH4jdFRPjPKGnINfBi6AqJxu3XJp1be
Gqjlv4hkxkfj/Gbnj9QNK4jlN9cwyYpG3rj1DJrHVrC0/5XToaJolNrPsigX
bQVuv5VjP96Lxq+pBk3Mp61gdLLuSklLNDbcf25/5a8lGPYdq3d/HY1yFAG+
L19YQtuj629EP0Wjh5AkW0GqJciWHpj7OR+NQqW0L5l0LaHyfBrVw51o7FHV
SBZjtIQj4dtHovfHYIjz/aTvgxaQ50Q8DVwxaC2pvKZxzQJo9GasKMVisLb4
zWtwsYBYGZuQV0oxKG0ixzAkYgHLvG+zsvRiUCV9InPPsjl40KlXmtnGoM7E
McpXT8zhw2pTB7vvLj9drJNAijkYfhGf/BQdg3oZ0tZMhubw8lXZTtm5mN3z
nOr6BXZzkG9gY/cqjMHReeq6q1/NoLooU0q8MgafMZhInHpgBkfOkhstP47B
1FJzbdMYM8gPCfdpfBWDQcs7oVtaZkDn8CM1diwG0926XI6xmkG8tlOpyvcY
NDGPuT48ZQrLkkPN1JsxOO4+2kJVawpe3LqjvTSxWDu04FqXYArje5+v5LDH
4rd7U1IfDE3BeFmK0VI4Fl1yB1qieUzh5XiFKKd8LJqy1929uGgCil3cmhNa
sTj4dTOd67kJ3K/Ndb5lFYvv6jtoOHJMgP/63jgfz1g8rvjobYqzCRSkxRac
jIhFG1BNsZcygf1Bv+pX02LxwLUP5SVUJkCy9Xj7OD8WbS0CZfVHjWFV4+Nc
/O1YfGHquWZfZQw+EsbU6o9ikX3xwo338cbw+XAHH21nLEqo09FUmRqDKZWi
8puhWAwJ5fo3KWQMnT/vW1+aicVH+aFN8+tGcPqDQKj1WiwWuNvG9ZUYQc3L
gmxuqjjUFewOcdQzAsEH9FVTLHFIqAsyKF03hIKrSZ13BONwmaYVssoMgSHl
96SfdBwWuw8l8xsZQlKA359T6nH4k3NsxGbHANatJ9l/m8XhP5nwm1KVBuCj
Zind7BqH+0c+FN21NoAJ8V6jxJA4dEtx93+81wDM2dFXMzkOg9oXvzo26kM3
xcO0fZfi8N2fAZ5CT304vSBS1l8Wh31LAuzu7PpQN1LUcrkuDun7XT61vNID
obaDYzZtcagVaM1TFqMHhdUZq7zv4jCdEJ3PeEIPGK78YZyZjMM40Qu5eyZ1
ISUx+HjlrzjkP8/yPiZPFzZ8v2kGkscjeVpuULi2LvhZ2rlIH4jHBNkJx187
OjCBA3GbR+JRb0A/c65WByyPa159JhGP6S+mEpw8daCH9WlDMsYj5+WX3Sbc
OkAgk+jXNo5HPL7d1PxeG+rmyn/QO8WjwNzhqeJz2iA8xLH3fWA8Ktj6NW6q
aMP151n8BQnxSGGx99WrTS1gqtxDsM+OR7UNmn6GOi1IyYs8w18cjxfDpHe6
fLRgK34h9Nv9eEz1e666KqAFAd4uOdXP4tHzssOtS580YcpspCroTTx2xz1y
unVFEywJ+l2yn+Nx5JqJvbCpJvQJv5jaXojHoIfWn7noNQEPyv5t/ROPp35L
zyd1a0DDn0qONPoElOC9xm+TogGis7wyetwJaK48qlCGGlD0Ls+YSTwB3ewt
KWz/qANzC63f0OkE5C1izU99og5pd+LTC/UTkCV4Xz5fpDrsXFwpc7RLQOtr
qtYnZdWBGOv1TNAvAWO7E5kerKrBtMense8xCSjMLJhXWq8G1iama/fPJ+C5
zOtie0PU4I1SF1PotQTMcaDKmJBUA1Wh02IKVQn48vvGoRMrqvCIqVbr75ME
XO49Jr1Urwqi20dd23sS8K/EfjbhMFUomSmMz/iQgCIBb9SGZVWBpZ+x0GAu
Ac+zcwRub6hAxpOUh8xbCZhdM+1Z8FQF4t/Fzv6gJKH183qy+/Eq8FhLLvzN
fhJq3cqlVVZVgZXmX3tqWUjI8Ek0WJNaBcQlqy9e4iKhg+k+od4eBM87Hrzh
giScTB7R68tGKOPiu2ctRsLHij4GuhYI4xc/KipJk1D2v/BVDU6EQ3vzu7lP
k5AjrRYS2wGMY40tydRJeC8960aYCcD5X3TTU3ok7C3GOd8JAnR4dAR1mJFw
ql43w51IgH8fE/7dsSUh3ckHta7kBFAwUbxwzpWEmUzGx70uKUNo5+phf18S
PmoWqQsRUob7Sg8qjEJImD7arnf2yWmYrfGWlYwhYSHXvc93jU4Dv5DgS5Zk
EnJX9EkPzyiB/bXPJr/PkfDrdi8DU5wSXGG6+mUsl4Q5A3p21qxKMJBq5t9c
SMKux5bLNfcVYd82/XZRGQmv6B9ePKyjCJrE7ozEShIefyAakj+tAKSZpENu
dST08yjwF0xUgCc2yuWaT0h4aOXdQCePAqy+/X1KpI2E6u38i3Et8nBSo+75
vh4Sbiz+iNKxlwfvJ34GiwMkHLH6NiDyVw5unjz2sX+MhORVLy4eKZGDz+WT
XvWTJGzZ5hEXV5MD9sPX1y9/J6FFn1Gy0TdZMM22TIn8RUL70M8W6ZmykEl5
gNl2k4SWh6r8hiRloSuqt1iZPBEHHWjUFT7IAPnPVPEjtImobdUmWpckA0pu
+JTiQCLyJV0OBTEZCBvb0p5hT8SsZ/XTE8PSUGP4cLjrSCLy3sqYupwkDXPt
gW6Vwol4mkv9qP1JaRBUEF3OlEjEyxocPLKfpMDh/nRCoHwi3vQ+1MCbKQVX
BYrpTTERqVppGNlPS8H7gjPXpLUTMe5u7FueBUmgZ2ARYTNOxIcK2hSSxZKg
lfzm0abVbvuhIgFjU0lI2shQH3dMxIB3KrkR1JLQ7K/27plnIm4396fffnoK
1qf+OJYG7uZ7hw98DDoFEtZNC8kRiVi96yyLyCnwfR0c45GQiEJ8d8aMJiXg
lqo4rU56Ijrzfzt6rlACvjR+yz+enYh7pjVk28wlgEO8TJDhSiJ++W2xvsYo
AeZldnVLRYk4qWpipF5wErLY2PD97URUdm6ZO8t8ErozB14/vJ+IVgP2QU1Z
J4CCItO24FEidp5wLO3ZfwKUIzS/Rz9LxBCCdsOTTHGImCeLsO9MRLWT7bkp
DOJQ6/yUEt/sjscYbTRfrhj8GA7L5R9OxOHeteLzbGIgpC9xhOpzIuo7wmhz
0XFwejF379tMIl4yipOpOXYcCmVvKfUs7PLlnDrpVCcKg1WOr6rXEtFGTORl
F0EUGPkOW2X/ScQ64SKNL30ioJM/OB1ElYQ/Bs0vlNqJQPK+7GBz+iSUrYrc
oF0UhhaSDpkcaxJ6se39wpQoDBtre7I4uJPwmd3NxlpWYZD0fca5I5iEN/WJ
0TNVx8BvIvLuZ7EkFCD7lnZb7RjcsZCSeyGdhMxRebEL40Iw2bPw8ubpJJyO
fNv3KEIIOLHCNE09CfP4P4puHxQCi4cuE176SRh1qNu9vvYo5IhyB+iZJ6HD
7XTWceOj0FM8si1ul4SVtL3zAb8EgZI19yyTWxJWWUXouF8SBMI5fbYV3yQk
tx0weCwrCFH/qG8NhSQhf9+eMvePAlAf+kKyKSYJbb8l5rglCsDC95jWwuQk
XOS/ebFWWACOOcoaxp1PQstLNaaaA/zgMrj00fFSEv7HZ3CRO4YfrutUeate
2+WjpBeSFOKH4WfuvwVv7tZ/KCE+/h0fMEkfSd1blYRMolxdfxL4QO/uB+a5
ul09/BcOVJ7gg1SeyyV9T5KQk0fUl/T5CDy/ZHTiQduunyc/C0dnH4FNGrrm
iz27fuR0D19UOQLS8S91Qt8l4Yupjdmz33khYCV+xPJDEpprh1Fwm/JChZeC
u8LUbjz158GhZh6Y+rSyzDmXhLxUAkp3RXiA2+w+6e+vJCzP7trJKeAGq24v
hsnNJJTeFpZMpuWGi8oC19vJkzEY3QsjY7mgt+6TyG3aZPwZEBrs9YsTqIUL
GjMOJKOxQsyGnhcn4A1TDV+OZMzsuCHONXkYopnp3xvwJaPZUkDVgO1haEjv
cpIQScbZ1+rX3Uc54OdO4iLzqWSULjcLeGfJASLBp2PX5Hf55OSUmEfYwfXb
Ou0oJuPDNRcT7jPscMOu9soT7WS8d3Xf6I9xNhgd8D16wzgZk7QvK0W7sAGz
llB9gnUy9s11xr78fgj0myfQxSkZZeybFF4GH4K0U9feqHsl4wOrIPPQP6zw
4raF3TFiMup9mJ57c5YVtjmZ5mgjk9FDm/nJWzZWkLnYEzGfkIy55+RKgu+w
AJE6leptejK+2NdcXyfPApUxcKk2OxldKiPOZPYehOmlzSN5V5Lxmpdr9abj
QeDxaLgfXpyMrdfuFPxeY4YzHwNOn7mTjLK3Fo4nXWCGS8YiPUoPktGassz2
shAzvO74asXTmIxGZ4HuxIsDsFepaIbseTISVLR4dO0PgGqNdcjXzmQMneSX
md5igtijB8k73yRjKX0G4+ZVJnhU+DqrYjgZHzMWnklTZIIlxgyu85+T0WEm
+yzzY0Y4nqpa6f9fMp4Zb7bY+ccA7ls7csaLyZjv9zqgXYcBigMbOyTXk1Fg
Q5fNOZ8exqaDzFj/JmN9/3zswMx+YLERm/xNlYIQOEKkl98Phm//C/hAn4KE
gLufDl3YBxnqpTvNrCmYQt6+NTlNB22Pbc8Vc6fgAguXuQ/QwZ8Th9iTjqag
Ivmo6IPrtCBX3n/LTTwFy5cy7t3aoYEgjvNSWjIpWFg/HK/nSANVWRovRJRT
UMx8pvXay73w3x4yo/0aKbj3sPjQRbG9cCTqyfiifgriMY554SvUYLMY6jNg
noLC9Rc17SipIc/15Ea9XQo+CWY2FAqlgrej31Pz3VIwgn3xPuk/SqA1LD8Y
5ZeCUg3bHu62lKDW7lBqG7rb3uzQ3PC7PRAnz3GSEJuCjld9n/Xq74Gme++b
j6SkIM0k4QvhFQUs82fp7slMwU/bkRbHtSlArEB7dOZSCobcDLh9/hU5eNDv
8ei+loKuawxT1gbkUJrUslJ5MwVftUo/zH1PBh9/RyReqEpBe5m4wlN2ZMDq
L8lIrE/BozH6uQ5v/hGMp+avmz5Nwf9CWBsPfP9LOGd1R1SmPQXzP9VR+dH8
Jbzsc25i603BFfMZY1exP4S/KlyaW+9SMGwmn3bFfIeg0Dj8fvxDCmZ9K8mm
TdomhIhddH4+lYJkvnfrrtZvEe6V6v0snUtB3uSeqze+bxK+HaKOS1lOwWGO
IdwnuEngz2yl89xKQfkLoSv9LhsEO/KYAh2KVBRWNa/4eus3IT9cRkiMLhVL
FfWEFBfWCf0/ftYzMKdiA4tVcrv8OmGfc6XKL45U7ORxVQvLWCNoDLu9fc+X
ir2Vd5thfJWQoMdr/0gkFQdnTgsdll4lPG4dmys4lYr7RqkurGavEFZl8iJj
FFJxT1TeSuvPZcKJKkNqB5VUnMlX3RdttkzwOkKbhzqpGLiR1cT09Beh7HI7
n4BJKjoWnLwcJPSL8Iku/gHVmVS8vin5/fzlJQIbSV551ikV6UV5nexplggm
a8s9PV6pGHZgv0jZn0XCeZ971veIqfhIUPpv7a8FQucXz/+yI1PRp4Zctm9+
nkBmwR8aTErF45hJ+27xB0GxZ5zcIiMVR27b1Nf+niOEwpVsuZxUrEm426q1
d47woMGE+3BBKs5Tx2YHc38nfBfZX7VTnIrNP3X5uRRnCQLFnfJf7qRiUpR5
K5/9N4I9S2LniwepeCCl05yY9h+h4KySeXljKua8vaY883CG8O7v2mTa81S0
/WEm4/JjmrA/tCbQu2s3X+OL/iuhaYLmd58/em9TMU07vve351dCosPR8ydG
UnELmu58vj9FePr+C/uBL6k43RIiZr49SVjTLry98l8q6lZkx8obTBJOPjOX
Hl5MxTudJtNx5RMEHynGtqb1VLwvuvcjBfkEobzildG1v6nIlZnqrtnxmfCZ
O+VTHHUauuTUreXnfiJwXCL4OjGkoZhznmCL9zjBjGZzQ/VQGi7/E7saofuR
cCGuPu0oTxrWF13hy5L+QOha9mehEUrDJae1n93HxggUXsJlc+JpeGXeqWxJ
YJRw+tPUydcyadjy1VWuTXiEEG56o+WBcho6XBV/yyU7TKjpstLL1UhD8jre
nia9IcKP08xjoQZpGLRZGxzsPUg4WtfnYWWRhpLxSlKM2e8JjsfSVxXs0zAz
b/yVZfM7wtXrKklc7mn4hS6DfHlpgDB4YIfxn18atsVTvhkXGyAwpD+6MRma
hkJPT1v+DuwnaO8Qj7+MTcMnlfXGYyFvCUlBxx/fTknDoXbdqS2WN4SW/2Y0
z2amYQ3Pm0Wd9j7Cb9uSQd+8NPTUNhejie8lnBqwcTG8noYyg2DDq9FD8NVk
XZIoT8OYDrVFafZXhNtP38YdrE7D16YDfePrXYQJiXP71uvTUNA29lbDRCfh
8G31q6NP05BzzVXKfaiDYM75T+hpexqmk6S6CwZfErJzHjfc6E1DkaKrxtuf
2gmvqEJVSe/T8BHNUWvFX22EPTEn+l0+pqFe6bn9VAxtBOWlWXuNr2n4jkMo
b0vqBSHS/eaPYz/ScGOmU7DLpZVQ98E+im4lDf/XHXXjvP+P/wcxpT5s
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1300}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924096913854988*^9, 3.9240969335273066`*^9}, 
   3.9287101172865367`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"4d9c9b31-316b-4af4-82ff-4818f9c2eadc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "40", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"200", ",", "1500"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924097299270961*^9, 3.924097384380048*^9}, {
  3.928710182274088*^9, 3.9287101938160877`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"77c41e7f-f4c3-40d5-a26f-dc451d6916b3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9e3c8V3/4tkJ2doNEISp7J85927K3MsoK2dK09x6fgVJ926nsvRXKyN5N
IUQhmqjk53me1/M7/5xzvd73+35f13Xfr9e5zx9nn4u/xemtNDQ0x2hpaP7P
/f9dZ/D/P7UYXFKpXbj8v/j982K22vXLKEYpdW0xLCHWiNkPNduDkSdVq885
qpTgqd1bUyMYjC8vSJ4q6iojpOVt0mpkgjH10NlJmcMVhEFhmkuNRjB6nqC5
MHG7knAXa1WusQjGHuEITyupaiLyzl/WGtdgTPpPi/flcA1xg1/hQ/W5YOxg
6mC5nVVHVGd5V1fHBSMh/yGjO7CBGGS/l1qdHYxP7QMPqno/IRaT3jhXPwzG
GYWgLD+NJoKRjku5uiYYgwLPcjo6NhPC4cdYq18E46RgXDdrcgtBrEZOVr3Z
5Cue8p9bxzPC7mxNVdV8ML6/MlTMvbuVOL+wlFL1Nxj9GiMTDcLaCJK7mHMV
WwieXH8hUfmzncifOKlUtTcEzWP1TR7HvCDa7LJZqqRDME77S3OUWBcxOdwz
UYkh+O32NHvKh27irwl9VaV5CP6+MGjWW9lL7HqhllLpEoKP1lWeHTPvJ+S1
zjlVBoWgccKVgG6rAcKkMV+xMjYEDydrbGVyHyTOKE8xV2aFoNuf6LX2uCEi
tpRvoiI3BMvS6/4Lrhgmbh22qKyoDsG0tUMBVd9GiLoHSckVHSH4OIf7gorG
S2JUsPlUxesQPN8tsNZy+xWxnLOqUPE5BGVZshsnOd8QrDwyzBV/QtBXI5/P
IestIZbuMV7OGooz2+L1Jg+PEZqMtyrKBULR9Mb4MWL0PeEYPZpULhWKeg3r
zrkGE8Slv2ynyiEUBVtdzccUJonMCzoK5WahePxenJfYoQ9E0XIoU7lzKL4J
h5W1Q1NEp1fF+7Kzochtr0fTrTxNzEzPl5fFhOLnju6EbeYzBM0p4aSyzFC0
CEqO2H/xI8H/2u5k2YNQtK+KjKbmzRJKlhT5sqpQJJeVnpianyMsel4wlrWH
YtNjC4a0o58JH70t70tfhaI6s/M007V5IrFZpbz0UyhWK8W0jzAsEveOBiSW
/t7U55HJSor7QjypfOhYyhKGTsbT5+eYlonX0uNypXvC0M39BCn+9TLx4/EO
xlLJMFT+M1v+pfQrwSFiMlZChOFxpdIQb+o34tDNuLIS0zDsCScvmYZ/J3R3
NSaUOIXhOGta0cLZH4Qz5YdDSWAYaguNdGcE/iRCWSXkSqLDcHKySDMr+Bdx
Jd6VoYQahprbIqJM0leIMprr74rvh6GAyRWhnYWrRG/wYGlxZRju+M69qvpy
jZj7wZRQ3BaGze4f88TY/hB0/hoOxS/D8DZHs6yW6V9C8NMl2eK5MLyh9Wy9
7791QtW1ZFvxWhgee7jvrfLaP8J6bPZtEXM4uiREt/+QoYEAW8HSIv5wVFmo
Ord/gQZSB2ziiyTCUSFsufhE0RbINUy3L1IPx6gZxfKei1uhpbVVpshkEwuo
Flbr08I7WKcvOhWODKRLHab76GC1VuFtYUA4fuXyrOzcQg/cCj4lhVHhaFgb
e/30Z3qQKroXV0gJx71BkTR2b7eBgfhbu8J74Xhf2qp+bJgB3O5yyRRWhCNP
c3Sy0ktGiNxjQF/YGo7DSD955QMTXMuOelMwGo7nR8JTNFaYoYqjtrhgNhxl
PAxLfXlZYSB5ObZgNRxXBxwFnNXZYIFO3K6AKQLr5x84OPpvB4aIU9IFfBF4
jfNP/a18dti/lk1XcDgCv3wMiVS8zAFEUO/rfLUIfJg9YUOznxOOL9IX5xtH
IPP1D+ct+jnhnId6bP7JCKzzyPhgEssFGZPnTuT7b8Yfio3jIrghz75AKj8y
Ar0aWU83rXND68gUbT45AovcCjvCnvHAhCn/67y7Eeh36U+AZwYv/H1hUZRX
HoFLAYu0uc47YId2ckze8wgcNmVwPaG6E+SeNB/PG4nAtKifcGf3LjBWWZPM
+xiBxh/r/e5t7ALPMhnavJUI9P7+4WHMwm7Q3KGwYEUXifX/DZS4TPCB6VDf
6DBrJD7nj3V1essPjiTvZiveSDRcvSx5Z2wPeBkzFAwLRKKPh9LZY7MCcIn5
XrbVgUic2T8ldm51L8S3E1HDUpvr28qv3WMUAmrsG28r5Ui86hLi+u2qENzW
uGAzDJGotWtlWklyHxT949Sw0o/EJu4stqjWfdBQX3h42CwS7/+9JfHBeT+8
uHRsh9WJSHTf0RLouVUYXirO0Aw7R+K7CHsa0YfCMP0tct7SKxJbmD2pYmYi
8K14z+jQ2Ugsj3LTDF8XARrfmibLkEg0EqkbVC0WBbZDVvlDMZF4jlBIPHP6
APDPLmVZpkZiW74mH5+QGIjfT4kcyozEV0ZsgY7jYqDkLOZt+V8kssgLVKjf
Ewftvc+shx5E4iq5prbD+yCYvz2JlkWR2NMs/o/1yCE4efX3oaGqzXgzFpPd
LIfBxzqb1/JpJN4p1a1bmzwMwVxyNEPtkbjD5218faMEJPT1fLboj8TPp7lu
nrkpCVmpZ0YGX0WiFHdpHkesFNw9Rt9kMRmJCUI6Lxv8pKFk2528wU+RaNzc
/lRdWgaePFPLsvgWic+6xTvyHstAV+SriMHfkXjyy8m5vAOy8Fr9nJcFbRQO
OnhlaufKwsff7NaDLFHYeH/BJ1RcDn5U54MFTxTqb7z9ZVMoB1vO6x0a3BOF
xtlbW98oyAO73BSPhWgU/pWv4GN9Kg97lsI3BiSj8KtZE3nJUAEOFfB9NleK
wte/fmQkvVUAlTNVwwNEFAJvuNK4ryLoHLB4aq4XhbsrZfO/b1UCy6nFxwOm
Udj9bq25+5oSON1OyjQ/HoUX2XMH/RWVwc9RNGLAKQqzYucLxweVIZSv+Yz5
mSj0uNloLhSkAkkvHawGAqPQ0o3uneKOI5CduUqYB0ehjMm7eZGGI3DfPPPg
QHQUHlgY2/nNTRXKtsvwmKdEofDXy453OI7C066uf/3UKNSRfC2q9PQo9CR6
fDK7EYVcTOc+VgaowRsd2uH++1G4OHg7XVhUHea23npiVhiF3k6nXse+U4df
T1Uf91dGIZ/G/L932QTQho1SzZ5EYf1GVpyUFQCn6tnw/rYopPjpPwRmhL0r
bGfM+qIwwPn1nU/eCBIVjy37X0Yh53uS/c4+BNVAHcJsIgrV9moudsprgJ7U
pHj/XBTWBJd+2HZNA6zmQ7nNvm7qY0qj79miCS6Pdv3rW4vCB4cl3wl6a0LA
6Yo5063R+HqaNL9lVBPC9psN9TFH4zXmR7vOa2pByvh8oyl3NArz8dGGlmjB
1RsJj/r4ozEn6MnXXULakHtCmGoqEo021gU+JmRtqNjxNKxPIhrPX2tXFaTT
geYhO09TxWi0Y2U9n3ZJB3pJvyz61KNxj/f5Qze+6MA7Y4q6qW40cin8KDR2
14XPzFLifSbRyHmw5uH9cV1YbX/BZWobjT9MBCbu2ekBfdzp9d5Tm+dJV08Z
v9QDLs0tcyae0WipnPb2gbU+CG3cGOwNiMYHTJ8Vi0b0QapBpdHkcjRGb/0h
4mV7DI5eHn7YGxWN3bdWDr17cwyOKQVQTJKjUeAsrQyDkwHYfGcJ66VEYz7X
j9zFjwbgVvLQw+R6NI5reSxS/A3hrK+WRe+9aPQ8rvjf2pohRBwaVzMp2Ixf
fzkjEm8EqbPBYr0V0Zhh+nJlB48xXLu/g8ukMRoHeuSkhu4ZwyPnsr89rdGI
CaDvoGgCVXtNZo17o/E5Q19SRYcJPHv7aaBnNBqvHyniGnc0hf6rcQ3G49Fo
r/WX8/0PU3hvve9hz+ymH8fGdr7RNYMFrkay8XI0/lPI5JbLNIO1vuOhPavR
+P5V9vZLH8xgW9oPd+MtMXiwuY27UNYceAxI5j1MMbj6+dHJwShz2M8goWbM
FYPeFs7dc4PmIPO8/UAPXwxeVReN+SpiAepRrpzGwjEYVTXPt3jRAgyIjT/d
h2PwXtfIw3ddFnD8z7WPRgox2MtjmtMkZAnuNUoD3WoxWJ48VpVzwRLOnR+s
N9KJweXfAl6ePZYQJeeX220cgzv2uYlJilpB+hIT2cgmBlk/dq3PhlnBjYIH
Id0nY/CJwLpxzksryDuj4W7kEYMMlO/SGnLWUH1gzKzbPwY3cuZwPM0ank9d
Omp0KQY91PcbBH22hsHbPAe6I2Pw1LFrY3/1bGDCsYTDKCkG7d9GngnJtYEv
fEZ/usgxeHlfndkXelv483J2xvBaDD762PnIyt0WGLNi+rvuxuD1ES2DwnZb
2GEhWG+YH4ODp8bWfh08DiLs9Q+6ymPQ/KTdUZm04yDbbUMybIjBx3Q2mrZf
jwMkfQvueh6DF0PclL1sToCRbvppw54YvLav/YBHwwmwoz1k1jUSgw9TfL4b
CtuBZ1OrquH7GGT+vsCzI8UOzoc5i3Z9jMGvok2FLd/tIFp1nd1wKQY5P800
mzjaA2nl6u/OlRjcdf6pfHW7PdysUJgxoInFj2x0F1flHKAgsL+vkzEWt/z9
J8d+ywFqpXzqDDhjUbz9a8wKiyO0zTM86Nwdi0L/ngoWXnaE4Uf3Mgz2x+J1
qelXh+cc4cNpCO48FIuXJdvl/W1PwtL+t24G8rHImaRqf7b9JKyPXzDtPBqL
sZ1px2VUTgHzf1yqBtqxeO4c5/S9x6dgl12RSKdRLDoPfRyZYnOCAzsN2A2s
YzHYf8u6gZ4TyA/PrL1wjEXhIREruignQHLU9DH3WOyO855irXcCExOBvhd+
sXjP6Gqy808ncGCprT12MRbFsp9wbUg7g1eH1f0XEZv5JH+xfvByhotxy+nH
EmNR7hr9FoZcZ4jVTL38ghSLy3ETHl6TzkDZEHM7lhOLbFoCeYwCLnC74ZnJ
izuxyJdfveX9cRcovHzqyLG8WGTQ1qv6mOkCdUp/hF+UxSKtb8/PvQMu0PE9
e/ux+ljs+2JaEM3mCqMlcmsdz2LR4Pi5cTYDV5j27Z3S747FBNu66w3xrvD1
kFdvx3AsaniO5Sc/c4V/s/S1+mOxeI10cT6Ixg1YH9y51zETi3szUvadU3cD
Phf1dP0vsZg26MqcEOwG4oKvL3X8isXHPQEnH1W7geK7c676G7HITykfGPrh
Bpo5HCYdDHH4cv/dBTq502BmU6CizxGHQS4vXZX9T8NJbn3hjl1xaCCw3Ohe
cBq8+6fY9PfFociMUFH6p9NwKS1itf1gHL4dh7q8A+4Qb8A/pScXh2fPuDlX
ubpDJkN1T7tqHA5KOBwtvO0Od59b1OhpxeHQ0tSH5DF3KI76crfdMA6j20ze
GfB5QAORnKZnFYcK989Xztl4QOcf0UvtDnGoOKvE6ET1gFc1zS56p+PQ8Hzi
5YI+D5g572jc7huH4uYuyS9YPOG73Jqy3oU43L1HsLtMzxNoljP3t4fHbb7P
y2ZcYzxhe6EMm15CHI7xJkS8euIJe7y6V9oy4jBf1luf9bcnHBTz/KB7NQ6d
Y2Je/VY4A0rTtD1tt+PQf89/k7f8z4D2nVvVuo/jsODEBvfK4zNgcfLo3bbS
OPwsJSz1d+oMOPG/TNWti0PpUpo3eQJe4Pvq7MW2ljh813p28p+NFwRnbXfR
7YpD9dOXfnzP8IJEizyjtqE45LfReRPX4QXZ7LrKuu/i8Pxg04kSGm+41z25
r216U69Ptbi/ijeUJIWx6i5u6rXWZHni7w1PdHevtP7c1DfX3HM11xu6aSsn
df7F4fMbOzX/vPOGN01m3a3b4tGhMoh3kssHZsMWqnTY47HxylUOXX0f+KGa
eKd1Zzxq3OBZEg3zga2rwqk6QvGoLl4VFFrqAxyVTy+0isdjaQm3m86MD+w9
a++sIxuPpLFjAaG7fOGw9Iph65F4rA89oSVg6AsqCxQlHc14HPjYd104zBd0
H0vtazWIxzPbb7OlFPmClXsni45lPFqeVNY1HfcFZ2H3X8/t43Fv7vs5b3Y/
8JvYMqntFo8R40h6R/hB6H//dT33icdvfwR7b/j6QbLdkSrt8/Ho5XULHl33
g6s7R24/D4vHv7V7XH53+MGD4YAU7fh4/E/k05P0n35QRma98Dw9HpWObHnp
tM8fmkweOWlficdjV/LFfIz8oZdF2/D5rXh8eiZLq+CCP7ztGFfUfhSPJdfL
g/bc9odPcSFCz0visXB6RbWmwx9+ae5k0a6Nx/tKmuwhy/5AR1P+81lzPAqw
ccqWsAQAV6PJhFZnPMJ21pelewNAMPhz57PBeHwv0y6BsgEgoRxfqfU2Hp+o
Oi4d1woA1R/7bj+b2uQbd3pszSoA9Esbk7UW4pE15UK1kHsA2PidOP/sRzwG
npjU6LoQAK6Hf57SWt/UPx6nsxIfAAFzJINn9AlIiSkl3c0OgPAHEopa2xPw
sOzV1c4HAZDq0iH4bEcC+kp3OfhVBECOoBuzlmACsn2SyUluCYCH7zZ+tIgl
IE/olTsC/QFQkXN9XFMmAemr/H1ExwKgxUa5s0UlAScm+NdufQqAfu6hCk2N
BCxgzjiR8jMAxvr9brUcS0CGypi8GZpA+JzGnKxpkYAs0RI7C1kCYdUg91yL
XQJ6WGm/GecNhG2Mmqc0XRPwrrwAhAoGAk/r2LEW7wQMrfryIFI8EPZFX1bQ
PJeAzFfNg+dlAkEKeAVbQhMwzMpftV4lENT+ljBpxiXgukxn4hcIBINaox/N
aQko2LTIHasbCLYX5t5rZCfginxhdrBRILjJx75ovrmpx7/rW795IJxdFqzQ
eLjJp7CdP94mECIL6282Fyfgrc+9u3PsAiHdyzZJoyYB9W5I72U6GQjXxb4H
NTclYGtIkuuIUyA8mk4/qfEiAV+Rc3XWXQKh6s6hY80DCWju/Q4i3QLh+ck2
eY03CajccmfW8XQgDPK77G3+kIBdW+2Wsjbx+Kt1Ro35BNxP/0pUfBMvZOV8
b/qegM7fH13m2dz/20LxPf7d5C/6b81uMz8jx0BHE10iuu483vXnVCDw9viU
I1si+tbIqq44BML+ZMabTbyJOC2Qed/4RCDI6N1PxL2JeIWJgbJhFQgEHQY1
HUjEv84389nMAsGo+a0jSiei2s+8oksGgXAi/KJ+k3Ii/q46HayhHQjuR7nl
ERPxp04Fyxn1QDi3WiTQpJ+ICWw9ocuKgRBdacCI5om4O/8F3WvJQMg4+/Hb
0xOJKN5S+EtYNBD+k44eA5dEbBNOrx/kD4S8BYGOp16J2ElvMv+RMxBqHteW
QVAiHrq8LuTCEAht7tb/PQ1JROU3XYK6fwNgSPhrAsRuxt/a8yxzOQAmJlLP
Pk1NxD1v3/80nQ6AL/+JO0JWItpZ7396+WUA/LV7rvf0v0Q8Jat4lKczAJh3
OclB7ma+oI1r+xoCYOfInz1PixLxm9aLw/cLA0CEcoUBqhMx8s59uHkzAORM
5b89eZqIpv05elwZAYCsfe+Ijk0/22oatkYEgPELr/Yn/YnYUfNL+qxfANjH
bysjXidiQCuLoqtjAHhq3b3xZDIRm6JEQ14ZBsAFGiKB+Lypb8WwdPhIAMQ2
vg588i0R347mZ9mJBQA5+LwD8ScR0xVwwYcnAG4qc+o9oU1CmTidlO1bAqDg
R4EswZqEgkrN6bFv/KGuVH/PE54kFP9ya5W3zB86/Ka3EQJJmNJYy/cy0R9G
Dkd+bRRNwoGilYKek/7wYY7/nbpUEnps1EdtyPvD8oPqtkalJIwv3eZwltEf
/rlYlqpDEkq/nd8l8c4PWISWrjfqbZ7/6dQFuWI/2DWWHK9uloTDxTslU6L8
4MC1A4GNx5Ow3/DAz6OWfqBg22Kv7pyEkdWxNwxE/ECT56Ru45kknAkUrm34
4QumA2sy6meT8PzQteErz33BIT2LvzE4CSVGrMImqb7gZSi7TT0mCRPV/QVv
ufjCJcae5YaUJOyrXtk1KuML8a2eb9UyN/XRquan/PMBajRdW8ONJIwIVtrb
2uUDt+F2idqDJFzam0FJuOoDRX+PXm8oTMK7cVb/Xrr5QEPtyzi1qiQ8VG1v
UC/jAy8uBAU0PEnCI+If9ZT+esOoPLu9WnsScrM/KjZu94bp5Tydhr5N/yZ5
GbdRvOFboa6M2qskFOPteeXq4A003h/4GiaS8Bpln7f3AW9gEw+nV/u06dce
Sbp9y17AP7N7uf5rEqp8Y6hPrPUC8buVb47+TsLmBbkrudFeoHTKvLV+azIm
lmu5hRt6gdaexeKjLMl4Y/rZN24eLzB/nXitnjsZQ4xjerzenYGT2SJxR/ck
o8jI0q34+2fAx7LJv14kGSu0Zuq8fM7AZQ4Hu6OSydj8q9ODb3M+SehZ0a5X
TMbuiLL2q388ISuZKn2USMZz4Uj7qcUT7upJ89XrJuOPySbm7cmeUELXRXfU
NBmzWC7fYzb3hMZm96U622Tkn+R/NLnTE7rCt75RdUpGpXnvjqz3m/PW0ZvP
6zyTUfy8U9rBBx7wcfVIsWpgMgo53vS95e0BPypHcuouJ+PGt/tza7IesCUo
MFY1Ohkl+VZNjq66A7sMm39dcjKy1wkvnX7iDnsWH51QpSbjvR9Tf0Ji3eFQ
nrZ23fVkHChWvhph4A7KHhNSqveT8dh++W9nOdxBRyR0d11BMu44GyB0fPQ0
WE7upFOt3OQrVr5P9sZpcLpZ/qW2MRkbQw4tbzifBj9709dH2pKRtKxAahM7
DSG75p/V9ibjdq3gH/GLbpA0El905GUyHu6m4dcqd4Nsyv6c2vHNfCmmI38v
ucF90ycxR+Y266WbJlRFuEEZq51f7XIyxqir/Aygc4OnL34eP7KWjH0yR4yk
O12hJ56sVbslBblr7Gm/Z7jCGy1JqSPMKci/mMfyxNoV5mhe7KrlSkGGa5qR
FH5X+NnoRnuEPwX/mXmdOjvpArQhNF9qhFPwb2Je1amHLsCpcuOVikQK7nzK
TnLwdYG9P5Wf1Sik4INeQSZveReQKBsqVFFPwXutseZpa85wxN//ao1OCm51
GE1tfeoMehIsMSomKTh86intjnhnsPqU61tjk4J3o76uRRo5g0uu5nGVUyl4
vG5tnJHbGQJc32vWeKTgx1/6P4pfO0GYULCkSkAKnlB8eP3SbSdIGePdVXMp
BV/Pnkk97eEEV6+VblWJSsEcV9sjl6WcINfWeLE6KQXj9//Q8Jk/BeU8n14q
U1IwVV/0g3rwKWgeiG2pvpaCnZG7H/gwnYK+dKFC5XspaMFjsu3f1ZPwzrDh
SnV+Cn77lB+wIn4SPjMej1auSEHt1bqLJ2sdYaX1u091QwquTg1+UDFwBPqY
DFvl1hTsjlc3TX3rAFx4WLO6JwU5YpbIJ30dQGi9TUJ5NAVvpBoUVG7Yg2Sd
y87q9ylosGqucoViD0cv/tuiPJuC797tCWI6YA/HFK4tVC1t+tklpMNVZwc2
XxVfKq2m4NOSi63VJnbgVjTQXEWTihVbZIs3pk5AoLdvgRJTKvauj25dvnwC
IsSZrlRxpqKlUd3LdI4TkDpzP0qJLxWTbjLt/PDwOFy7iz5V+1Oxo+BZ6RIc
h0en3tkoHU7FoDbd8MZXtlC555JGlXwqButdJczP2sKz19wSSmqpGP2Nb2sp
qy30ZxfvqNJORbfH9Sc/PLSB95aGW5SMU7H5oWnDZy0bmOeYna+0TsVQodjJ
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
CfExgs4wxS3zf/8v+r9XwJX/xf8DoIkhCQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
//0/5/+uwIv/i/8HfxTACQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw922VUVV3UKGBKGgEFJRUUFaVDBNS9JiEtIN2d0qLSHYfmhIJSCiIqgtKt
hB2voiAgIiJdSnf47XvvuN/+c84c61lrzznX2mOc/eMIO/kZudJQUVEhWiqq
//P5/y5P+P/fdHyr+l8SQv43Xr7LyGV+KwRIJJ1t7oQa7E6X3cWphyEQs+N7
woauDtOhr00MawyBBV6zZu/cemxFkaWN7X0IbJlf6Tmi14jd9XLcuNMfAnr3
lzS+HmzGdArqZWVnQmDdzx/78a8FW+1k8365FQIGCY9Tp/e0YndpXe6bsYYC
U2SMZ8rNNkxXoWlwUiAUvoy49uY0tGOrHhw8YRKhED115vur2Q6sMNftEhsW
Cs4PGM7ulXuJ6X1qSbmjHwovUueeM6a9wtao9r+UsQ+FxWWJI9Xrr7EiOc+d
F36hEMXrf2Uh5C2m59aqYBYdCpRY++UyjvfY2i1u/0liKGCfPh759uwDVvTB
61FoYSjscc64bR/7H3Zxt32YtSoUWqmntjTtP2Pr0jwCdzpCgS7F3f9zaSd2
z9nXVKYrFJ7fi9qVr/6C6We9zHgxEgrDfX/Etd99xdbf8r01XQ6FqpWuz3f/
dGH3tvypJ+nCgGqp5dUboW+YvuQb5VDuMEg+9XHXyLkH23AQvMp6HB+/v1s+
VtuLFVMCywsUwiA1alhnnuc7ZvD63bi0ZhjoxercZk3vxzbXDwu9MA+Da/e2
84b2DWDFYtctTT3CoFw2y3K59CdmaPeRPBEcBjOfbxZMmP7CNolHPoYkh8Hp
kOc6KGUIu/8ieA9rThgETw9tZAf+xgxXP2EFpWGQ59jupO8+jG2JHguWbg6D
7RenOhpdR7AS67DKjg9hwOMpffKQ3yhmmPFl2mQgDDImjkp9ihvDtttOiEzM
hsHwTs4B4eJxrGQpwjZkJwzOxN6/FtE5gV063p3FsjccQrZaRbmZprBti1Od
+YfCYWOhkRbTn8YepEYzSUuFQ6TFNRGjuzOY0fMe1Q4UDpqzJlV3/81i2/Pi
4SaG4XBh7svQde+/2MOjcbXjDuFwTOgMm/DEHGZk9v1vcEA48M4col+rn8d2
k6REWWLDQX43eSEnbgF72JzgmE8Ohxb/Dvk8s0XM+O+PHKl74eAm6lF6WGYJ
2xWS7W6vDgfpXgtj3f3L2EPjJDaTl+FA9dMiQndnGTNJHNQY7w6HX7pF42fm
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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9e3c8l1/4t1VWw17JKrPITNZ9XUmUPTKyCdmj1Nfee32WkhSlJWU0JKWS
hCKFjIQQyqgUsvXzPM/r+Z1/7vv9us813u/rnOu8zh+3uHuQpScDHR2dDSMd
3f95/r/hg///LYCsw69xLex/cThxPuRIVRiW8mt/DW4uJ5Kmf7bYNoWhxH2T
pQ8llQT5ooHUyU9hWH58KryX6T5x6ciVuLNTYdh0K9CnKvwBUfJ3sS95LQwL
1GIuDbBUEQ+uW6id2x6On2KSI7ofPCJeWJaSrouHo05elLJu1GOihY5x8oFK
OKZtWTe77fGE6C530Ht1OBwVrX78PBhQS4w4PizssA3HCErjN5kLz4mfbFuX
hn3CMerQ0J/m03XE8mNPq9+R4cjY6zH2tvwlsenk8zK6nHCMLJb89natnuDk
5WfhuBKOGf1Wr766NRDCr4LcRe+Howqn5fa9/a8JmZDmWoWGcJR3Kfv0KKCJ
UBUV5ye6w3F2d/1gIf8bAt+Fh5h8D8e1FwYumz+/JYwiO1oclzf86+T+4qtp
JWxl90j5b4nATsP/gP5BG3GiJzEuUiQCtaqOBqx7fCACk/v7MhQjcM/NGp3y
2HYiQkVN7aJuBIbN54/JlnYQKcPZpNvHIlBh+Xsz+1gnQSWNTzz2ikD2H/7e
u5W6iMs6oNccFoGv9O+6/srpJm5P5RX2ZESg7I1L7BL/eoiH+TOL45ci8F2B
J0tqwieizuCo1d/yCAwtzSPdEfxMtM5fLdv0MgJtZ0KmrF73E73Xlpl5OyNQ
Q1nop2XKIDFqYeW+eywCE6rCBm8pDBG//t2pVVmIQL/TPyj+ksPEShkT/yHW
SEz5Ot7VJz1CbHZ0CrHcEYlybyV9rPZ/JbjYHrW4yUdif4iegLLFKCHyeJtU
CERi2TOFrI6wMULO62RcnEUk9roUS5DLxon9PHV9pBORmLDNr/H1r2/EwXoB
taIzkcjqn930DiYI4+AQUnlqJPop/VjZVDhJ2Im8nXiWH4lP78sdaWabJjxa
JfTe3YnEO8zKw8EpP4jgiMjC/meReLYu6Cpy/iKiZD4uTr2PxPPP1FzarGeI
1O69VivDkXh3jsnpm9xvgpaUXMY2F4l2GlvlhFj+EIXKg8xCm6MwOnzwFOnH
H6J0aL+7rEAUNqTm+Hl/niUe5ZBqD8hFYbJEfGhr+xxRr/2d74h2FBZtyrg8
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
qf87gvP+F/8PK+SYmw==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9e3c8l1/4vpVRMsqsyN6jrKye+0ayZWRmZ2WTvfce70GiRVPLSlFIFKWk
kqREET6oZBZSvn6/3+v3ff55nut1rnOf677OOa/7nD8eYY9gKy86GhoaC3oa
mv/z/n/PCfz/Xw0bXJrKlPD/xakswmK1l8PxQczfVBfhBsJ8pzybfGM4jopt
MXhw9S6xR0Bj5Xp3OFoetFb6faiRmJbQH5P4FI4NDuMjpn+biHv7LHsuzYaj
wUwx/Z/XD4g0Ted7QrQRWKoeImXU3kJYHDpRcW5nBL4wT7fIfPWQEDCPyN0l
EYFDO3JM0xMfETN2KeGl6hH43/KG96kr7USje4ELl0kE/hzgM7s73EGk+5cZ
kp0j0N/627FKySeEZcQVJbaQCBRo01MaTeskBJPq9uSlRuAJG/WtRotdxLfs
VkbmkggkP8wliiOfEU2U7rn0axE4GCv0NontOZFx9t1H2gcR+C/7wO7nzS8I
q6ujTxJ7IvB+yl9HpaSXhFDtj+o/IxEY9OmpZ7TDK+L7/dXT0fMR2NW4m7/6
ymviweMtacv0kXhha09L7403ROZLzsAwnki8H/v9QkJLH3H0vYDdT6lIvGbz
6A7/0FtCaFRaJ0ArEk/uzRCkZXpHzM6oyk6bRWLdqIx7CQ4QD5Z0uL3dIvG1
t+Ipzez3RPY/s42xsEisEmh8qDoySNgwO067ZkRi830Osy16HwmRHd5vP5VG
YmPvm1sv7g0RP3eHtTrciMTvMtLfFzSGiRbxxGsDLZEoYHWp4HXPCJGjmEu2
fhWJ1dYX+T8e+ELYapyKez0aiUqXb1lGcI4SonoXvcyWNnHvg3bPxVFizrT6
yHPGKLzhFbLyZHiMaLV9oGHAH4Ubq+z5Da+/ErluXaJPZKOQ3eTpD9ueccLe
r2+7DhGFl+IcPna/niDEwkd+t1pE4eKDLlbpkUliIWFmVPN4FD6/lCtTuPQf
8TDr14vGiCj8HFzWx881TeST6e6pZEchnRpJYkB7hrA/w1ZRVx6FzatDfh+C
vhESV3blKtyOwmUQrVK48Z1YqJYIv9kWhXcteyUXZ38Qj5qUXKT6otDk52Nb
oYM/iYIOwvDKeBQmt5VYeRrPEY49xkoiv6PQa8O3anVtjpAcsN1zgSUaz35q
LbWqnSeWPnsw7tkTjb2gmhTht0C0TwfNnVaIxnCJ8Wl76UWicDH2I7dONCbH
uAjR/Fgkjv3NfEKxjsb+ozs/+d5dIqSYqNXs3tE475b5kZS6TCxzXDidHx2N
N+T4TkQc/UV07LqZypIXjTv583O3yv4mSGKNAZnnovFDwtsHlowrhJPCY1v6
2mi8mrf1lvbkCiGj/gqTO6KR47xVX9fzVeKXzpDM3/5oNA/o1p+4s0Y8MfmP
K/a/aFQQj/PLq/xDkGwW//1ajUaZtYqCauo64eK6MXWSNQY7wz119XP/EjIn
tr2dE4zBVqnXOocy/hErYbytgftjsLbmseX59A2iM1702oxeDH7ceoVD9BAN
UDIVyT62MWgovi2Z8xkNuJK04sZ9Y7C8cFWIx5wW5MoNvNzjYnDM6JS4/AAt
rF6yPjJSEIMNc9O1pm500HXbVeNYRQxWPOap8PtOB9RGf9HB+hgcd5I9Hh9L
D27tUdttOmOQ90nxeNxWBpB/kfb7zfsY5LIoZvc4ywBr/UWj5jMx+CzOZL/E
vi3wbOTMixfrMSj+/verts4tUDx17a4heyyW+ZyNFnVmBI+FOxc6hWNRUfqk
gPEvRlBYb8vRVYnFFjOV/bJkJljf0nOy7XAsFigIDT+UZ4Zn7IPO2g6xWBdO
bvz7ghlO8Y8b3PePRfKDpwXD/izgITq3Xy0xFl9WV7Bbb98K++TXd98hxeLn
JNeJY7VbYV2NmXHfpVgsOivzZvboNniOXHO37sbi2Wm51bW1bVBqLPRR+lks
3nzc65Z8kRU8j8o9ufoxFnMda+vDTbbDfhf1atEfsVjB6Pq+Z3k7/PM5dLpi
IxZ9E+kTUyrZ4EWoRarAjjhcuBtxtMicHU7HOQWUi8Xh5c6DZdPr7OCV4WvL
eyAOg+gaZvVsOUCpKByLjeJweUrrbX01B2ycTpbhdIrDsitTta1MnNBzMZ+r
MCgOX3960Ofqzgnlt07/25oShzP3GIxKmznB+97lqSxqHEZ7rJ5y59kBKo9q
+xiuxiFd/FeD+6E7gOZ5S0tKUxxG+eiolr/cAb1vn1399zwOWwO/zNLJ7ITy
4X5S3HAcZmab1s1l7gTf/77ErvyMQ4N7s87u4ztBZf67ZwRdPKbv9blnpcsF
dH9WzBe44lF34HBMewUXvGLYohEsGY8vLPDGrQ0uOMvGKfpdIx4nTblid7py
wwk+ge0nTONxbsDo1fJDblATkf494RKPdw9ELx3ZywP0cqqjHqHxOCM/Fy2a
zAOvVXVefE6Lx8+nynpCRnngHJjddToVj2IV176r6/GCn5HDhQ9V8bjanHsv
4QovHLD2yrFtjscSN74lPWY+YHAOPfn2ZTw2f/NVzvXngz7vBGeLL/E4XX1b
2v4VH5wPyTF4uRCPzyrVBmuV+SEgtmS/8ZYEFJORpz19mh/U0yt3P+VNwJ/b
oyV5/vEDY+HtLYdkEnBJ2vGBiucu6Cu9//ORdsLm/rH7sfZ8F1RUdn44eCQB
w2/uiAlX2g0BN988fuCegPrPAmhulu8GzbvDtw+EJ2Ddc3O+W/R7gKlturQh
MwF18nYrZAfugf5nyyn7yxJQINJuxmxwD1T20QZU30xA+2OfK9gOCUDQp+22
sg8TMD2fwXykVgC0Jvmx6nUCukiwyrwVFATmOXEZ8a8JeM7plCxdoSC8W93P
dXE5Aee1bG6k/xOEi/TEP0HmRLzsHUg9GbIXgrcbT53ZlYh/3JZqZr/uBW1e
2z4++UScsjHoyJETAhZhj5YSSMT31aYltL5CMCATdHWHVSLqLrX/Db4sBJdU
YklFnolYMaNzZ2pUCEKIzFjWqESsPzM0lSgkDAcNKZ45OYkoGTLw57CbMGyz
Om/OeDYRJ0T0I2wrhWHw2A31tOpEHB6d8er8KgxXvO6J0LQn4o3DJ45WS4pA
WHAHa8LbRGSqaqOTDBQBiOn9tTqRiHF7rdwNGkSANe3jl8iVRPyY+yRV/q8I
fMiffL64NQk/dnA//mUgCldPLTSECCRhZrnQpYfFonCy4t/5H4pJWHfKP+ny
V1HAG1tz/HSTkN86d+apihhsb+A5+d/RJBxl7ThpmC0GH1tFnD19ktB86iyz
4YgYXHuqYDAak4S/W2NbJtXEIfyN5n6X/CTMfV9DNaCIg87Q4d1D55PwyK6U
V0Vz4sA2YbXFvi4Jp6Ovvv1iKQFDsy4/+x8n4WdZmTLXexJQteL3wXIgCTOO
vXdWEpSECLqox71TSfhwp3JtQo4k6LKm3Tb5k4Tqi/pzXiuSwJz31GScMRnp
/1CKdvhLwWzRy0ciHMk4FOuzr2pUCt4Vv1V150/GSs4kHXMnaWgp+3Djgkgy
DipfVZMdkoaL5z/vHZFNxrcHFtS9XGQg+9JE8R7VZDT970+swKQMBFd9YzlG
JGNt6UB/fJgs2N6eTywzSEbOE3DhGr0caNf/XnxvkYyvR45IdZTJgUjjX18e
x2R8qZLuMK8iDywt9CNHjycj7wMXCcd38jD3iMWaGpCM4u6qcbvjFGCgk/3Z
m4jN/kf1hu0kFKHlOfdBjqRk1JdeZ933XhEuvdpdb56djMEj4xmjh/dBbr+w
ZAE5GU24+PN5r+yDkA+SZ1+UJ+OddzRdhoz7wXZEnnPr5WRsOBD1INVvPxz8
qpxpeDsZmSfWE/re7AexKY0/mfeSUaWUfl1PWwm2/oCQzrZkFFOPD/t6XQnm
5/Un6LuTkUtv2L55lzIM/jJx1O1Lxn2tSQcGCpXh4R/LV8lDyfjRTz1Li1EF
LtPYH2ob38zXtkVjMVkF8ra43P/7Ixl7/pl9Z9hQgbCtngrav5OxQPGydFSy
Ktiz+12KpUnB5Tdp/uZb1IDgCuG7z5KCvtvAoahADcT5Iwt+70jBwdYrjNr8
B4BVMJ5ObU8KPmq/Y2xXdQAWRFKjwsVT8Fhq8MVRTXUYlMz+Xq+QggYab/YP
vVaHNrlC9/kDKSiY8+65np8GXN1fPKCok4K6ZZOmvEyakK9WbhJknILlgWzr
Vtc0IUyr4tEt6xSk5Xg7sWSsBQ54VfWbUwoOH765a3leC1D/1g1p7xRcnQ3T
PHJWGySM6/f6Bqfg2A8pvz9GB2H7kabiq9EpaPZSy21h7SAsWT9kmUhJwbt3
v+6UqyHgo/2TRNG8FHz+19nkvDfAI+fni+7Fm+PNXz9xgQPhmsdr34pzKXj1
jNfZlGCEQp+B4ZGrKXiEMddl7hVCeMAnK4HaFLzu8O/IxH4dcAwde3rsfgpe
3P3LwLFEB3Qip7TLO1Iw6+V3acM1HZCKm60bfJGCYo9LSqrcdIEteUmC910K
6vxb5Yh4pgtL6WtnbEZSsCaf+dzV/XowlEPDWfxfClbtOtyhdlYPOgoZM/vm
NudHodpMkPkQVFFZ/3CspWCea6ygbcQhKDy9I+QIfSpuHfZte//1EESc45so
YE3F/LMf3p+11geni4KOPdypaHxc4+P5J/qge03s1da9qZgcFB7wXu0wSN+S
OWQklYrqvySZdG4cBo66ffez9qfiMy0aiQFBA/h1V02hSzMVDRgVH5GLDeDT
A+1LDIdSMbHzwNXgbYbwuE2XT88sFddSDvX6pxnCjSeGBSm2qXi+/k146roh
kLrN6R65puKu3tfNtZFGENl7NOqfbypW0ilbLs8bgfNbx+/aYalY3Vd41jzI
GA4NurnHxaViWdSdV83fjEFm2HvgfnoqjtmamR/0MwGOsQCTlYJUZBPh4emf
NoHfk2GP1EpTcbKzsyPVzxRGvkWrRlSk4q/h8GDT76bwZC7xxp3rqejQzb5H
NdgMbiyn712o3+THXbqps2gG5LXc4n0tqRh25UNidLQ5RG+QWII7U9HklcLB
0X/m4MJQmni7NxVlXKvn0zKPgD7LucVv7zf1sOXuuctkAXJsl3xlRlPx6nWR
E69MLWDHzuvDvjOpePyVZuspigWs8NZYXVtMxZYDweWcHyzg8567TyfWU1Fr
foDeQMgSuoSbtcUY03BYbopC+FrCLYn2Og/2NNy/TU6Pps4SKLJPJSr50nDi
/K7F4jVLiNn38sxn4TRMuf/76hZ9K3BTfcshKJuGrKfolZ1IVnBY80OGk0oa
/lvdNnjxkxXIwee18oNp+Nbm0PZxaWvYeWgi+MPhNLxkC79loq1hzfDbOK9F
Go5OGD9MfWoNX8zmHWwd0vBktXbYb96j0GX1u7fYIw2ZUu9ylJw4Crft/uq9
9U/DIeeXrT4tR6HYif4+Z0Qanj5+COI5bCDWnUXBIjEN9Xz2+n/2sgE3b/ZL
hVlp2OmuI3O+xQYM/bn5XpLS0GPfQ8dOLltQCNldsK08DSeDWCfdg2yBK0KY
zvhSGj6rGq5J7raFPzGSUdm30vBJe1uNgoQdjCXKf++6m4ZbrS3qotPt4Fma
svuWtjTUPD4l6j9uB9XZGgN6z9JwLMNbdsdheygpAJPUN5tYXCsy5ro9xFP0
Hz36mIYdUianb7E5gEepierG1zT871lH4L0IBzA8a3nj4I809Dd8nlE54gCK
lXZ743+l4e6rO9KijByB56pz8YONNLxccfWCzj1HWL9xnGWVOR1DL2ysMYkf
g7GaE4kHdqRj7EsI6Ss5Bt0NwYsRu9Px2L73wdeYnaD2foRvg1g6ckHOYH6C
E5x6GDe8IL/Jv/sqNGvJCeIfp1jtP5CONofHGc8EOsPxZ1lPgzEdA208+J9P
OYPxywLtaqN0zPQrIni8XWBfH7Xuu1U6km7g+6QJF+B9XyYh65SOK9w+9Iw+
rvBv6MKZE17p+DO5oe3qjCuMf7nCURWUjgpzLjKK6m7wfOJmxmRUOp5aX+bm
ineDupm6NbGUdNT2SRfaeOQGp382Bh/PTUcn/TMx3xndIXGpdbySmr5ZD593
vjdzB8/Vxw5fzqbjzctVb5tL3MHkX3ev4NV09HavrKKMuIMS/Ws955p0dI+k
77OR8gA+5oGmM03peJtvSORfmAf8Y/0k/7E9HbWyz1WlPfSACc6xi3wv0pFT
4HLL8Nbj0MMzxWvXn45X8m9K0Nsfh/rds/klw+k4oejVMX3lOJwWWqLtn0zH
3M9tbFlLxyFJfC1yx1w60vSIvHql5wneMjTfLVbTcXdL8/4mqieYKjK6F9Fl
YIFJaofyuCcoq7AOvNyWgRZK82mqql6wS2OHCSt3BoawKH6pyfQCGoLvkbFg
Bsal3XhRPOgFk7qCqjmSGbgUvfz6nYw3vDQQu/F0XwYepvxYOp7gDQ2mMnsZ
NTPwsei7d4qvvaHccl/xIb0MfPGr/bK0qA8k26qxpJlmYDc42ehE+oDPMe3E
dptNvkhevne3D5i76S5uuGRgUeznm9l7fEHFy9CX8M1Amf8O9p4K9oVdfubD
8aEZuEcs6XNShy/QBh+1ao7NQN/cJ7eVuE/A1EnHp6tpGWgWHT9/zucE9Ea7
aasXZGDMuQar2vsnoCHBuy7yVAaWH3kaa7/ND86kBkjcvZCBAaGfRDOc/CA1
K+zMYlUGCogv04vf9gPf/GgOpfoM3JH+blzirx8cISdmhDRnYORBm+4YU39Q
O5W+Vv0kAyfop0dYz/jDnjO5wT9ebvo5tyX31ZQ/0FWQxmXfb/rVMBhSpxoA
05dPOfh9ycDFJr7ciykB8Pr62d6q6Qw8dSx/D7UnAO5VX9T7byEDvds/3z3J
Ewhn71Q1ia9vjp8V56XqGghpTdXynlsysbs8J737aiD4tTZcvMiWiSmyhUwi
PwLBouMB7yhvJjp85tHYrxQEak8f5e8VzkRSecXCdEQQCPR00brIZKLTG6Mo
aAoChjc9kWeVM/EL83qV+GoQzLzr+/ZROxMPeW5bJ6kHw+uPg278hzPxVKCu
ZWRkMDR+HnlndyQTZQJuCbyoD4bz4+PGp+w39YSr52f8CIb06Zm2fvdMlLjN
tNd8Zwj4z86p7PTPxOqbHPr0iiFgtfjrumV4JqpwjgmNGIWA+sq6ICkhE8dj
Nb5/PB4Cgn/pinszM7F0h+v+X/EhsIWOhWU7KRM31Ko75EpC4Dsje6JJWSbK
XVh6EHcrBPq2cS/mXMzEn1e+ZH/pCIEmjt2+z25mYsiZmi/2gyFwgVt4mPFu
JupGXbw/9j0EMndJWuk/zERxqRzXeJpQCNgr/zTtaSb6X4k5KrYzFKzElLU7
XmfiCK2Z3wexUNCQ1qij+ZiJl/7Q3SlXDQUhBZCAr5l4x14o00c/FBiV9c8k
fM/E2FqhADgaCt8PmHC0LGeiwIXEAyIeofBW2zJj7V8mrh69Nc8eHAoPdOzW
1JmzMOYC6RNzXChUHHYOjuLMQpoPASHbM0Mh0+T4+N1dWehdQu8sSAqFQIsT
DkuiWdj3zz5JuywUjtoE9yrJZyFD5KkJ38pQ0HSM0AtVy0KvaKP2y1WhIOwa
11QDWfhoF3vSfHUoMHmmyM8aZuGsb/VNi4ZQmPXNuihnlYWFiaJ/HjeFQn9g
Aa//sSyc/PXByKwlFJrDqPnXPbOQ+djW/NmHoVAZVUY7FZiFJ1vtP19/FArZ
8RciJaKycOGrXERKeygEp1z55pmchQepqhVRm9gm86bbpZwsnHLaPNFs8rXz
6t6NUrKw7pV5bvdmPBFSo7HQ2SyUPSvtIbM5HktJa5vLlSz0iQ9ladjU87Ps
scq56izk38eOJzb1Dpzvvj7UmIV2EdkDpjWh0HLpleCu9ixUnaBpcL8eCpeq
3lHtn2fhuuTDthsXQyHn9hBz6dtNfXE7GWTPhEJI/WjCu09ZOODQlj5BCQXb
xv8Wdk5u6rMtchzOCYWDLT98rH5m4Y5Pw6XcyaEg2r74ibSShSJ8Zd7kiFDY
2rVq+Yo2G4vns1as/UJh7vlG1/Zt2UirX5Xk5hIK719t0Tblykb558b4wDIU
Wvu31eUKZGMToRjqeSgULn/glOiWyEY1Wh5nD7VQyBvhPcO0Lxs3yDPmjZKh
EPpVgOOwRjYuaJqXePOFgv2UaEa6bjZe69mXeJI5FIgf0msdJtkoc3yf5+jv
EBBfUAymtcnG/KNBZ+9MhsC236rj4JKNektaqT/6Q2Dhj5ZDok82Zq42+1I2
98MgjW5vS0g27rxOabhSEwJtWwz1/sRk492/9S0yZ0PgylbzJo20bCRfDh0W
yw6BfPaj8tH52RjevfNk6ckQCONyvHivJBtP02z0Z7iEgAO/G+/y+Wz8ccT5
xKJhCICgd75yVTamN9/P+KoUAhKiAbRhddnop2Oe4LAnBFilwiJrH2TjqN9k
lf2WEFiUi/42+zgbHcejGp8NBcOH/Ylu8i+zMdSP49PGzWB4pJb+zn8gGznf
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
DEP3NhAetktzQt7F//s/0/99Qkr/F/8P/QCLsg==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {200., 0}, AxesStyle -> 
     Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{200, 1500}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9240973518776183`*^9, 3.924097385406906*^9}, 
   3.9287101957404222`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"cda1fa19-5e42-46bd-abcc-0abd24e5e0e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen10", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen90", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hmpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.15", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240974272541733`*^9, 3.924097488037097*^9}, {
  3.9287102641478996`*^9, 3.928710274967211*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"b89be71c-99a2-4291-b9cc-7ffedd36a42a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxdm2k0l1/U980zUf2jMlOhkiFSqu+RWdGkDFFSFEmmokhmkaEyJkLJXKSS
MoQQJfNYMs9Txp+Zx/Pieda67+vNtT7rnGvv797rnH32eXEJmd46Y0ZDRUVl
QUtF9X/f//tpG/3ku7GhDP+PU19t+LZJ7zsmZLivZcWLwcnw2urm399RXRis
Lsa/G2pcXw9uMS7HRd5LLbcb9mJz+Zbb3J3l0OJWuLvZXArdrtaZPFcqEEW2
3xClk0GmXNnI1v4K0F+Wk6StkIXrKN+u7RY/cHjYjsU8Ww4nXt025R39Ado5
hWrmmgPYZvgrhu/WT7zgvOM4znMIg5w7WvmnfkIihu5GS+hhZH932Sx4uxIJ
5XaaIZqAl2vDSaH5SkRvKC005FPCGbk9j4Sdf6FnzGPOKfsYBEc9y0RWf8GR
NvsCs50Kxl/+od7hXoX9vUNP3M6qIc9A9shOumr89Cm7c8pYA/6cj5x2+Vaj
n0JbG/tUC+lXJg0209dgIjjo98a5E9iEmLlQtRp0Homz+Bd4Eve2aYb997AG
nFqPf0vtPY2u2RmZ8IoaZMlFaelmnoFGbVzNFtZaaDqpn3l4RhcZ6SesI07U
ovDylMXGLeex5eE8K09QLbY/0x2jLOvh/pWElMjqWnx8qH/wK7Mheo+eUt/K
VQc7u4a5LTDC8W3Lvc/O1OGxulHjbOxFZM0meWwLrcMeNbq74REm2Fp7VvB5
Yx0ENKazyucuwy19LX87dz3+uGj3a9tdwYBv2oVo/XoYG/NzsjObQeeK3gJv
VD0Gztm+Dcg3R/ZR2oiYP/XwsvHxKXtyHXzbMvbz8zWgJXHaP8PXEl6zhnUv
LjaAZoOngmu8FUZqGGwE4hqQUBWrYNhljTPpWexxXQ3I1Hx5oD7BBp99L6YJ
ijQi3puv+NK4LQSvsGjGX21ELk+1eLKOPXyPZvcLJTZiV4W38FCZA8a3mnq9
HGjE+f8kyuP17+DcLLuwiHgTjvYKPJWid0JezeevryybYLooeGNf1V2IpJsZ
i6Y3QZ99LVLiozP8fbmWEsaasPS3vyQ/9z4mTfMjd+xrxkPWhiMfeh5A/6iF
fKJNM+bN/irf4HbH163/NezMasabeJkHnic9sHO20DZpuhkOUylG2557IrDG
aoOYXAsOj6l0Sy95YSaN503ynRZcy/ux3GTjgwu+JVriOS3I09EfFVrxRbGp
zWDKQgtavIaeSMb7Qfwor4+EYitYNsirCV58hMdby0XSXFqx9mzZSV4uEHMz
9kW7C1oR5mM3lLwrGBdrBC6lr7XCwy449tLzxyhN+7m8R+k35sRn3g2/e4I9
vo5Rbzx+42FC6fL2lqcIMRVRkCz5DbZ8jrp0jlAsHqlufEv/B6Nn9UzOnQ/D
5a3O9vvU/4DbndmsLiMc5TM7uTIf/oE35fndnu2RkKypeyv14w8KPIO+nX3+
DOFprifesbYhlH756Yjkc6z6SAxLa7dhsx/fAbfmaFw1bfLNCmrDzq3/XesJ
e4HKIx47ZGvasMXM3dpJLg4yWyW/vef6i7u7qgaKd8cjaqbVZP/Zv0i8ahGo
IvkSVDXeqx9C/6Inwt7D+sgrXE+TjpZr+os9tknMnwwSUOXz92A2dzskXLIa
QzxfQ97Ur1neoB1E0kXxQW4ioo/I3f4U1Y5fJ4cuTlEng25r10aFtnbkWbX9
u66XAsuZgMwcvg4ICRZ6Xc5LRV21gs7BSx0o3aqhdEE6HQppvSOf4zqgOnr4
cl32G8T5PPY71N2B9MffOjS0M0Ar/SLkL1cnmqPjFWLvZeITv0N3jEwnugI1
e57pvYMlm5b0xbOdoBMpYGw6kgX+RQE3fodOGPPHdIbsfY/agdmq9tBOyBru
59m86wO8G3/yxX7sBMOevQHhEh+h8C3e6lLTOqcGv7qgkI3RTMdcgblO6K9x
Mr069QmxL7RZOrm7MHLMzDzdPgdnA0QM4hS60B0g+f1j/Gcw3FtIMjHoAgOd
q93K7y/4cq2aInivC3Zc705/FcjDzXOvVbuiusDpaFpywCYfQsrOofG5XbDi
ZPaLqyxAg9TpnsttXZBqM6yL3FaIh/y7ZIRX1v2lJXzjaiyEItuKWzdfNwQe
v+5vDCvCv4W66pdHuyFu9PTKmlExXg4k81+51I3rLL84kiS+4Xyj600Rt24Y
PvJu7F39BuZvunk9cd0oPHIroLq1BPmZEqwJRd14eODdpEtuKWxeUBle7e4G
Vzuhpk4og2hAU7IobQ88vu1osg75jua76XO9Ij1YpPyX3uxXjkfXPNReq/Tg
cWQL1wnfChw9px9mZtYD3UmNstZHPzB1TLJ3h08PijYKVgRG/MRrKTrZ/sQe
bGS8z22fWgkD/t/uid97IG5/kzek5BfY2DJrzAd7kOPxqWWmrwqFC94Cu5h7
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
3EpaYCQDpwYdPlI/AGfXgkczNRMZLbHP3pftClejjHBGFiZirfvN0eqGK4ab
r6Ye2MhEnC7QGQUJuUL/7LaCa9uYCB9xDP/Qch8lVdW1EcJMJClL7Aztk/uQ
0fLu+y7BRIIGH3lHa93Hi9JDC3MyTER35KRsNP19sClNsIkpMpFl+W31AsUu
cMp7LaivzEQQdNBJ2c0FvQcu7H94nIk8vB7wUYi44Mx7To2cs0xETSXCo57a
BQWSZRcGLzCRH1+HhGxKnbEn1fkWz1Umcr5ngon9kTMid0h7algxEduxsxX5
Z5zBEN8f7uTARIopc0shvM6w441OTXZhIs1XS/fGDt5De8TpghYvJnIlT6Nq
NPseTmxirGMKZCICFaJVvr73kBOU16cQxkS+v2nffdvwHnay2C1cj2EiwTOf
zpXuu4en3rvYn71mIlbbmS86Mt4DFfVfwYo3TOTE94vmgV13YeXydP/CRyby
PEVAnrHgLn7PqWuIFzCROEcThe7ou1CzX7lgUMZEtKO2uGx1vYus8axbflVM
xJ4+I/v15bsQtLzu+bmJiUh1sWreV7+LgD6+iKF2JiJfMagWuu8uFk3qU7cO
MBHJhy/d2rbehXnbwwLNf0zkHI9RsCrDXTToHa27O8dEHrE49eTNOIHUT/el
rDGtn1eGjXv7nJCuk7LQyshMGm6b5rg3O2Hbj4vsLJzM5GnrhonYn07wUd0s
dIiHmdRFyzFaFzlhprBiv6UgM5GM2VNRneMEk8MPNKLEmAnZ1m+U9M4JVZ/2
G/2QYiZiUd8uN6Y54ZDs8K1FBWbCx/0fx8EkJyS/jfWUUGImD9R5T2a+csJm
iXMRhprMJKTVdpg73glur1nS/E8zk077pLjjsU4YFyws+GLATMZ+r53a+cIJ
htG364YvM5P7JZv5PWKcUM69u3+bJTNZayQhCuu8P6RzQcuOmezc+eqH8Dq/
5Ahnd77HTA4WPg7Zus4c/seF0jyYyQyNxrPZaCfco6eW++PPTDgL9l4KXudB
t2wN1pB1/bfK5XOfO0F3+YaR4nNm8o7E2BtFOaHYUcjmxqt1Psonoh7pBMnp
Js/nacxkeObjg3NhToi2Doj4+X7d/7mrnqZPnMA0rJS2lMtM9jJZsGoFOOGO
2VzB7hJmosjfuzjo7YTuzvS6C5XM5ONXaSM+VyfoGJn2P2pgJmoB3W5lDk7I
a+ZezG1jJgH9ewRLLZwgdvYX+2gvM9Een5qYN3JCeJWHEO/Yej6ajSI1dJxA
o6Ugd2KWmXj9OCIWfcQJNqVjGi4rzKScln5bi4QT2sgro3R6FvJUmfKm7z8n
aOXp27Sxs5C58OKtmauOyD7A4cW2hYX8WjjyTLTPEcLvv0Uc5mcheoG/XGQq
HPFY8m6a1U4WMq3sKfcz1RHLKZJfoyVZSOO2jovdfo6w3NFbVynPQiRWpMpu
mjuiKe5Z//JRFmL1+NktM+IIFd6Ti3vUWYindFrkN25HZEbQcRifZCEHHmbk
eI3eAe+mL0KBeiwkfSTSNangDvyDbsnlX2Ihy7MplXuC7oDCvENz7BoLSZLq
fMd94Q6uev824rNhIfffSl++ueMOaqge22g7sZDajoydcmO3cdRF1eu+Gwvp
uJVg6JR1G6lzixFvHrKQbrmvZ47dvg0e+8y0v49ZSNEd69NxcrfhNW72lf0Z
C2mLdrGPn3bAhMX2+iPxLIT2Imf0+QwHXOyr6b+ZwkLe1O69VHfdAT9MfBZj
3q3rsWgZFhN0gEKbIkfVZxai2EkZv9VojwS9SaHVIhbCfHS7V8FDe2ysT5ST
/MFCIr6d5tp7yB6uOkaaF+tYyEPZbdKNQ3YYruAyDvrNQkRlMsJqI+ygr/rd
pqCbhXglfx09omKHkkIXr/FhFrLIWVAs/88WModlIvmnWYiKzJBZa6QtXnwa
SNNZYiE6ttIVykq2YJON+epKy7re7fFdCx20gdPbM/VvWVnJfpcq0eEgG/SL
Mw20b2Il9wo15K7ut8GZ1/mLHLys5EOVzKJy1i0UCNpzQJSVDPosj3ovWmNP
tJjwrT2sJGnn6T2/lKwRyd0uF7uflQzdtb6s//AmGEJCNKsPsxKBdNpisyor
2HFoGq+psJIj3yLbZTZbodNv1WafNiupV562Wza4gRP0H7wunWMlhrxxCqux
lshxs4gMNmYlwgNluXb9Fti5zJ/+1YyVzEWZy4TstcBTx4av/26yEndn7vMR
t6+DatqvXuAOK+E5akk+FlyDlTUGTrqykj+Vc5pCzNfwe2hm8YHPuj0n6VH2
c+ZQM0vlyAxiJdRVy6/TXprhQ+cl4c5wVqKVJtwjNnUVgkb/yXPGspLTlND+
d8pXEdD8Q5MksZLGPv9PNhFXsHjGzdgmg5UolN/iChwzhXmVnG3cJ1ZiOxR9
fo+aKRo0R7xqvrIS9ap6b9v4yyClcZFU5awkedRS5v6aCd6S8+lSNaxEunz7
g5smJtiWx1po0sJKRpQL5PMeXoLPgaL6x53r+bjn7lNz/iJmsu4MFA6yEql6
UU/V3cYwkdyzNDGxbt/5+6AygxGqUro4hBZYSSqrStK/AUMc2hEhfJqajQRP
eE1fqzFActwJeXdmNrLJ8q3R96/62MxLo/WOi43EyPztFcnWg0fEJ+OurWxE
MV+eL/j9eYxvvGnLJcxGBMaSxmlzzsEwSNhbSYKNvBrvDcj8poty5pZIWxk2
MneOkfKw6Sz2ewemxx9iI47WaYcCJs7gJZVyYe0xNrJdJ770E9cZcLjM11Mf
ZyNn1Jqt6Q+dhsvcmwHps2yE5qhM0g2LUxi0u7J0+QIbaT0pdDwXJ3F+nGfD
0yts5Jf3LfGIL9ootqgSLr7BRmx3/vZUVT4ByT5P+Sl7NlLDshbxvFUL0SYH
tYRd2IjqCvtri/uaYGobNz7jxUbCudS0nCU1cEcvwdYjgI1UiTD3RYyqobvO
wDsrdN1ervC4xydVnNLZ8Kw7mo3kOvefWw5SQV5FSfrG12xkm0N1e6GdMsRU
7xUee8NGTi+fvuNvegzhhfsa7D6ykc/S4Y84LyqB5nDfwMt8NmLY33qFyYzA
5lPUUl0pGynLcm7RGj+KNplTG2ir2MiHFyFcsmJHoPWWXkS2iY0MNU4WSjgq
Ils8V/5KOxu5f0H7xJPfByH62kYrpJ+NwO92XslpBTwW3Hnx2zgbYdwxoSTc
Jo/l539spylsJEH6fRbDXTlYcj/xFlljI6wDrVTVu/aj6anas7OM7IROnaS2
DMhAhWM53XMDO6lMXxD0yJFGpt+7wvfc7OTDePye3c+kwE9/raFHgJ14Lwn4
WW7cB3833sFNYuxkrYVSysi5F5Sl2iVlKXZyw0P/5YL4blx19N3goMBOfJlT
WjkviaNm6rBIAmEn//OvM87/z/8H9jfpmA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
8/GthfJitdrUiDpARzDzeQ7egjpapNqYGjE+seudsMjCY3W3BSutqZGKcTUR
e1k6PihJnrf8JTVy6uZSuzaUjOfbjbpY4kaNJGPe5VL1xOOr7m2fK/ShRruZ
5ptWujF43WD5U/kh1ChwwltaVT0SvzoddTInjhqdpW4WUbAJw3tc22bOyqRG
RNdsrYXmgvGnP8ozpBdRo89sN23GSALxeV1RNCnV1EjO1Ji3KMEPr8C1TZ7Y
So2WeDS7Qyu98RMO8ri4AWqU1h0P0n5eeOc/UQdR09RIe2+I/beCO57p2PZO
+Nqh/s9ppBrx7/BJJvIbPw6oEbOSHFvFhzd48Zyo5WBKGjSnct6WItcZ302y
PRd4lAZRRXFdXuN8jrdWk5/yP0WDYtnUT0lK2OPJYqJGfbhpEItQJF3iqg0+
dG1r4PNVGlTLCfk8UlZ4YUn5Hs9bNKjH8PtSxCtzfJ1fVLu7LA3yTuBzvm5j
jDcc3Wp6r0GD+EiuQTORAX5HUL7O1YAGYbIvBVKJ6uN9XKP+vH5Mg/5UsMo7
KWnhuVq2yp0caRAnW6WKM4cAvuS0fPHztzRoqtWvBoOJFlO3icp/9vkfni/d
yn76jQZ5nqjMS0oMFntHL59uHU2D+or6+bCYVLGTD6KSHqfRoED+lypJieFi
mWlbsRa//rPeX0z6QC7StPIfHpSP+mHUdKjvf8ez0K2gh73/+GkW5Pz1J/7x
Rd+M+qKz/E/PjU9bHpqEf/4tfXJuamS06LpD8i11tTgxc56oN8oMtP+Nh3Ha
clJg+2cPrJVzlOWi/S8/78mop3ev0P6Xr9Jiy0oKT4uQKxmdulqkmO4vOQuJ
u/9ZHyi2ShFljFT/428h5qG19eDmfVo0Ui26h8EkiJ1OkNO9bvEvXt5WpIaI
/T8+BektZSEX2v/mPxEoJy/gSfu/9QwVc56MvMsb8B993mJMIluS3BH/1ie5
ySGuZNr/1kO8I/LG+dx/fN3nt66eKf+Hre3lBDnq/+VHVhl5mbXrP9hDLJRp
i+v46D8sZCR3jnnhn39tViQH4/Y/uwHx1gl6HB0id3/zMwqp4LeV5Zhp6OjQ
nKHm5kdRXbx3ZOQRyhN06AvR2pejbQ/wXCub1GTn6dAlUdZGXSojfPEtOXIc
Px0S5cexc3WZ4tV9IomxN+jQcCWumFnVEj83tLm/d5sOpQs0XbBpsMa/45fb
2VGkQ7FidNNOM0/xJ1wi1zd16NAv0YsRLL4O+MzGzaU1Ezp0uvIIi2TfS7w0
h9zcsg0dWjhm7Vhu44IfsIqcXHCiQ0NfFp0EDd/inxVvjsx+oEOrv68wYtrc
8NS0cgNTvnTIo6l0T6nLAx+tF9k9/oMOaSlLUN368AV/PWWzbSSeDuXw9Kz+
cPbFtxBkmwaz6JCM3xH8jYSveDPZyNq+YjpUTpG/lanxDY8J2azq/kuHjqQy
iceE/MAHzMqWd7TRIUx4E7PgnQg8743IotZBOhRgeorn3NlofIXHZl7TzKE+
zx3OD9ZxeN0e2ez6dTr0l0OmIBSS8P+zi/T/3c//B/UMeYQ=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
1sU=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4}, {0., 1.4337469707240809`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924097470533477*^9, 3.924097490111503*^9}, 
   3.9287102778550587`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2af68740-495e-4b69-ae92-883412d0c2c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmpmem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmpmem10", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmpmem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmpmem90", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hmpmem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240990872821503`*^9, 3.924099131165442*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"09be1226-0ffc-4c56-b2f0-d5a572297737"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlczekXx69QoZoU7Tttt+0u1WWke4oMGqVSqBStF23aLkmbNpWKxpKU
5aUosmQ35Z6QLCU100SWkTWGsWVn+o1f55nvP/eP5/39fM99tvM5xzgk1jtc
jsPhGA7jcL7/+n5/ukU4KWpyq3PlRPH+uu+PCI3aLRVyDKaKOd+fDBHuXuLg
tuPiDPH/eV8Rtp/6JWPLIbchnivCKa4j0q90+QzxHBHWbZDdSF0WOMR3O2LV
Xw4fPrkuJn1HvC+fK9e9LIT0HdE2VO9Mg8oS0nfEoAOHej+UBZC+I+5rThBI
wvxJ3xE7gt45l/QFkb4Dtjx3qtetYfoO2CzwCtisz/Qd8PO+FK2wk4tJ3wEt
I9Q1v7UuIH0H3LffeoeH3UzSd8B527f27a50IX173Ol80EmzzpX07fHv64OZ
85tnkb49tmuv+bLdazbp2+OofXmTttyZTvr2OFAeNRAbrk369rhKUTO+38dT
NqQvxDO7dRwS2hfIhvSFmJrPNfat8ZcN6QtR2ur8tq3Ee4j3FeJVfaXj47lW
QzxXiFuaDz2e5sMnfSHuSb53yj7diOIX4Dh7J5+9BwUUvwDVRPJNYRHTKX4B
nhnZNGy/Np/iF6AlCLb2znWk+AW4c+f+1yHNQPoC9DNJWxYX8hPp8zFQQboo
OWUa6fPx87xB50W+HqTPR92msn3vbcJIn4+jbAqeqvfGkT4fJxSN/T3gVjLp
87E7zfbjJn4a6fPQ6XHriUHVtaTPQ1O5h0qjn+WQPg9Pp3n1v+TmkT4Pe/TV
G6fr55E+D89LjI4stcklfR7uWTSv4/fSXNKzw8+bdOsLeLn0vh023D908FVm
HvF2+PyzTp7IZx3xttgW0O5d8oR9zxZboTzzHDebeFt80qBwYv/LdOJtMPpo
rKF6VQrxNija/KS5d28S8TbY8bqwKqpcSrw1lhek3FZbtJp4a3ymzI+sXpdO
vDWefBYUM7wtk3grNGn8UdcwIIt4KyyMPwDnLDKJt8KUuxLfX7JTieeiUjAu
/1MkJZ6LdkeiHQrXxhHPxUvyp+S9RkUQb4mt8paNjhfY+bTEAx4lF/orI4j/
d/yPbO+F4mjiLfB5Y09S/fto4i2wpndV3ZGsGOItsETYYXGnmta/zhwNFS1G
1mutIN4cDWy0WjQcE4g3R9WQ2MlGy1cQb4b/CKz1OvSiiDfDweNPrZoWsfjN
8NjmQ1ddbJOIN8X0nmfKEr81xJtiyS89F0tys4g3xcMDRmbOTmx/TUTtY74V
ZjvXEj8Rw8LMBS3HGD8RVwTaz99ozOZ/Al4WmDVU7mX6E3CUWfNlNb8U4idg
eA3GH41n62uCSp1vOLauicSboFzANduEySx+EyzbPfDK4NlS4o3Rr7gtrMN6
HvHGePCndQrrvV6fHeKN8edYxb6OwiC6P4zQ42aZrfn5CLovjNBLp+qa67bo
ofuEY4TP/c1cU4evoHFDPPA1+EaafSK9b4A50a7W444kE2+A152C+bL6VcTr
o/XMrku/vllNvB6OXZR1XlOYTrwehut45u4azCBeFy+baRdfWJxBvA4erdy+
Z/qVTOJ1MLA/0CDrVjbx2ljoHfp3RWE+8Vr4fEbwgqANhcRr4QMVg+xOp2Li
NVHhrenMoPYNxGvguL1rNHsulRGvgQ3lJ94Ejd9C/HiMG6vqOC1lG/HjUOXN
TN+m8irix2GLUd7eyPm7iVfHM8OS3lmnVhOvhsbq+c5JC2uJV8PyT9cUpDPr
iR+LfO15+3bXHCZeFXcmBmgaDDtKvCp6dCUmK7sfp3EVtFLJX9525SS9r4xC
vPTe+Nlp4pXwXdbfuZ1qjcSPxpuuyctfppwlfhTeuNUffSsPiVfElPFRPSaH
m4mXR/uXV1fWc84TPxKLvqQLlRdfIH4Ero5vH+fd3kK8HMpjZonnnFbih+EZ
TuRMjxuXiOfgQZOQCzZbrtD4N9nO6g8/DAa30fufZe+9p1dIlK8R/1F2vEHz
/tO6DuLfyb4mfEjZVX6d+Dcyu5G7fpgk6ST+lUyUrcTpeNNJ489kn8VKCu/5
XfT+I5nK268VEXpdxN+TVa5O7p+/sJPGu2VbuzxWOp9k32uRbR3jNMZQeoXF
z4nxvRgxv/AcGxcPN6+yTLrdxN4Xx/TMdjFuOsX0xSoK0hGLHx1j3xevc8g7
HCc7wuITq1WMqnFyPsjiF9txPY8MfKll/09cPFBX9ehsNfv/4ga3+sdu+bvY
/Ij1NgZhYnglmz9xx/DTZQkn2H79Ji4tqswwusb2MwckcU1qpcdK2frA6LLj
C/1zitj6wTif4/zkjly2vtAdf/DxqrOZbP1h0L61VeLDzq88tEx0fzpwNoHt
H5j6tXGt68c4tr/ghDunWKMsiu0/iF8TbGWaHMn2J6wo8hd47ZCw/Qt+zYmK
YZ9j2P4Gm3BFJfOiOLb/YW66msm3K3HsfICNVvYUK9d4dn5gpbPL4kV3Ga8G
tt0Z7l+0mZ4aNNjqTXeYuJydT5j7ounhWgcJO7/wj8uDU7FlS9j5BknHpruv
Vf3Y+Qe5sT4v6x/NoPtWA5YpnOzsC2H5TgOkJm5Ti42S6b7VhKlOqu7dVhnE
a0GjG1Q9as8mXguU2/JKNhYzP6ANMdLp/QuK1hGvA6d0A3sTjQuJ14HFzhW6
uTnridcFu5vKj+e8KCZeD5RP3shfc7qUeD3g2vt8cRxTSrw+THIpLF2qXEK8
AQjrFMLT+SXEG8DH6iWTniQXEW8IIfcr9vjrFRBvBPwFmdri6HU0bgS1ek0+
oVHMDxmBRlVBzENP5meM4ZGF4ZgxS5i/MIbOPeD/pTeF5SeYtGup9rJgKctf
IGcUHPBK8b/8Bj7vS4oNzsaz/AfH5FMGNWYlsvwId+5nnd90aCXLn7B1mbL1
YcfVLL/Cq/Bm7rutqSz/wjjR+/UTeJksP4PQqvb8gM5/+RvOqkffuSHMYfkd
IjTcInurc1j+h9QmYXZQYA7zB3BmlEP4nkzGmwHfomrW81NsPc3gxUvJ2uwK
5v/MgOfodO6tNZtPc/Dpk6vO28Z4c3h9IZe7Q5HNpzkIC8dqZ41m+hZwSJLn
2FXJ5tMCUrML1dKS2HxaQNBf/6yINGPzYwlzUgNruYfjmf8CE7iacVmYwPwZ
eG653aexLZ75N3i5zJM7wpvxXJD7bfZRiRfjuZDzrnzFuljmt61gYOXF9dVj
kph/hItuUqV7kcyvWEFdRUG7XuAq5j/Bfa6/YuPRVcyfgvmUjy616mnMv8LG
RZvDz81OY/4WpiclDj5oS2P+F5Sse3Y0PmfrawOesZGa1xpZPLbA0bktijFk
ftAW9nYq1RtqRzH/DX336hzmS0KYPwe76E8P+vTnMP8OT9xVfD41WDF/Dy1f
e7mXukR0P/AgQXFjtNmPxlQ/8SBv8dJNyaem0f3AgzttoWfWHrel+osHZZLh
8XFRxNfx4OqRP0pNf51K9RsPTtjdDZqi6EH6fFi11pp/QH4h6fNB9+ngwCaL
cNLnw2O/sJVJlstJnw8/b0iR3ZnC7lc+zA735/TPIH/WzYfWWn2XM5/Z/SyA
mskXdh6IlZK+AJ7zIlpuFKSQvgDOTnCRv7BgDekLwG/LyYJhD9NJXwDdNx/N
8pCjfNAtAO/Q4S8eiJgfE8L2kNNHN97PZPUldItfPh32hPk5IQTkXssvCkpl
9SnwfLkb5XSlrH6Fy87dLf53WfxCMLy3faY5hJO+PaimTvjTVH8a6dvDHojt
KgvRYvUzzDUrfZdf587qa8jfMfnK+FofVn+DqY7KzYX7FrD6HHq2jc19cGMh
q9//vW87Sn5csITV99Cn/SxwRBSrXxxAdVjk/t+2/9cfgOvJjXN/dg9l/QOQ
ulSUTTsRzPoLkBl+gCO96Mv6D3A+bpp5TeVc1p8A34pvQSfr/Vj/AtTj3BsG
apew/gYk8iQll8tCWP8DDviMqMq+EsL6I6DWPp//wD2M9U/ghJfjLM2poay/
AvFf9kqslFn8Igi9drfg/Md5rD8D7cHrQ7kr3Vj/BtYcln6YFMv6FyKQzu+J
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/flXn3CpfjEYJ+oePrLZSvY/6IZ+UA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
1lcR3Nm8z2W1nYDO5yJ4u0Oc1ZWmKPkvGzllRA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81ekXxy9aUCQqLRNZouzXcm+LuqdGRmkZokQ/KYwabcqVJeKGrOOG
tKiItGhTk3buaaFRVPZq8msblWraaCPNr37Ome8/Xvf1vJ+P53ue55znfL4G
S1a5ByoLBAJ9JYHg+1/P70+jGPvPnzarLHWE5FDx90eMSzVH3hRW2UsE359Y
MX6xyk57d1wi+T/vKcbsS31LP8tn9vBmYtRJNL/b4jynhxeI8c6p1c2xt5x6
+EYRqkYXDO9Y5Ur6Iry8LOn8yEpn0v/2+8/l+rH1YtIX4Ye9dRcM9EYoevRF
aH7+sdnOVYaKHn0RSjWGHtWZJFT06Dug18bqO3NvTO7hix3wyv2aGLdQlx4+
1gH755mv+yfAqYf3dMAJlccWVp+fQfoOeCLlU7+32vNJ3wGz9/ULdu/yI317
zFfb3lT0KJj07bFhl5qO6pzVpG+Pf0S9Ol3hHUL69ih3sUhOnR9C+vYYVJgQ
94fdctK3x+g3CXbtikDSt8O9eo7vH3v4kL4dPn5/YOeL2z6kb4dnDpkJLLJ8
SN8ODx+5pvJXkCfp22Gr0fr4TD130rfDyXX6kbXPXUnfFlumrf59w4qppG+L
6YFi5y/6NhR/WxwWbzhySr0bxd8Wd6eW6c+duIT21xb1qvI+ftFcTftri/cS
2t3iHkhpf4Wo2zm2oXrletpfIV6UFAiG3N5A+kLMOOVheuZXGekLMWT4wLVm
4zeSvhC9n7w6+thmI+kLccsLm0O1O+JI3wZPGRTLxzvEkL4N3lja1WvcuQjS
t8F1BTf/GztuHenbYMbBuqo4rXWkb4OlHb1r8XAY6dtg44msLdXXI0jPGj8/
Ky9UhMbSfGt09h1fFv6XjHhrDF+y9a3W7HjirXCY0+xe72LiibdC37aA1jWN
8cRb4f393VLnqwnEW+JX/7xNcY6JxFviwqFdWWt/TCTeEq8/WtH+sSSReAu0
62xZHFW1iXgLtK//wdr2GPMWOGy5vKi9H+ubo13Q8f4O+yhenuaYrjs1u2lF
NPHmGOVefDn9Br+vGV52cm2S64YTb4bCWolEx0dKvBmWlQ9JkLqsIX4szlDa
VWGYEUL8WNS6qzOlJSCY+LG4WW3hBd0lQcSPwcx7kb3CXf2JH4Ou3Y5/r5D5
ET8GU8Ieh768s5h4UyzTDdL984g38ab4/J+Z0pxK5k1RbChZ2pbgTbwJ/r1u
5rEJ532JN8FEE6W3OzLnEm+CJ7pf/yRs7Uv8aPyU0aGh/2Ym5c9obC3dHSi9
NZfyZTSeD9gSWu21iPLDGLMjxmXfTQoi3hjLQvJL7J1DiTfGm3uPKRprook3
wkcncgKzf5IRb4T18vyTq14lEG+ERiMGpftqJRFviBtuld3Z+imReEN0j5Mo
D+xi3hDNRz14ZrkykXgD/LL+ac0vkxOIN0AD24BzwvJ44g3QZdOqT8arZcSP
Qstj3VbmI2KIH4VP+uZf2S6NJH4UmjhZPkkTSWlcH/t8nFTfvHkVzddDeaxq
ecMIqm8CPYyqGrktRX8N8SNRf5t4hsw0gvgfMOL3r/umCjYQ/wN+uPY5820D
x2MEGsmf3bhfkUD8cHRsypto3JpC/HBUVREvb+6XQfwwzPjwZIVUJid+KG5/
mmd0f+Vm4oei6vrEcaXjs4jXxYtTbv2jd30L8UNQ/FVp7evbW4kfgsVHTg/V
9sklfjDKw2eNkfwnn/hB+KIzccfZaYXED8LBO4xfJp/dR7wOjry+H4p1i4nX
RuvhicbxXUeI18YtiQPH+D8qIX4gVt2+d6rQ/wTxWqizsUD9c93vxGth3O5R
+RGzS2lcE0fscb1b5Xua5mvgxpKqI2UvzxLfH2VD2qoi91wgXh2d5qkfKEtV
EK+GfVUC604tuUi8KhaUDUgPNLhMfB9MTKls61KtIL43JpnNiVqicZX4XmhZ
tm6zt6CKeGVUm7M49FTXNeKVML5m+1mTZ9XEC1AuHOi98v0NGu9WNKd0n6vI
uUXzOxUe5bfu+hTXEv9J8VXV0qWupI7494o4La81sYn1xL9THF+583qQSQPx
bxRjdDQ7jgY30PhzRaCsKKFragPNb1UM7vVQVVxTT/wDheNuG0XtRdZvVKT2
n+byTrmWflcoAqffPpAa9+/6BTs1b72svnqFxyVZfcRHfPpe5PkSxdF87Co9
z/qSlCKhst72U/z/JdlXjkq7F/L+PpeYF4qu+R88yuuX5E7+ZX/reD4v7yQt
FSlv2juL+P0lCyY9mZ0uK+D4SMTaqzoWR+/m+ElM419vqDm3jeMreZjVkDl9
QxavH2q61u+KOZfO+wPzPU5uWWDN+aUMHicXzNhTFsX7C3FuC4vSqzjfe0OX
fKj7x0Wr+XyA6SwTR7XElXx+QKV8kIvRs1V8vuBd2QY/g6i1fP7AOCZ6++MP
a/l8wmQfC9d6da4PGvB876693gtD+HxDYM4LQX8lridaYCor7lWaJOX8gOm+
nW5TL0Vx/kDwgdTLHy03cn5B9Gfn+W+D+P20IUDLrmVYDddDHahruOY09MdN
nL/gntOwx0sQz/kNy1QOjhaGxnL+wwT3z4cubFvP9QHKm3NyXcZwPRsCKmc8
fLrDw7i+QEFo8rK2Y2Fcf+ByzpS8K3qRXJ+gU9NU81IvXv8w0PnquNxi0Dqu
b6DuUjLu2n2Ox3BoG672s8w6lOsj/L3L6bNqvpTrJ3gtE7j62q/j+gpeTZWH
786K4PoLAQfbK8edCef6DJnZ9rITX3j9euB1Kf349J1c//XBNCioMWZOHNd/
sJ9orDlkAtfnUWCT67zLqO+/9weoLw0u6nudeQMY7JbxW31SHN8/kDlN4H6v
KJbvJwiZNLu44mE0319Q27HkhE8yx8MQxF7Bg2MWh/P9B+qbtL1dz63h+xHe
HMcFKgc5HkYw+OrBlek3OV5GoNJvsfLpjcwbw6vm5I5xrdxvG4N6/psUt8Y1
fH/DvBXbpkfk83kbDXtL5EGeqsyPhuvSipue65kfDXlvlD7MfhpCvAk0pzQV
2xxbSrwJGKW+cDGOsCPeBMRlM2pzf/Pl/gRMGk/6+/dbzf0LCGOVD2Yah3N/
A+qi+PY7OTHc/4DzPR+dOuR+cwxM9Eu9KxoQx/0TyOQZyjsWxHJ/BeUiE+/P
SsyPBVN304hCZxn3Z1D8Z8HIPFXun82gSmNv4Mfb3J+agV/5qxT/NZu4/4Or
F3xjpuZu4v4Q/B/HTFL7OYH7R9i/6+kZ6Sfud83hUOO8kkkt3N9agPnkA3mi
wdzPW8C227nS3gG8fgs4vN7m3ICnvH5LCAl22fV6APenlqBS1+e/0zWZt4S0
g0HaC52Yt4JOi+59vy1g3gqc5lzNXnaU39cKZiRmd71Ym8D9OVTohsmqG7m/
tgZHm+1+2zqTuL+HjiYd+0nxSdz/w6Ia436T5yWzPwDnWZF70qtS2D+A7dEB
OostU9hfQLLfZPtplansP8Dpw1ClGyfT2J9AuuZlvXaTdPYvUPfERKOwLY39
DVTc2u+TtSOV/Q/8kZud5v2O9YVg9dMUs5vtvF4hSLQjjiv5JbC/gqj0rmz3
fuxHbCFb9FezeloM+zOQaCjUNney/7GFhLd9zpSXrGV/BwoHmadzYTDp24J0
a3XYlaAA0reFlh/3S5Qq3UjfDtzPDLrwyPFtOflLaNS6dP9J2iT2nzC4UZ7c
e9Z09qdQkNZkHRY1l/0r9BXbyev3LmB/C1ZpVodnV3mx/wXVu9OTNz7wYH8M
rmn7woJ3uLN/hoe7y5cbLvNgfw3PlQe6O02bx/4b+hirRWZ+XMj+HDa5uTSP
WvwL+3fY0zjTtNQzmP09uNyzDNvhHMz+H672l6oE46/8fQD2rJZt9zFdzt8P
wMVbFLtZcyV/X4Bwzz4ppa18P4rgeL3Pmsho1hdBmVNLr5SXXC9E8HORdvRT
F1pPrAg6XA/lRuoGkr4Inp876X6hifxFowjaC7NyonyCSF8M6m2Fv2ZmBJG+
GC6c90kaoEHfCzzFMG+f+c7LH/1I/xt/L+N5pdyd9L/xth6PnkZNJf1vfEOb
ZNF+e8X/AI5XnBo=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hs8lVkXB/BDF1HIJbekkEsSxzk4hM4ilSQkEkJRqChEGKIopZikpivJ
GN7KJUlKylky3SiXiqimC91USoYyveKdXmuff/r0eb7Pz3722c/eax3NgM1u
68Q5HM50MQ7n578ePz+tAtzIb5uoelFTVHT250eAHOGsX8RdBCLOz892AQ5d
ifTImG8h+r/3EODs79Hrjr20HfUGAmz+3cHS6/CSUc8RoGdqb8C88OWjvtUc
7VLaU9Mj3CjfHDcOGr1z8l1O+ea4wiDk9p1gW8o3x+MDOVe+DnAp3xz7z6vl
p3IsKd8ct3kUeeVkm1G+GZZJiQ951vGFo/lmeHJbY0Iux0k4mm+GHdYf3aQX
LheO5pvhoMDdQInnN+oNzDDL9mFp47GAUc8xw/chfhKPxq4e9a2mWKkzEB0R
5Un5phjPm9J2RGYh5ZviQo0akwoFO8o3xTDR/D2vBx0o3xQ3Pd9d5eyxgvJN
sXes663m6JWUz8d7Zi+fO2/woXw+nmyUser54Un5fJQ7YRCRgF6Uz8fgL05B
HTe9KJ+Pai5VAQVpyyifjx/TFIwWbjKgfB5yogRxNsVWNP88zLuYqiz52zKa
fx46qinzhdp+NP88bH9gY9BZuZrmn4eSLv/0yVquofnnoeyir8e09/vT/Jug
pGJsZUhoAOWbYGnH5vF3c9dTvgmONIzJli4NpHwTjLqVarhOag3lm2DH69Km
dI4f5ZtgGVepx3f5EsrnoqWDZe2mRHPK52KVrknG/lds/FyMifzRHrSA5XPR
VT8mT943gvK56DD/ePaOxmjK//d+t1yVjOdbKc8YFTrmDo/bF0P3G6Pq5173
2U2x5I3RQceCJ34kjrwRzhu76MzIlzjyRsh/YBowYhRP3ggDlvmvGXqZSH4O
bn2f/zmxbzv5OSie8WKh9I5k8nPwg9G+tyuCUsgb4rQcC91STgp5Q5TXjwgI
z9hB3hA/i71Lqb2ynfxs5IVbGhWrJJOfjXs8049ojmF+NtafqXBQFyWRN8DH
Djv7t3klkjdAx/Dzp+1nsvEboJS3luq3EjY/s1DTOpx7f9IW8rPQb/k42/7Q
UPKzsGyVt6LV2hDy+igucnEQtfuQ10fnm/XjawNdyeuj3dq2mi1t9uT1MOZ9
hUb8AJDXw1pHntb0OPa+66HCcr97c/XsyOtixVFTbpyhM3ldvDFZvWaCYDF5
XSysGxN2Z7ILeR10lT7jXe8/l7wO3hLI14cupvXD0cGPGUHulmVLyc9EOXXl
N3Z8Nv6Z+LHE//CueGfyM/GK5IEDem9t6X3VxmuJXfNkr9H77KGNnEKhWXcX
20+0cZvc4cWJJzaQ18LWRb0lnV6byWvhSgtxnw+NYeS1cGP9ydaK7xHkNdHh
ae6UO4e3ktfE0z+WeVdpxJDXxJiKtDV7Dm4hPwOHAuUnTXy8nvwMdEyPd3Mo
9CY/A8dLSmbcCXCh69OR82618XHuAnp+DRR0WUUPH/Oi59XA2m9algG9ITQf
03CRRsnLlpFw8uro2NfeJuEZQ14dg5v8jb+WJZCfimkTN1l0iSeTV8P+YrG/
W0d2kVfDun2Dyvq8feRV0en42i+dTZnkVbCmx3sOOGeRV8EDnb4qBWK/kVdG
uazKvlLuMfJKGMfvKIz2yCGvhHrLYzcvTMglPwX/mF3740hyHnnFf9fnSMb1
onzyijg1u4PjkV5IXgFjtmpOMDp0hrw8Xj6V0hwxXExeHqVP2hdoBJWRl8O4
6qTSWt1y8pPx1eTiR2J1F8hPxsK86uxVyRfpugw2axwNDZ9/ie6Xxqk5O95q
CavIT8Kapf3VDUHV5KVQoX1ze1LTNfKS6HmUv0jkj+QnYG1BpsWb17Xkx+OW
oO/JzdvqyI/D6UdfnHhucIP8WPzufC7s2Keb5MXR3ejjouK22+TF8N36kpSS
unryHNwV6pmtlHeXrv8QFReU257PbKT7v4uKAqsTrjk2kx8UHQuyCTs0pYX8
gEhm/sNa/Zst5PtEu3M489843CffKxr58XTr69336fp7Ub3zApv7sffp/tei
d6USQVnjmH8h4rXv9yiRZfmtonK3BQ1hNY30/xsizYd4kBd1h42f0zC15GP8
UC27LjR+62T7sPsqu1+oOvR5gwJcYvnCW5W/XN/dXs7+vlD7vnGX1OxSNj5h
XLdF/NS/TrPxC7X1tG4NuRew5xMGaxZCxrM89vzCadxPzX9bsvU5KBw7q2Pl
qYeH2fwJg/NuJAVVZ7H5Fd44Zt/2o3E/Gz9kK8mtF2xi74sYdORY1485sId9
f+Cq8p+na933sO8XOibbv13Suot9/2Cp/FwxM34nWx/wZ075vbyJ29n6AeGQ
VJfMZXa+ScLw08L8Q/pRbP3B5cK+q84jW9j6hLPhYeuLmtn5IA0Z2YN6XaFs
f5CBQ/lrNOter2brH5waKg0Mw3ns/YDu16KLh6P9aD+Sgw/ml1p8kzfTfiUP
pboexbYPY2h/k4ePt6vLfaoSySvAjAH/OU0dKeQVIe1K9FVn7VTyimCtufHE
yEAq+SnQN5h58kLEHvJKMMgX1ZqZppNXAr+cvs5uyCSvDHYXr2/8c9sB8ipQ
LmctrlWURV4FpA5ZtdTtO0BeFWSNHubH62eSV4M9+tt/X1edQV4NdJ5ETEmK
2Et+KojL+ob0KKeSV4dzNj3pqveSyatDZOGmaM1N28hPgz1dlQkHW34hrwFu
zoKDygax5DVgzqxTJ+72R7H9Hexb9Wwnjd/K9n94BeLjbcsi2fkADXPtHX/d
EcrOD1CRDUibFRTEzhdQCBZf8U/oanb+wHDuMyNXb192PkHSwj9Klz53Y+cX
nLF+a/9IzImdb7Ckv1Hd2d6RnX9wvOqGm0SFJzsfodenes1cjUB2foKEc7EH
r56NRxvsOg9eKtWOIj8TNNMeX1ZTZOfhTLAZeiwIPhFJfia47SvUTRPfQF4H
VGJkd7WZB5DXgTvvVq0SpFH9f1YH6m5YVf8m8CGvC4uLssqLwnzJ68Iqvs1e
e59F5HWBs92pz/t6/7xRrwfThofn7/4vj9UvsEo1FS5HOLH6Bspd5nInCxex
+geM79zsc7qwgNVH8CnWb2f7A1bf6EOZNffjrg47Vl/B93nmUROmT2L1F6hy
ZfZZxAtYfQYZ/82t2uvI6h8DqKhTrL3W68rqO5gmPOT5qXE5q/8g/6YkR0Ux
gNWHUFudd+HLcBCrH+FpxfpvAadCWX0J9hKu/qfENrH6E6zbtm447h7F6lNo
+nH6k4ZWLKtf4a61zCWjyARW34KoJOHb2eokVv/C5CdiXUtlWb07BzTWy+gE
5rJ6wAiq3kh0uDzbzeprMI4YbMr9azerv6GrIXD4707mjSG7wuaLTMpOVr/D
6ZmxDvK/sv3NGGzzis+dDGX1NhcMe/8seOS3g/UHsOt4/8ZbM9j4uOD4eIO7
1JttrL8AJYUPjesOsvqZC1su989Tj05k/QkUHdr1WSaLPa8JPO12C7vmmcD6
G4hYcpujJbeV9T+Qn5ze6ZMezvoj6FPdPcO5ZS3rn8BOpUatXsaH9VcwfbHg
3P51Tqz/giq/qz5TVaaz/gyGuvvuqRY403rlQfTAmKyD01dT/8gDdyvxnZky
QbR+eVAmnZ+i7BDM+kOo9C/KKxsMYf0juKad3DsPglh/CUdnD3ZG+rmx/hO2
3J7f3NWjSuPng6rBt4aTR9j64oN7f5/yX16+NH4+KK8tlVUJCKHxm0K88bja
V4/pfDAwhboX/B6db5E0P6bw4I8sa/GmSMo3BVBra/x6gPq5s6bQL2NTcOJ5
OOWbAv/skGu4RwTlm0G4yUNe5wqWbwYrLxYfimoOpXwzuGpbl4xm6yjfDMIe
1HDji/wo3wzuPbG63f63H/t9AeylJXYOrV3Ffn+AeZJropbNcmO/T8ATL2kH
w6PdNaP55jBt0tVrXz0X0/ybg9xASP/Ty840/+bwtMt6v6GiN82/OfBPGI8d
U8TqcwF07ZdNXBq4muZfAOCi9/ZVKusvBGDVew5t5Wm/3S6A6menAh362f4k
AKeknobYD1aULwBtmfMt+6y5wv8BhdqLMw==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
AY/ruvXmEinK/7beYnlVsGnI+X/3e5LL
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240991325404453`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0cb66304-694f-42f0-87c3-8ebd5100886f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmpmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmpmem10", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmpmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmpmem90", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hmpmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9241023778035684`*^9, 3.924102393841073*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"3bcccc7b-dee7-4905-b276-603d31362187"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczOsXx6cIiSQJrdO+L9PMlNCd02JLJaUsjbRa26ZFiBZp80J2LgnX
LUQo8cs6x9KiKNtQkrIUCjckIfyuX+f5ff/p1et5P585z3LOc87RC4n2CZfn
cDi6chzO779+vz+ZA25RK272DOCJjhf9/hzQSmFvgc0MoYjz+0t1wJYjL4WZ
nZNF/+P9HHDQ8p4zyU0+/by5Azr9CtLoWhrQz3McMLFpUWVOgbifl9ljS5K/
q0FrEOnb42BBONfSO4j07XHaVenJkIIQ0rdHs3Ijjfl2YaRvjysvzh3xjySM
9O3x539UtQdeXEj6QvR/n/pqQNcc0hdiY/o7hYwH80lfiLzIF32xsfNIX4gV
TfGqsRfFpC/ESRvN+jp855G+EP8I+nE1/LkX6Qtwb+1w/xt9bqQvQD1rAE6J
o7RfX4Av7pdvmujmIe3XF2BeaWK17UJ7ab++AIsyXhUrGlv38xwBOgbWRz21
duznZXwMG/zX2OfX7Emfj5FJn2X8fd5kPx/tnO43el4IJPv5eNe2++zx8ECy
n497xKPk5OfTejl8lONUzQ+I8yH77dC6l1clez+N9O3w9afmyXlqvqRvh9r1
kvmDBrqTvh3eFiu+3K4yhuy3w7L902IK1s8k++3wjPPOeyfvzCP7eXhY82bo
c9HSfr6Ih9E3h0g+Hkug/eFh3JpJe2NmJNH+8NBJLL82eWoi6fNwfVmReLtb
DOnzEF6ZvYoeG0H6tthz3O+J4/rFpG+LQ6RxracXhZK+Le792hU67nkw6dti
BaZlX9UPJn1b7LNy2+gzmXiOLbpzpBXZ9ctIzwYdNXv8NHZF03wbzLnCu/Op
ZzHxNlgS22BcOCaMeGus1JEUfY8MJd4aa88+eaUwI5J4a/TemKna/jqceCv8
CINae31DiLfC0rDaPrv7C4i3wtZLVY5+KrOIt8QcBVFoxDk34i1R6/CjiOCz
3sRbonDMliPVP1yIt8Cc3nF8dS9P4i1wem7DKtPg2cRbYN8b4Z8lWWLizdFg
0Zfu+JIg4s1xW4C89sdz/sSb492x5y+dPOdHvBmWxXdpTi6dQbwZthzzO3RP
IYR4M9y281xQ2jUJ8ab40Xd8WN/DFcSbovPudEv+nNXEm6LM6/a7zKqVxJtg
u4dV7d6I1cSb4IWpOyOnD0ol3gSPPo1Pyx+RRrwxtoxoyLz9KI14YwxWy0ie
FreOeGMcMzZKNS4xg3gj9BjiNGxzYybxRuh/YlR9r2828UaYqK0z4NyGTOIN
MfiteUZr7XriDfHH7rbeDl1mjyEufiBZ0RGyhngD7L5x63y1KIF4A3S498NU
II4j3gADZe/zUrdHEa+PV8/Oqvs6Pox4fUy9fLfcfDrbf310f/1wtrfHROL1
sHRq/h+18U7kn3ooUfYaPf5VMPm7Hlq6uXjeTpCQf3Nxk4194rJ1scRzscEt
vaepK454Lord3CJrzsTRuC7mS5VqMjGG5utgW1lA6+0WxuvggH9ueRzgryFe
G7/2qhp/mpNKvBYuaNav+dMunXgtXKfYNHyidibxmsjbWt1d9zKLeA1U5m26
n3sqm3gNNB3ufcr2K+PHYdCwmw9Cf6QTPxYz3j1X535JJX4svnb+9qBTO4X4
Mej2Nv/bvtPJxKtjS46PdsS+1cSro/hsXXnoqxXEj8ae9jcNK/RiiVfDwnfV
JS2PI4hXw/lKXW84a9h7NAo57ws35HULiVdFgXpSffZPHp2XKlp9lubqpQbS
eY5EZcNZd02SltD5qeAY+9svL5esIV4F9wSuWpvYwu6bMjo9f3pw2KStNH84
Wtx1SH6WuIv4YZjXLr+xekce8UNR/cYEXU/hX8Qr4rCvPxxHBh0hfgi+T6ls
k0suJn4QPgp027F0RynxCpjoO3RZo/5/iB+IxWsl8f7HLhIvj2VWjX8siEbi
5VDCn7l50pzrxHOw91Dz5aoLlTT+Q7phd1pdcUcNzf8mVdGccv9LfD3xvVKh
f+OZhon3iP8s9XpnnnOk8gHxH6Uu7ZoJfXMfEd8l7dXR/aBf3kjjHdLbxTGH
FB810fw2aX23nNfBtc3Et0p9Az8E6Bs8pXGZtHb4kJFZzU/o/wrp3+k591wf
NDD7ObL0CuPHr++wcVHZFKc73+Nr2XyRxevOXO6CSqYvslg+F145XWO/L1IT
JLz4uOkys08kb2n3sUO3nNkv2maUHdRw4Qxbn+jb6lyduTdOsfWLarlixazB
x9j+iAaueRsJ9X+x/RP1FKs9z5mTx/ZXJO9n6hxRvIPZD4dKhS82H9zMzgcM
uNv3PHXYwM4PJHbVyQtjWTwcCJLAR5E1/763dP7wrd3i3aEJvux+QIl92N/H
bJfT/R8CSpm/5rXrrKL7rwjpBtczdPan0f0fCvmzoisGqTJ/HwbLQ59u+3Iw
nfjhsEs968CEAua/yuC+pVl/13Tmvypw+qfPhW8B8TSuAvz4BodLK5bQ/JGg
fbLqDrfUg3hV4E1zjHtZM5DsVYUh4vFKtiXGtJ5R4DBg4ym7HBdarxos9srt
sTrsyvwbsuyK3szfwvKb0SDTmubcZj+FxQfICuzTTXCdxeIHVGCbQVKJN4sv
IE7MbnvYNYHFH0jgv0yRLBlP9owFhx3BKQua2Ps+Ds7z7mx7OGUp2aMB7sdH
a1UtCyFeA8qy12icmCnH4iPsWb0/Ue/6bBY/YWPXBesmSSiLr+CSZ/QpwUzC
4i+M4n8oGVQfxeIzSE22tl8oWsri97/r2eWlGR/K4jtYbFn1rXW6K4v/oDnK
7ajJT2+ylwsHNWILXM8EkH1ciE6/1RTBCSP79WBEUNuk8Cr2nutBSmeEsf7K
dex9AuMPCUaaJey+6cPdP3/dfOKcyt43uFyz9uTP/CT2/oHHB/MFemn/fx9B
8adb5ssslo8YQMfDqRPSj6qz9xU09Yx7vff5kP2GUG60cPJwE1aPGEJv9a8r
GndDaP2GoJMXPUiQz+6zETyKFly7voe9d0YQqOIU/lmZxX8jiBlx5NiM80uJ
N4YUJZ97F7hLiTcGtxVBPlwR0zcG59Ar6ybEhBBvAhYWwS1by8KIN4Hv+SP0
f/qz99gEMhZr6e7bHE+8KbinGFpsu7eWeFM4rdRp3n12HfGmMFX8Yf9V3zTi
zeD49t4/Sr1TiTeDjPuvNWtGriTeDMqtFVdomq4g3hyCg3tNSstWEm8OcoMv
Pm32TyDeHCZpKJzwK4wl3gJGRD1c1W0fQ7wFaOU+DI0IiyTeAjgxNUmrxWLi
LYFnIT6s7MD23xJkjxeu9lCdzPJXeHknlaMf6cnyW5Bx1c9LStn5WoGW+crT
iqWLWH4MB7QKuatFS1j+DGW/Cn2TE5g/WcPs451n6jxmsvwbhtjol1qXzmH5
OSQ8y17yWObO8nfIMAyskI9j99kGKpc4FYWoBbL8H0qLd/5aoB3A6gP421T6
ZXb4TFY/QEidI4gdXVl9AfXX3ac+i3Fk9Qdss1F//6AgmNUnMGHexi+a6hGs
fgHtw18bVdbFsPoGOrXaDrwuimX1D4zpSZvG7Ytj9REc7FJxP1nH8mceXJ+o
sfuoVRSrryDasm/fYn1Wv9hBn55JYXtUGKvPYBPn0HJ++hzSt4PmMp8c7QF8
Vt/Bz9CprXUCf1b/wcmEMnnOzCBWH0LKqotzO9uWsPoR4oq29nTmL2X1JXj7
eK//ohzF6k+obzyUGCGTsPoUxp3uOPxdifkTH2o3VA/dNo/uk4wPU3z0Z6zs
iyZ9ATi7lRe0yVH8NxeAh8s1w3GOzD8F8F1JbcEhE8o/UwVweefiiZtPM38S
wPhdnChddl9lAqir5FsoXWL+LoQ2/3DlxBBmvxDiLh5wkVNbzup/uMN9FOVt
Fc36A6Cw6FruMPMI1j+AE6V7Zn54t4j1F6DiQ+6NjCesP2APOxsGJjV52rP+
BJjZzBKOsOex/gWYpG5YpWI4hfU3YFdhMb9qqjPrf4DliRf+bz+6sP4I6A6I
fC7+x4b1T+DZXo3kDoVfV6i/At1pWdmf5fms/wJ9kZ1PTq53Zf0ZEJd7v/cO
9WT9G+hoWRu0bjrxMgeovGXWailnJPovHbx5Mg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
fEWwsnS6ysJAI/H/AIR6aPc=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw1mHlczOsXx0daFFoIIbQvk2mbmZLUHJIlrlJaaBttSmlKpVTURCKSkL2r
ULrZ7hVxI3NChJAluYibokzWXPRTXb+fX+f5/jOveX3f3888c77nOedzHv0Q
iWe4AofDmTSIw/n56f3zarLHHSnmsaEpDrJjFT8ve7yx6Uf/3MMiGefnlWmP
93La74XfF8n+z3vb46yWfZa5ldMHeK49KvS/uaattGCA59hjUVLkw/vlPgN8
kx0qfnVS40g9SN8OFX47w42dT3ymHV70F8/z4c0mfTsMC/VS9gomnmuHPD0p
/GHjQ/p2aPn9hNqBWKYvRE+de337U4D0hXglu8Lq8OpBogF9Ie5qW126pniK
aEBfiONKdjkE4ULRgL4QLR5xXo7PDxjgOUKMDvAW5sQED/BNArRs8ey5zQsd
4CsEmNIrqdv4PZT0BcgtbXc3Wh9B+gJ87Tt4V7VRBOkLcLEksfjL7BDSF2CM
iZuE6+ZF+nzklFs93v5DRPp8vN6hnqMonU7x4WNb1JWJCfM9KT589PX7ZXzk
1CUUHz7egkdun1KWUnz4aFxTKL5REE7xscUXpndKkuujKT626KjWV3qhJ4b0
bbEtzkPXzjmG9G1RIyzF/9ICCenbosP8IX03aiWkb4slNQYG/ecTSN8GRQnq
qorLk0nfBj9muEYEdq8ifRtsVYo/mvwX07dBD0vx3c6+paRvg/LGJEwzEZO+
De5NbHprIwTSt8avX7U+DOl3pvhYY9mF6LNPOhUp/tbYtLUkKkh7Aelbo/oa
7U0PA/1I3xoPNKx1jMsPJn1rHOnr77X7pi+t1wrrTlkUN75woeetMComMHvL
1YXEW6HPS8fBQ+ICiLfEpNw8znGHZcRbYpRgZuDLudHEW2L6paLrDzfHEc/D
Mkmuhv+hlcTzEBpyCkQZScTzcNanljnPb1K8KybjPvn4p7quLF6TcZe6vNHA
Jpz4yejnwl1Y/WIZ8RbY59TtZO0TSbwFxmUnXDwhDyDeAt82z202W2VHPBd/
NfSy/nwaKF+5KFfbc794/ULKTy6+G3yiaIiTJ8XbHMOCh+cmj/Ah3hz3NAQm
2U5cQLw5ctwa/LK0XIg3w+PaH4eF//Al3gxzM56EJTcvJ94MP5dsrgp9kES8
Kf6Resv/QFEy8aYYc95F2rs/hXhTlP4YXf1afSXxJrivLTTXKDeGeBP89VRj
tKfzCuJNMO2d8pTXp+OIN8YlCeeMsm4lEW+MsPOWQzUmEW+MVndUL18TJhJv
hIuwZZAkhO1nIzT8djKgzdWZeCN89n5z6WsOyx9DtH+6YXbEy2CKvyH2BJ7q
anzvQfH/3/fmAKniVSfSN0Cdd5zjRSVi0jdAhdsPl3julJC+Ab5oqkpxaGfx
0cfCiX5btb6lEq+P/5rZHzc5lka8PuoXFQYpDk8hXg8POSRMOhqcQLwemn1V
UV/tG0e8HqaEXuOLvsTR/UkI6nM/KM6MpecnojTlHy2+ahTxE5HjvpP3wy+W
+AkodCpQU3oQTbwu7tEPvJWnEUa8Ll6v793mrh1J/HiMWN+huH3ocuLHoZrq
/q9vLJYRPw6nhdZ+anVdQfxYtODy7x5zCyZeB5dMme3vbigmXgeLBbyabg1H
4sfg7n8t49bUB9P7GI3Kofttps5l9Wo01m7KfLwoKITezyic83h2m7yB1UNt
rE26ke9utpJ4bXROj07jzkwnfiR2JdQ3vivKJn4EHnBs7Wp8kU/8CLSaclcu
0dhJvBZmzynqdzy4m3hNPDgVWq7f20e8JoY6+KoWTS+i++oYNC7/4N/Tiun5
4Rh2sfDy0uoS4ofhYXCatWrrYeLV0DY5ImahRxnxqhh1phu7oyqIH4JTj4qq
CuaeIl4ZNb1mzDb2PE28Eq5dVxbb33WWeEVUG9EySxxVTbwC2o7UOuEfJiN+
EJq+aT1xM/4y8RzE4trVhWF1dL9f9qB0XJ3i93p6/rvslnvH3Mvet4nvke37
lCG3kzcS/0UWJW2oer/iAfHdsiMuu9YmKj0i/qNsiW9zvnHyY7ovl/H7A59d
3PeEnn8lM/T4rjR06TPi/5ZpeExTiZ7UQvebZK9kxiNKBj+j73UyeUdblqrZ
Y7Z+ztea2vTxCWw9dSIllYzS/PM32fOiM3aldZWX6pi+6GVlzx212lr2+6Ij
GzJ637rUsPWJxMdNLWt8/2TrF/We2Di3bUYV+38iK7fyV8Zmlez/i1R7Y2Of
aP3O4iOK31DmfbSsgsVPdGVW61PTg+z99os0hu0eMVZ8mK0fbv7W9u70LZYv
g0DZxPQi6rB8UoD3s6d/fmx7gL1f+Nb3cMWeuL3s/UPZxB+Wo88XsvyAllqo
TcgtYPkDDtbeZ9+kb2P5BYoLQtrt9haw/IOuzVtm/PNmO8tPOL7lU/E29x0s
f0Fe0DX0pNoOlt+gUiILn2DCeE0oNyh0evBxG9sf4LJIoWb6afZ7WrDm4LBy
u/db2P4CfKOXrZuQw/YfjF9mM7QjL4PtT4g6WLdbKTaO7V+Iyns9fPAYIdUP
bSjtUuE/qmL1axSU8Tt1s1tXUz0ZDSVB03fotGYRPxoEOutKPFJyWX2BJRW3
XSt0t7L6A2NuprW8PZnP6hOUt1z11hdvZfULLk+JkSh657P6BmMfpbd/VMlj
9Q+ubFBQudixidVHUJk5wtGvIofVT5DPKMyNmLOB1Vdo1tANmLFeyuovPHcv
fdJ0jvXHieAmS47UTJGw+g3mhRKb6GmhrL5DN2/CftuoIFb/YZONU3ms3JD1
BxBHVFv5yZg/1wPJK2eD4/vdKJ76wJvvMaPXgvkrfbDnmQeqepkQrw9llZKO
rmWLWf8Cz8x8tzD7aNbfINXCu/+fuhjW/2DsEKsPepWsHxnC5obuc2ZaicQb
QuvdjZcXFCQQbwij0jydl+muZP0X3qfWb3aPW8n6M8z68ny1piLr90agM9p1
aVQh8wPGEDJMIb33k4T1f4h3uynPfJHM/AH88rXbpGY466cmEMx7y3Fcvpb5
C/jQ5/G81Yn1VxMwNHQAh6oE5k8gY8bzC3t/MH1TSNbe3uwyhvU7U5jwedoI
J7UY5n8g1XjRn8MPhTF/BK8yu4ydFcTMP8GRY53h+wwjmL+CV1vvuijlLWf+
C8on/PGfieqMN4c5lRpXOEdYf+SC1Hzd1IjD7szfgSM/cNg6Gw/iuaAf19Jg
IZnK/CF0j3S/0psYxPwjVCbs3/ImOpL5SxgVIXySZR3P/CdkPI8WV1my/jgZ
BDn+IzeYZDL/Cp1/asc+u5bJ/C1EL9iRf+tcJvO/MEEjfcPVUVnMH4M8YE57
e9R65p+he0pG3QH1HOavYXlCk9Kg+Wz/W0JvcKLItTub+XOYo9szzbN/HfPv
8HtQo//NzvXM38PnLVOi9/hnMf8PkgJNZT3IYvMBpLoGPDLdmsXmBwhZf1DW
f0dK84s1hJ0tbLb8ztZrDa2G94fjIimbT8BxdlkLv24tm1+gJzD5fOahdDbf
gCy7fpf0XBqbf2BeCFcUGZPC5iOwn5TnkDsvkc1PsKbWJDkG49l8BUe+5hdX
HmTxtwWLd7GWOVti2HwGfRd/e1e7NZTNbxDiYXpffdkiNt+BcniBs53Ulc1/
4HPnwvUDiiZsPoTOC2LNjfVGlD98cBTVrJGEkP/n8uH7mX/5taMWUj7xwaZz
xuoN5eY0f/HB2SB4aeliNl/wIfuNctELPVfS54NmR38UTxhK6xeAm6OyZ6hC
PK1fAL+nyU1Lxq2i9Qsg6ti3qthRLD4CGDwhUSKqZvOlAC60FyQtXpFC+gIY
4vXsNC5JJX0hqO6vPrKzLo30hbDUd9Krv3nEewuBt1MYbNyUSPpCeLlN01b9
Nou/EIZ1nvd57bmKnS/AlXhTu4e5bF6zgwWtvUrnF61k5xMQ6bytJky8gp1f
QF4qf6Ftbyg73wD317zPO73E7PwDzPSOSbmW3ux8BPp0NmVXKU1n5ycgk8aO
r1+uRfG3B8VxFi3yWAd2/gIBf+lM/p4vZOczMM9f//nJHiE7v4Eg7lhP24ae
SwP69tDk6vbu0VND2X8BiQ52oA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHk81ekXx2+SslREhYRLl2TJvdcS4p6E9mS52UpKyVKEFClri62SVq3a
xpJBTVFNdU9iJEkbNUJaCC1jTBo05TeN8/zuP/eP5/18Xuec7/c5z/l8uavC
XNdIcTgcrWEczo9/8Y9fvSVi2Mh6UYaa5ELBj58ljlROH17zRE/C+fFLsETe
yItNxvo8yX+82BLVH2TbVSUbiP7jp1li/MqSBO4vpqL/eI4ljq9621EayhMN
6Vvg7/k+r/fnG5C+BX58y9tjWeZA+haoOtEvoz5zAelb4Lt+h+Sw6fOG+GkW
WJ3ZZGtXbTPEcyzQKsb4ZFft7CG+3hxDgs3Cf96oRPrm2OFX+TDu2eyheBLM
kSeX7v7itctQPGJzvHxXKjLomjPFb45larNN1Ua4Ufz/7u8q3A92bhS/GZo0
bBq7HFyH+AIzXKywoqOA70H6ZqjgvtzhboY36Zuhw5zTDWdc3UjfDJWOnm3Y
yplD+mZYFd03bfSlGaQvxLHbdrQG5ziSvhD5/X2Ror2zSF+I7t2q9yaX2ZO+
EA0s5lXNPbCQ9IU4S6/voKwKxcMRYqBvdYi/wlLSF6C9cKLgSrs76Qswp/R8
vlfNUtIX4D/VNwzndhqTvgB1HRz3hMgvo/oLkC8EzXcnwqj+AuSVZi/qbY+i
+vPRzPlAVm71Jqo/H5+kcLd+ad9Mz5ePvOzTacU9xIv5mBNrX9TWEEn6fFT5
uqP51fhI0ufjZx3PM50yG0jfFAuagxKWSK8lfVMMaPBN9c5yJH1T7MxdraWW
t4riN8XzX1z+HpAPo/qYoslCaxXlgxupPqZY25n54dvDGKrHdKy1d5dddCWa
9k/HMEO5NF3FKOKn48RvB3P3+Gwg3gS/O6YfOqSwmngT7G4LTDiTGEK8Cd5a
eP2L98oA4o3x0kfPB7WRfsQbY3Bqv6P+4pXEG+Or/bWpSZfofSkwQt7imMM6
8tbEG+GRQY2p6Tpiqo8RXr42cnn3uECqhyEWKUR9KFoTRvU1xI7UP/08P28g
3hAV30+UX/M8gvhp6BnZtKAgMZL4aRixKy1ZPmYd8dPwy/vWsuZgf+INUK9l
78eCu77EGyDH6ZNFYpMX8Qaov6h0Z2mFKfFT8XPxnw9UXgko/qm4vlQh0veD
C+U7FRsnt+/0/mMl5auPu8eqpb80WEG8PnIyB/eWv/EhXh87Ippsbq/1I14P
M3pvH/ie5Eu8HkY1vBk3ysudeD3kdlttkuJ+vTXE8zD9g6rVrh5zip+HPZnp
AydXUf/h8LClYvuD34q8KP4pWN9dHnZfKpT4Kaibr7r40ZpNxE/By3/Pj5S/
GUO8Lhqpvh9XpRFLvC6e6z0bYzNzG/G6uGswPsZr+GbiddD2bbT262PhxOtg
qF+ciqIwnHgdDPt0drPwQzDxXMybEHt1fpIP8VyUS4//nRc/i3guPrN9Ef71
xBKqjzZye/oN7IYvo/poo/GJA8VR31l9tFFh61Nrm3IP0tNC/ospju/L6DwW
aKLrtUp7538SSV8T9wnzldcPbCd+Mha61Rs0ZqcRr4H75w5/7J6STrwGVp+6
5xyhmE78JLRPdvp6bw7j1VH+kcGyEqVU4tVx95FZ71c0JBKvhk5HB1s3X4om
XhXbqycc2tIbRbwqrk7xKLpYyuo3Ec+97tw8e0MY8RPwRXpF4nYvVs8JeKhY
61nnbMaPx4zcurAnn1m+KvhgwIubzA8mXgVzjjwSVxwPJl4ZS4vPc5dnsvMz
DqUO/f1NO4XFMw7d6xW0PAO3EK+EGbP6ZlfFJBGviIHW/bYxrmnEK+JFaZf1
CfL7aH0M3r7g4hzUcID2j8ZGTS7fI+8Y8QqYs29l/qTMs8TLYXaRzLJc7Tzi
ZXFuTfcpr7s/Ez8K7XQ+dp18d5F4Gbxet2d7pcYV4keg+oZrOdybV4mXRj2J
YUbrkpvES6FNYVBe6vjbxA/D3KKGwCd9d4jnIPdnuRspNlW0/k3SaZy64sWa
Gto/IHFJOnlBoPSQ+D7JmOTdFcvOPSa+V3LkcaXSBId64nskcyPnNmTVPSO+
WyKNFuJrkxtpvUsyq92xUtWiifa3SeZmoqx6QTPxrZJ23vE5E9RbaL1e4vPu
ZqBeFeMrJemDcfY2N5+z+Dl+ZSWmKS8esnVRsvbTPzfPrGH7Rc3bq76eVv+N
6YuiirKqsj6zerSJbAr9Er3GsXp1iXx7L5YseFXG4hct9cg7btj6C8tPpHlr
nsKxM8Usf9GYlJM2T2RyWX1Eii4RZld0c1j9RAEpkZwSyWFWX1Gl68ykywZZ
LH5Ira11LDfIYM8Hjqtv8/U6z943Kbg/cZvCEalV7PnCRG7pT7I751E/GAE8
/5kmcpobqV/IQHB/j1HAzBjqD6MgaH7f/fb5McTLQl5c+e0Yvyji5eDs7PBd
rZ3sPlWAHSZFOltaQogfDXUdN0ZojwgmfgzMVzKS5BqGE68InwLvN291i6B1
RdjdnTL2XBy7T5XgpmL0JcNBMfHjYKFugpXrL/PY+YOFr9VqHrSJ2fmEAmXB
3H2L/Nn5BWuvv2R29W1g5xtkk6/uPDUugp1/8LG2S7ynvZH1B1iATV7ijv/3
D/j8fYZmycUA1l9A5LrMY14+u09VQVFdbbTg3/5D/QlKNxvF3PzK9NWgd0VF
t95M1k/UYdubpO5bd9aw/gfSIVrG63ydWH8E7onJhy5vWcL6J/TEH838Vu7J
+itY//7oxsg9fqz/wrr2ClHuTpavJhw++eurqrQQ1r8hqPzNk1pnFo8WNMs4
idQsI4jXhsVrw2Wik9i6NrR39gbu2hFK+7XhfovW/Ig2li8Xxr+JLxojYPMC
F5TfD97edp/lz4ULztkrX8atZ/cXRD1dL/80cgm736BeqiXErIXm1QIdOB3h
Mj78jiM9X134bKxY/SLbgt2f0O50PDlimTnxuiA89Dqk/TDNw5wp8MVo/s2j
5sDuZ3ANvHU2vtqX3d/gb3ZvnnVYALvfIfWPLL91jixfHpx/1zUzaRW7X3gw
ENvlONthK/F68NTwjZpAOoF4PRjVphyityuReD2oLBU/9w6IJV4fSleW3fhj
ONPXh2MWYwO8g9j7pw+V/NTsQ1tWEz8Vtp6OlXZ9u5L4qeA9Qd1ZMIfNW1Nh
wkV+0964QDZfQYbV4cBgZzaPGEDesIvXXEI3svkMag16xzy9E8rmN7APfFvx
5VsIm++gw7+gsSaevd/TQONdY8R1N3Z/GYLVJrWQ5IAYNj+CbEHbp/s5bL4x
BCc7UaHyuWg2f8JPhUvX/dnJ8jWCBX08x5Jgpm8ExcfPSAtd1xJvDGn1Zjtn
9NA8LzaGGllD8W8aLH5j6FzU+uCfyWy+MoHYrufrg/dvIt4E6rTX8ttSWDwm
4CuW8SjJjiN+OqQ8fyvKj2P+Yjok2xd+v6W3jvjpkBqkrb/g1TLiTUG5xtN/
1lE38h+mkPVosNHk4AzmH6C/eGv4F0+azxNMoUOpxXFEP5vnTSFKaNMhtPYi
f2UK0pylSwyPMn/HhyOxzr9KpH3Jf/DhgHbFo4WXPEifD1nSER87TnuSPh/u
uNln9h9k54MPk8ZWKNXtmMb8FTTb3AuN/ezC/Bes0Z1UO7BwMfNnoPtOKz9a
zo3yF0CMWvlJ/yVG5I8EYBdRt3ZgnjXVQwAd3n9ddz1hSfoCOACZdZnXB+2G
9IVguE+BH+XswPwlKEtkso7HsPiFUGK8LVAqfTnzpyDbdMGFs9qH+VcY9nWj
yqd+f+Zv4dmc+RGlp4OY/4XYtAj7bttg5o+hjju4XDwpiPlnsHJLiNZ8uZb5
a1jRqpYfasPmfzOYZHbLbkGfD/PncFdZxerjVU/m30Frt2bKZPES5u9BRnb7
Yzhry/w/xKo8UD+7KPHWkL45KGqs9ym+rEj65pDZPrFR3G5J+uaQt6cse5W9
LulbQJ3LN/HJcgH7PgEvXRoLRkSyfmQBp+66OrneW8q+b0Ca7azXi2Q92PcP
2Dbsp9V6PfS86i1A1qxhvXyGGz1fS1j6pN6tUGxH+pZQK2Ubvm+/NsVvCeFv
XI/uz6D+mWAJGb0DWXUXbCl+S3giVBXVPgOK3xJytss0KZbYiP4HAO+KqQ==

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9241023897865057`*^9, 3.92410239466399*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"4e551cbf-1116-4064-8cab-420682e956b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmpmem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmpmem10", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmpmem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmpmem90", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hmpmem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Portein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5355\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925135560056591*^9, 3.925135593063092*^9}, {
  3.928710472104211*^9, 3.928710483134856*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"f7b811de-4db2-42bf-930b-b62a303a4709"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
UbfXROgi/h/P20v6
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9mHk8lVsXx0/RoCiiUqQcM8XhOOdI5SzKkNxCI1FJZEyGdBvIoZJwC83p
NpdwK0MD4qyoNNyoK5GboZRE9Ra6hqT39lr7ff7xOZ/93T/7WWvvvX7r0Vwb
4uozlMPhTB3C4fz8u/TnUy1Ct/Q7uapLLcRZmT8fEQpqlgeaVViIOT+fGBGe
fRjw+FCepfh//FIRGgSIUpdetxvkDUXoMTrle83A/EGeI0K7T4vSol2sBvlq
IS5cK3dG42qr1aC+EC90njnRUSySDuoLcdkuF3ngWUsH9YVYljTb40LIHOmg
vhDb/zocvWGX9SDPEaJ/H4/ncddikK8WoHzIXGX7bfqDfKYAZZ+rPxuv+95q
UF+Ar6oONT+4yCN9ASbbLR36Zqo16QvQRIkXKczWIn0BlhWEC1b2W9D6zZFz
SjZwsakaxcccTdrlTvifsqH4mGP2B0n5sDFuFB9z7Dybs8c4aQ3FxxylGs+7
uPfWUHzM0XGf0lXdWZ6kz8cxnDDrR6OWkD4fD1jaKrbvsSN9Pi4sTVqlPVKP
9PlYfy7PZ8ERY1o/H9MHlO0OWLjQ+v/l+bo7Cl55UnzMUDjJsf8g34fiY4bD
q/45He3uR/E3Q1mHsqnL1/lTfMxwu9tDJ9m8YNI3w7GdZ24uKA0ifTPk5etw
XeUDSd8UeS5XIua/CyB9U2yqTcuy2R5I+qZou/ayt1JOMOmb4gvtCuXCH2Gk
b4rhDcdOOpqFk74ppm5b3FApF0n6PBz/5V1oXc9m0ufh5dZpDTIvtpA+D9Nv
Cm+9276N9Hlo0DhBZ7f3dtLnYVGg+4eNRdtIn4eFvW55xi5RpGeCY0+KJG+m
baf5JjjbP6jWL47xJjiQaPq6M34b8cZYUu7UUbQvinhjHD0voat5ZzTxxtiz
9q5waDnTn4GfImpP17vvIH4GPlFY+UajSkL8DEzp91o+Z/VO4qejc5IyriiI
J346flJ/EXzZfy/x0/GqHqdimWoi8UZYXa3lkZa7l3gjLMusljOrjyfeCP+u
lpFcVWT6hhj/cYS+TXsM8YZ4Pqz7jymhbP2GGPe8zP6XdhZvA8yI/DWidXo4
8QYoiO+qjt3H8mWAjsPz02YXhhOvjxVqH25sfxtGvD5uvsRRfa+0gXh99Oe+
5bpt9SJeD6tOhWXFfHEkXg8PKXUVGwqEdF700DFv2zz9CT50PnSx/ZL7i1nT
Q+k86OKYsg1mxyojiNfFgchU64tfw4jXwcTzobM7Z4cQr4MmFbUbFNYHE6+D
C5t+LD+iEUS8Nj71Ny8xHhFEvDa6WsUZX8FQ4rXxiiR3daVdJPFaOOQbVCb7
RBGvhQkdM/8zM0NCvBZe8pw8RzBqJ/FcdFv4aIpHwk7iuZi2/5nDPYc44rmY
XmlTJOsgIV4Tp6iaCt4YS4jXRPczo4JvPo8hXhNHzk/zfV8ZTfw0vL55SfSW
d1uJn4Z+qc21AfGRxE/D56vmvrtstJHGp6LDH8+2ciXraL4G+lqnuUVYOhOv
gc6JQZ/jpzhQfqZgQFtnY5SCL+VPHVX7h7gJtQMov//+PvHFOvs7u0/UcMDN
TjuwdT3xk3FLYWDh4cKlxE9GX43VF4o9nGk9k9Cn7PaYNyosf6p49uq8LwU6
7H1VUc33+LecVQnET8TX9Q02Jfz9xE/A2353kyYPSSN+Atqtququ8TtI/HgM
39vWucP3KPEqmFXSP2Vz9wniVbBR48TrkNpTxCtj/dOi0xayZ4kfh1vWH7Zp
yzxP/Dhs+eoc4WWbQbwSJl7wuuAflUW8ImZkXHL50XGZeEXsaFBtDlmWQ+Nj
0CqpBNQU8mi+Auq49mf2alwjXh6Pbfg995XXDeJH4cG6o3G3nhQQL4dtV6zv
7150i/iRKHP9dnGSgpT44bjD3RBujLpN/DDseF50rqSqlHhZfNbB2xf19Q7x
Q3GSXGGaKLic+CE4L+fP5BDdh8RzMGsWt3Ld9z9p/Lu07p3URTL0Cc3vk3a4
pi4fXviU+B7pppOLJjderCL+q7Q9o9VNfLOa+A6pWLvvbv/jGuI/S5X07v59
oPcFjbdJXaWS0UKDlzT/rfTPewvzu7Y2EN8k9daZ3jfdp4nGq6X8o7zY4P2v
6Pdd6eGclWcycl+z9XM+cBwbTxQ1s3FxQpCWkxz3//PFI2KklmXD6pi+OC0R
Wu71PmP/X5yQkBfX/Ja9b5u4r60F3ec/YusXH/rwudNpwj32fuJrK2wrdjaw
+H8VCzvlZv8+s5jFR8wfJrE+fJvlt0+sNfJiD85g++G7ePhAz2vTvVfY+qE4
JXdT3cpMlh/4tUWnMHTjeZY/cDQMNM5efZrlF77YJzVmxB9n+QeHHDeHY6cP
sf0B1bey8xwhle0fsG9flBZbl8z2F+iMb85NCIxn+w9mcJWtiwPZeZSHa5nJ
z00usPtEAXRa1jl/SVvA9jeE7pLclC9ypfOuCPIuzUtL00LoPlAE44iUE9+/
RdB9oQTepc4yIy6w+jIOTANkdyyu3UD8ONi1LMbN96AP8cpgV9E0eux6T+JV
wE5Y3x39dS7xKpB60KC7dSyw8w/Nj0O3pi/kEj8BPnfX7m0tNSV+AlRb5Ndn
80xIfyLMU7DU7j5pw+4f0DSY8/msljW7n+CBpEHl0mxL4idB8XDnrp42Q+In
g9rcSpcP81yJnwzFEUY505QcaD1qMDHT722TyJV4dTDn4z51wUri1SGkLH/+
gO4y4qdAv+I4N6GpI7uf4cE+6zs6H5m+Bhy7FrU9/8oCdr+DJPBwWdeZuez+
B47TLO4OJwNWH6Du5DvvFhV3Vj+A9/HFMa/i9ay+wDxZUYBBeRirP3DAWz86
/TCrf5oQKKM2xSmB1Rcu5ImV+jfLMJ4Lm3ablcbzAlj9g123sweUeOtYfYT4
/merela5s/oJBXZ2T61c3Vh9hWTx2WhPeSNWf2GU3u6hYC6meGuD3fAl+doH
bSl/2tBzo+yx9y17yq8OhPZ+BxmhO/E6EH65/qky2BOvA/I2X0SOS0XMP0Dx
msyaCpu5zF9Aq1qnnl/zTOY/IGHL7saragLmT8A0Wu7VSyVn5l/g1YVp6tP6
/Jm/gbDM3Sm2R8OY/4F3Q95m6IdEMn8EKnfVuxxStjD/BHyNZJGkn/lPA6j7
S5rduJL5NQO48lvrzlzXGObPYLyKcYHrSeYnDaHSs148cchO5u/g4z9KvRuu
7Wb+D56ez7j/ozSB+UP4bBBSc0+czPwj1I4c9nGtyX7mLyHx1YiOPSf3M/8J
miUt+f/M2c/8KQTMWbKtJyeJ+VfYHP2gqUNtD/O3sM//s+r9EraeGaBV/5uF
n2kc88cwekz+049zY5l/hq6MPdr3NGOZv4ZYcXluiWos899wTPOc3IM7jDeB
t55JrQnmccy/w5ZzHYql8hLm76Hvgap7/XzG86C8zGlcvVEs6w9gs31p9xYZ
CesfoGsDJ+vWkRjWX4DBnc7qvAamx4MPsmHRVhclrD+BWE2FpqzDMax/gWuF
PA/zrRLW30BHZGVS8Tr2/qYQs8mvq+f4LtYfwY7MqHoZ7V2sfwJNN+31du07
WX8Fls3CuXIycaz/gmF3YgVWc9j6zSDEOOCvx1lsf5jBo8X26QeSt7P+DtaW
t1u2dP/K+j94xjcf+OPlJtYfQnbR4vCuqgjWP4KV/jIjhU+sP+OD7rDItRON
NpI+H85l9OXKaawnfT5kR65MidJdQ/p86Oi1qOhTpPNQzYcXAdeXyCmOJn1z
2MStfHnDwpn1xxDvZJ9T3uTB+me4lyN/Zk7xGtZfw8XkhJcydl6s/wadzaNa
wuvWsP4ceN2SYzV8HzqPAvCoqrmp+9CX9AWQ/p+XS64X+JK+AEJl3uNsEd0/
MQK4us4z+EmjN+kL4JVf8ZF/grxJXwCJXzVnqH9j+kL4/bTt2tSF/qQvhNKb
3345Yc76BSG05RUUBi8KIH0h5Kek39k4aj3pCyGo5hrXy3Md+z4CRoEB349/
9mLfT2D6byPUo4JWs+8r8GFP1o+NCavY9xdYtiL76YR0d/Z9Blbsvng/8gG7
/0UgH3Kpd7SHLemLYEnR2x/Pwy3F/wXdlIZe
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
aw75fyvIahd7mPNBXfR/jABIZQ==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
kL4FfJh6sn9SuzTpW8BQx/mWj91SvP8Dj7xW6g==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9725490196078431, 0.8509803921568627, 0.8274509803921568], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.9215686274509803, 0.3254901960784314, 0.3333333333333333], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Portein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.2169934640522876, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3254901960784314`", ",", 
                    "0.3333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3254901960784314, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925135578994526*^9, 3.9251355937788243`*^9}, 
   3.928710484868514*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"804d28ff-900e-48bb-8edd-5b440ba3ad0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9241026999094324`*^9, 3.9241027316865096`*^9}, {
  3.924102807004205*^9, 3.9241028599984274`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"f272b022-cb65-4a99-9469-fdc8511de729"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9725490196078431, 0.8509803921568627, 0.8274509803921568]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9607843137254902, 0.7568627450980392, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.1587768360482145`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1587768360482145`]& ,
             TagBoxNote -> "1.1587768360482145"], 
           StyleBox["1.1587768360482145`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1587768360482145`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9490196078431372, 0.6588235294117647, 0.6313725490196078]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.050483562404639}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.050483562404639]& , 
            TagBoxNote -> "1.050483562404639"], 
           StyleBox["1.050483562404639`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.050483562404639, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9372549019607843, 0.5529411764705883, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.99425349260754}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.99425349260754]& , 
            TagBoxNote -> "0.99425349260754"], 
           StyleBox["0.99425349260754`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.99425349260754, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.9352382914848941}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9352382914848941]& , 
            TagBoxNote -> "0.9352382914848941"], 
           StyleBox["0.9352382914848941`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9352382914848941, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9215686274509803, 0.3215686274509804, 0.32941176470588235`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.8461669715538163}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8461669715538163]& , 
            TagBoxNote -> "0.8461669715538163"], 
           StyleBox["0.8461669715538163`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8461669715538163, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6326797385620915, 0.4392156862745098, 
                    0.42091503267973857`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9490196078431372`", ",", "0.6588235294117647`", ",", 
                    "0.6313725490196078`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.21437908496732028`, 
                    0.2196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3215686274509804`", ",", 
                    "0.32941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9241028522123523`*^9, 3.92410286667523*^9}},
 CellLabel->"Out[89]=",ExpressionUUID->"aa928d26-7381-4651-9649-f6b780c57928"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp1", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp10", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp50", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp90", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp99", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9241029454115105`*^9, 3.924102967036205*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"2f3c675a-a70a-40cf-8c1b-c3087dc3a706"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9725490196078431, 0.8509803921568627, 0.8274509803921568]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9607843137254902, 0.7568627450980392, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.147239963523774}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.147239963523774]& , 
            TagBoxNote -> "1.147239963523774"], 
           StyleBox["1.147239963523774`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.147239963523774, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9490196078431372, 0.6588235294117647, 0.6313725490196078]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.0498996237013587`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0498996237013587`]& ,
             TagBoxNote -> "1.0498996237013587"], 
           StyleBox["1.0498996237013587`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0498996237013587`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9372549019607843, 0.5529411764705883, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.9988954343816799}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9988954343816799]& , 
            TagBoxNote -> "0.9988954343816799"], 
           StyleBox["0.9988954343816799`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9988954343816799, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.9050683310074015}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9050683310074015]& , 
            TagBoxNote -> "0.9050683310074015"], 
           StyleBox["0.9050683310074015`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9050683310074015, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9215686274509803, 0.3215686274509804, 0.32941176470588235`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.8281746423320936}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.8281746423320936]& , 
            TagBoxNote -> "0.8281746423320936"], 
           StyleBox["0.8281746423320936`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.8281746423320936, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6326797385620915, 0.4392156862745098, 
                    0.42091503267973857`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9490196078431372`", ",", "0.6588235294117647`", ",", 
                    "0.6313725490196078`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.21437908496732028`, 
                    0.2196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3215686274509804`", ",", 
                    "0.32941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9241029680754676`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"ce232940-10b1-417b-98a7-309735d74b11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmptyp1", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmptyp10", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmptyp50", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmptyp90", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hmptyp99", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "/", 
       RowBox[{"oltyp", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], "-", "0.9"}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite productivity\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924102885526845*^9, 3.924102906169084*^9}, {
  3.9241029812425976`*^9, 3.9241030751885896`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"ed64e871-b4de-4530-bba1-a9e1ba84a61b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9725490196078431, 0.8509803921568627, 0.8274509803921568]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                0.09999999999999998}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.09999999999999998]& ,
             TagBoxNote -> "0.09999999999999998"], 
           StyleBox["0.09999999999999998`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.09999999999999998, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9607843137254902, 0.7568627450980392, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                0.10600880021960568`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.10600880021960568`]& , TagBoxNote -> 
            "0.10600880021960568"], 
           StyleBox["0.10600880021960568`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.10600880021960568`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9490196078431372, 0.6588235294117647, 0.6313725490196078]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                0.09638953522481675}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.09638953522481675]& ,
             TagBoxNote -> "0.09638953522481675"], 
           StyleBox["0.09638953522481675`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.09638953522481675, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9372549019607843, 0.5529411764705883, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.09977191999418977}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.09977191999418977]& ,
             TagBoxNote -> "0.09977191999418977"], 
           StyleBox["0.09977191999418977`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.09977191999418977, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                0.12308357764751776`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], 
            StatusArea[#, 0.12308357764751776`]& , TagBoxNote -> 
            "0.12308357764751776"], 
           StyleBox["0.12308357764751776`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.12308357764751776`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9215686274509803, 0.3215686274509804, 0.32941176470588235`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.09678049473126127}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.09678049473126127]& ,
             TagBoxNote -> "0.09678049473126127"], 
           StyleBox["0.09678049473126127`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.09678049473126127, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite productivity\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6326797385620915, 0.4392156862745098, 
                    0.42091503267973857`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9490196078431372`", ",", "0.6588235294117647`", ",", 
                    "0.6313725490196078`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.21437908496732028`, 
                    0.2196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3215686274509804`", ",", 
                    "0.32941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9241029076263027`*^9, 3.924103004941537*^9, 
  3.924103037021862*^9, 3.9241030763040466`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"e1c1c71e-aaf3-477a-8c42-f5423c7090ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmptyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmptyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmptyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmptyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hmptyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Protein titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245323254970827`*^9, 3.924532403912059*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"b205fb1f-a03f-4e20-bc27-a00a3f0ff1a4"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
       "]]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzHtMjXEcx/GnVqmkezmRdM7pdDndT50i4/k6lbFpjGEx/RG1huQ6sVmX
1dZGCxszUqbm8jR3TZTJpUYuLXmyCFmTULnkoJvI+S76/LZnz777vr5vZXLG
khRzQRD2//lG//8/Q5n33GV/X514cnd/TfaFbQbTLIuLM/JpRkS+wSTbxR9J
OxZ2f9vH+7eiQlMUNX3rYUOFNPo+iOePPny0a9Nx9p/F3oo9aYMbynn/VYzJ
ChqYN3ya742ivmh/l7XfOfY/xe1P+oza7ovsB8S4pDbLl/aV7IdFxeaRen1B
FXuBemYlbXFdU8N7M7KqrY5zSKzle3PasnbgruHabfYWZJ5+Pa8kq469Jdmu
yc6Jr7zH3oqaG/NV+q4H7K3pqrJhauaGRvY2VDy0rq6osom9LeUmPEt/972Z
vR0Zb96/3VPYwn4Sicdsk3MXtbK3p4Sq+brS1Db2jjT/fUqiceQ17x2p6EBx
l9enN3zvRPGXO2pvdHewdyb1ovB2ydDJ3pksdSt2PR7qYu9C1admHyo3fmTv
SgeUbnn1Cz6xd6VXSVXtDdu+sHej0ksBFTtz+ti705Uc40qPl0b27pSqaN1b
sv0n+8mUccuzsEk1yF5BLZ79Mx+u/sVeQavM1h+MeSrEmrwHObtrHFaWmsea
/BRqK8l7M7HaItbkp5BLmnH5izkT2E+l7LIR6UGnDXtPKmjriVnaYMfekz72
J3xRv3ZgP40K7O+dOXLHib0XPTmd9fzEWRf2XrQ4s3dwo50b++ljs8l7w/7f
bLr3Bq8ErwSvBK8CrwKvAq8GrwavBu8D3ge8D3gNeA14DXhf8L7gfcH7gfcD
7wfeH7w/eH/wAeADwAeA14LXgteCDwQfCD4QfBD4IPBB4IPBB4MPBh8CPgR8
CPhQ8KHgQ8GHjd9rw+A+bLzPBi+Bl8EL4dAPh3449MFL4GXwgg76OujroA9e
Ai+DFyKgHwH9COiDl8DL4IVI6EdCPxL64CXwMnhBD3099PXQBy+Bl8ELUdCP
gn4U9MFL4GXwQjT0o6EfDX3wEngZvDBjbP4NcTx7CQ==
       "]]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/GjlaWpbDovLbNd3LxubvMyKeo8znxhEqQ0xRe+MQyDMLu8
iCjtIkVEmBEVRRcqKE+GgpihdnUWJUVSpwJJW16ShNKpuCK77qHL7w+Hw8Pz
eb7ass2F5f6CINT//H79/32OS5ps5+/XLV6wOZ0thdscvlkWvwUrat7sq3X4
5Ftx7/eF89evquP9sBgeOHK9Xn3CcU369T6IJw9fa608cpb9uBgf8vx1df1F
3nvEmX0lfq/sV/h+Wpx1eRtWKBvZe0XrhdA7pe5m9l9ExSWXrdHTwn5WrCs4
5u1f08ZeoLoJh7NJ3cF7P7IsNrZtdN3he3/K68nPy826z34u1Xz6tH2r28V+
Hs0Gje1u8jxkH0AFN6zXR2N62C+gWLG9wHv5KftAqiyO82ss7mUfRAO17uPK
vc/ZB9NkgNbVcEtmH0K76sZWLyt9zT6Ubif6e3eb+tgraLX94s095/t5ryB9
e1vv4xA33yvpiWnDo5d5g+zDKDJ7qOjI1WH2YXQ66EPLM90o+3BKWN7VWqUa
Y6+iohKr85TjI3sVqbPL3h99MM4+gm6uvOupfuFhH0kTBvNI5dQU+0iSgsXc
3h0z7KPo4D1n6eDkZ/bR1JXeVN458ZV9NM0Lio7UmYUcn19Ez/Z/M3RG+Of4
vJqilDuzpoPn5vi8mjY152vcBQHsF9NAytp1qnML2MdQTOCZQxXOhexjqGeL
o0JZHcp+CXUcGMltfKdgH0tNZbeq5gyFsY8lVfGK7j5VOPulf2af18D+7+y7
14DXgteC14LXgdeB14HXg9eD14OPAx8HPg68AbwBvAG8EbwRvBF8PPh48PHg
E8AngE8Anwg+EXwi+CTwSeCTwCeDTwafDD4FfAr4FPAm8CbwJvBm8GbwZvCp
4FPBp4K3/L9PssC95X+/B7wEXgYvWKFvhb4V+uAl8DJ4wQZ9G/Rt0AcvgZfB
C2nQT4N+GvTBS+Bl8EI69NOhnw598BJ4GbyQAf0M6GdAH7wEXgYvZEI/E/qZ
0AcvgZfBC3bo26Fvhz54CbwMXsj6M/8Av7ccxA==
       "]]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ez0TDRcmpmd+fUXZzTzXlByvPkICvJokiiy4vEECLUJvnC
AsWgetHNLLphGbak0yzqhd2QJC2LDMw6SrouSqUZ5Q3LZqOyPVj9/nA4PDyf
56vKKVi7zUsQhIrf3+T/35deE750/Z/3QKR7OwYaQ23pnlkWS4prm2/XlKd7
5FuxLvDA4R+fDvH+vbi6sDW22noi/Yo0+QbE3b13B1XyWfZDYva5VSe/X73A
+xFxznerS9ti5/sx0TVoXzJklNiPi85ar8pjedfYu8SW60Vdr+tusHeLyvFl
adk+9ewFemVzZT7Lu817BRX7yUpzZgPfe9GZR68c/W2N7L1pRe2dN3f3NLH3
oa+G01khxofsp5H9YuvH/JTH7H0pp2jdzdzzreynU9v1lOAMUxt7P/KOWDmm
MLWz96eq6iDtwP4X7ANosKb7stLcyX4GdZyIPNb97iX7QDIMx/1QOJy8D6Tl
6ieO09Fv+V5JZ3S2nG2fe9gH0dHKVFWl7zv2QeS+9bx5pPAD+2DS2Irq+9z9
7EMoK2E0r1P+xD6ENlVsPrWv5wv7WbRakXr/xuJh9qFkrijZm2UeZR9KaY4N
vg27xtjPpqcBw1Ua5zf2YdS0ZHuTptTFPox6o7rs/qVu9nNoQ8aWzImDgtXj
59JE6amN+Ru9rB4/ly7tLO9wHvG2evw8cklXqb1/Gvv5dG2gL7fQNp39fBLD
LQ3d/v7sF9DxAu8yP9+Z7BdS6s/DdyYylewX0hpFmnvrzCD2i6Zmjw+H/d/Z
cx8OXgVeBV4FPgJ8BPgI8GrwavBq8JHgI8FHgo8CHwU+Cnw0+Gjw0eA14DXg
NeC14LXgteB14HXgdeD14PXg9eBjwMeAjwFvAG8AbwAfCz4WfCx4I3gjeCP4
OPBx4OPAx/+/18fDffz/vgy8BF4GL5igb4K+CfrgJfAyeMEMfTP0zdAHL4GX
wQsJ0E+AfgL0wUvgZfCCBfoW6FugD14CL4MXEqGfCP1E6IOXwMvghSToJ0E/
CfrgJfAyeCEZ+snQT4Y+eAm8DF5ImZp/ARsFAnA=
       "]]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Gz4W2WsdTUbJnTuc152bxMrTfnab4oQsJKKaUXZgwiSJES
ulCaL4xWRheEkgqlojgaFUaBFoJ5Kc3C5hFp5QVL0yjtYlmZ3fZQ+fvD4fDw
fJ6vNr9wvV0pCMKJX9/v///PdiF8Zfaf1ypm9eTU3MwqsrlnWfRrHI/ZcOOg
zS0HxeK6/Ia8+qO8fyleUJxpLRg+ZauVfr9x8dm6/v1eyir2k6LucKWz117N
+/fiade1wf6ki3w/JSrv3A3asekK+2mxdLfmYFVGHfuv4tbgzHnHi66z/y52
OQxhZ1fUsxfoet8Nn7NvbvFeQZcyH1bdMzXyvZJ+dDVVn9zTxN6Dnu9tfvti
UTN7T/J+nNuw5UkLey96e6TDXlvezt6HjnV7VWdJHexVVDJjqdhpeMTel3pG
jWs3L+9mP596r46USxVO9n60au+atNMjMvsFlLBvRdv59j72anqlarU0fnbx
Xk2OTxdPviwY4PuFVJ57yrD9zBB7f7pPU9P258Ps/SmvTF/svXGEfQA1W31y
FJ5j7APpY4vmcv74a/aBVK6qLLmqnWC/iK51qGbj7O/YB1FnxGrd8IEP7IPI
9qBQ3tY9xT6Yanocrp6d0+xDKGPUsysj/Rv7EAqoDFSGlM6yX0znsqMOPFUp
0t0+lDbrB8aOvFGmu30oHcq93VUy6ZHu9ktorKbz8USFN3sNOYd6d5UZfNlr
yFz35WjBYj/2S2nBVI7amaZmH0ZtLsetjzNq9v9mt1/2d3b7cNiHw304eC14
LXgt+AjwEeAjwEeCjwQfCV4HXgdeBz4KfBT4KPB68HrwevAG8AbwBvBG8Ebw
RvDR4KPBR4M3gTeBN4GPAR8DPgZ8LPhY8LHg48DHgY8DHw8+Hnw8eDN4M3gz
eMvcvckC95a5vhS8BF4GLyRAPwH6CdAHL4GXwQuJ0E+EfiL0wUvgZfBCEvST
oJ8EffASeBm8kAz9ZOgnQx+8BF4GL1ihb4W+FfrgJfAyeCEF+inQT4E+eAm8
DF5IhX4q9FOhD14CL4MX0v7OPwED7BrG
       "]]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzFlIVHEUx/GrbY6MpuNeVl4dndEZl9FZFIN7mqGiSIJIy8BCRYigfAml
3dQWJCILKtqobNEr+RBGQQUpmZEWpt2SHkrcMwwzG0ZrKG0Olb8/XC6H8zlf
saB4Q5G3IAjV09/M//9nr4lakf3ntUhXIwob307stHtmRervKj12MeiQ3SN7
pPWFz9NV+4/zfkC6pl87vKyq2l4vz7wRSbvupbt0zzn2Y9JAyOmgWvdl3o9L
d3XFVYMV1/n+u6Ruf/OsbtUt9i4pONySojLJ7Kekga6tmuMTDezd0td7KnuT
7i57gdof5i2I+NHIey/y+lhie00P+N6bdtQcUTvdD9nPJeu63Zap5U/Yz6Ob
uksXIg80s59PWeWXT9UILex9yODKySnpbmWvImdX04m0iRfsfSkwu108ePQV
ezWtyc5f4T3nNXs/MnZsnMwK72LvT/WdFZ8+H1bYB1Bl823RNb+b9wF0/kZp
bWXTe74PpKu9fidcxg/sNRTzxfBoV1sPew05clvO5zf0sg+igLBvd4qG+tkH
032zJjRj2xD7YDKt7tR2ZoywD6Gwcyffpe8bZR9Km25W5PfljbEPpbPdffry
5ePsw8i58okYnTvBPpxyDvWa2/qc7Kfn7eLThScn2UeQS7F2aPb+ZL+IBm0t
4+1nfrFfRGPuIzXjdV4Oj19MU9YXgSPlcxweH0mZ6jLjlSvzHB4fSdaMzKGy
DB/2S2hznnq06q0v+6VUvaXAPjTsx34pjbSO3j722J/9sr+zx0fB/t/suY8C
L4IXwYvgo8FHg48GHwM+BnwMeC14LXgt+FjwseBjwceBjwMfB14HXgdeB14P
Xg9eDz4efDz4ePAJ4BPAJ4A3gDeAN4A3gjeCN4JPBJ8IPhF8Evgk8Engk8En
g08GnzJ7n5AC9ymzfRl4GbwCXjBB3wR9E/TBy+AV8EIq9FOhnwp98DJ4BbyQ
Bv006KdBH7wMXgEvmKFvhr4Z+uBl8Ap4wQJ9C/Qt0Acvg1fAC1boW6FvhT54
GbwCXrBB3wZ9G/TBy+AV8EL63/k3Sq/3oA==
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Protein titer\"", TraditionalForm],
  PlotRange->{{0, 24.}, {0, 1.481161330892308*^15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9245324052370024`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"cd5d70ec-c84d-4523-afad-040c41d4e7e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmptyp1", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmptyp10", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmptyp50", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmptyp90", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"hmptyp99", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite titer\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924532417691079*^9, 3.924532435437163*^9}, {
  3.9287105683534336`*^9, 3.9287106287030354`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"de66193a-482a-487f-a9cc-35872b48e81d"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Ezu5k3bJpT8zbnnB7d5qbTrOg8biJo0EXsfiGTLCIwDCIL
6YJSQWa+EOmFJWhgxyyEtKwwK5PogmidIjRIxQgtUUOUNC3bg+HvD4fDw/N5
vtoDeZkHXQRBKPv7zf3xbf33XkirfPqzTCVX7M5ZkWwfmvYOeVTZneqLFFu1
tcB67BbvB6Tq/tnlNWMN9jp57g1Km282F+vf3Gc/Irn3h410W1p4PyYVPNu/
3Vj5jO/HpXrztNuPinb2k9LFp0NFjVOv2P+SKuocyfuGO9j/lhItn+92Puli
L1DhW7eit68V3qvojld+7QnzJ753oSMpW7Kvvethv5jEzq70wLwv7JfQq00e
nl4P+9gvpT1yTTnZB9i70voR4ZEu+Bv75TTUlhGR7hhi70aX1waXTT8eZu9B
KS/PdrdkjLL3pNSPs2Ppx3+y96JLgzsbO7rH2XuTQfO4sOfcJO+9qb35dnVr
zhTfr6DzVbnRqtIZ9mqyLu0dFL1VDqdXk9eeq+9PrVzkcHofsqzZPVGZtcTh
9L60Qd27baB7GXtf2nXBelp33Y39SppYXbCood6TvR8V+h4WrcXe7P1o1D25
tjRbzV5DMUelNPeTvuz9KS0nYJ2q04+9PyXMBHeIRwLYB1C5v+plR0YQ+0By
NanbN54JZR9IbRP30tKLtOxX0V7PQ2c0RTr2QVS/ozVV80DPPog0mZu7ag1R
7IPJ9jX/xvcekX0IxbU1nX7ea2QfQiXDuXV9xWb2ofOz04fB/v/svA8DrwWv
Ba8FHw4+HHw4eB14HXgd+AjwEeAjwOvB68HrwUeCjwQfCd4A3gDeAD4KfBT4
KPDR4KPBR4MXwYvgRfAx4GPAx4CPBR8LPha8EbwRvBG8CbwJvAm8GbwZvBl8
3MK9GAf3cQv9WfAyeAW8YIG+BfoW6IOXwSvgBSv0rdC3Qh+8DF4BL8RDPx76
8dAHL4NXwAsJ0E+AfgL0wcvgFfCCDfo26NugD14Gr4AXEqGfCP1E6IOXwSvg
hSToJ0E/CfrgZfAKeGH1/PwHj9e8Mg==
       "]]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/HjNddlbOYl59Lm3HTzMucuRiHnyZVRWeFKzFQQNZOiy4si
lRCpUWQXsrIgykYvwo4UXaCbaZJlVERiHCszEMuwC2aJEEXRZQ+Gvz8cDg/P
5/nqSre41/kLgtDw5/v7x5f3790XczY3erK9h7J8syzeuh3T36nwZvnUgNjR
efjG68LzvB8SMzOD1KbRy1kt0t/3QQwID+8rfnqd/aj44n2e6e3Kdt5/FS/m
tObUdNzl+3GxeKb6nKu1i/038Zime3dl+mP238VpR+f3tSi62f8Uh3KbHadv
9rAXSH/w16faqzLv/ahsSfBDs/9LvvcndXOP39rr/ewDaefoG1dV5QD7IBp7
1V9Qd3WQfTC1V985tc01xD6ErhXkqyKUw+wVFOXdtEAyfGQ/lc5VjKiKzoyw
n06rqkNqBzO/sJ9B7q7GHW0lY+yVpK64dGS4bZy9iuZFdz6ILvvGexVVL+9b
tnT5D75XU6ProXrDgV/sQ6necmHPl1A/l8+H0vEp25SKyACXz88kTd6zK8n5
QS6fD6M1J+3Oz0+msA+j3qqN97SHprIPp1MtDZvzz85gH0HZCz1+J/ap2EfQ
/rOLajq2hrKPpCXBXneLJ4z9LFpY32Rc3x3BfhZFxg62BVZGsY+i3uHSwncr
tOw1VLHL2fTSE8teQ3Hlrxf37NWxj6bFzXbX6h169loy5x4rdnsN7LW0qPtV
o1uZyH42eS5vt23pMrOPofLn6tqiRynsY+hKiNdacs3CPnZi9vk5sP8/++7n
gNeB14HXgY8DHwc+DrwevB68Hnw8+Hjw8eAN4A3gDeCN4I3gjeATwCeATwCf
CD4RfCJ4E3gTeBN4M3gzeDP4JPBJ4JPAJ4NPBp8MPgV8CvgU8KngU8GngreA
t4C3gE+bvDenwX3aZF8HXgIvgxes0LdC3wp98BJ4GbyQDv106KdDH7wEXgYv
2KBvg74N+uAl8DJ4wQ59O/Tt0AcvgZfBCw7oO6DvgD54CbwMXnBC3wl9J/TB
S+Bl8EIG9DOgnwF98BJ4Gbwwd2L+DZk3NlY=
       "]]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/Gjpqwy73nL2TY356ZzO15mvfE8bvhCMiFtvQoCK7IYWGGk
0MVMEsIuUqSWlgaxPBFdBCeVhYURRlDWgawgsYyhoVZUlkm3PRj9/nA4PDyf
56stryzdHCgIQtPv788fn+vvG5BeHFpfWnH2qMM/K1LVpodBNUs6HH41IjVJ
wsBadxfvx6SElaOSsPC645L8541LNx3R5vGXXvbTUugqY/gU3eb9R6m4vzp4
+5W7fP9Zoj7jrvOe++xnpAsnRc/Ysofsv0vdfZrmiKDH7OekB73i9vobQ+wF
Gl1jcZ0ZUHgfQLn5LfvyxGG+D6TQ2vCQQ9Ov2C+gyx3tjwaOjbAPJoOqV33u
7Sj7ELLnH//ZVTnGXkWb9pYLOS4f+4W0NVy0rD45wX4Rfe0f+fZGP8U+lMrv
7a7Z3PiB/RJqfN3qa+r7xD6M1MHjl/eLX9hHUPW9J27V9AzvI+jZuvenJ+dm
+T6ShsoOb6na+JN9FMUWOfWFTQFOv4+imhNyXXdrkNPvo8lztbDN4Qt2+n0M
qY7M0vRBFfsYGnVuGKzftpj9UgrxFRWbLoaxj6W2H731JYmR7GMpwjUpNsdG
s48j76r2hMGipezjacQ7eKvYG8c+nvZ4a68J7kT2CdRR0NkQ71azT6S6lBe+
dxs07BNp6NRKg71Ax34ZuWxPt3hK9OyTqNJjuTrcmso+iXQ7GyS1xsReTe96
wid6PqazT6YPOzrLWrRW9smkORD9/E6Flf3y+dnvNbD/N/vvNeC14LXgteB1
4HXgdeBTwKeATwGvB68HrwdvAG8AbwCfCj4VfCp4I3gjeCP4NPBp4NPAm8Cb
wJvAm8GbwZvBp4NPB58OPgN8BvgM8BbwFvAW8JngM8FngreCt4K3grf9vzfb
4N72v68FL4NXwAsi9EXoi9AHL4NXwAtZ0M+Cfhb0wcvgFfBCNvSzoZ8NffAy
eAW8kAP9HOjnQB+8DF4BL+RCPxf6udAHL4NXwAt26Nuhb4c+eBm8Al7Ig34e
9POgD14Gr4AXVszPvwB09kEw
       "]]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzGtIU3EYx/GjZXjJS6bWck7ndJtzzsvmFF90HpQyMANDoaKIFAstMjK7
qIWVKEQEht2j1OrFjiAxX5QViteyrDQ5QYGggmUaaUlqZvc9GP7+cDg8PJ/n
q84u2JzrLAhC1Z/v7x9f1r/XKTYqFGVZheeSHbMs1u8Lsn9wrkl2qEHx0vjE
Xt0eG+9HRF3ru932ZfbkeunvGxNfHO282DJ3j/2kuGUyv6y9pJn3X8SOjLTM
Q31tfP9VlB48slb2drGfFUuTil4eSX3Gfk48O5+juarsZf9DbPN86to/8Iq9
QP5re4bMH2XeO1G1oai2P/MN3ztTa06t92HlAPuldGD0VM+t24PsXSh3Y3Gx
29Qw+2X0xDbyIKtihL0rzY12eY3sGGXvRkn2u6Xa4+Ps3WnTnRXtN2Y/sV9O
ec8tJXcLP7P3pO3rZ/IrbVPsvej98mv3J7yn2fvQdX1/QOnDWd77kP3n5611
jd/5fgWNNfSk9jn9Yu9LF85/6vbNdEpxeF8a8GzN0G5bkuLwK2nKXH8qvcYl
xeH9KFis3h2rd2XvRzfPLJU2fHNn709ptoK8dIUX+wBybQipWdfqwz6A3uwf
cKut92W/ihrVDU6ZXX7sV9O0Smy5rFrF/s+cNqN0a1KwV1Ch9W3ifJ2S/Roa
SjxJNBzMfg2VVxk7TjSr2QeSpjkiPa5Jw15J7R6ndzaMhbNXknAsu2Jml559
EAV1XykNDIlkr6KDj4+6K2JM7FX08LWpxKM8mn3wwuzwIbD/PzvuQ8CrwavB
q8GHgg8FHwpeA14DXgM+DHwY+DDw4eDDwYeD14LXgteC14HXgdeB14PXg9eD
jwAfAT4CvAG8AbwBfCT4SPCR4I3gjeCN4KPAR4GPAm8CbwJvAh8NPhp8NPiY
xXtDDNzHLPZl4CXwMnghFvqx0I+FPngJvAxeiIN+HPTjoA9eAi+DF8zQN0Pf
DH3wEngZvGCBvgX6FuiDl8DL4IV46MdDPx764CXwMnjBCn0r9K3QBy+Bl8EL
CdBPgH4C9MFL4GXwQuLC/BvElVB4
       "]]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzAtIU3EUx/Gbj3ww05wzzdfmpu6hm87NSWX3NKEHWkFUEiWkUBlpglIR
ZEpIQZQ90CjQlCLMG7VCUpGoLIseSGncIrKwQiorFVFTwR62g9HvD5fL4XzO
V5NfvG6bhyAIp/58M398G/6+B+LLA7pDtuoqp3uWxcBB5f10RYPTrfrEtsmH
xiWFTbzvF5c5qxqzft5wXpFm3oDYXV9erepqZT8shqZ3vVHm3Ob9iFiUc+XS
9857fD8mUnxd78bmh+wnxIb2iul1Z5+wnxKHhZOvLqiesZ8WtzgP1qjSe9gL
dP1qxZShUOb9HMovWbon1/ia7z0ounH7O1fSW/ZeVL53+r335T723tQd5Rrr
H/rAfi5NHj7XteJEP3tfKr25uyC47jN7Pzqa9WKxrPrG3p8MpqJVHV+H2Cso
+5H66HPFCPsAylN4PVPmjrKfR3cebymoHBxnH0SWcZ12U88k74OoseS4oyBg
mu/nU77FbirbLGS6fTDVrlqU7F/oken2wWR/qkgsdXllur2SFD07T1fqfdiH
0JG7AyubR/3Yh5C+94znZa8A9iryrW35kZcRxD6UllvVF+oNwexDSZthrihZ
E8J+AbXsa49scoWyD6N2x5eEyexw9mEUVfOxo9AayT6cVkd86ly+I4b9Qjpv
an66tUzDfiEpi9bucpVr2UdQb1PO4aFbcewjaf21VlubqGcfSYG/YorXeprY
R9F+xSVbsY+ZfTRdnKgrdR2zsP83u33M7Oz2atir4V4NXgNeA14DPhZ8LPhY
8FrwWvBa8DrwOvA68HHg48DHgY8HHw8+HnwC+ATwCeD14PXg9eAN4A3gDeCN
4I3gjeBN4E3gTeATwSeCTwSfBD4JfBJ4M3gzeDN4C3gLeAv45P/3xmS4T/7f
V4CXwMvghRTop0A/BfrgJfAyeMEKfSv0rdAHL4GXwQup0E+Ffir0wUvgZfCC
Dfo26NugD14CL4MX7NC3Q98OffASeBm8kAb9NOinQR+8BF4GLzig74C+A/rg
JfAyeCF9dv4NG/+1Jg==
       "]]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01], 
      LineBox[CompressedData["
1:eJxdzHlIk3Ecx/FHS1Ozacua2bJt7vDc5jWDyOebxhIDSctSww4tilZJBdHx
Rwdk2CFYRAlGQYT5pNlhaYdFUiYhBtpjt7iiXFl2Lszo3peizw8eHr58X9+3
tqgkZ6m3IAgVv77ff3y5f95NsfFU5rwF+8rTPLMsVr5eObmn70iaR/WK321V
hu2ZNbx/LirCHfa3zjNpJ6Xf75X4saL9Tc/ZRvbvRPfDfd6B8Vd5/0Fc9+Sl
fUp9C9+7xZG3nCVHD7SyHxS3TKw6f811m/2Q2KapzjjRdYf9N7F96+r6giOd
7AVSFp5bvvuwzHsvOu4wFTZ/us/33uQI/nH9XsNj9sPpk1VVtmhDL3sfygpS
vW5qf8relwYDsnZn5z9n70edxdsulupd7P1pU9/U4qup/ewDaFlHvT2/dYB9
IPnXdsXNL3zPfhQZD6au8Nv7kb2CdO6Gbo3bzT6Y1jzsWby+dpD3wWR9YTbO
qPvK96NJrlZ3X/H/wV5JlVl1W5xLvNI9Xkn2y02pzWuGpXv8GHLtDX9Tc8En
3eNDyDZ76VBHhh/7EGqZs3lazaSR7MfScmfbwrlTFezHUYucl/viWTD7cRTk
+8ie90DJXkVG14hZVT5j2YfS3T0Ov9NrVexDSbFj28ZSRRj78ZR5yFU28EXN
PoyMlwqsIQYN+zDqb7bvLBd07CfQ55z95lWBevZqyu71UnbNNLJXk2/ajbKS
lkj2E+lter6taFcM+3Dqnl63NuKYmX04DewaVdrnsLCf9Hf2eA3s/82eew14
LXgteC14HXgdeB34CPAR4CPA68HrwevBG8AbwBvAG8EbwRvBm8CbwJvAR4KP
BB8JPgp8FPgo8NHgo8FHg48BHwM+Bnws+FjwseDjwMeBjwNvBm8GbwZvAW8B
bwFv/X8fbYV76/9+K3gJvAxeiId+PPTjoQ9eAi+DFxKgnwD9BOiDl8DL4IVE
6CdCPxH64CXwMnghCfpJ0E+CPngJvAxeSIZ+MvSToQ9eAi+DF2zQt0HfBn3w
EngZvJAC/RTop0AfvAReBi9M/jv/BMw1iWw=
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[
      0.01]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[0.01]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], Thickness[
      0.01]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"metabolite titer\"", TraditionalForm],
  PlotRange->{{0, 24.}, {0, 4.463124271858777*^15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.924532436410578*^9, 3.928710630036265*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"30d6aaa5-8fa6-47c9-87de-ef3ebe21578c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hmpkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hmpkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hmpkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hmpkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hmpkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hmpkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hmpkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hmpkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hmpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hmpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928198523316042*^9, 3.928198543420618*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"6d67e670-2119-4ea1-98fb-4f616771aff0"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIk3EUx/EnL7mVlXNuKy81N7e5Oae7uaXRc1opIZllZYV2tZVWkmVE
lpkE0YWyzBQkkohKevSFQQUVVL4ozRxB8BDdoDf1IoKirNZA7Hbo8vvDGIfz
Od9XT/r6bWXBKEEQWn/8fv7/8/RrzkUFlv1698SCzuNLJkoxPMvinmmrGmPe
jQ/8pq/EZ92JdWO1St6/Fu8WKG9aPPGBHunneysqdLfrzxdPYf9BPPJ5Y2N7
hYr3H8Wzba7W0iI1338W2/0NQWuNhn1YjG7qjGiGdewjYnVf9iP1lmT2o2KK
021XlaaxF+h+vjPuSqGe9+NocfPGh33xBr6Poi6NQVcdm8E+ht7Yn3f6/Wb2
sVSnVrYVX85kP57KewfEwYos9grSfLn3KVDpYK8kr0M/uv9FLvsJpOg/NDL7
jot9PPk2h4WI7GE/iSae+lZx3ORjP5mexG0/oLw2k30CBUbsaeLJWbxPoI7R
cMh2Q+R7FSnyHzT1dc1hn0ilp491jXXMZZ9Ih3tf7j46VMheTdcboopqaD77
JHKpCo2vIsXsk8ie0K3dFy5hr6GDgwu87y4uYq+lE1stlwaby9hrqW2vY8m8
Y0vZ68jQZFpbGipnP5WCq1PKHpesZD+VfOqWr7W6SvbT6H2ovr8+fw37ZBpq
7GkJLV/HPpkuVJ27Gx2oYp9Cw0f6uw9tCLJPJcXT1WdmD21in0r3V1j0dTs2
s08jy86FsQ3BWvbTaczq114qr2M/nQZMt67umrmd/Yw/M3/6sP87/77Xg08H
nw4+HbwBvAG8AbwRvBG8EXwG+AzwGeBN4E3gTeDN4M3gzeAt4C3gLeAzwWeC
zwRvBW8FbwVvA28DbwOfBT4LfBZ4O3g7eDv4bPDZ4LPBO8A7wDvA54DPAZ8D
Pvf/vS0X7nP/983gJfAyeMEJfSf0ndAHL4GXwQsu6Lug74I+eAm8DF5wQ98N
fTf0wUvgZfCCB/oe6HugD14CL4MXvND3Qt8LffASeBm8kAf9POjnQR+8BF4G
L/ig74O+D/rgJfAyeMH/Z/4OYNdo4A==
       "]]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mlIVGEUh/Gb2DJSqZPrmMs4i7M44zjOolDeo2aUkZWl0o6GTAiVhhUV
WSQZRKaWS0iBVKReGaLNysICKWgzIy5NfdI2QYSiTS2DtkPL/4VhOJzfeT5d
dfGWvBI/QRDqf/x+/v/z4ta3+mXm/3q3RVf/wPgirz/Psljtiwxxf5yS+ZsO
iMqVj/d+3qHg/Wuxrtqg1dH0zE7p5xsW1Y1LxpoKA9m/E188uFo3WBzM+/ei
+lDkicfzZ/H9J1E3klHxYW0o+zGxr7mlydsZzv6L+KZv44TXrWL/TbRl69bl
K6LZCyStflcZGx7H+0mkd709E/RMzfd+1HUpqmHJQw17f+rf+7x991cd+8nU
Hmdd2FtmYD+FcrqPTQwbzeynUej1ooIeu5W9gi6Nnr979p6NfQDtLHqSddpr
Zz+daqu6utvvOtjPoKnzjLkvVW72M6n/XOEyT0ca+yC65RmxG6vm8D6Ill9L
69t1QeT7YNpqqN3+oDWDvZLa9pf6dh3NYv9jjimIKL2czX4WPb1xv8OqXMA+
hMRqGsq9mMM+hAqddzzm1sXsQ6m4Mndi3+al7MPo+OC2/qE5eezDaGT4bW+5
uIJ9OPW0BKY79xSwjyBd29gpxaSV7COo05dzpeb+avaR1NCo/9w4tI69inoa
aypeWYrYq2jm+gMWU9gG9lHkGx+1jzpK2M+m9BcVq27We9jPptzmm8pUdyn7
aBIqT6YeMW5iH0MBTY/WBKSVsY+hwwdLzr2aW84+9s/Mnz7s/86/7+PAq8Gr
wavBx4OPBx8PXgNeA14DXgteC14LXgdeB14HXg9eD14PPgF8AvgE8AbwBvAG
8EbwRvBG8CbwJvAm8GbwZvBm8IngE8EngreAt4C3gLeCt4K3gk8CnwQ+Cbzt
/73JBve2//0+8BJ4GbyQDP1k6CdDH7wEXgYv2KFvh74d+uAl8DJ4IQX6KdBP
gT54CbwMXnBA3wF9B/TBS+Bl8IIT+k7oO6EPXgIvgxdc0HdB3wV98BJ4Gbzg
hr4b+m7og5fAy+CF1D/zd75Bj+I=
       "]]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0ltIk3EYx/E3XeY586ypuTnnNjenTmeU+j4tEyxQ0qYodFDT1CyxQtIb
u5CIwNRWGJ0LCXpLLS80KlBBu+hEVG9kUIpQkhdphqBSWuaD5e8PYzw8n+d7
9SqLqrJLHARBaPnzW/z/74Xvve5gtf19g2LPsR976+4reJbFuUMe2t55J+sS
HREv7Qm6MdXkwvvPondqRnFtibv1jrT4xsX0Wku5b+Na9pNi07May4tT63g/
JW5rSDvTVufD99PizVhXz5lrfuxnxH7VaZO0EMB+TuxNv3L17Z1g9r9ERU1Z
++W2UPYCNRizlR/rwnm/ihKGc+bcbCq+dyCfgPfbh0rV7BX00NE+pHioYb+a
Gh1D6xcydOydSPxoqwiLMLB3JsVLY+G5TBN7F+rblz8xVR7H3pWOZ1kzdYVm
9u5UUeBkP9qUyN6D8gtvzV6YT2LvSVmbu6xfuzax9yJtwePyN50pvPei2W9j
B27XE9+voz25Dc1P86zsvSm3KHl3ZXEae29K+3DPqVVKZ+9Du2aa7a+MGex9
SR+yv0c7s4O9L3X7WEdT1max96O+3vy6iyk72ftTuFvVcJsmh70/NTRO+o1t
sbEPoJH6Tm/Znsc+kI5Uanq+GArYB9J4QcjrSa/d7IPIZjaPDqj3sQ+mk+XJ
Z59PF7IPptb2HHFgrpj9evr0ZI2zUSxlH0LDAak/awbL2IfQefuE2NJ8kH0o
dTzqlrZ2HGYfRtb+ixnvPKvZh1Ho97YHd+Or2W9YnvnTh/2/eek+HLwSvBK8
ErwKvAq8CnwE+AjwEeDV4NXg1eAjwUeCjwSvAa8BrwEfBT4KfBR4LXgteC14
HXgdeB14PXg9eD34aPDR4KPBG8AbwBvAG8EbwRvBx4CPAR8D3gTeBN4EPnbl
Xh8L97Er/QnwEngZvBAH/Tjox0EfvAReBi/EQz8e+vHQBy+Bl8ELZuiboW+G
PngJvAxeSIB+AvQToA9eAi+DFxKhnwj9ROiDl8DL4AUL9C3Qt0AfvAReBi8k
QT8J+knQBy+Bl8ELG5fn39bdirA=
       "]]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIk3EUx/GnlWZppi5rrrk2p3Obu6hzm4T0HK0kZpRIN7GMCiW6Ts3S
9aJCCjQq92IkgXaRLj4VZG+kKLLIIhAh9CEUuiGLtF6IYRejm3mw/P1hjMP5
nO+rR799f1GZQhCEwJ/fxP9/T7f1giJv/d/XJb5UjW+52T6LZ1kcD7keSb/C
8ybpG/Fsdt/d1MAc3ofEM/NCDQZfVN51aeINi9n9b6LtLfPZj4g1nfcL60/F
8n5UdBzrDnr9Sr4fE+XGyruvz8ez/yoe6F1cfSdMxX5cNBk2hvw31ex/iPa3
DwZ7mhLZC/T4hGP1p5063s+g+Fuvrr5zJvG9ghpPF60syEpmP4tmDvvL1u42
sg+jjrpzX3TDJvbh1Lkxs+dwexr7COoJXijd88zOfg4NrJ4rmjUZ7OeSNzfy
jDDTyT6KKkdX7D6d6GI/jy6HHgTcNR720RTd3z6wSbmUfQz9bLqozhnL4X0M
DfkszQ+VxPex9DkiYWywL5d9HOUf+l4Q8XQ5+zh6ofzWtWx0JXslfWx7b+ss
WcV+Aa3QVjaVzy5gv4Dyfz6PHlKsYR9PdQ1aTe21QvYLaSBH1eA9UsR+IXkL
Pz6pP7mO/SK6rdFVmXo3sFeRbbDn+P3SYvYq8qiDVS3uzewTaF8wMm+kfCt7
NRnveeNra7exV9PIqF57xbeD/WJq/VURZmwuY6+hQPEHx5KInew11O2qL/nU
sYt9Iq0rbqPAjb3stRS+vfpOkd/HXksHg4pLrdYK9kumZv70Yf9vnrzXgdeD
14PXg08CnwQ+CbwBvAG8AXwy+GTwyeBTwKeATwFvBG8EbwSfCj4VfCp4E3gT
eBN4M3gzeDN4C3gLeAv4NPBp4NPAW8FbwVvB28DbwNvA28HbwdvBO8A7wDvA
p0/fW9LhPn26PwpeAi+DFzKgnwH9DOiDl8DL4IVM6GdCPxP64CXwMnjBCX0n
9J3QBy+Bl8ELWdDPgn4W9MFL4GXwggv6Lui7oA9eAi+DF9zQd0PfDX3wEngZ
vOCBvgf6HuiDl8DL4IXsqfk3N3I+Sw==
       "]]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIU3EYx/HTsmFL00zNdF7mLs6pm3PzUlHn4RCRFVHrYsNqWS00KBWS
wEhS7GLZxSgFWyIWRSe6UFgpdJFIK5YIdvSNURGJ+KqC6IZa5oPl7w9jPDyf
5/vq6LYXu7wqQRDq/vzG//97CZ5mlbTh73sm1hnTHjffDOBZEYMHysve/FBL
E/Sd+O3ayuMfqmfy/qNY4yZ/+8Yg6bo8/obFj9+8lsMHQth/El+f29vhOjiH
91/E6venl7kL5/L9V1HrP6MuOh/B/ruo7u47taswiv1P0bB/S47RF8N+RJy3
YqvFkxjPXqC8nqohc6WO99OoM+RiSUWLnu9V9F5zoVcz3cQ+gEb7eq9JTWb2
M2jbo7IlRVUp7NXk1ZgHLtyxsg8k/9ukd3di7exnUv/olwdxEQ72Gsp1jvSH
S5nsg6jMp9LnXslmH0w92rMN3asWsp9NrZ6u/H5azD6U2k4ON+RLxPtQOhau
+fAyTOL7OeS6YcrNi1zKPowKikN7A9YuYx9GrbYXDxufL2c/l7r2qSr7qlay
D6ejvrGQ0prV7MNp6Emq1PB5DfsIOnJXrSzyu9hHUtMr+9H6gfXsIynDJjVq
THns51Hjzlkd3ltu9lFUr+r+9bRiM/soul3rq7jq87CfT4NZwZ2G2gL20dRU
5HH3lu9gH01HrE+KPZe87GPocuObypbAQvZa0ra3+Rfc381eS4P3e04M3tvD
Ppbc96a3OKtK2MfRmMsRu2ldKft/84SPn5z504d9AtwngNeB14HXgU8Enwg+
EbwevB68HrwBvAG8AbwRvBG8EbwJvAm8CXwS+CTwSeDN4M3gzeCTwSeDTwZv
AW8BbwGfAj4FfAr4VPCp4FPBp4FPA58G3greCt4K3gbeBt4GPn3q3pIO9+lT
/SHwMngFvGCHvh36duiDl8Er4IUM6GdAPwP64GXwCnjBAX0H9B3QBy+DV8AL
Tug7oe+EPngZvAJeyIR+JvQzoQ9eBq+AF7KgnwX9LOiDl8Er4IVs6GdDPxv6
4GXwCnghZ3L+DRqCLEs=
       "]]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIk3EUx/Enq6XmZTmvS023ubmbm85tGclzGmmUIVZaVobdkwalZldz
lJZBkREVFrNRRESP2IsIioqiF93BGvmEFJFIhXSjAssUo8xDl98fxjicz/m+
etJXbpy/JkQQhMO/fiP//7y0ylMhnrLf77aoaB5aFtsxjmdZvHh0Z9T0AYVn
lPaInZ+v9V/fE8b712LXZldRb2mEp10aeW/Fp+tvfs3bHs3+k3i1oNAcWT+J
91/EZrW68806Fd/3i9+koq29B+LYD4ir2/ftffUxgf2gGCjc1u1tU7MfFvOD
pxWBYynsBXr7WOEP1qXxfgz1BYNV3hIN34eQMXGnN265jv04MrvmHCo/p2c/
nl4k37rkzzGyV9D9d+XapZEW9qE0V2n6cdllYx9GJ4/Z1fqKbPbhVD5h8O7j
Ygf7CFroa0jcusPJPpK8hqA17o2bfRStqB97TTo+jb2Szu+3T1C25vNeSU1r
2131tcT3k2ims6Mkb5aHfQx9dXxQtM6dyT6GGvwK3/eDhexVVNr86WzNxNns
Y0kYe8Tc+LCIfSxFnynYPaO7mH0cPdriDw/XzmMfT9PavgeSQhewjydD77NN
B1LK2CfQvVT9vPjqRewTKVLTl9cnLGGfSKqa26qyvgr2SfTA31L7RLWcvZou
5HaE3uhZwV5N12NMQy+fr2I/mdrUFY2pyrXsk0npudU17Ktin0wnCk8tfO/w
sk+hTl+gtNK5gX0qjalb3NRyp5p9KkXP6rl8JauG/ZQ/M3/6sP87j96ngU8H
nw4+HbwGvAa8BrwWvBa8FrwOvA68DnwG+AzwGeD14PXg9eAN4A3gDeAzwWeC
zwRvBG8EbwRvAm8CbwJvBm8GbwZvAW8BbwFvBW8FbwWfBT4LfBZ4G3gbeBt4
+/97kx3u7f/7XeAl8DJ4IRv62dDPhj54CbwMXsiBfg70c6APXgIvgxcc0HdA
3wF98BJ4GbyQC/1c6OdCH7wEXgYvOKHvhL4T+uAl8DJ4wQV9F/Rd0AcvgZfB
C27ou6Hvhj54CbwMXpj6Z/4JHGtX4g==
       "]]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9607843137254902, 0.7568627450980392, 0.7294117647058823], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9490196078431372, 0.6588235294117647, 0.6313725490196078], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9372549019607843, 0.5529411764705883, 0.5294117647058824], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.9215686274509803, 0.3215686274509804, 0.32941176470588235`], 
      PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24.}, {0, 1.1906036416531873`*^12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9281985478259478`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"b643ffe4-5e9d-4960-b454-216d504c56f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hmptyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<metab titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#f8d9d3\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f5c1ba\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#f2a8a1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ef8d87\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#ed6f6d\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#eb5254\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928710946971097*^9, 3.9287110593832197`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"50e08b60-d726-483a-89a9-3e2da0992fdd"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9725490196078431, 0.8509803921568627, 0.8274509803921568]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9607843137254902, 0.7568627450980392, 0.7294117647058823]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.0060088002196057`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0060088002196057`]& ,
             TagBoxNote -> "1.0060088002196057"], 
           StyleBox["1.0060088002196057`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0060088002196057`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9490196078431372, 0.6588235294117647, 0.6313725490196078]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                0.9963895352248165}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9963895352248165]& , 
            TagBoxNote -> "0.9963895352248165"], 
           StyleBox["0.9963895352248165`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9963895352248165, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9372549019607843, 0.5529411764705883, 0.5294117647058824]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                0.9997719199941896}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9997719199941896]& , 
            TagBoxNote -> "0.9997719199941896"], 
           StyleBox["0.9997719199941896`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9997719199941896, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9294117647058824, 0.43529411764705883`, 0.42745098039215684`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.0008426303073543`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.0008426303073543`]& ,
             TagBoxNote -> "1.0008426303073543"], 
           StyleBox["1.0008426303073543`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.0008426303073543`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.9215686274509803, 0.3215686274509804, 0.32941176470588235`]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                0.9967804947312612}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 0.9967804947312612]& , 
            TagBoxNote -> "0.9967804947312612"], 
           StyleBox["0.9967804947312612`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[0.9967804947312612, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"metab titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6483660130718955, 0.5673202614379085, 
                    0.5516339869281046], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9725490196078431`", ",", "0.8509803921568627`", ",", 
                    "0.8274509803921568`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9725490196078431, 0.8509803921568627, 
                    0.8274509803921568], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6405228758169935, 0.5045751633986928, 
                    0.48627450980392156`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9607843137254902`", ",", "0.7568627450980392`", ",", 
                    "0.7294117647058823`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9607843137254902, 0.7568627450980392, 
                    0.7294117647058823], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6326797385620915, 0.4392156862745098, 
                    0.42091503267973857`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9490196078431372`", ",", "0.6588235294117647`", ",", 
                    "0.6313725490196078`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9490196078431372, 0.6588235294117647, 
                    0.6313725490196078], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6248366013071895, 0.3686274509803922, 
                    0.35294117647058826`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9372549019607843`", ",", "0.5529411764705883`", ",", 
                    "0.5294117647058824`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9372549019607843, 0.5529411764705883, 
                    0.5294117647058824], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6196078431372549, 0.2901960784313726, 
                    0.2849673202614379], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9294117647058824`", ",", "0.43529411764705883`", ",", 
                    "0.42745098039215684`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9294117647058824, 0.43529411764705883`, 
                    0.42745098039215684`], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6143790849673203, 0.21437908496732028`, 
                    0.2196078431372549], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9215686274509803`", ",", "0.3215686274509804`", ",", 
                    "0.32941176470588235`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9215686274509803, 0.3215686274509804, 
                    0.32941176470588235`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9287109655636396`*^9, 3.9287109956546116`*^9, {3.928711036252482*^9, 
   3.9287110603904123`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"f78bcc66-d91e-4d76-bfb9-ed81bbdaabae"]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{Automatic, 1288}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 835, 17, 102, "Input",ExpressionUUID->"449199f9-8078-40ca-b217-387502c75c54"],
Cell[CellGroupData[{
Cell[1418, 41, 4079, 110, 189, "Input",ExpressionUUID->"0603c68f-7b02-45f0-8511-cfa867ca212f"],
Cell[5500, 153, 135175, 2428, 394, "Output",ExpressionUUID->"4d9c9b31-316b-4af4-82ff-4818f9c2eadc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140712, 2586, 3953, 108, 189, "Input",ExpressionUUID->"77c41e7f-f4c3-40d5-a26f-dc451d6916b3"],
Cell[144668, 2696, 140244, 2512, 394, "Output",ExpressionUUID->"cda1fa19-5e42-46bd-abcc-0abd24e5e0e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284949, 5213, 3334, 88, 189, "Input",ExpressionUUID->"b89be71c-99a2-4291-b9cc-7ffedd36a42a"],
Cell[288286, 5303, 133528, 2402, 388, "Output",ExpressionUUID->"2af68740-495e-4b69-ae92-883412d0c2c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421851, 7710, 2414, 66, 131, "Input",ExpressionUUID->"09be1226-0ffc-4c56-b2f0-d5a572297737"],
Cell[424268, 7778, 60137, 1195, 403, "Output",ExpressionUUID->"0cb66304-694f-42f0-87c3-8ebd5100886f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484442, 8978, 2417, 66, 131, "Input",ExpressionUUID->"3bcccc7b-dee7-4905-b276-603d31362187"],
Cell[486862, 9046, 60370, 1202, 391, "Output",ExpressionUUID->"4e551cbf-1116-4064-8cab-420682e956b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547269, 10253, 2708, 70, 160, "Input",ExpressionUUID->"f7b811de-4db2-42bf-930b-b62a303a4709"],
Cell[549980, 10325, 59263, 1156, 403, "Output",ExpressionUUID->"804d28ff-900e-48bb-8edd-5b440ba3ad0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609280, 11486, 2060, 52, 218, "Input",ExpressionUUID->"f272b022-cb65-4a99-9469-fdc8511de729"],
Cell[611343, 11540, 30157, 655, 361, "Output",ExpressionUUID->"aa928d26-7381-4651-9649-f6b780c57928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641537, 12200, 2007, 51, 218, "Input",ExpressionUUID->"2f3c675a-a70a-40cf-8c1b-c3087dc3a706"],
Cell[643547, 12253, 30144, 655, 364, "Output",ExpressionUUID->"ce232940-10b1-417b-98a7-309735d74b11"]
}, Open  ]],
Cell[CellGroupData[{
Cell[673728, 12913, 2266, 58, 218, "Input",ExpressionUUID->"ed64e871-b4de-4530-bba1-a9e1ba84a61b"],
Cell[675997, 12973, 30394, 660, 345, "Output",ExpressionUUID->"e1c1c71e-aaf3-477a-8c42-f5423c7090ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[706428, 13638, 1385, 32, 189, "Input",ExpressionUUID->"b205fb1f-a03f-4e20-bc27-a00a3f0ff1a4"],
Cell[707816, 13672, 12518, 258, 350, "Output",ExpressionUUID->"cd5d70ec-c84d-4523-afad-040c41d4e7e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[720371, 13935, 2121, 51, 189, "Input",ExpressionUUID->"de66193a-482a-487f-a9cc-35872b48e81d"],
Cell[722495, 13988, 12313, 258, 362, "Output",ExpressionUUID->"30d6aaa5-8fa6-47c9-87de-ef3ebe21578c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734845, 14251, 2836, 75, 247, "Input",ExpressionUUID->"6d67e670-2119-4ea1-98fb-4f616771aff0"],
Cell[737684, 14328, 12392, 256, 331, "Output",ExpressionUUID->"b643ffe4-5e9d-4960-b454-216d504c56f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[750113, 14589, 2009, 52, 218, "Input",ExpressionUUID->"50e08b60-d726-483a-89a9-3e2da0992fdd"],
Cell[752125, 14643, 30095, 652, 385, "Output",ExpressionUUID->"f78bcc66-d91e-4d76-bfb9-ed81bbdaabae"]
}, Open  ]]
}
]
*)

