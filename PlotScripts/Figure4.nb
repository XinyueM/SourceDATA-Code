(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    984837,      19572]
NotebookOptionsPosition[    980149,      19486]
NotebookOutlinePosition[    980524,      19502]
CellTagsIndexPosition[    980481,      19499]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["PERCENT", "Title",
 CellChangeTimes->{{3.92401142760751*^9, 
  3.9240114300788455`*^9}},ExpressionUUID->"ae57e67b-79e3-41cd-8fea-\
2c2a958474fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "ol500c24h", ",", "ol500c24hkeep", ",", "ol500c24hkill", ",", 
     "ol500c24hmem", ",", "oltyp"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\ol500c24htest.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9240102934920316`*^9, 3.9240103293643436`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c397f54f-44bb-480d-89dd-7f58b51ed9ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpgen1", ",", "hpgen10", ",", "hpgen50", ",", "hpgen90", ",", "hpgen99", 
     ",", "hpkeep1", ",", "hpkeep10", ",", "hpkeep50", ",", "hpkeep90", ",", 
     "hpkeep99", ",", "hpmem1", ",", "hpmem10", ",", "hpmem50", ",", 
     "hpmem90", ",", "hpmem99", ",", "hpkill1", ",", "hpkill10", ",", 
     "hpkill50", ",", "hpkill90", ",", "hpkill99", ",", "hptyp1", ",", 
     "hptyp10", ",", "hptyp50", ",", "hptyp90", ",", "hptyp99"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hp500c24hpercent.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9240103859481435`*^9, 3.9240103859511337`*^9}, {
  3.92401047108097*^9, 3.924010491957103*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"15c2ecc6-acff-41ad-aff6-86214fa24719"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpgen3000", ",", "hpgen6000", ",", "hmugen7000", ",", "hmugen14000", ",",
      "hpkeep3000", ",", "hpkeep6000", ",", "hmukeep7000", ",", 
     "hmukeep14000", ",", "hpkill3000", ",", "hpkill6000", ",", "hmukill7000",
      ",", "hmukill14000"}], "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling \
paper\\\\hphmularge.mx\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.92453055147876*^9, 3.92453056190034*^9}, {
  3.9245305948606324`*^9, 3.9245305973092003`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"f23b05d7-3141-4d9b-b8a0-42a71c42fd2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hpkill3000", ",", "hpkill6000", ",", "hptyp3000", ",", "hptyp6000"}], 
    "}"}], "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\mxy\\\\Desktop\\\\Modeling paper\\\\hplargecorrect.mx\
\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924545368922036*^9, 3.924545399918423*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"2d7f7e73-fd9a-4dbc-b789-88d8f2930a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "50", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1900"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.004"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Protein\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924011209091569*^9, 3.92401137342062*^9}, {
  3.9245532982295065`*^9, 3.9245534440723124`*^9}, {3.9246097572291036`*^9, 
  3.9246097761435637`*^9}, {3.928590196594309*^9, 3.9285901986404295`*^9}, {
  3.928591893610695*^9, 3.92859198962808*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"7f94e21d-e414-4157-9610-1485d7f1851e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
Jv6vOyGVt/9//T82INjh
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
j/8PthZodA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxde3c4l3/0N0VWA5WMbJJVdmXc55CZPbL39vnYe+/NBwmVQimjFBJCktFC
JaNBioyKivI1SsXj+eN5ruv3u/+5r9d17vN6v97n3Pc55/3Hze/sZ+K2jYqK
inM7FdX/vf/vS/4TJVlPwAH/Hxb/L2950dMB+UkdF7RdOgkBqgLXs3UOGHSz
QrsppIvg2HVuRGHVAU3s8ha2n+8m6HfpC/jwOKJ7pUO1a38PkXTWYKxD1REv
So01ejA/IjY4jPKZ3RzxHBNHU43HYyLysvEp53RHXHLLsMgcekKsHDLd1ljj
iLyT8NDDuJcIuGXWRjvgiENBwn4Zs33EN1nzQIslR9zV2Wm0lPuM8GizELu+
3wlNObE8zvgFMY1WU+vHnTBzB01w0/6XhP0T62I9Wyf04//L6LVnkBjVtzUp
jXNCd4XV4HS2IeL0iB3jj3InlFXcOBoiPky8tHboVn3shFxvZHNeGowQeh8d
I8/OOeGdo86XdBNeEU88nGVmdzpjrOZhu/Ce14Tagsu8gpQzsjXqJjOxvSU6
gt3K002d0cHVNfhOxChx4o+79VioM5YunKeVWBwjGhM8WSWKnbGH7/pZh7Bx
Qoqe1Bdz3xkHRazKB1g/EDU55MSBSWcc9m5lPdo9QRza76PIT+OCJe8bFxR7
Jonyi75LgSIu2Oyw5KRc/5HgFvC/8fCUCzYMGDslVU8RF6oDnNl8XZAc4SUX
cHOa2Hc0iNPzjAvmHDT/l9I+Q+Q2BQ+1NrogBPe4yY/OEkzKoZlMb12QceBu
LNX2z0Rqd5ia3R8XDNnBPGCj+IWg1olYr+VxxftNX67cjJsjYgYiG6jUXLGe
cdU9f3ie+HU6mmTi5oq+hYetoxW+EcHjMQLX0l1xmYVB5mf1d2LROW5spcYV
3wHXkVTxRYI0F5+vNeCKg5Jv+RwdfhCf/BJPXVhyxeKgceVz0j8Jp9WkbV/3
u+GE21uNlp1LxHh0SpvyCTcMmHSJ2fFzibDcnhaYY+uG6nsGhkY+/EcMZ6SL
Tca5YY57TYXj62XCgDlzSvqqG2qNj7Vuf7tC9BVlFSc9dsMQLW7e/TOrhAY3
xeTVnBsy3RHnHFtfI7qu5jCK7HJHucWg7zcP/iaUxfK6w6XckTdEzOCzzjpx
t/5MZJ+pO45eMpT7mPiHkD12VuZgmDteiku7O//kL1F7v2Dep9gd2xrkLKw4
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
R9xcqGGAtp0lT9ZZsvH2tXP3tYQYwNq3RH6AMxvXByuNFkvo4ddAydWrgtno
7ftKfpqdHs5Ll7KES2Qj51diUbiQDhTOlsbpyWfjQhZPcjsrHYwsl37nI7Jx
pV7asPrMDgg2L7NZ0cxGqaO3PL+y7ADWlrLeXsNs/NbWkpB9lhYaOC4fK7XM
xl9h909S2GjBKOpyRaBTNp5qdzf/WUwDP8Yv79UiZeO4W0VYOx8N5BBXEriC
snHbDvXQpartIHH5yuJiVDZa0mRKnJPaDs+oy+0eJmfjnhs/I2vbtgHJpbz/
PCUbDRaX1ZQ1twHjo/ITPkXZOLWqMXNymBqqD12tUi3LRjEX4b6nTtSgmX51
P1t1Nh5kfR8w8JMKPs1dTZqvz0Z34R9q1klUkKx77WdHazaK3LSg+LFRgdCt
aw5nu7PxUbxpzWHzTaJ7d8Vzj/5sNKpRNs9P3CCc/SuUlEeyUZCXLZKn4R9B
NVRxnfl9Nvps2239duYvUSpbeWB2dkv/2KEXTzn/EkRhZUrrQjae/LJb96fp
H2J8tfI/ylo20otS5szz1oloyyonZyoK7vETGPo38JvgbKsaUGCg4NpToP3C
+pto46pWYWKloPiSUzev1S/CMqa6ZoKTgraxUe7l5WvE6odqjkZBCj7I1XkW
srhKFOH1tHQJCh5hI5cUwyohV359xVaeghp0mzL7z64QI9tvuEgTFDz1UH50
am6ZCHS7MUirRUH4ECbDqL5MMD+5AWOGFPzSudc9+cp/RP3hmlu1lhTM4Ekx
t9z2H2GQWcOV5ERB3ts7nWLdl4iFrzUZFiQKsir+e7b2/CeRrX9zTTyIgqXq
0aceHf9JSNTddKOKpmBChdXhicofRB/zreGRZAoa7J2s0mL/QXgG3lK9TqFg
g2jiu08ciwT9yK26mKItfn12+pcMC0SlfC23SRkFgxlK/Y9TfSc0z9VmHaqm
YNilh0V7/30lZn7V/l6vp2CmNFlJl+orkWxd5zHQSsFBJVLsJ4Z5QqC97tXV
bgqupofQvuaYIzq560+G92/F62KnFZPUF8Ixrv623siWnnzHFn+9z8TGZD0v
/3sKep/3/rTi+4koVbtNWZmloOmnO30Z52YJ5Wu3//QuUPDQj6xQzsczxBht
g1fpGgWFH6wdKVyfJiI9Gt4EUuXg9yKe0E9y0wR7b4OGFkMO2lXR718PniJa
xO7c4WLNwTNS54XvtX0kzLPv8P/gzEHFwaaD+3Z8JFa/38l9KJiDazUcRQvm
k0SBYeO/8xI5GDH1scvKeoKQud1I9pHPwf57E8k5LB+IIdamUVUiBwM1b29T
Gh4n/IObtNi0crDbP8edr+wdwfy6qWneMActtCyOSYaMEbXHmgUfWOYgT+rP
Np7To4TBheYzZ522/Nd3p3cTb4lv682bHqQc5M5PqJ6VfkNk2t71UQ7KwY5H
/90yO/KaEOu4+445OgfFRTKvDsu+Ip7ytujMJufgpPUxqeNqI4RnQsvdVkoO
FhxjtDCzGiZ2TLcI5xTloPQtYZev4UPENfXWs85lOSjsJd3+9PIgoV7ZSn2s
OgerbSYf3X35kpiia/Njup2D/8rafibRvyQSvdreT7TmoNTg39KfuS8Ivv42
3cbuHEzSTzGs4H5OdErca03vz0Gti5Lsf1v7CfuceyJ2I1s4L4XZ27WP+Lt4
r1D6fQ52JkkW5xzsJS4Zt2/f8WkrH2/OfP/38QmheKc9YGxhS2/tLbnTjY+J
sX33J2rXcjDkt8c1qbOPiPDQ+/pJVLkYmpVeIBn7kGB/e/+eBUMumnxQLZoP
7iGaT3SISrDmou69EtHtYd2E2cWOc1RcuThWdVGKLrmLWP7bQftKMBcLlbyD
n13sJPLtHwRdl8jF//ETRn3J/8f/B4eKi6c=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxde2k4V1/UtilERCRzMkQkJDKetczKkHme5zHzPM8zPz9CSSUkaeIvIokU
EUpEo6E0SESkDOX1fnjf63qe8+Vc61pn3/da995nr70+7AMuASbuVBQUFBrU
FBT/9/2/n4dOOg8lTjvj/7PPkZW+KJY54wcKpcZV1dtE8CPJXboPnfG4hfwd
x7AG4uSqgIzFd2dMZBBfVuhqJATF2C3cOFyw4z1fdbNgE7FuTRcTjC64WG3D
3HHuDvEiZ/1ioo8L/mwd8ykVbyGu3Z9/lF/sgq+VUhMkR+4SyT+mZs93uGDs
qLKpekkbYXNglLn+qwuG61pk3wttJ46a9sq27nHFY697J00COwiGtDarXhVX
JM4KtctrdRIfmm/EvfRwxSd5jBECLl1E29dLlz+SXHHzd++z/woeEmTu4t6l
Nld8JTtmTh7qJnz1M75vzbjivpDKq3f2PyY04qNZmXe74VeXc0eWU3oIntv+
8ryKbig4+rfx80YvsTztZCvu6oZcTVL91zL7iKdsZokKeW7Ymddwg0PiKVGl
pVOj3eKGhytW/sx9HCBiIpT6zabdUD7q+zf6piHCtE7yhwujO0or3RFRMHxO
SLwVYA+Sc0eeAw0pzKeGCWomdsUER3fUuTfoxmn/gnhL0DnkZbmjSv0VbI0c
If4LXE8u/88ds+kMaQMujxI5l+dr696745T1xZjeNy8J19GpgRY6D2zmVjSx
ERwnlGlHlx7LeGDP2fTxqqhXBJtCL8eorQeK8invwenXxJx3m/KHNA+kL+c1
Ilm/JbrLbzgt3vLAjF+3wlQ/viPKBy+l/XvtgXubSdSf4yeIkK2ia7toPDH/
DGGQwDFF6MlkPOM+4omPUntUGX5PEUKu0StiVp6o1tDn6jo9TWwU+3MdT/bE
1z3z8PHlB2Kkx4nQuu6Jd8fpLHtHPxL1f0xdTcc88daR9x6WEzNEirhOpjOF
F+aSDC7N/fxE2Nop3QgQ37Yl7qbM7vlCyOZLvogz80LKMxKa0cRXgrFT4HdO
vBf6UWXb/QubJT4usfGeu+qF4F14urH1G3FPiE7t6gsvpP9Kcl/c+Z0oMl93
b970wo7sgXhmz3nCN2M++9FBb+z9IS1hNrxAaLRO3Xph5I1lK3IjJOFFgmdu
ZHQq2hsvxk5MuHxZJJZ5e9cWqr0RkuKMTzUsEU8N2/j/DnljeyQQYck/iarE
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
7Yr/b/8fFQXu9g==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd23c41W/4OHCroajI3jMzK1ud+zZD9t57VBrUp9KQvec5OMcOSShFUpKQ
Mpo0jZBVhEhRkvF7//74/a7r+z3/nOu+nud1P89z38/1Pu9/jqjPSRt/Bjo6
OiVGOrr/+/2/P7QtEq7bGSLw/8W98rtspVgisPd0Xa26cQeJ22bVVJ8rAm0v
dCpY7uwiOZ6b0vMUiUDfQIafE7+fkWgF77Uvykagf9Wpql90L0m9j1tVaKoR
SK+7PeyG4msS9+RN2TpSBIa6XJMo0eshObLkinUbR+B/rwYsmaPekGjKsXwz
NhG40PpvSKP3LanPIYR9i3sEav74yhSs/57Ec8l9m3hgBJqP14QtdH4gOZWY
MEBIBLKlcJ3VCugl5XSorbhcjEATA6PWLuF+Ut+M6M+zsRH4Z0+W7cLSAImH
bcc0JT0CHdg37fOeHiQ5qa+M3sqNwMd0Cakp68OkHNev/c+vRiDvbp2d3Hkj
pL6It2++Vkfgl9BtU+kdoySe8uZnDA0ReDOBUztn0zjJ6UXVY6G2CAybaurm
cpog5fygPtB+GYFr7r8kGFu+kPo4o2sdPkYgVVjnnZ/OJIlH52TlqZEIzKzx
CTZ/PUVy8nItSZuOwIvTwzKNodOknNiDuVWLEVjzPL2rW2eW1Fe1j9yxHoFw
tlyzhmeOxNMjnDi2NRKLioZ9tbb+IDktbY9cZ4/E/TdYulTYF0g5fMuhfIKR
+KT1ftpn2Z+kPpgIVpeKxCW6dPoBm18kXv+ewzbKkSgWtFTXk7RIck5q8jqh
E4ma7383HX63RMq9XeGUZBiJFuxp7+32/iH1v8+yKreMREoDNOrnLpN4VyKM
25wjUaTrRcwX7hWSs/BxHPaNRI4dr6d/V/4j5Ro4a64cj8Q+oVUtTas1Uv8R
QyWuUGK/U4d5/LdvkHjTlaVVoiLxp8Q7L6ETdOB8V1DEIiUS1fWuVbZ600Nu
PzPPUSqRb6OjZMOLAQbWl3bGFUeii0fTKBxjBD6JsS2lVZEYy5yf8TWaCVxM
Xm88uhuJ2mq/kp0qNkHeicY//c2R+GOH6EPGgc0wkFk+v9QViVMCEhQj3q3A
94AyyfYuEgVcNpRSA5jBZfjy571DkShrkthv0LYN8hiDek0mIxGyJ9d65Flg
QNqx238hEp81M/IVlbMCn4V+Z+S/SBReTU7gUtoJLqcVWwo3ReGb9RhSj98u
yMvhv/9gZxSGl8Xb92ixwcCjLbc/8EahQO+MkS43O/CN/ypfEI/CILdGXcc1
dnDZOlLEqhCFa1Pd5w1md0Pe3pdUGc0opHxvt9Ka4IABm4Y0Q70oXO3cGRTw
hRP4QsvivM2i0IP998O1eS5wKcy4HOYQhf0q/f4KTDyQ13bpbK5XFJ75qKUq
JcYLA5OHT9QfjcLCn8OnuUz5gJ/VPuDNf1HIevqPneQlfnBV0fX4fjkKk9jN
Yi83CEC+414H5sQo7Dhu0nBoQxA+XeK1kMyMwoHl7Sn1VsLAX7rJSLcwCrdY
hLWHOIiAa+fCAffrUajRXhu7wiwK+bNDaudro9DCivxtyxNR+MT2fG/2wyis
vdS1VBEpBvwa9yRr26PQd2qTx3dDcXB1KxV81R2Fti283mM7JSA/Mo3zWz8x
/zxjW/ZnCRgsv8C6aSIKRcPVxnfXS4LAy4BNonNRuDNR7o5/xh5wW7BZ278c
hWmOjdbUECko4IIlJ4ZodOi4RrnhJA2DOnLf/2OJxg1D2c/VhjIg4M39JYMr
Gj+U7Vov1ZQFtzjGoZsi0fix7fjpNGU5KLgx/75LNhqf3RKtOq0kD4M9n15O
qEajbLuvqZ3aXhD43fmUDqJR+Fd8ngIqgBv/3SYBk2g0LPRLY7BWhAIsvqtp
G43iF75+/LpPCQb9U27auUfjP9kyfcM2JRBIDi0LDozGrN6N0VxbZXCr8StI
CYnGphutPaOTylDwwSqr4mI0mtrr1vOEq8Dgyv6Up7HRuK/z62Ut3n0gICIT
M5IejQYaL8JJ9/aBmyHnpdXcaMyNfWAu5qAKBUfp/+Mpi8Y+ilf34LIqDKZ/
D1K9FY0v65nJAUVqIFjf72vVEI3W+k21943UwX2g3fVYWzRamGzZ1rmgDoUb
tbYJL6PR5rrTcNIVDRiSKDpU9jEa00nfRpYtNUHQNEm/dSQavSlZclsYtcD9
5FmdwelonDgfulrZoAWFWT77lhejMU6wM/ZDsDYMPbCQ49iIxuyHcmxhcjog
+FlbXIk5Bo36yQuZUzrgziTFb7Y7BlvD/n1mqdgPhTK7dx8WjEHTtSX7gSMH
YNhiY1uMVAzWdjibz+0lgdB/MwzFyjFIbTGZ1VokgUdu78pDnRhs8pDivdUE
UNT85GevYQzS1zIuFuojDI/fnv5lSYy7D1/9VokgxFwwttMlBucfVhupsOmC
h0LCgJxfDFpz3fl78rwuFNn+9/bgiRgsil2QyRvTheFQr+e+oTF4OiD5Z4WZ
HggVmbWFR8WgXlTF9qz7euDxRLMxPyUG15YTq23E9aFoSuLOfWoMNrYEVA2m
68MwK1vVu+IYfBD1+IbMmj4I7Vsrma+KwWFX2mOlIAPwcPqWu70+Bp8d1dSc
7jeAorAPZKmWGFRh0DI1NzGE4dLHifrPYjB/4PN7qweGINRVHen5LgYTnM7f
mpUxAo/vuecvDsVgpCS3FU++ERSxx4XQJmOw6ua+qRcsB2FY49SRugWiXtfi
d2xcPghC7h7e3f9i8PKhlXOVCwfBM8rUeWZTLFJLuN61+RnDlevq1lt2xeK9
qGv2+n3G8PmlmIk4Xyy2iSZvFTczAeGfO3RBIhZlOmMOurSagCf3P01XhVg0
3cxzYVTVFK7sn1Q6pxmLwrxOT2oqTeGz9zvpTL1YDA2Wv9EqdAiE41tEbpvF
4uvd7Me2ZR0Cz5s3eF44xGJukfHLOGYzKH5D2zXpFYvF2XvuKoSbwcjv6K2M
QbF4ha21/t+iGYgIBNMJn4nFh5HmlV+PmoOXrtuydngs5lT0X/k2Yg7FAcY/
HBJj0VZkC/u6gwWMJKtOncqMxf+stlUJvrIAkVqRkbTCWDxR6Vavp28JXh9Z
+qqux+KeapkTgQ8sofjfcndHbSwGWykbPeG2ghGRL51jD2OR5eW0/CsbKxAx
etOy3h6LU0r51a9TrcAr6NF9vp5YFKe0Hm/vsoLijMrb6gOxSPq0/cstRmsY
qc++bjMRi3I7Xa4mkKxB5FPklRNzsUhxOptsdd4avOhO0JKWY9HwHrcz011r
KJZ0SS9niMPC/rT3JXOENzWKb2OJQzHnl6xSMjYgEqwSPswVh5c6NpbJvjbg
lS10bkUkDrebijWOFNpAceO2k1xycZgvfyOKrc8GRj7/DlBRi8OI2JUsMXZb
ENk07mEBcRiiaGjGbmYL3rLdDkdN4vDZWIba51hbKLF8aBFnG4datXfr4lts
YfS/60al7nE4662uuu2vLYjmZZKaA+MQVDq8/VXswLslXH0gJA6rjt3nzAmy
g5KJIIXfF+PwgHfN5pIyOxhldtrDHkeMXzjJED5kB6KKBkIKGXG4RpLgUOay
B287JS7TvDjcFnJl0z0Leyg9L7AjoCwOy+oTV1ji7WGsaOvmqFtxuEQBDrUW
exB7urhW2BCHltcHy/b+sQefbyNLD9riMIzyr2JJwQFKd7z6/uFlHCZ9ozuR
EuAAY/sefFn4GIfWBgyOC4UOIOZ8bYh1NA4Fhjv/in9wAJ/L5A8yM3H4Iqdz
WJzFEUqvhr0yXIpDQ7PfLj/0HGGs60i790Ycznc91Uk87whic/aPwpjj0eV1
nvDcbUfw2a1Xn7s7HnW4eIaFvhJeU6G6XjAeJ67ZHeIXcIIxd75rb6Ticezs
DYVxaycQi95c+F05HjmkjuaejXcCn4qfWcz741H/I2PhhyYnKH01nCJpFI/Q
nGxL95PwP5/H6FrFo4LO+OrvPc4gxnP/krtLPPKYM/Y9cHUGnwNX/zvvF4+7
WrV3m2Q4Q6lP+rHsE/GYyvOX69pTZxiLv+hXGxqP3EPBvq+XCV8d6PYqKh6D
sfdyu7wL+L61tfuWEo8+izWCyV4ucPUPmG2ixaN2uXOHcJYLjAvIG4iWxOOl
ZhdSTKcLiOvx7D9wIx7lW6+debBC+EAmVef6eFT8fNSida8rXE35IXemJR6N
TS5G53q5wnjtoDj5GRHHHNQyynQF8d4u/up38bjwmSuis90VfFfv7n42FI93
jvfFCC27QployfYvk/EoNMkVZibrBhNGqYz0P4nzfFYptnFzA4lj5/8JrMbj
PWrdAZU0N/Aj+//S3JyAXxLPFM62uEHZPesZu10J2Mws6hK9QPhPB8aD+RKw
vItp7o+YO0jQy35KkUjAyreDLYfs3MFvD9e7CoUEvLD6MDAi1h3KDjG8eKqZ
gNz2hidp99yJt+e5thG9BNQLcY2hTBKeOtC4apaAi/u4TE/zeIDfw447PI4J
KJG7kaBj4gFlI3eqVL0T8Pjq+NvZ8x4wselKqVVQAu4ttP+WUOUBEnLJecfO
JKDU/m2hbJ8Ib3WOkhCegPdO7fZL2O4JZWd8k8oSE3D1xjuNeR1PmMizjGrN
TMDxs+ztB495gkSrzoXBwgT81n2tIbPAE/y+SJ1avp6A1dOxze9fEn4bx1GO
Owm4pm0Vx7JGeEU6H6WmBBQ83OJdxOUFEvazzmYdCdiSExxZp+AF/hf6rA/3
JOC+4ycCOoy84NqVpyYxAwl4kym3vdfDC748rdEtnkhAygF196mzXiA5XaDV
NEfM15yeWk4j/M5E5b7lBMzlTWXedp3wqmdkFhkSUSbG2lqghfDO3qK7WBNx
6XGFnVIv4cPNeeW5EzE1tf2a0Tzhy7TYjEUT8dt+11ueW7yh/Jkks59cItb/
MR6/KOwNX+fY6CPUElFzIKQmX8Mb9nCsL+dDIjpxqtm1WHpDgNb0j/smiSj8
xGfLZCDhPT5OvbNNRGWHyG27Iwgf3TYy756IaiuGJ/VzCF95q2/74UT0lYqz
Dq0h/Ou8HqlTiZjzQaSotovwv+K69C8R3nPKYH6E8DynWz3jEjEsj4tV+S/h
SZ4NFzOIfK8OPzrL5gMBvodqaHmJePBpxb8WGR8oT9CoqCtLxLKOiiAWPR/4
Wi1e3H0rEU1enQxzdfGBPe925sw0JOJoWkT5zVOEX/6XvuVJIqY4WchsJBFe
cCpe/FUibi/NRpurhNd7Hw69ieglsMJ57SHhD7eecx1NRJYhrPr9jvCpN0+e
m0nEWlvOVcNZwt/JCcxcSsSVxz1fyUy+8LU3xvP2RiLq0WVL9Av4wp61YMcX
zEmY7Frlx6fmC4Fi7paTu5Ow5PpFtDP3hesHTQ4yCiWhTCabSqy/L0weUwNh
6SSMO82WeiPMF6Qooho6KknomHqE3J5N+Pusio77kzCU/m/Em2rCD/7dc9oo
CVNJ+kdetROe/qtQulUSco1ukO4PEV7qLdcNlyTkPsMxn7JEeLPmHZ1+STjp
ecTIjNUPKkKqNo+fINbnodvyS8IPpqjU9fXQJFTUN2m9vN8PpJuifvNFJ6FT
z57fs7Z+cHj0xJx6ahLWhbtJ6gQRfrPrVxtaEr5pis4LiCK83MHhEyVJxO9B
cv6xXMJb7/uYdCMJ/3GUupvWEP6s8Ovy+iQMuNOystpB+PztHW0tSYhb1P0i
hwjf+ufR8LMkdGFNSnv/i/Bfx+tX3iWhaZmz+y9mfzi8vaeaazgJPZ3V8weE
/aFCqemaylQSPiNLbo1X84cp+4pCi59J+PfMXlwy9Qfpi1nZR1eT0LCrY0jU
i/DFEalxm5NxJf52CPMZwrcfiy3dlYw+36JPVyQSftoprJkvGZvUKvBfIeF3
GZ4ZkEjG0u4pw/VawqspH/+tQMRJrz9UtxPeRdCfXSsZ/R+WHNzcT/hwZncF
/WR8HrL5JeMs4a8t2ZmaJ+O+mPWU0nV/OPJ81CzAMRmvW4U+Gd4VAJXzrwyi
vJMx/m9G6V2xAPjG0bi/KCgZd5UrHhJRDQAZ7XLVxjPJyPnHYVDQMACOeFLk
P4YnY7nfdEKlPeFjLkv8TEzGPedv2Lb4E77yqMCOLGI//pEnXM8QvtuBQ7Yo
GSf/zq6cjyH8oh6LUUUy/ndElpc7MwCqeBWZfO4kY1Ds5B+FkgCYJvGvhjUl
Y2BB2ONHtwJA1m/LYm5HMpqS/9S3PAyAo4m/Zup7kjFXzJpXuYvwtz6PvxlI
xg8eO3R2vCf8uxefvk8ko6/n+Dnbz4T/e/8d83wy/lvn1F77RnihsheSf5Mx
lc98Zcsi4fUznugypmBhzyHX4DXCH7700J01BV8W4JTK5kCQTTtcd547BftV
twea7QiEo3V2N7JFU7CIca34AWcgVPXh1Vq5FCz9KRFxTiAQptfk81+ppSDL
/b900WKEF+fN/AYp2H75gnm/FOGNNyVvMk1Brz/VRefkCX98IUrULgVHHH6Y
uCoRnjJ04YBHCh6PGRiM3Ef4hmennA+noE3Np6UptUAIGqo/euZUCm67Z+qf
phEINxhKfciXUlB3OHJLsGYgzEiluVTHpWDYEPdyMhHLmV+weZaRgh9rF0+O
EPODTgWYfslLQfWoc2NB6oSn2ejRX0vBX11i/fKqhG8iaQveTsG1EqNdYsqE
H5NV0XqQgvLNp6NN9xJ+C7es/ZMUrOuWNr8mTXh5RrGQVykoIZjWqCxOeOt5
3tTeFJztoNecJ+ohd+4TW+VoCr6/MRY9RNQrqKCTuX0mBaekXWJWWQn/uI5+
dCkFVx/5WpttIvzXK39XN1KwWLBK7NW/AJBjSVng2ZaKzvuWT4UvBECQcug3
VY5U1Hx6dNH3awDcdPAbtRJKRcZeUtrFgQCYvWjVf0w6FY2XL/h0vgoA+ZL9
bxJUUpHf/c9V49YAONYh/axsfyrmrk+8pbtD+BmOx61Gqdh9VbV0oZTwu+gf
DFql4jupwFUB4n7Kq3+vWXZJxdHo3t8xUYR37a/g8E/Fk0f1R+VCCB/RXqx0
MhVlLHX2cngS/lptjtn5VBz3ELmMZoR/UZhxODoV97z2rqjTJPyPxISYVCI/
o+uDYAnCc56NKKalYnvl7eELOwmv7RPaVJKKz6UZLn346w/yXhbBfTdS8a+B
PXPMuD8cj9U+vFifiuSdTfpJL/2humqP167WVLyq/Ylp9q4/fO9md5J/Toy/
dlWtLvCHvUvrlsbvU5Hz1ua5N9GE55s56Deciv8JH4vyOEp46IWIqVRMs283
cbQivN8TjYKfqZjOnNbQSjzP9ibdVmxYTUW7Mi/XK3yEv50v9X5zGjK+Z9+0
vO4H1e/jhX/sSkPnqw6O3WN+8P3vaW4W/jR89fOCuizxfN0r7LVTWjINHTnP
FbBW+sFxA7MtBopp6PLtW8zlZMIf0dzw1EpDelPxhcjjhE+T+HNRPw3ZfMb/
CFgS/u6ueZp5Gpa9au62UyJ8/+rXOsc0rFPad1WBzQ9urU8Nd3unYfBiTNLt
BV+YE//wcSYoDfdcF2kbfOMLCiaPX285m4YXToemPKz1hRMnqjvEI9Jwm8Um
XmuyL9zKzG2GpDQUiKLmlgYTviH2nmtWGoYtu6jXWxJ+OOTWuaI07KVkC6Yp
EJ7RozyzIg0VQzTcVFgJL21adPtOGvZ/UGC9PuMDc+bq1BdNaXhv1kV54ZkP
KJwWS5vsSMOfssFdnBU+cCJnRxzjmzScOfekjjfOB249WgkT/kTke+zQRu9H
+LGvZ3S+pKH9tUdP3uoSfuu7447zaRhyvwTJwj5wcm+L/+m/afhmpndOd80b
btvccE9nTMdEpwidbwPeMH+OZn+DNR1dPm1Qkxu8QbEw2ryTOx15xxfs9lK9
4WTbScNx0XT8W5WS8vY04SddD2zIpaPq972Hw60Jz2Ksxq+ejscfHevUUCS8
iupeDUzH2YMdiRsshHcUkbQ1Tccum/xTA9NecPsSi+BJu3TkMypje9nlBfMl
yxzJHul4anyor7fcCxQ7J1iuH07HdHl+GfpYLzg528P05FQ6cm8WVjvkS3i2
R6vDl9KRubKB84Eu4dUrF1fi0pGkG3bdXITwbtmzXOR07LdViuNe94STkZET
KvnpOL1N0mn2oSfUlB8ftLiWjsIzC9VCFzzhxwvn90dvp2O18DHdOk1PUFow
fBn3IB1NIvlv3PrjAcFcKk9Ln6SjxNlzMpz3PaBGR6ip+VU6RuksXZ8+6wE/
vLbdHehNx4m6g70qGh6gFPf7xu/RdPwZ2SO48Mcdgm+MXWWfTcd77GM3pR+4
Q03P63yF3+koydPlO3jBHZYvDJlI0mXg4E74vuOAO+SkvjPctykDXfQ1ots2
3ECz+Jmu7rYMvP1yQvVvmxv03Wk5YLkzA2cmz9LVx7lBaHu9ljtHBsZVM5r8
MXUDnr4bakG8GfgmT5fyeKcbNEyXKJ8XysDZxLwhjg+u4LRG2xsvTowHGn1Z
yHOF5Z1pMtnSGbjj2Jihs7cr5IjFSF7dm4HFfBbBh6RdQVPtgmitSgZW2DYm
dM27QN/BYMEWDWI9rbPHe+67QKhLAO+r/RlYdLKjwyfCBXiOu3F+0s1Av8/e
pHATF2gIt2H7ZpSBTjtZd0vudgEnijHrn0MZKPRXx8V2yBmWy0jMm6wzULwi
nJe5whly7qtu2u2QgRuMN4YNTjuD5nNZelHXDHx8KtB4EzhD36DImoJXBooq
KA8Yb3eG0Hmuv/v9M7Dk1tQt1j4n4GFgXTI9moFzZd9+Wl9zggYOxgWnkxm4
ZuUcv/u0EzhL/Z0N+C8DwwNJh6x0neCv1vzUf+czkL+In3HzLifINfsyEXU5
A1+U7lNW+ewIWp6fRjKiM/Dk1A94e8sR+kPeDBYlZOBk1VLt+GVHOB/T2Xcz
NQOTXhs2+lo6Ai/t0ftGSgZaV2qUW4o4woPKup4uWgae//4kumzBAZybKl9+
LCD6269x1POJA/x9faVroiQDV8RrA8KyHSB3NPvpz/IMTJt6HPUv0AG0FpNb
6W5m4BUv8aiP2g7QvzmqaUdtBsrs4SzbvsMBzvOGNgjcy8DVDyL3aaP2wCt/
4q7swwyk52s9fq7eHhpJfjWarRl4zF568XqiPbhYu9w0aif6m/SHZ4+HPaz4
WlXYPc9AvXlS45yKPeSdNSrz6c5A863xP9e32IN24v7i4PcZ6M8l/dl2yA4G
8lUKLvcT/R3kPTl9xw4u3JLOSRnOwIb3SfdbEuyA77FQVt44sf/d+Us9HnbQ
+I4jo2IqA7eG743nV7MDl6/bUu59z8Aqd+7nBdvtYGWZLuHpzwx8os3BbjNm
C3nb/0S//ZOBZzXFZjQf2IK20PfwkdUM1NrjM2+RYQsDSuMX5+jJ+NKJ7SU5
0BYu6PefW91MRuaPPTEbJFvgc+g+vY2FjOYCOlupXLbQeLj9JA8bGR/X5R+x
nbMBl4sPg/ZwkbEPV5rUOmxgJbU2UJWfjJUvylCnyAbyiq/76omQcctcdZPP
WRvQriv0tJIkY9rwSlqVhQ0MtGe6esiS0Y9vgMYmZQMX+hIdjymSsTArvpS6
YQ18M+G2F1SJ9Y4zPtfss4bGtTOWCVpkPLSpXOBPjTW47Dp2iEoifGHdSE+i
NayI+Rws0yfj5diB4nYfa8hTc9K/Y0zGpd+J7e91rEHb2AJazcl4QsLGcZ3D
GgZcDHRe25Cxefrhd905K7hwXFtj0JGMF8MCz1/ptAK+CKV9025kfDIjqsZd
YgWNlD2Ky95k1L8balZ5wQpcrgnIbQ4kY97OVl4HOytYuc8uxXGMWP8+o6WQ
ghXkPd8qLhZCRhOKvyPDVivQHloXUjpLRvcT4Y83PbWEgflFPtJFMs5Rgtp0
Qy3hAsMMl1kEGXvk6QMb5S2Bj3OU3SWWjBELTl4hoxbQKNW743ASGeXMji0e
plqAi/arbWfTyaii3pNy9ZAFrJg92RyTRcahavtKcXoLyPN8wEDJJfpLYQib
uWcO2qdur18pIiMe0fZcP2YOAzHXVqqvkpGfdojOU9wcLtDyfz+sIPodfmd2
54AZ8FWRfz6rJuPHF02WHGQzaGyKn+u9Q0byrBGeNDYD1+6w6S/3yWhk+uyD
OJ0Z/Bs9/fVXExkjWXkbVRsOQf7ikTH6NjJqCM3rXws+BDpbvIZ3dpJx8YpB
ZKjMIfjE6zAg+JKMtcte12vHTOGivNlHuTdkjHumXGBbYAr8oPdW6yMZQ2Xn
zL0dTOGhtebrg5/IKMBmFTe0yxRc/RSe248Q9W/hYHnxwgT+nZXo8P1Cxq+q
fU/l400gP5GvLWSa6J+PTOAmfRPQKdjVHD5P5NdmsXTcMIZPtzY3pi6SMUlT
Q1yyyRguPl6tz/9LRtvfvcoh542B//3P2sp1Mo66B2oc0DCGpq9T1fcZKXj7
QMC95KWD4PZ3uLJ9KwW16k33eNw9CKvbP1x7x0rBprQlpXunD0KB0IuSUXYK
punWNWbvOwj7lR8XznNT8IRh59u1X0YwqH8/d02AghFtqonzd43gkkN19nYx
CjqrUA8dO2sEAkeuknmliHzvrkr9p2kETRdzU6XkKXhcQEZk6z9DcEtLT1RT
pmC+Xbe5TLMhrBbHxuqrU5Bs8Lq4N9IQCuouRlrrUND3lLDZbiND2N8REuaJ
xH7Pcz76tM0QBvsCzx83pCBjQuw3pR4DuDTjfuaiKQW7Q32S2akGILBuG5Jo
SUH1+0+MItwMoGmX6XGaHQXVipdkz4sbgJs4HrnmTMGWjPETq9P6sKqm7l/n
QUE3U++fW+v0ocBY3vuxLwUNp96mFF7Uh/2uYu7dhymY17DH5oGBPgwe53Ee
Ok7BzYqa0y479OFSxA77mVMU1G5Y9oro0wOBTCbrv+comHT5p7n0VT1ourZi
tiWMgrZbIvZan9ADt4YfxpxRFMzUvDa7rKUHq8+/GojHU3A9dUxfaLMeFAwN
onIKBZvFxl81v9WF/T/e7gcyBSe6khn7r+jCIMMzTXMqBRXLxr4fPa4Llzhb
VF3zKXjweqnbKR1dEJCuVzpSTMFh8Syn78y60KR9Q/7cNQpWzgkU9PchuJmX
SMdWUVCs3i5MrQJh1ZMmkXmbgsm27Bob5xAKTqWKlNwl1svcclbVGGF/bLTA
7QcUFJKjXH7HgzBIO8/zqJmCrCEWkvXvAC5VneR48YTodzafYPpZAIFH/rv6
uyi4lKDbpMwH0NTtyjL5ioIc/Pwsec0kcBuz3rr0loLldXvOPPUlweriQSbG
PgqGO5pZ3WImQcEWEh3bEAXDghdq7GoOwH4+1VWhMQouD/L9u+t4AAblZZfl
Jyl4p7nx7cuN/XAJRBa1Z4l6vhpez63YDwI2XD+MFygo8oyOh89mPzT5scw6
/Kagwq7DU4dWdcD9HMOU3z8K3vcJDlW4rgNricvjp+gyseGoqnOrjQ4UFsx9
jtiUiZrJA/R0G9pw4PbEp7Rtmcj3wmLz9xvaMPR4oLdgZyY+6eTiiXfWhrD3
Pe+qODJRiVkw9tUWbRCc7Ohu4M1ERyc+ocf3tODR36YXHUKZmJJNe+odoAXu
LHWd78UJT6Uu3ubSgjWhyidj0plY4F6zcqNTEwqVr7T82JuJkTkGk47nNeGA
QfbDdZVMrOhqH7srpwlDDsn3WTQz8fmc0v6nwxoQdiSyju9AJl7yt2aKp2iA
4KVzt6X1MtGXKr9tw0gDmtOO31A/mInntMJBcVUdPEp8rxuYZWL461Je3jvq
sF7nfNXGOhMH5Tdhy2F1KOqwvOLlkIlV3/4MiIuoA6nfMP+Eayae/xqUYtKn
BsMzOrRLXpnocZ4xdB9ZDS6vK2cm+RP7Wdr1a9xUDYTYpNNzjmbiNvH6RvdN
atAsLpRcfjIT97471XK1VRU81Dni7/6XifcO2tc2XFKFdeNt0W3nifNVu1Ov
aKlCkStdeM/lTJSVkp5x/bMPSCd+XxiOzsSSUfvQH/X7YDhi9uxsQiZqxXHN
e57ZB5czx06tpGai6Wi5VLXaPhAq7zuxNTMTi3LuRw38VoHmhtdHuXIysbLT
3GCmQQU8XjwNkCjMxPmwgjejF1VgfajRR6U0ExOXncRaQQWKftR44PVMDLzA
TUtgUgES43UXi5uZyMgdqUh6rgzDnIUObrWZ+MGby24sQxkuS2faHL1H1L9y
/9hZJ2UQ0km0CH2YiVmq1x3WRJSh2TzcNK41E12ed/Odm1YCD68zRlntRH7u
Fxlf7irB+qkgvdLnmdiU86nOJEIJimK9STXdxHnm21LLzJSAlOOo3fw+E1dS
/n1e4lWC4Spz9Zf9mfjtHNPMxR5FuPxIX2VgmLivFn3xKycUQahHS2FqPBPX
w/fXBOxUhOYxRdnfU8T9/PqjpqVWATyWJPcwzWUia/rMcUYHBVjfIiDG/isT
a5jP9Cuu7oUiPnYhkeVMTOK0Oq1bthdIe7fyKaxl4naVLAZ1i70wDOuc+xmy
cKjqtgnzijxctllkM92ShYduMsD96/Ig5D/N6sSShbYMn69rOcpD87kR5gC2
LDw+F5WcslUePJI+bvqPKwurPsQzVz6Ug/WCl/RR/Fk4t/3Up4RgOSi63baW
LpKFPZw1LJJSckBqa/hbKJmFd1OcBs98loXh97eWbshmYbSCWuepXFm4PFm2
8EAxC41mT7futpcFoZW8752qWXhl4z29FbssNLOQv33QysLMA3qvhN7IgKdw
/JdxEpHvSsjMGbIMbCiHjS7oZ2Gw82S6qa0MXDE4PbRhnIVmij0NFC4ZAMcj
/awWWcjg0qJl8EkaPh/x/MBvm4Xv5JwabUukIfyS/RsZpyxMTWgQrz8sDcLp
h15puGdh5EPsdVeWhpYS3WeGPsT+uvgP6/6TAs+7Gu22gVlIqnvPZtshBRsd
ex97H8tCd9ux9niKFFzpF390MiQLFSwyIt95SgHM8j4IO5uFv7+QH0orSMHn
9Z31yReJ87l+b7y4tgfC2TbX5kZkIWt80kbzqz0gLLF683osUf+/Ea+/Fu2B
VvWfFfVJWSjq1sP4NXgPeJlMlT1Jz0K28y9f1OjvATq34eI3WVnYUNklqM29
B4pPvC/4nJuF61Iib87MSAJGPs/5XkSsp9bd4NAqCSOZrVn/rmZh9Q6myjfZ
khBRfi+DuTILY4J+DPUHSYLIg5sp3Ley8H1dbrSfniS0vihNkKzLwkZjyyl/
XknwGs6J2deQhVz0T+DtDwmgW0iL0H2Uhd6kR8xXuiSgmDH2kmVbFi7IldS0
FksAcl0Mde/MwkSK9x358xIwIh3yX9DLLIzt+O7Yby0BETqBweffZOGrEJpb
k6wEiFi4H4v/mIX2hmmtLxgloNXL9nD2pyyk/TJ0Xh8UB6/TJn5XR7KwRohe
wOyeONDFgVftF6J/ZzqnbqaLQ3GOmlvLdBY6/Dd1mvuIOOANOadX81kor6Za
GaMnDiOPRO0+LWahepByy3d+cYjo4bb69peoH1+ixaElMRAZZzX7s56Ft3kz
vlFfi0HrEqPxJqZs3Mbu0fvsuhh4bV3R382cjd4zm85+jhADOv4fILojG/Us
z9a9dRaD4r1fdRR3Z6M5CZmKVMQAcVDjAE82flebmziwXQxGbN7uOySYjXOJ
9aq3xkUhwr9L0VksG4vMlDbPPBQFkdBmuUCpbLQOdDBeyBSF1qS7UmfkszH5
rn5IS5AoeBVWiUcrZ6OyFt1bG31RoKspFiarZ+PU9urdlXyiUNxG5b+ik40H
lrLuty6IAH5I4a7GbPS/yaCZ0yUCI5NRux8aZuP2ICWy4hURiFgJ3fnMNBur
TlsKxp0RARHWk9t7LbPxLmuCaf4hEWgV9t/yxS4bWVZ1M06KioCXiivjL2fi
vG36j7bOCQOdofUGnWc29h197VuXIwzFjgf/7fAj4pvF5aN6woBHD/wROJKN
gpKrU1mzQjByad8v2RPZ+ECWofptthBEpMvMa57OxmeROSbFJCEQKRWeMQrN
xpeG1c10k4LQepdz0i4sG3kHt7b9SRME787t4z5R2Xj1zrpSsrog0A/Qfw6O
J7zb6HLrkACUzP4ZuJySjcef+Q4XxAiA7sb3jynkbHxhS2mUlhOAUbaJt3nU
bGy5Svfg8Bt+iJQYeF2Rn42hjbs/+57jB1GNnuf3irPx4n8jc6KC/PDYpKPj
6bVsLFzrra5s4wNvt6a2t1XZOKiY5cN4mA/oT95pHrmdjb/405+rsfJBSWRF
49zdbJx58Crf+A4v6GYV3Vt9kI3nuA6W6zvywmh51p1tLdkoWfT+lcIqD0Q+
SLrF8zQbcy56MLGX8IDoy4iqPc+y0ebyuNqSIQ+0DZ8tV32djXlSySmfp7nB
Z+FYqd67bOwW0FwcSOcGBibfIqu+bNQJkr3yXZUbSrmc8zyGslGxXMRaZIAL
9GQsqcfGslHqI8+9C+FcMKZjSLkwmY3GZsyemyS5IMpCJy1hNhvHv/jVdTzn
BDFv5STqQjamL/G97wjmhLbTUnFlv7ORflvmI1ZuTvCJE4y68484712KWukj
DmDI3X25lY6KMuVhO5P9OKD0BvOF15uoeONivHj3dg7Qa944M7iNis8qxxPP
1u2GsZ6lkOmdVBQ9qMCW4LobosZnji9zUNHKQKWCmWk3iP0ePbKZj4p3dxxu
pK9mh7atff4cwlR8+p0Wd9aBHXz4X3uLSVCR8QKb0Ak6dmBQeOquJEPFK0+5
/eaq2KAUG51JClSMz6JzWLVnAz3bGnuzfVSUuLnzXhE9G4z5l1u7aFLxULdE
+UD1LogKLTA/fICKJd6ipLsuu0AsmWJyVo+KHNO+L5W37oK2wgTDmINUzJgT
Ebh1bCf41FzWpZhRUSCr7Jjt8x3A8OS/A8XWVNRyzWh1ldkBpR+Oat1yoKKc
cUL6q0RW0JvyUmtypSKDjKl53QwLjK04KD/3ouKGu0XcLksWiGI139vnT0X6
nsu8S3XbQUxEX+brUSoOzfOAH992aFPRklw8ScUytQeyflHbwMdQUZThDBUn
+Ywi/s0wA4OTpOCuC1T0uK4ppeTIDKVH+XmFwqlY05Wuv/npVtALY+OUj6Gi
IoNvUILKVhhL38KmnUhFXemmoMbSLRBVusZinEbFQZ8vNcUcW0Cs/tdWh0wq
KrCaqWHCZmjr/Mbkl0PFhRmrO4Vrm8Bn4DPdqUIq1u0cKHn03yZg+P5hNbyU
ird0uqDsOxOUbrxYTr1OxVw6i2T7w0ygx962mH+TinueeO95P8EIYxINPypr
qTgmWikq6csIURq3Zu/fo+Jw82c3s3EGEDMtm2p/SMUfRqG/DvkzQJtb3sS7
ViryyRS27/lGDz4nM0ZG26l4fIr10ucT9MAQFTc4/5yKhbWKKqG/6aA061Lf
Wjcxv8sq/0c4HehdP/V++wcqTnNzdlttp4OxB4d7eAeIfn8KLVdU3iBFvfR4
KfWZivkPihJTLNdJYp/tutQmqPg7f0SjMWSN1LZg+lT/GxXz8kU0WmmrJD8m
3VbrOWK+rtzOwsf/SEzcGk2ev6gY1LT5qMX8CqlMZm/D8WUq+hz4e6BfZIVk
sF/87sU1Kn6peFar5/CXNGHBW5PIQMNqh48fY9OXSTHeO2/SttBwJHixofDl
H5LEf5sqrrHQsPnbOzKF9Q/pady/q3VsNNRQ4LzlbfOb5Je7cOUxFzFf+8KP
zflLJKabk/nd/DRs+R2iFzG5SCprHqINidBw7eEXzhcaiySDN+8yZyRpONia
4TeR/Is0Mf4s/a8sDSMz/7vdNf6TFPO7JXmLEg39DrmHnIafJAnme/GcajQ8
ltU4P1S0QHrKfzNaXJuGASoWHswMCyQ/hdJwZaBhXswfjenDP0hMujkXwYCG
h3q2RjBcnyeV2aadMzeh4Q7Bf2EJ0XMkg4CY064WNDQ/lPDOKfA7aSL0wskj
tsT823KrfjazpJjk4KBzTjQsbc6NLzSYIUkUBQTGutNw+UqzwM8D06SnNW6+
mT40fGh+IMya9I3k98TGsySQhoENwYmVhlMkpo/GrreP0VBOd95g0naSVDZF
cnwUQkNpnoxPvw9/JRn8U7V9cZaGbrsXyp/EfCFNsMpZ9l8k6imo37/v+gQp
RkT00GQEDXEq47V6zzhJYh/3waVYGpq8L3Fv2BgjPTVk1WdMpuE+Wsu9ArUx
kp8TI7Bl0NDS/tflFyGjJKagv9rC2TTkaAqgyt4dIZWFzavvzaPhbf7Zco2/
n0kGGV9UdK7QcPHu7VsS1GHSROknBZMyGsqXTwj1koZIMfVvZB0rafhD791J
nl+fSBJdnXv8b9GwQO/Lnto7A6SnA4/ETtfR8JTe+PThsH6S3/c6ocgGGood
Iudstu0jMdFV8aU/ImLIcbTa10sqYy/mKmyjYdWZqtvbhT6SDCSp7Dc6aSiw
403hGvsH0oRGyo4HL2lIv9RdOc32nhRjGrWt8w0Ne03S/lH53pEk3EM3f/hI
wzLdC5Kt8m9JT0+eYBj/RMPibo1je43fkPyi/NZ/jBD3V7X1ze1jPSSmbJeV
9S801JcOK93Y100qu271m2WGhkmXzGYfX3lFMmg0+sn3g4Y9wsM9ewVekiZe
7p+TXqLhF6liuhcVz0kxn1Wm1VdoGN37+46o4TOSxE/prwYbNLyVWvii8Ucn
6SmT8JgNUw7GqvStC9/oIPlxcw57Medgrq7n4qfT7SQm2e0DJ3bk4P/4k0tN
4f+P/w/pw3Vp
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
Jaj3VGy5iOIFI+NKr6bulyDjZNsrK28vOJzz9T7pUQnq1HxRJm/wAiGtu+cN
2ktwe2Ds1aPjnnCpL6NopKsE5/IWd65m3Y/Njzgdzu5j6TusImAe7QlDG6WD
tQdL8Nd/a4Q1tD0h/vGHHQPvS5DT/PutF/MesCbq+tbUDyWYellfRf+WB5wX
OCqt/KkESfrSg2FHPIBosOLq+crar8pvuxBTD+j3FficuFiCw81ln7azeUAs
+9tXG3+X4M99ygozLe7Ae+Hcg6fspdiWL//fyQx3qHSIvRDDU4oPZkzn+Wzd
wei7EUl8bSlSue5FZfG5Qy9tVVKTUCm6R7y7w9bpBpGmPcEREqUsPc9GJxe5
Adc40279hlLcKRL3isfFDcqzd+veUijFhn/rI86KuME2TW2ZQJVSfCq+1dT3
tSt0vlzh4tEqxZG9YR91ma4QnvT487Vtpej6TCdLz98V/m4g9XsYlaLPnQf2
EXKuQGv1afoLpZhPm1LrGXcB7Uil6vNWpZjUc4898YILtK3/StplX4rkv871
IVEuEHzzTtKiUymeWzvSzdBygRWfjJAKj1Jcb8Mlo/DDGchsTvbWfqX4mXdi
guu2M6idl9o2F1yKxl0HSFbJztBq/0GGGlGKJ84Prflk4Qx+32pWEftKsWXd
vtO/VjvDAvXI3Ie4UlQ9ZCB2vMcJCk2sXhccLkVe5spgPM0JNo+tb9ZLZuFb
YVZOBThBU9Zg9buTpVhTc6br3WYn8NI4V5yRU4q9BQozdcOO8LU35ohGEauO
sHvRHOsIOYeNQl+VlGLTO7++OU5HkN+wyuE4sxRFUs0/WdF3wZ1H3duUKktx
kavtQZfGLnDdy5TtPFeK48efUopbd8Lsut3cCZdLkbZhrrPUbyek12t9kakt
xSo3f+fxBQeQ9Vl53dpQiqW5o4WpJAdo+NfaHH2vFBcY5qvj1R1g17miiyIt
pTi1PSTkUbs9fLTzId97Wor1jPOr4vfYQ+pXxaNhnaWoaTzYn8trDxLUL6Fr
Xpai7cYaxTWX7KDW+I5D/QBrX19qvv5ysAO70XQ9v2EWH/aQVP9vO2As03ED
1wQLv26qvC5tBxxVl+K5Ml2K0KZRlULsAJHeiS+uX0rxPv18peVHW7iSWDPw
60cp675vSpwstgUr2SMPz6yUYs+wy6yxqS0Mt1hesmej4kYHo5CYGRs4tGc9
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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1900}, {0, 0.004}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924011307613978*^9, 3.9240113741371117`*^9}, {
   3.924553388051834*^9, 3.9245534447935486`*^9}, {3.9246097587236805`*^9, 
   3.9246097780932245`*^9}, {3.9285919088327913`*^9, 3.9285919215765657`*^9}, 
   3.928591954650916*^9, 3.9285919954472*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"6053a0f9-fcb6-4dcd-895f-05e0d3ebf2bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}]}]}], "}"}], ",", "70", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1600"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.005"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Metabolite\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240114619062223`*^9, 3.9240115269349165`*^9}, {
  3.9240115676165323`*^9, 3.924011601644656*^9}, {3.9240117076291513`*^9, 
  3.924011772520439*^9}, {3.924553551970823*^9, 3.924553616537239*^9}, {
  3.9286039448061056`*^9, 3.928603972012432*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"910f5283-08a4-48d8-9fc0-5e1309e431c8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
RLtO1DHL0lz8n39BXPn/9f8BnDSrMg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
zuFQTUbVe4atPzR8II291OPkiWSkySPRsdn7QGbfV4w2TMagcN7xd5E+QC3Y
y1NvmYxunBYfDlz1gRzXMz9n7JPR58agE2etD+TKZj0T90rGf4FlHqmdPnBt
6W22bWAyfrtnMpMx4QMFz5g8Lkcn44S6jgrfhg8UJZ3AztRkZKgkOXMx+0KJ
ceROxpxkxMF4mQEuXyjjbZiEgmSErwuBw3t84d7I3NPAsmQc38E8KCTqCxW3
ZbLvVyWjUVXu7oJDvlDl6+7+vTEZma+S2M8c9oU65Zuwry0ZNb6r1eup+MIj
mhHu0++TcYtX7uFAwhcaW/knMwY3bZv0xgENX2gmmT9t+Z6MIdz7G/y1fOGl
JSlrfTYZ+Vnvl2if9IVWwdduiv+S8dynVQljPV/omKAH720pOMdnSZ+p7wvv
HiD3LfYUPGNdum+rgS+8Dwr9Mcifguq0PlH3N/GPWNO4UzQFO5cfGZM3+f2M
s1QDmRSciRH7VLoZf7DzoFu8Sgp+GihPXd7UH7nsTDw5noKDG9nTUcd94att
Ide8QQoyp6hUI/jCd/HPE4csU7CquuuOiqovTM7wNDrap+BEncJzTwVf+F1n
Qr3qmYK7YlJYPkn5wmxUmuuHgBSk0i1VxYv5wpzOq2Pbo1OQ/6A6m/deX1hi
p+M6kZqCO17aJWfv9IXVPrWJ0OwUNLMQqFhj8YX1gsAnD6+nIL1GgvxtWl+g
c6uk/CxNwRs1S/ekfvsAvdxvF+GqFJTW1mK91OMDjMsHjp1tTEGLkesppMc+
sL3JnpPamoKe3iMOe2/4AFvyte/t3Zv5p3Wyayb4AJdJ32O6wRTUNuk5xuTm
Azx8XBTV7ym4wkB+7aPrA3xfDFwuzKagwIWAN+GSPiBQmqRWtpqCqaJGScpM
PiDo95xjlD4VucuqfW+Oe4Owyvo4H3sqUpdiJdqbveEArcpjE/5UDKRTirl7
zRsk2/4jJ4ukovcvbX/TQG+QIt9zbpJOxculoWLNRt4gd+bH0WXlVHQpkfhC
e8AbFIREOOSOp+J3tRAe3jUvUP5xbtzVIBW/ka+dZen2gqMVuY8KTqciY9Wq
y+hNLyCCP5D67FLRgnyOqzjICzTU2ZzZPVPxBInn1GldL9Bk0j2qE5CKfBH8
x7bs9gKdrjj2qKhUDEgT/ndvcnN+5T4dq01JxTKell67+s35ZbfSMJ2Vil3j
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
3DvXB5j85J8de8sM+H//ksj6v/b/APkB8QY=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
toX/Cd/lXI9R9P+2svP+Zz/7/wBJ23GJ
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
8L75weMK49GHQjXHMrH5rl6sgqMr8N2fc5j7kYkaXj0H5W64ghr7ecO6pUwc
bVenf2ZxAxtjffVIzizkFLdK9rNxg6isMaldQllYeuv567JrbnC+M4vjt3QW
NoSX9+cvu8EDca0ftzdnYTj3ndva1u4w4vix9z+NLLS/TRcLK3MHjtK453v2
ZeEezl02RiweoDKmXL1olIWvVf2iKo56wCHVF+ebjmSh8VDuTmaVB4SGhqfE
OGWh4saobhYuT6DVS4YSvll4KscutM/VE+4sPnBYCcvC5mSWGvlGT+hHb8OH
MVlIu632+7GwF7Ck8KnHp2XhlC6X9e1AL9jYXiNlQMnCrsPVCfPNXmAscJyD
vSgL3+wv+Rek6A3+tiszT65l4cK5p2MSMd6Qk3+5N+nWqj6pbpmxHm+4NWj2
/OD9LHT1VdvzQsMHujfO3uRozUKykkPu/Swf+HuCeb75bRYmBopq3PjqA7JV
xOoxPgtn7ojMZu/3BYO5zyEm41noXTzhbV3kC166GQ48c1nI/ktg6vtvX0iP
VTds/5eFjhlSVZbWJ6DySY9aJnc24hn+4sDKE/CaK1bKQiQbuTzfJ+pw+sGc
xUYOfrls3KAx/avA1Q8kKG0zL7dm4ycaf1DeHT/Y+z6kN0crG5eaxLS5hPzB
RUb8uSVkY+N6njPTJ/wh0f3eTUHTbIw+u8VO95E/XL3qcb7TJhuZI8oPusUD
oG2SO4Xiko032uOKbwcGwJT6zRAbv2wcFR95/epxAAhF2TmIRmTjpbTCTevE
A0Gnaelg99lslFk/4unmFwjHWS+qMUjZqL4kYHOvKRBiDE2kjtGy0bHI5LEg
fxBcyJheK1mSjWGyNkmHnYPg6WvazIfybPT5bHzGpzIIvoru7c2vW8VXPFlk
uhgEfA7DzxweZmOPmP7CuFEw7CxJuyndvtr/MLNKhxIM1l92nO9/l40lEjp8
iv3BEKXyLrloaJXf5qf3XgqFwPng0yEu37KxOhnNLXRC4H6tgoP8QjaymiJ9
7fEQGP7TfPATSw7aRA7mz5wKAQ4IUivlzUF9lIzkLAiBrUkiUh5iOchO6Hjs
bwoBi9bGtRsVclBRXetBYW8IhPK7zXzeloPpOsq8An9DgGbN2XtZJwc7N2ZO
UcRD4Taz8pm3fg7+HSnWVdIKhb5+65ubzXPwQiZjrOFwKLAo/c3/apeDs/K9
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
AAD6qDY=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
gvugxWCZtMrvKCNx/EwIDqhq0KxLpUKmjF8ZxSwET22vVUymUoH+jC1TKhGC
I4uqJB1YVPjzPCPw5c9gzKVSLiSRS4WKoWfjXx4H4+TsIq4v+VS4SAwQ5CQH
Y1Hxgvm8W1Tojm22x0eDMZucPe5XQoUJ64Mn87WCsSIvvX9rBRW+/Lu+7czM
WXwrmtw1VUWFF+6mZ4UoZ7HuXHzLo2dUyIlvO7Rb8yx+GBT9+tIrKoS9WH4v
WReE8VD4E4u3q/lEmadlh4Pwa4+gcsEPVPg+rSyiMhmI7Tv9brW0U+F6UfIt
UkIgbnf0uMrspgK7da/XhEwgPv7GnX60jwqD9eIzkSVn8ICZY4ryz1X816ZF
U7MzOPCxdczPMSo0uIsN7P94Gs/omZ0rmabCL+rGiZerV/OoO8ZnwhZW/a6r
kq+aDcA8m/VOmPyjgvt8/XazhABMztE8yMGbCa02uXmE1XkhLqFi/1owE6zr
J6l+N07h7DRZC7JoJlSdX2nbZngKK/OJmzhLZsJ39LOr/5U/LrokpCsllwmV
UaT7WW7+WO8Pj9o3pUwI/pC34jtwEj8+uyxbqJ4J9wlXRw+Hn8TmP2fXB2hn
QktllEka7+o89Bxfo6ufCT9aVHREmX7Y6fPg8uzOTFggJaTMqfnhTqee6WqU
CdEC9hTnR77Ys7FjONYiE6ovds/vsPXFP81bevbaZoIp3Ji61+2Dg6sbPgk7
ZoKkTd+mjrM+eF6/9u1Ht0yI0qUmV3L74MvFVbVXjmTChtqusqNsb8ynWv7Q
wysTPrjVRnzR9sbpuUV3VU9mAr+Fpg68PIElJQsKRs9kgqG9STz7yAl8NT37
yr3QTEj/xUObnPbCamvoGecjMqF/TVq7e5oXvnuZTNp9aTVmSuh0qHvhHfPx
F7njM0H4xPMvkXWe+ElwdMib5EwYFLwQv9/TE1sMh5/MyMiEXVdcPcuXPPA7
r6BjboxMUKKdo9vv8sCuXX4ustmZoKJ73SI26jjudvaw+Z6XCTF7q7oOPz+G
vd+645s3MuFN1fW0Eb5jeGSP447A4kzI20b0QY5HcegTay398kz4917IxDvn
CF40MFNaeJgJ2Cv3uc/oYUy8a7zx2dNM4FCPT9i/+zAWVNMTJtWtnldl86Ja
5iFMvarJve9NJrh1nwldGD6IpTeqLIi+z4SgJ6Xa7ywO4rwM2d/tbZlwYt2m
49fz3fEWfvGBnK5MqCugbE3hdsdlMUJfTvRmwh3hG88unTyAdy7wfNgymAnt
FB/zhGY3/Cxk+fX4aCb4O6qP5u90w3tHZp9UTGYC8Ws1V/t1V9x8Yrw88s9q
f+3vjSpIuuIDXwZvwXImWMm2asQku+BvLj1X+bhpYB6z4Db7zxn7veugv+On
gUx7Ulj0BWc8btGSkilCgye3lRIl5pxw+NOGmIPiNOA2/dhTFe6El3fUnpOX
oUEF7x5Nv3lHHF9SdaZfgQZ5v8LtJC45YiH18hNFqjQ4l1CeVsvniOnXig4G
a9FgQvKy1pvNDlhOqsDecPsq/se34XEze1xAybZYMlyNu6wPDvjsx1oCdJMX
pjRwiSw8mJNmh8tjybpJ5jSw0h5b4nqyD5ssxqvZW9NgTvaG2ZoJW/wiNFpO
3J4GBpX2lkwNW2w7Gi7W5UKD6KrEIzn+NrjVO4g/7xANSnWdJHnvWuND3X4r
vh406N/b6Vo9txf3unrMaPnSoIn0z+m25V7s3+Q+MhlAg/pjOeWPrljhCUvH
3ofBNLhF96W1TlniiBrr9uhzNCi3T2f2OFpiDiOzd3uiVvO8gpP19y1wYqnx
CwHiqt81584TZC3wui16j94n0qAx/nrRm8Q9mJmnWcJIo0FXYlPdvXlzLC+t
UniEtuqnwP65WJA5vkGVzVK6surfTybw45AZ1hEUpwxdpYEd9/2QLl8z/IAo
lHC3kAYenC8Pi/wEvPsvTxShiAan550L3YIAvyQshxiX0UA4Y12i9iTGdr9m
T/6rpMHO3o2ewcIYt/mMH3tVTQP19VxdsB3ho18HXVJraaC6JKdy5uhu3O/W
Y+NUv9pvldtxz9JN8enmDryxiQbbOk/d42/YhaetWnZ8baXB2gR/Hkn+XTjy
WYNWQScNvp/yvlFpb4K5dtYqnfpGA5sxbpcH2cY4paxq47Z+GtDHEsuGxndi
MY1y4dlhGnwL8Q6Xtt6Js/4r4q7+TYOwmbVScjeNsJJMwULMLA2Mavbffb7W
CN/KzP5t9ZcGM+TSyc5wQ6y7lj4gxEmHifXVu4wGduBHceQvrXx06K/Y/1/J
oR0YluI/sIXosHBmd9CGjwa4ISy6/rgYHQgJD0VNnAyww1j4081SdFg35lrz
56M+7vANuj+yiQ5rKtZoqRzRx8e/+d0uU6HDy+sip2iDenjwgMe1cxp0aDY8
fFDxnB4Oeu/OMN1GB5n8l8x8AT08t9cxlWsHHWqWA21m8rbj6OfWsQ0mdGh5
qLVmYtd2zGtsdj4d6PDJI0sjpEsXk+8ZB7pa0YHj5G991yhdLK6p5y1jR4cB
vfKCc0q6OCdf81CvEx2e7FnYH0jbhjfLqjjccKfDKdLZocFhHVxMk7U8c2x1
P9d/7jJWOlhfSHyXnjcdBI59rX5zUxs/jhfaPu9Phw+VfXWPRLSx+TKPek3Q
Kh/FMOFu5FbcGL4sFx9GB+Xb3vlnR7Ww8/ismG0kHexc8281eGrhLr9xftEY
OvyoHjgW16WJvXoGVz6R6LBldKt84EFNPOzeM5Odunr+GUevu3Zp4OCWjhEv
Kh2OXd24VtBTA89bt/Sqs+hwR8esxGN4C46pbWgfy6EDo5Lrvsa5LZjfpPbd
/Xw61M9taNzNtwVTyqteXLhFh8BNdEvCFXW8Uav8ES6hw/vIrbIF29Tx1YKi
Et4KOsRebYu82aCG1eQKCt9W0cH7pqrMUR+1VWh2FvUZHZILHM2ucalhQ2E6
xf0VHSTmWoodClRxDYmcsOktHcI7W0b2W6liy5X4qB8tdEh/H7x8cXQzbjoX
HXq7nQ5OnM8cnmZuxq6/w/3PdtNhmaV5d27XZtx9Muj4jj467LAUHBceUsE+
vX6uf4fosO1l0oZRmgr+ddDDtnaMDhs2C+edM1fBYR/cIXGaDhQ32oWsKWX8
18bRcP8CHQrKct+YFSpj4gvrrRv+0aFL413/QXdlLLjLTPkzDwMKl5rMmtYq
48z7xlLXBBnwu9khOK1WCcts1RPxFWUAlTG8LjlCCecXavJoSTLA6sC6+jJd
JayxSWVxQpYB3P/92TQ3rIjvMWQnHigxIJ3EUbyvUBHvFBEfjFJngLivyYHr
Hor4eYJQt7k2A9jvQ8z+yCpi6388rfz6DOBsk5AOLFfALeeX65t3MoChErqn
XEcBH5yYfUpHDNg2HS59t1ge9/iP3z9swYCeSXVuu63y2O/74G1F21X9oiKd
l+5uwuOHeq4NOjBA0KBurbHuJnyutYNR7MaAiM7jXEEVcnjFtiU19AgD8ssO
la43kcMJdQ2xO71W9b1//VK6VhYLm9aeX/FjgHx6vEK0jSxmVFQFvjzDgH97
Gwv1P8pgOe1y75RQBuix7V8YHJfBhdeLDjlGMOB2p9Bw1Ig03ipf4CB5iQGZ
DlkOvBHSuIKZbdkdx4Drs746jXzSeNc6+q78ZAZYLrn01TOlcF0iebt/BgO0
fVOs/6pLYVsOkroOY1Wf8xcOr8cbcWtE9KaZLAbs8vJxmN+/ER+eDN/wOI8B
Zpt4hp71SeK+U0ECMTcYcHntW82qCEkc0Of3z7KYATlptuj7Okk8edhjdm05
A5T1pA6a3JLAER/dRz88ZIBJ3YlXL8wkMIed43fWUwYEY27hqG5xnPTSuuNY
3Sr/cxbRP0Ici+42a1J5w4CUbU8tyRLimF1pXDfczIAbWcrzA/c3YAUdvarS
tlV/bXKfz7lsWL3baJaGdzEgW9ateM+MGNZRULm+q5cBVy5cD7djiuEHLNls
zkEGkM7LvaMai2EkKk6tH2XAhsJisvS39fh1klBi2iQDognt5YNx67E9J2+0
yx8G+JBjyAua63H7heVQ6WUGvDhkuMn1oyg+OjXr38PFhKCx8Yk/UaK4P2D8
+HV+JozoJO0dUhfFZ34Mup4WYUJj+YSo8611eOZIj+12cSbcKiqQjeBeh6Pa
OuCPNBPmatPWW3mJYJ79LYZPFZjQdePQmue1wjjlVcPWOFUmLFw7YPVzszAW
Q7XKNlpM+KFyjfAkRQhnPaiSWredCWOvJgd3T6/FytvKRT4ZMiE31vZI5PG1
uOhmEU+2KRNs/v15EPBOEOspFix6mjNBYvJQ5rrdgvgRO3tCzZoJ+iMDz4LK
BDCspw/+2r+qfyTHL0FNADckk7vLXZig/WznP7dr/NiRi9QacYgJpmpnTn2W
4cedkdENyIMJ7yynhCWvrMGe0+E1PL5MuFmZs8wnswb/PB1U0RjABLuvxQJl
uXw4qN+viBLMhPUkXiOOzXx47qhH3oFzTNire7flXzEvvvTJnSkXxQQWmXyj
YCcv5rN3JPfFMmFIfxtz/DUPTn9tTbyVyIRfoRffNbnzYElsFhGUxgS5Rn8X
y1FunPPQOMiAxoSyLdk7XGO58WZdPZ9F9ip+m9ivMWluXHxL8/Dzq0xwv3mo
k7eSCxsoqTgmFDKBOPHpY5YzF35yRdbKrmhVX9STpRtTnNhCTNxUrIwJyRVl
4tIMTvwuRUivs5IJXmddqH+MObEzN++Wq9VMsGwyGt76nQN3XVze5FPLhJ/O
xitlKRz4xMzsBs16Jqw8O8y4bMiBR86MC0y8Y8LDpUMvJd/8Q6EDg/8qW5mQ
rnRWnaLxDy0e65m92MkEpdgMd6f0FRTT3jFq9o0JMy6fdtv+WUb8Di3f1/Qz
wSGa7/0pn2VEqW/oaBpmgnFhayH10xKSgtom2m8mbL7o/rvYdgnlPaqqOzTL
hAzLR9W5dX/Rlu3lVQp/mXA8in+rI/xFZbeLSgc4WDBkVdpz5/kiMlQuuH6H
jwWvrsG/TItFVJOVnR0ixIIb7yf+Tr9dQFYb6FQjMRZ0zv2SLjuwgJpTyYnL
G1fzG/28bvbPowM8pOi6TSxo3lj67134PPoWFU1IVmFBws2TTssC88hnNvyU
gwYL2l8WXlX/7w/6FRjkIbGNBYPLBQY6u/6gsEE/ty8Gq/VNAiILHXNo6bjH
vv9MVvlfhEn4n59D8R3uZieBBRffy2w9KT2HhBwdjbStWDDOY8r79eksojdY
a0/vY4Fl4yfPez6zSMbMTKXKiQX0s/TpJuFZlF9lLH3ZnQUatSsWElUzSFNP
b53lMRbEOS9WhfjNoPIiTd613izYLT12rFliBpmoqPxt8WeBr0DHJvH6afQi
W3aSGcQCf3nTX1qR08haXHzoaBgLvJQsb6/oTKMWstBX5chVfZdnuQgDU+gg
L+/Hn5dZMHrKwjQidwr1Ri83lJBYoHOHuWf5wBTyn5utCUtlgVtpwqbR9VNo
Imi8woTKgjVUMQnt5kl0bmiwiIPFggt8+TZlqZNoxaMn73UOCyZ7YnJ8bSdR
QmcHk5zPgqRXj/yNBCeRiFML2fkWC/zqquek304g5psGolQJC9Q7fjoskieQ
vHltxLf7LNjiqznX4DCBbjyuCiqsYkGB9v175zZMoK365T4Bz1jA/HEieaj0
N6q4U3RY9xUL9MudE4NMfiPTzQWOc40sqLpT7eL1ehy9zMm2etLCAgffuhv5
LuPIToJuSmxnwXuZ4BfqfWOoLY2sZ93Ngn7ZNQFfQsbQYT7SFpE+Fuzf2nGt
gGsM9V2Klm8bYgG+H3AqkP4LBfwJF88aY0Ek/4yUuvovNHU2SNBzmgUjt632
VD8eRZE//TjUFljQlPz07WaHUcTl5TE3usKC7It5bk79Iyjls/uvezxs8Ok2
L9CPHEGizo595wXZIGT2Y9dz0RHEbrTu3C3KhtLdixMjN4eR4h6zZm5JNgS5
v/xShIfRrWrjl29k2ZBs7Jq83PET6RroPc5QYsPtn92jHcE/0aNizTI3dTbM
Pi8c0hH8iZCqyg1Z7VX+acn5NYVD6HWubM53PTa81+4wPoyGkL2keObNnWxw
OJ1XqPB5ELWnCyUFIjbktOTyu4QNouNreC/pW7DhPKv/GqfoIBq8vExYsGGD
xhetSMXiARQ0P3vqmQMbLEsdqCXWA2gmeNyD5MaGTPb+kZKBfhQ1POi27wgb
ZCy/XNSI60c8J3r2rfdiQ4+V8lMZpX5E7uow6/BjA1fVdzrp2Q8k7tJilHuG
DQvCCqVnjv9AOW8btL1D2UAjFPW3LPchZYtaFY0INhBuGvbX5PahoidV0r+j
2VB57l+QPupDejvK11XGsaGIKq9p1PMdPb5bxHsxmQ25ovUfPsV8R+ZqBX8h
gw0VY9ax61S+o8ar2ZN8DDa87Ci2GXnVixw30ofeZbFBMU6CfuZUL+rMIH/N
zGODVEL6Yo5wL/LkJ308eIMN9C5iNI9vD/oZE/1GvpgNtlNfYq3KvqHghfBn
/ffY0NfkPC68/BXNhwRVFj1kg+mDD2/8931FMSN+d4KfsiHFqkLVN7sb8Xl7
/GdYx4ZXYnIi68e+oPQv7qylBjaQ28ciI+ELknR1THvRzIY9a6LMShld6Oo7
67ikNjYoNPfxPf31GalZml2w71rtp7C0/j3Lz6jkqfFZ8V426C086mfndSID
Qz3frgE2pJ54YhKz3IGelGgeyRtlQ9WWyqyAox3IQl3FyW+SDQdKN2y+8LQd
vbsmu3frHzY4Dsd13VFsR65S4runltjg5JPQKpzwCf2/V+BX/uc9+P8B4USk
QQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 1600}, {0, 0.005}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.92401149739724*^9, 3.9240115276055875`*^9}, {
   3.924011570219904*^9, 3.924011602290883*^9}, {3.924011708743826*^9, 
   3.924011772974634*^9}, {3.9245535930418677`*^9, 3.924553617192545*^9}, 
   3.9286039742391157`*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"b0a732f6-37a0-4fba-94b1-74ae5da615fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"ol500c24h", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen50", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen99", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen3000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Log", "[", "2", "]"}], "/", 
      RowBox[{
       RowBox[{"hpgen6000", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", "0.35", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Doubling Time\>\"", ",", "Black", ",", "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924013398285454*^9, 3.9240134470851393`*^9}, {
  3.924013532959254*^9, 3.9240135546929665`*^9}, {3.9245536938625383`*^9, 
  3.92455372392181*^9}, {3.9245537760673237`*^9, 3.9245537964537525`*^9}, {
  3.928604187344741*^9, 3.9286042072613783`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"63e4d3a8-fe19-4527-8665-8ec02ccdcb7d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxlenc011/8/9veKZXUJzNKO7NEPW4DkTaVjFBKw0yRVHaiEJJsImSPJDsr
kr0je3sb2dvX75/fOd/zvX/ce+659/m8j+fjPs/z9bjnvAT1jC/r01IoFN+1
7v+N/6e9uehf6XUDDqJ7TrJ3eYNye3zsgPBzDBv+R2ec/h42l52WUqtfQydz
UlbMxwc2Mi4k2tkTY2NauY7PPiBPqZrWUtQXda2xr4INfEG5wVOkUBIIm12H
ppO1PoLyNaGANTUUEoJtutM3/CBwrFZ4wj4cdY4vQwN0/EGKZhybr0Ri+nbs
+3ajAOic29aft+MLHPxzeKYd1/zUHzsTNRmLr9oMfZs+ByFESzfavSABcsER
FRaVwegwO+mYqZSE/HxK9l7bEIxL10klJCXDLIzL4Ql/KCiL+n1hW1Oh/LPh
xff8UKzPnfXxsf0KVeGVo1wPwiBg/1rRZTANV0Q+WATxfMIhxf/mnl9KRx37
3uPWZZ9A2OKiTL9/x2gz52zpGu6LlcfV9QUzETHyNTjiRAR0vKpY1F9noefT
o20HGD7D5Jpehsq/bDSMzh21q/gMm/+m7hP1XLQmGq3kBUaiZCyfw08nD4VH
NZ1YHkWhqpqtz2vTD8w3Xd347Hw0mlJUc96W/IC3GM0OqUNf0PE+0OeVdT6m
K8WYr/HEYMCiz8j2UAHsZOPXU5hiMa5+UPFZTwFWf1J7LyzFYk7Wkv+xbyGq
Tm2/e2cuDhS+H7NGKkWY2Gxx/NZiPJgprFUGlGJc5LE1SaZNBHPX5Si91GI0
LY17y7smYn2hv42mwU9cC+70stqSBJ7PPdevbi+B0zqZrbqRSRBw3i92saoE
85T2LGbZZIjef8Ki7FCK3M2DP21qknFIJbfz1JFfEL4fatVkmIIjB5gzjlF/
Yf/uTDZ+jlSQ9Zc8D4eUYTBR0PlWYirOTHy8L6b6G5xetfWp177iYl3Xyb3M
5Xi1lf6RIF0arqft/U8kqxzWijIz35LToONrPslnUgH39LZwpzvfYGCVXcYj
XIkzxWMR/nzpMNFkDOdqqoRWI8WXviV9LU92HWdUqILzOymWSv/va+er7KEL
qQJL5C11Zt0MnLY14aYsVOGIbt3V7D2Za3i8aZevVOMvR7z/wlwmVG59H52P
q0adlZjV77KsNXx//8ww1aB/UL3l+KdsqMrT/pzUrYE9vZ6C1sucNbw7U8Yz
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
yfP/5/8DcmPa6w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
/X/5fwBM+yAG
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
7wD/A/FSHao=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
l08=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Doubling Time\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 6}, {0., 0.9059052120576723}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9240135568490314`*^9, 3.9245537268530416`*^9, {3.924553776773261*^9, 
   3.9245537971636734`*^9}, 3.928604212263501*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"fe406798-99a5-428b-b594-39d13f4cdf14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hpmem3000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hpkeep3000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.924553956147667*^9, 3.9245539777702527`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"e312869f-bb70-455d-a241-f03eee791e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hpmem6000", "=", 
   RowBox[{"metabproteinmemfast", "[", "hpkeep6000", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9245539884225273`*^9, 3.924553990420123*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"f95a74d8-38ba-46a3-8248-fc206b79dc8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}], 
     "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240136425116644`*^9, 3.9240136858912396`*^9}, {
   3.9245539274693937`*^9, 3.924553952766193*^9}, 3.9245540034999027`*^9, {
   3.9286044036850233`*^9, 3.928604428158597*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"80ea06f0-0527-42b7-9bd7-13c5f250de5b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
+ODKE/8PAPpR6g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw92Hk81VkfB/CbJCktylKyx7Vz78VtFPebCGmyhER2KqSbtcUwJaNoUSpR
MpjKkgpRkrpfYSJPq6hMNSp5YrSnDNP0PPP4nuf+43Vf530+r+Pcc37nfH9a
IWKPcCkOh6MxjsP556/XP59OISo3d6qIXIWS0+X/fIQo+JLxq5s+SDj/fLYJ
0e3Qb+YtyS6S/3kvIVYYaRwKGPYc84ZC3CEt/fCgpt+Y5whR1yN1uPah55jv
tMJzCTuiNg0tpXwrrBiMvzBaM2o7lm+F4+KqvLPWuYnG8q0wo6Br+NBpb9FY
vhXKNWTZ52Y6isbyrXCpU69anJv1mO+0RN9Pz+fnm8qN+XJLtIt6MU3WyY7G
b4lnj8jtNSh2p/Fb4ptiKekdd31o/Ja4wT86s+1tEI3fEj/f2mJZvXwtjd8C
F+c/SF4/Q0zjt0DlBe0Tn/4ZS/kWmH1DXkEzLZ7yLXAw9ID7CaVNlG+BexWU
faVFSZRvgW27alvO6qdQvgC/tz4fu3PDj5QvwIBSuZyiV8mUL0Db1yNTbA9s
oXwBDgxdtxpM3Ez5Arzo2TjOPmAT5QtQ9qz4zWr3RMrnY7skreVdeTzl89Ey
dP/gnZmJlM9H25aBlK508l58PBlZib6vEyifj+J4X26lK3kOHyPnf3e49X0C
5fNQrcuq2+1eDOXzMPqUopbauRjK5+HW5gWvb3yOoXwefjxQIzPgG0X5PPR8
WvI4Wy+Y8nn4l9YewRSFRZRvjsWT3o/eDTWm39cca7QKN1w+v2xsPWwzx5+e
Bs7Z+2E1rR9zLNj2BicdW0vrxxy3hp4M7HSPpfVjjq5BpjKh2YmUZ4Y2MPGW
VkYC9TfDt4pd6tPexpA3w3vDriX+pRvJm2LUeadxjas2kjdF1S9yQ/5J0eRN
cXh0y5VwmzXkTTCqt/XXa8lsfCZY2np0KBqAvAl6ZWX/8OVmIM2fMZo5fZ09
fIbNlzEeySje1flhM82PMQZm9rWmOaSQN8KwAkWbhUpp5I3w5hKfq7rX0skb
4abKkr+5KbvIG+LKps6YZvtM8oZ4v01xUNMzk7whmn9oOunnk0HeAPfPhodt
//cG2HBz4hkXwV7yBnjDoD4pAPaS18e6zTm2kid7yeujsOker/LMPvL6uG6H
Q+IJ1/3kuVjrJ61/1GY/eS4GuwUnacdlkedi325ubp7RHvJ6GPLyY1GE407y
eujd4F+wfn0qeT08oVbcnQm0P8p1MXWl+sOGJyHkdfGM+XOFpwYeNP+66Klb
/Xqe3gb6veah3kWHstCoRPq95qETfN5lopdIfh6adDedf3g5gbwOHh/dPv9s
cAx5HXSS9OT5FW4kr4MFv3F1m1TXk9dG5T61X+stI8hrY5H46i8zpgWR/297
Wa7mUptF5LXQoyCveWR4BY1fC4MMpp55fmgt/b9ayPl2v3iqC+3Xck0MuPfE
vV1/O3lNXDE+4nHlpV3kNTF9XnDBfBU23xrY3VgWWJeZTf3VcfBC3k77nIPk
1dFh4vLqpaPZ5NXwmHhmZMKDA+Tn4v2UKMvyzQfIz8VnZntvJSszr4pTb6u7
WnSx/Dl41bdJ/eqCw+TnoKfvH6XtXTnkZ+MLwdxb3AV55FXwzdwjTfc5+eRV
0P21+SuLS/nklfHQpIGZ8zYfJ6+E5kGXDEOWFpBXwpZevsMH50LyiihJ6zGc
daOI/Cy0Geht6Xf9hfwsfGF2+Kmn/UnyM7HVML9QpvwUeQXcbV9Y86athLwC
joh7D5fplpGfgeKgyc0e2qfJT0fD2QUck9MV5KdjkXvB9LCss9Q+FY2PDY2E
L6ik/vL4Ggpz6tZXkZ+Cxu+PJ13uqCYvhwo/SUyP5NWQn4Tlw8ptdu4XyMti
TGSVhk9cHXkZLC2Tsa6oqCc/AU/5tuh29zWQl8bDqU45D7gS8lJY93zj0eiJ
jeTHYcXhf307J7hGnoNa1ms+5omaqP2r5MHDPXXc6c3Uf0TiaXfCTraqmfyw
JEj+ybI1D5vJD0lkMzcNVAUw/0GSLbdNp8Oxifw7ScmxA7yGnxupfUCS75g/
XbXiKvV/KSlSn9eop1hHvkciuFMeHOZ1lto7JdxJ/taWUrvpe4vkqarbt9sF
pbS/OJyK8UeLqnci7b8W0fVu/xzt6Ab63ikS+BjXB8rXke8RveH183utaqj9
pejK+6I9GzSqaH8OiPb/ik5PFM6QfycqzvJ7Yw+l1P5B1B58ROHRwhPUf0hU
4HygymV+MflhUean/uoZfxaSHxEtuaCosZtfSP6r6JGD8JJ31nE2fqj5dMpz
uC+X2sfB7xM4r6IHDlJ/KTg7ql2yfHEWeWmo5IQIJ5vsJj8BQhye9znlp5OX
gdWHgnrW2/xEXhZe9asWNW9PJT8JvOMqbuX2JJGXg+IpAqPsVez5NgUa5aYt
vmEWTl4eOmTerXJe7EZ+KjSu81v+NXIRW/+gd9dzftPvwWx/wFHpmcm+9WFs
/4A4LdXF+2IE21+wXcGzImLKOrb/QCrZdeHt0xFsf0Idrzld9HUj279wkG93
7HPlRra/QaG4TfvncDHb/7B4tv5r5SKWrwQDlQ3nnk/xYc8PqO7iJUUem8+e
L2A227FxVNGEPX+gMrOwpEXfgD2fIECuy21SgDJ7foHYw+sHf1Vpmp854NN+
v0MryJnmYw7oTj3RP22yF82XKmwvetoU88WV/FxY6qGvXjXoQn4uGHTVOuRE
AXk1+G2CUg4305m8OpiYSnnumLmavDpYn7A8bHHRlbwGqOW4L0rMEpHXhIHu
O+FusQ7UrgnL7Ga4qqgEU39NyNF/Fyvvs4G8FlivrA3geLPzUAt4km6XtOgU
dj6BLciHdW9KZecXvKjFtSmz0tj5BrKP4txuTWbrTRuk3Do4cb3p7HwEjVf2
QVKHfmLnJyRfiCxS6mBeB7yXna4vqdjJzl+IGVfrV26Uwc5n8LEumvjJKJOd
31DTdsFALWMXO9/BrXgkpfRVOnldmPYuO7C+P428LhjxH2u+wu3k9eCvZTGJ
7eKt5PUgf9H8O8/s48nrgVVC6rOOGZHkuVCwsCriZZQfeS4kv7jt3LTfhjwX
wvddyPr3Fn92/4EAR7WituXr2P0IgjRq7PaFxLH7E8g1Cs9terKV3a/AZ3Jx
auObbez+BcN3zw4XJaez+xn4Hl9T/3FkN7u/geN3R+J/dGbnuyHITPtaG7yJ
nb+GkJtxWOr142x2PwTPacKHAwsPsvsj6HQEeFWqHmT3S0g2tKl8dImd78bw
qcxG837vPnY/hQ2S4HeHuOy+aAwRSQeadWbtIG8Cgzv+2DLTkeodLxP4ftey
ZzeN2f3MBB41OZ98NiGBvCnY9qZcUcmMJW8KXI+MkPdGrH4xheKf7zvE28WR
N4MZLS4LPk5h+9sM/nCIu6LqHEbeDJYrtvhcE6wibw7b2qIfv61m9Z85fO5p
n35xRJ/6m4POgzDLJQ9cWH0BBfccH4/fF8TqD3DhO8v3y66n+tMcNB6cuhuq
Jqb1wIPGpNs3J78XU/3BgxD9zzszktl9jwfNH/waWodXUj4Pfsycl6u7VUD5
PGh38BQuuu7A6isQnrdKMQph9REflih1duyvYPUTH+SaWiPKKth88eFZLiy9
lxDP6jvYk2U2ensXux/yISIt/C9ZxXhWH4JsbYOm999sPgXQukpDf1lPLKsv
4XNC2Mz3CSxfALnixKGTR1h9J4DM8ieuej2s/hPAHf8bGt+4G1l9C+17xJP3
fC9m9S8cXZGoelklktXHkPei+r3ddvb8twDhq4xZ/RqrWX0NySLblt1unqz+
hnST0esd2h6sPge3ix+VdlYtZvU79AVd2Tq4809bqu/hW1n/x+hEJ5p/S9gq
lDVL/+RO828Jejk6nNhjgez9AYxbX7btuVQYe78AFw1Co5+1hrP3D7Aw75cN
SdZh7P0ENLauevHOP4y9v4A7yxZ8vbwtjPKt4Hyryg2DGeso3wpKPjVc7wtc
S/lWwJ+s9pt8VgjlC2HN9tCwa82rKF8IbXoFRUO27LwQgsHfMqOu+7woXwhl
S/pun6lfQflCKP1SMr4/egnlCyE76sK33fF6ov8AXVmM6g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
s/kNDP3ldrJKYEX6tvDkeOZ0U3sdyX8Bg1l+6A==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw92HlczdkbB/BbKFG0addet011q3tDuA/RKCPkFmMsadRIq9uO6lbKUlSk
DVNo0YLKNpbcxx6VJmSZUKHGTqjJlt/Pr+f87j+9ep33+XS+3+9z+z7nGPmF
efnLcjgcAxkO58dP7x+fNmccX3S5tOW5mrCq8sfHGRMnedTFtbgKOT8+Emes
v1IjCi33FP7Peztjaq34weNInyFv5Yy/WHoObnvgM+Q5zrinY62OpeH8Id8m
QJVLbg0xpbMoX4BhZtHfE6drU74AgzXxfGuTh3QoX4AP1SWnS14skQ7lC3CR
bP430Qg/6VC+ABtf3j3VJRMw5Nv4OLE/kXfl5uohX8nHun1fvt27GjzkJXzs
UY74ZUF4KOXzUX6wfcp2hXDK5+PbWbePWVaEUz4f/Q85aFRK1lK+Ex58/Wz2
bqmY8p3w9ur4T2U1UZTvhOanZ4h3xcdSvhPy5wpmny6Ko3wnrLG16Y3LXU/5
TvhcIfh4jEk85TviHPlccVpGAuU74oop0T419YmU74ipgeLBCo8EynfEo8u3
yb4aG0/5jujfHhLsf4rlO2KKT31BWug6ynfAA3ad2vyiaMp3wGnLKtb5N4op
3wFVPdf06InElO+A/TafIz391lK+A3Z89b9SvSSM8h1wzE+ftI1Vf6d8Hi7V
Hn2mt3Ap5fMw6btoYOL0RZTPQ07FsPn7O0SUz0O49UhpfLkH5fPQiBPyqd5t
JOXzcMr3DHGUGpfqxx6Hi9KqrzqJqH7scdkdz8HGWQFUP/Zo8sQutq84nOrT
Hvvu1C4+JI6k+rTHcp9ogzPiWKpPezwfoFJ4pGYd5dmhR+1SN35QPM23w5Ki
Vs6zdgl5O5z19hVvnFYKeVvsrRjkdfamkbfFuk9KrQqwlbwtTvaRjbp8MYP8
BPwzp27isLwM8hPQt128Qb4unfwEdJmaNnDqyGbyNnig86YrdxrLt0H3l40a
kds3krfBtk3ZHdl5SeStsfpQoChh1Qby1mgWYsKrNWLXa43tJhbB89SiyVth
6cC4+uDTMeSt8NfaiWcOy6wnb4XC1NS1h/PXk7fE65P7zh3OjyVviZp7YvzK
vaPIW6LGPzPSew6IyVvgq/yVwdqPgshb4CQt844oroi8BU4rLJKovzWieuFi
sU6m6rklsuS5mClW+bbK1ZTqgYvctR1j0krGkzfHPerNtTVLZ1I9maPPlU2D
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
zmD9cdqrzP/uT/4D7fFx+Q==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw9mHlcjGsbx0dScdKmvdTUSPs+06RoLtnJ1uogKSmUPVEdNGlfkDVrikLi
lCU5OuZCOSJSyVKWUhGKSkiHeo+36zb/9JnP832+3fPc1zPP7zcGAavdl0px
OBz9QRzOz79eP1+1QuQ1XOF+XqEnOZP38yXEzelhp9SkTSScn69oIWqkT59b
uUhH8n/eS4iVwarDLoSNGeDNhLhq3BbBoSvjBniOEIsml0FGu8sAX+uAU0M6
PYMPjye/A7bNCrz0YPl48jvgu4laXzuMppLfAT2qpzf44VzyO2C2j8eaN0Ee
5HdA12WlyusnziW/AP2NdR9Y1nqQX4CVH75y1NJ8yS9AW+/kYaFT/ckvwDdn
XFPHO/uTX4BezuIEv3/9yS/AQl2zoti7geTn4z6Ty2qcR4Hk56PXJkN5HmcJ
+flYnHtcM+dlEPn5WHVrueKblGXk5+PUxK3xp6qXk5+Psze+KEsJXEF+eyy+
OrNK3LeC/Pb4ffyjkyLpleS3x8baSg+/Y2vIb48ZUbmbzu5eS357fG8QtACl
wslvj3/2Ol3h3owkvx16RL8pOWK3lfx2KBMp8/3aYjH57XCOvpvpUtVt5LfD
d75jV2XIxZHfDjvif98bL0wgvx0u9lOZkXE9kfy2+ENzvWhPaRL5bfHoly2L
nzmnkN8WXeSXx4RZpJDfFlfvSNkxqy2Z/Lb499EzMkUWyeS3Rf8/1r2Z4ZhE
fhscoVBsZxKZSH4brPH6Y6fnU1pPtA3eXfnxlqApjvw2WCaeXn5jTAz5bfDt
qWapqozN5LdB43bL8KO7wslnjdsVOrhn5UPofGuU3pbqZb3Ni3hrjDh/Y0ae
g4dogLfChsz0mimla0QDvBVKdbv17JePEg3wVsj7+0V+Y4mYeEus2N2QMasx
jnhLvLX3q19XaALxllj5XkNnQk4i8RbY6+GSUlycTLwFRgQoe8TdSSXeAi0z
ldzndqYRb46lWbxn7vnbiTfH/v0vMhTmbyfeHJ1fv/I+OYTxZvgoOrOba59C
vBl+2RnX6tPG1mOGsoUT9q78LY54U8yd0R/SxI8h3hSl4/FkuPtW4k1xxCfF
tHnvNxFvgu27tO0/LQ0j3gR5QWklTapriDfBTsHNqvNly4k3RveL0z9HhfsT
b4zZBlWrr36eQLwxBnPu9L/geNN+jca7s5+X9Naw+2E0+oZWF2NpFO3XaLQO
1Um9v1RMvBEecDOQVk5k822EhzLcM6ZeiyXeCP9S8g8POErznjcK0zxPzWzb
n0D8KJS6MU/haVgS8aNwyvChqTHRNL95PMz8t9rIax2bbx5Wfv/UHWmbSjwP
ux2Lnm1MTyHeEBev2Vt39m0q8YYo2PLAhz+X8YZYUTdm0/YdjDdAGe5u4WDN
ZOIN0LtiutyB82w9BohJLmN9h7D7g4u1U4z+UVel+9OLi6+/iiO6DiUSz8V9
9xtilkgxnz4+7bndN1+JfR491Mhx3ne7hN2PeggXkn0+aaYRPxIrFEffDp65
k3hd/D42UvZrXTrxumj8auG8Ry93Ea+DXZp6c9yKdhGvjQlfAtxkynYRr42P
04NEKxoZr4Xziy85HlTeTbwmjhn9qs/nMeM1sX6J0+Th/ruJ18DcoPpMmz8Z
r44ftbiD1H0Yr46lTkr5h+XSiVfDKFmI7NVm61dFtcN/qU9yTCNeFVNSPpSX
SNH3j9cI9JtswH+oFku8Cta3dHpKX4gkXgUftBQ1B1WsJl4ZW+v37bUSseep
EjY1CaM5Q9n8K+Fk/6hNSreiaf4V0Nx81Qp95SSa/+F4bc3B6/vPpRMvj/11
NSNiJPuIH4Y116MsWw8fJn4oZoc3z3SbkEW8HMYFfnn40CeHeBmUGb8nQ08u
j/ghqFJQHK5Q8Cfx0ijXLHchx/0C8VK4ID173frpl4kfhDk3H5pcCrtKPAc7
lH97PFsV6fgPyegPkRYmmTfo/F7J5qF54swNZcT3SMZOc2oecv028Z8lBy1H
lK4OriC+S5JzLyeE5/SA+A7JGOvj1wpTqun4O4njlx4nBaNaOr9FIlP/g7tS
7wnxDRJ7O7UKm+h6Ol4rkTxJWGLt/5Lel0l2VaT+Pryhka2fE9G4qgvmNLPj
ojMOHZkTJ7xi54tM69+/6AtsYH7Rsev5Xuqhz9n/F6Uk+ugnr65j6xNtftIZ
43jzMVu/aPGp9pYFK2vZ5xMV5p723zynhn1+0enoeLMtoVXs+og6UiS65b6V
7PqJRtzrC601qGDXVxSx6uOmT5PL2fpBvnXcnUMnb7H9AYWq7KVDp5Sy/QNw
ml49ReMG21+49/RHT6gU268hIDXysTjAvYTNB/xTXhXcC1fY/MBFmafLzm8r
YvMFnj5V0pM8LrL5g0UvIHWt73k2n7AlYkGrm7CAzS8kGQQmf8vJZ/MNb17p
/XDln2bzD7aO2h7NRrl0XAnEXsVrOVnH6XxlcM/Jd+JYsXlWgUVeulmBR44Q
rwLhj9+oPco6QPwIKIi7VOI3by/xqvC2bWs4d2Y68aqQEntgeUh2KvFqUK3u
3eZewJ536lCss/F1oQF73qlD1qHFfO76bcRrwMllaksPOsYQrwkjV1TNXWm8
jXhNGLV8b6P1McZrgTxHtid/USzx2vDhdlvTsOPMrw2NwYMVr19ieUAHCtYp
FY0by3hduFdVbtk4MZZ4Xdh+qcL68n3GjwTdSv6/ecPiideD131v05wLE4jX
A42SadMUotn3iT7Iei7b0DkvmXgueLrFqhXEs3zBheq2O+6/8VPpfC7or22L
hzSWNwzAdkh3RMZwdv0MoOvKXSuHliTi/zveniL7/UYi8YYguOI+Z0pfAvGG
kPvws+oS1XjiDeFjUL58eNE24nmw1C6tXFdbTDwPDIbduSQtiCKeB5U7k2X0
XDYQPwoqpkpetdqvJn4UaMlIScvVBhI/CnhuE5902swl3gjEZQdLhC8tiTeC
nn7JJr+rriwfwMYkPf6/td4sP0DNWf2aV94eLF9AT+X5maM/eLL8AVGGrd4X
cl2JN4bG+U19Ww8NId4YBAEZ7ac9BSzfQMj3hvS7C1ieMYF769IWJmt4snwE
9pn3tydE+LP8BPPgoLs3L5jlK/h70GCZqatCWf6Cpm9ZjblFa1k+A++ZY2Z8
m7+e5Td4vcffYu3GDSzfAW/o+BcLN0Sw/AfzHovF0l83s3wIAd++2fY5RrP8
CDOeuntda2bPJ3NQ4YVVeP4hZvkTtLaPi7o3mO2XBeg8a3BKWMDyrgWcs557
7PT5aJZv4cPFi5m3QpjfEriKIY8TpH/lY1AM8B1/fTbzW0GgzuDC+gjGW0Gn
TG37OpOtLH9DbEH8zhPCCOKt4aKZpoJLFMvj1tA4+0x5XCG7ntZw4kvP4hBX
F+JtoCksyyItdwbrBxA8ydB3CTeA9QcYuXvyeNt7a1i/gL16CnniXZGsf0B2
8WnfPGE06yewW2/hhyClbay/gJxy/a26pbGs30CNRtnl5wmsn9jCvB/3A/e3
x7F+BKM9MuXFgnjWn+DYWcfbp+TiWb+ClSGJCuv3xbH+BVF6smGuir/6Gbi3
jLN07v/V38DslEN4Z1MM63cwP+XWzS4+y8N20DrhRv6kY1tYP4Tn/R01zsDy
sz2Ib8+JnlIRzvol9OzKCXfN/NU/oTza8qGtzTLWTyHuiGn7ZD/Wj+3BVU+r
VqtoIeu3YPyteEe3FutTfHCZ1Xdidrsr68fg2pBt2j3MlPVnMP/n3JQhpUqs
X0P+WN3ZqcEqtJ98KDhYt/ZRi/PAftfyIa0y0KxsEttfARTPCs7iapuLqN+D
TOFEfr8Ru/8FcGrVcPnwA7wBPloAI0522/aHG5JfAHEbXk+9u9ya/AJYe1P/
6uk6e/I7QNKq8u7FLfbk/+/97Gbv7zfHkN8Bmj7/pTirzpX8DjBB5d2kKKtJ
5HcALZ03588NGkd+B3i9qG/LdNlx5BeCodWeURrPHMgvBMlHW6NXXSPJL4Rz
M3Rt6rK12e8zYDwtovPbxt5r9PsN9Fa3qMic+HptwC+ER9dXemmCtOR/O7B6
kA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJw1mHk81ekXxy+jW6ZlSEIqrmu7uLiui2TcozGyTBhL1kSLyC5KSYVKWqRI
ZbRITSXttKnuMZK0UklTKJFESaVNk36vfs7z/cfL63l/P/d5znOe8/2chzcn
zmu+PIfD0ZLjcH789f3xNFrjwFGP9WX6HNmR0h+PNc4LSuqyPiaRcX48q6xx
SXF/ooGZk+z/vK81+iwc5FztnjHEG1mjS8bB3mM9nkM8xxr3X2+S67eaMcQ3
WqGK4bUrW0Y6kL4VxhjseHP3MI/0rTBy55aqzmw10rdCR/4De0GBmPStcAPk
GK6Tm0r6VpipfvpNJt+E9CWY5sePlenySF+Cyv5d/YOGr+yH9CXoftNJxHcW
SYf0JbhBXeWplaJEOqQvwZgjv002qtOWDulLUDjTcULvVr0hvtESu/Qudm0s
sB3iSy2RK1Sta31iPMSvssTGruHRi0NMSN8S+zZF2jyttSF9S9x3tMxqcZEl
6Vti9fMN3YEVI2j+YrR1+CU7RiKh+Yvxie+bL3aJ7hQfMXb7xae8L/Sn+Ihx
RdpA+MGcIIqPGKO3f72Y7xBG8RGjjLdx7hO9ENK3wMPcxgphow/pW+CBOpWm
e8ZM3wK57w3fJERLSN8Cs5tcbsWmTaP5W2COXeuXQmcfmr8Fnhooi5iVN4vi
I8IsxYYrn1XDKD4iPDxlb74vP5ziI8Jj0HCzQD2a4iNCTzuf0RsCE0lfhLyV
HeMD/JJJX4Q+HZWxguWLSd8cHwTmj9a8s4T0zXF4bfP6uNVLSd8cvcrk4zl5
y0jfHC/UuLiaDKSSvjn2jaksaktKI31zTJIo+38fm0Z6Zmj7pmGcaFgqvW+G
M5dqPdX4mEq8GYbLVXiZqpNeqSmmjhzJ653Bfs8Utypu0MmdnUK8KZrEm0eb
D6f1lQpx1qKfcxri2PqFGCJKLAkaR/HhCLH0raZT0VF/4k2QVy5Sz79lR7wJ
Wtd4ni/S+p321wQvBHpmmkbMof00Rs5mjT7gh9P+GaNF2LyYHSoLiDfG8epF
V0dZRxBvhKs7/ZbtV4gi3ggtYh0LX26LJN4IZ182jDr6Mpp4Ae5z8fJWfhNH
vAA3O44cuX9aIvECvMs9lJ+qnUy8IRa+KvMyXplMvCE+/tZyd/yyJOIN8cp5
hVjTzEXEG+DjLQuisg8lEm+A98O3dMTkJRBvgJ/HbL7quC6eeH2U1zVf4c6N
IV4fc/epJl/8Eke8Pta22/eoySUSr4cgrcpV/XMR8Xp43CGpQejJ9PWwoLjQ
eMkipq+LoQcSNG8UsPXqYtkW1xa17UxfF0f9XT8gnMh4Pg5mri+paY0gno8w
UNm57XEo8Xwsjfw29b3jTOJ18L+Vw27rKcwkXgdDK8oFIRkziNdBNd8GcdsH
D+J5OGaS4FGQlifxPNzgaat9q8qFeB6easy+Ua3pTLw2qmmIPJWCx1D+aGNq
0oHMuM8GlG/aWH6lr+RMhSWNa+GiEZH1aUnOlH+Tsf9ellx6rRvxk7FmQvoK
lf5A4ifhu+2q4f1d4cRPxAvSZ9y6eQnET0Sed/iTZdxk4jXR+cS5HuP57LxN
wPLgtBppaQbxE7D+k1/X2Kgs4jWw2/rChI2B64lXxwmjEratD8shXh35DZ0J
T6/nEq+GKb3lNukpW4kfjwmCTT4JPXnEj8dj0s3u97K3Ea+Kg4ducK7/s534
cej86FOyrd1O4seh6ITxQLN+IfEq6OjvMbr23F/Ej8Xhc7p7b/buIn4s2red
S8idupd4ZTSoqB9V/LCYeCVsUXC4GvmwhHglFO72flfOO0jjY1DVtZmfu7OU
3h+Nw6qyApqsjxM/Cv8dpwe3XU4R/zOmOX484OFSQbwiVneEzD1he474EagS
HKM0yriSeC5OmxecpLv8MvHDcN2OWabtJlXEK2CN6/vrbR7VxMsjz+22JKao
hng5lHZN1/RXukY8B+Nq3HKe3blO499kqR+rXoXW36L3B2RGqd09Wnvqif8s
C+voestdeZf4DzIFR62uqvT7xL+TbQ3IOZpV+YD4Ptny5AiXicJ/abxb9uuk
ku82zY/p/ecy942LRuu3thL/VHY22mXhW402Gm+URWXtKIh7/Yz+r5G9ergR
u3o72Pw5r3q/uMWZv2Dj0udljjs/6D5n70t/ctoyM8StnelL+zPkkyftYvrP
pRMMT9tMH/+UzU8aP2ld/LCAFjZ/aX4fvDWue8TWJ5U4aJzxinvI1i99vVbw
KNKJrfeztCq4IWtYAIvHgFT64oTc2GwWr2/ShIsr5A3+ZfHkQMSBPLdzJ2+z
/YGGy8qZ6f032P7BT5ERKTeS6tj+whOt156molq2/zAtJsc/X62G5Qe0xqe+
tfi1muUP1NTePxq0tYrlF7wrNq9sV0SWf3Ax7+C8kNGXWH6CxjarsNaECyx/
QV4r992DlrMsv8HAN2+35fkKlv8wt/XuYIdiOTsfkO5a7PnO5BQ7P/CmST87
c+MJdr5A8NFtN//3Y+z8wdHk12e47UfY+YSHd6aD0oXD7PxCZdeenuJOdr7G
gZ/dPc5km7/Z+QcP58O7dMX7WX2AvT7+CvO4+1j9ABiWUv5chZ1nNajcp9s1
IqCI1R+o8+SUeu/fweoT6N/tTs68lM/qFyQEyptFqG9h9Q2aR7t7jv2ygdU/
yFpV3/h5ylpWH2GF8mWzzyNYPZwIUZqP09vXM78xEXwk5mpPri9h9Rdu/PXp
ayk/kdVnkCzQgANvoln9hh06xf7Bxxew+g5jFCN3v5q4gNV/aPSJbTYqCmPf
B/CKWKi6d2Ugva8Nl0BYKAj5g3geqL28NntGGxDPA5UjBT0OoVLiebDBWTOM
82IG8ToglD/95E9rP+J1QBVPL+/xDiBeB5Z+Vy0XzPcmng/3Jo3d9X0V4/lg
f8ZuT5a9H/F8qHl1fu7XJmfidaFtQkDL8WYB+z5DQkuHWrv+ePb9hr7vCz80
hFqy7zvsHbZvoLnZm33/wVcizMt8PZf5A+AX9hupcOOZf4C01v+2vuQzv6AP
+36zPQI6i5n/gJldM4PkclKYPwF9H4WINaPSmH+BvUXJpUZmK5m/AdnWlqi+
K6uY/4FscwVTr/x05o9A8Mut4SPEGcw/wcfKq5fK/8tg/go0c0eU1mivZv4L
ZnHbnRM7VjN/Bo9NS3DOyzXMv0Fc0II9J26vZf4O1JT6Z6jdXcv8H1y6WVD4
YHQW84ewuak5WOsk441Bz175J/vhjDeGyRWWe9PNmL4JlD65qX0gJpN4E3h7
Kylk4S22XhO4Eum3/KXnUuKFEPVhyu3XJ5i/E0IvfFi7a8kC4oUgwLVts6cG
E28KPKOSTR+/uxJvCpJHZpsU3e2Y/wbuS10F+/u2zJ9DusAtuv2iLfPvkH5S
+slA5Xfm7wGWnovf/Ks78/8Q4rq6TuexP+sPIL3dkH/zfDDrH6BaU6et5Zkf
6y8gocrzZGWAJ+s/QIvnIW/wzoX1J7CkdfHRr2Y2rH+BmOlbar9uYv2fCIQX
anVfeliw/gfmKNXv7xL3UX8qgt7m8oXl6WYUDxGEx5qcLo41Z/0VdNafejj1
A1uvBWQNjhopne7K+jMIfm/qsrXsN9K3gNqgqqai6Kk0fwvYneX191N5Ec3f
Ak5k/FKioGhF+hawZDAgtEZfQvpimFpdnnFPAKQvhtrNcZL4ayy+YrjVt+i7
yR4H0hfDY4e0Z2Fn2P6IYdNZjXDuGfKXjWL4Y9LXad6Z5qz/hU4b3dWuK9RZ
fwz2pXoXI/s+Xh7St4Ru04ybe6LMqD+1hGodbsk9XyeKjyU8y1pydnm1F/W3
luC8uGqexoA35Y8Emoxi65ZLAqk/lsCrRKv4zkOzKJ8k0P95StnONbNJXwLz
S3pWPdIOZfcH4KbmNMgJnsPuF+DcUvc7oZ2sv7aChrlnVmf6hrL7CfjDbkrG
68lB7P4C7pSfPP2ix4vdb0BKR7d85xzmz63Ade7lFc6Xndj9CIh6d2Yc95jO
7k+grjLXRKndld2vwAPl9TbN89l5sIZ1m/v3/PPRid3PwLkZq+RWfWP3K9Yg
78rdoWhqS/rWsCbPeeR9NJT9D6qsYVY=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.4, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240136877586665`*^9, 3.9245540078579817`*^9, 
  3.9286044809277377`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"41f81ace-860c-4782-af2d-2bce8af44806"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9250801805032268`*^9, 3.9250802168535285`*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"a6b8be6b-8a09-4830-950c-1ea35824c549"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+O4XqffZwpr0bUC0ePBgjay86L/Yw3fO
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
BTu/Ad386aunpbqSXwQ+M7fqTKmYKf4vHdVedg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk8lWkbwPGjkIzKFtnDkfVwHOcgxblQEkJU06IsoWQ9Y0lJliwhRdEi
o2W0oFF4TavOJRGtSqZtRDXUqNAumvFOr+t5zz8+Pvf3+Tkf7ue4r0c3KNon
ZAKLxdKRYLG+f136/dVpg5HqKdp3uRxhVeX3lw3eC65SunDRScj6/kq1QYez
91Y+rnET/s8vtUHv0Gurd0x3HvcmNjgy0dAxStNu3LNsUKrAM0TbkTfuO63R
wFbnSdlVJ+pb492j66+OXvaivjU6Xjq3cmHXCupbYxXf4YjW7DXUt0b4ULxv
58Jg6lujTfzjpeeH1lNfgA7VCRu5ndHUF6B9Z5KeoV8M9QWo6hXXWHhvA/UF
qGlTXBbYto76Apwed8KsyHgt9QX4YKBvjoKKL/X52DTZ6kxJ3Rzq83F/Ys+a
rWxb6vPx6LSdk9q6Z4vH+3z0uCvPKe5yE4/3+ShvnGy1TbRcPN7n47HlzTe5
zgHjvtMKT6xN/vAgPWDcV1qhXH5HRXzTsnGfaoUlX+fWmOUsp74VDirUyxlM
WE59K+Q/PyviO/tT3wozM+26OkPWUp+Hr164tA8eW0F9Hj5b+/bSlBu+1Ofh
MS9JQUChH/V56Cl4XRq5K4z6PGyQ0PDYkRVLfR4eNUjNiXq1kfqWyA1b5+88
mER9S/T8nPOH/6ZU6lviKwuZwMyH6dS3xPvDsRW4LpP6lrjoQ7FqQ3Ym9S0R
fvPKWrAvi/pcPFBuf80ubTv1uTj0qfUR62Yu9bkIhR9ObmzMoz4XdTL8Lvls
zqM+F3luyo+6wvKpz8UQv53ukSn51LPAruBrnJOJ+XS9Bd437X8yVJBH3gL3
xGrUvShmfr45/vh5kozxwW3kzfFEsrwg4kEKeXNM6/d5NvQ4kTwH36uX5qqO
xZDnYEJvyOGYvAjyHDwsAtMNFVHkzZCjsWNQ2tKfvBl6+tx8WmtkTfvTDMM8
m0zwjT/tR1Nsqqzyry9i9rcpPj3kp9VbFUneFPPn3nuVkxFD3gT3nmQ1G5f8
RN4Eza9XO+Vq0P3CMsGWe/OGS2XDyBtjd81BldSsYPLG+J6XfoOdF0jeGGco
zSjLfR5M3ujf+9uw/7jNOvJGqN17wqFGZT15I/zrumLXxI5Q8obYwKuItu0L
JW+IPal+p7psmb4hnrO96T0hmj5vKmdhi3fejXBV2t9LZ2HtfNe8g2xmf85C
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
50/dy5OF/wVbXIEb
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
KF8C56yf3ju+UED5372Fk+l/1LVl/wOroXa9
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.925080204829012*^9, 3.9250802175077133`*^9}},
 CellLabel->
  "Out[386]=",ExpressionUUID->"3498c73e-8d1f-498a-b5cd-30195a66dccb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem3000", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"hpmem6000", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top50%\>\"", ",", 
      "\"\<top1%\>\"", ",", "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Protein-Metabolite Cross-correlation\>\"", ",", "Black", ",", 
      "16"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.925087546068961*^9, 3.925087580141283*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"ac74852b-82f1-45f8-8f02-34f28b0ef391"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
j/z/86m4lgwWuMj/CyQaZq8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw9mHlczdkbxytCTSokkrTc9n25dTOM+xBJkUITCS3K1t4tWrUorSKSamyN
rVJjaJT1PiUzGE22ECUy2bL7ZWmK38t4nvn+06vXeZ/PPd/zPec8n8/RDQif
FyQnIyOjLSsj8/Wv19enVYS3I58ZtOmIpFWVXx8Rlh7acKzJTlsq8/VJEWHD
u3VLepP0pP/yXiJsTV5srLpM9RtvKsL+R5cTaicLxP/yMiJceL5Nc9RnF/E3
fQd8WjWhSST2EX/Td8D6bs0b91f5f+NTHLA0qlJeOSbwG+/lgFaXhGZdzsHf
eFMHbFVY2SFVWEn6Dhgg2OZl5xhK+vb4k+K50wlO4aRvj86/FBXrl4SQvj12
v5CsaOgII317bHgqGPF7diTp2+Mut+EFfirRpG+PV+cq+B2Nk5C+ELeoPpDE
1seQvhCHTQ3955jcWtIXYv6HuwvLPqwlfSE+82ktPRNCvKkQH44aJ/HvZn0h
LpambpR8YH07jNxf0ezmFUv6dpjhHPY05WQc6dvhnbAd58YOJJK+HUaHdfe0
HEkmfTu0KFD45XvHFNK3w0kj17xxOpFC+rbYnKBb80QxlfRtEZYfeDBwmvgU
WzzYIkm4pkW8ly1G6Ck5+8smkr4t+mntq/YpoPeVscWJStZWdY+jSd8GD5nV
pP9wOJr0bfD1PqXm4DVRpG+DpdNT4xM/RZC+DSq23Ww8sYXn3wZtCh4PuhQf
Sfo2GLPuVcvlfaxvjdKVMZfy9hJfaY1pkcNLel+Gkr41dmxIch85awXpW2N9
TndZf2og6VtjTtGiY3LNy0nfGlf+HDTfZdgK0rPCnQH2B3rX0nryskJtoauG
l0UY8Vb4x67ELR77Q4i3xIDk6iPn7IKJt8RfT+iUDTMNJt4SO7sqByd3Mm+B
AkXX1c/r6H28LHBd+73bMZvjibfAi9PK7kalJBBvjiZzLu/7eyV/b3PcaZF4
9rjLeuLN0dZoVWv48hTizXCasdwmsxPJxJuhr7nwVEdlAvFmOGv/X3EL9Gi9
VJri1MlLrv5wbT3xpqjpfXLJ69I04k0xsy0wecqrTOJN0LV0lLt3aybxJqgp
qpr5j1EW8SaoE/Hxcr5eLvHG+CxXsXmcdh7xxtg5rHWHh0MO8cbodO2Ld0ls
NvFGmCBYELrgEesb4bCyi9Uj32QQb4Q7la6e7vHKIN4QXe2HT/adlkW8IS40
0qoMncj6hthz43Cqxe4C4g3wc+C0NOzdQrwBTtGUGsOTQuINcPGksZueLN1K
vD7u612yMdWvkHh9FB1M6gzo2Uy8PnqX/HrM80I+8QK0rpGoj4nOIV6ADa7Z
2x7I5hEvQC/jhk1LzvB49DDkwLxlt9Q2E6+HZRktsm/KC4jXw/B8z88xjayv
iy3Nj93zgng+dXHPl+x7fstyiddF55WbZjUY8/zr4Mv2l6fhPc+PDmZbn9p/
p4fnUwfV7bdazT+dQe3aeHX8opTd2fw9JmDmbwu/z3/L45+AAzmp2e6uPF4t
PDfPfcX101uIH4+5Kk/Nv/TwfI7HjdUlUv+GrcRrovIP78LuWRQRPw4L55RV
9TYVET8O17yOjJpkWky8BgZsu5Z49lUx8WPRuThTZtXkUuLHYnqHX6fn8Z3E
j8GU/vgfTdfuIV4df2wWrJtzcC/x6lj9dv4Mu+t7iR+NM11D++rHlhOvhnHH
gzvvXSgnXg1VBeYyujfLiR+FSYuyih72MD8SA6dMjnvx5GfiR6J5g/7zkJf7
iR+BD3b+bnk48SDxqrjZRKW7Iq2CeFU8UxfYKnSronZltLpillucXU39h2NS
1flE6fFfiFfCgIH4PyuW/0q8Ipb6lntMf3iUeAV8n7cF5vbWEj8MM/zbjQT3
jxM/BBeq78w6ZXGCeHl8/FPBmUl/nyJ+MHpcKgz7Y6SUeDl8IWuVd7IPiZfF
+FW+wU2NjcTLYP7VQFXL003UPiB9usw/tUT9D+rfJ035p/DJ+uyLxH+Udn1f
P7rR6TLxvdL3Vc2WErUW4t9Kg5VT713su0L8a6mgzejHR4nXqP2ZVE9t5DvP
0Teof7cUNa/HNrW1En9f2n/mzO7yjlvU3iq1aXqeP1PzDv1/XroaVXc5JbTz
+GWsYyJWRCp0crvY5IjA8MHJm9xf/Ca7GhJMeTz3xUUhaxSHLv+df19cubVq
/TaVszw+sY6p2fN5o4/x+MXNdtkq6wUH+P3EvnY6xQ/fb+P3F4tOGE0I6uJ6
91HcOfOqx19aUeS/+sRrzeW9u7w2kt8aEKs5zXlUHFMopeFD3IW3blNti6ld
FhQHnflU4VZC/eVgkOH7s0M/lBA/GPwialU9DzMvD4lDM5zdLxQRPwRa0oTF
5YWsPwyu69o9XqCwmXgFKC28ctHRKZd4RdB5lFK9FzKJV4JzF17Y5BYkET8c
3vmnG8x7GU28MuTFhph9XhRMvCooHw02iNdaTO2qcOhA/4Bruir1HwENPrev
7XCexfsL1t95GRzW68/7D9Rv7VNPOBzJ+xN6ps2QTHdnf6IGxnUVE+/8ncT7
G7JUd+w5Fcn+ZjTk1g3INMun8vkAfds3hA083sDnByRbN9+edDSbzxcwmLTU
OGByNp8/0JFW0fX+JtfHsSB9E7D085x0Pr8gLSN7q/eaDXy+QdUQ56fJ6Vy/
xoGur1L7QCKfv5pwvuJKV44x8+MhT6N7U993aXy+gsfUt4u9jFhfC66fzPgt
dfVGPp9heotjj7tNDp/fcPjEz6tqTnI90ob+kI9x7Wk8fh3YmxrwctG+/+oD
KMRdNN8+gs9/HRi25cLomPfM60Ktzrn00FieD11oXeDc5f6U318X0tXCj56a
ns71C3aEyPpG7+b51oOa0oPJ8QrsP/Tg1jjfU0O2sz8RwEb5jiP9R9kfCSBz
cI/w4d0grq9glWg9M+G2N9dfKHPr9nhl4sf1GRpfuz7t0Ob1oQ8D/suD8qYF
cX0HqaWNzwytEK7/4HJV/oKKdgT7A0iX+KqZ5oSwf4CHhvb/e7uS9Q3hwckp
stZys9l/wPs9t2MtYtzZn4CSwwkdScZc9i/g7OFbv+LAcvY3IPdlaa9K0wr2
PyD3YdOypsPh7I/g+c6L9/J+CmX/BH0hvmr/28/+0wRGKac5Kg6NYv8FF6v8
XA9uiGJ/Bu7zpN2zPsayf4OKwVq3l95i/2gKLh4RubZB7BdNIXR9wave8fy9
zOB5yvalMnPYf5mBsVza5tQWXg9moHvIaqLjxHz2n5Dd/7k+dzr7AXPQtsq1
l81lf2MOg5vOWzp5MW8Byo4FU6d15LL/hV21blbtX1jfAgSOPsoVbbyeLaEB
DL0H+/D+sITzTd956rmks/+Ghsx6i7v2vH+t4FNm/epA2yT279Bea1gTIGI/
bQWhU6dpBr3g+bGGCSZFjVdKojgfQP+nvitms9ZwfgDzMfHr56oEc74AjWhP
5/ZoXl/WYJXckLlacSHnEzAIMZZN0XPm/AIdecLUwC4TzjfQqdI42+dMz9lv
+jawp/bTKtcYe85H4HEgeFbNDTfOT1Coe2T3wi7OzzZQPjz0fOArC85fEFDp
uOBTzRzOZ3B2VE5h4+wlnN/g87hkmbEuqznfgU14g8jHmfOTLfhOKTTPvb6W
8yE8+hKtMd6H84gdZCWGXfDQSOB8CWuXyLd3aydw/gT5yVFP6hL+y6dg9urh
w+tFcZxfQeNF26dC23Wcb6Ezv/B52Y3/8i9EXwtOX5PE8y8Eh73hKrV2vB+E
kOraH12uFcH5Gkwwe6qGLudLIbiEdSY4V3E+FMKTg+E2R8UxnN8hsyRdXT2L
87c9WL5R84o3jOH8DzkzHHaXzJDw/QAcmKH/snSyhO8P4O27rG2WEMP3C3D6
5J8LssQSvn8ASc5+k8f/RPD9BGh7l787p8j50wEC6+KDto/25fsNaIyR1fcT
e/L9BwxZ7LN4g9SJ70fAwHlQnXDx9bPf9EXQXzL97Igxxny/Ah5tkk49iTrp
iwAfma5VGyQmfREc2lPmoX5rOumL4M9+4/nC7Y6kL4LZnzx7bmuriP8PP1JJ
LQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw92Hk81VkfB/BryahHZLIn4eLa3dXNNLnfyeSpJiKFVJOdIntFUQqVbmpk
VJYxbZM1NY2Qmu63JDFRWTKmbabFGDMZbR5D8sw8vue5/3jd13mfzz2/3znO
63uOWXDs8jBlDoczR4nD+efvyn8+3VI8PSE6rvYCFJUV/3ykyFVxuaTz4lMF
559PuhSLpmbo+h+VKv7nV0oxoW0w+ab6vElvK8WGXOtD01S9Jz1HiuHVuxu1
8v0mfbcz7lOf51qzZR3lO2Nf0uK0055hlO+MJcdkru4zIinfGYfcMw5f50ZS
vjOq+GoWN7SR5zhjeeyXj4aHgihfgp36V9UP/ryW8iV4+vfiTaUZqyhfgsv6
Khzbq1ZRvgTbD1W5ObxbQfkSHHVVrGrIXEb5EpzTnRq4/IYr5YvxeZy5xtwC
Hdlkvhg9rzy8cVzDUjaZL8Ym1bwFjbpcyhdjSx/P4Lm/gPLFeHtL2xcji6+7
Tub/3V6bEGfG6XedzBdhYJaflo5oKo1fhCkqfQ4RZu6UL8LFp/ijoVkBssl8
Ecac9Nr/00T45HhsRfjrv62dMueFT3qOCP1LtiakrQ2a9N1CfFj155mZ1f40
fiEOeSXMuV8STPlCNO754FbpolDKF+LZjEBPrdpIyheikWVD7YhSDOULMSzP
49IvrrGUL8CMnvXywofrKV+AS+cec5nlF0n5AvQ6eM2wWRRG+QJ0enrrfL1B
MOULUPtdQlBxZijlC7Cqo2vuRYt1lM/HTjNBwD4HL8rn4+B5n/uz//KhfD7O
vhMgL7+5hPL5WPXmSUnStIWUz8cdA2qt0/c60Pzy0c7pQIlQlU/v2wnfdVVq
39nlS/PnhNrHFXZaLQHknXD2xtA/1iv5kXfEnbE//JZ3aCV5Rxx6+8mfhrKV
5B3x+pEC7y8P0PqqcMChdZsrHcr4NL6/vxu9FO91WEPP64BWE0lpNk00nxX2
2Gxz5ZkE6f2utMfzHsYpq0oTydvj7xape35LjiNvh3bFmSEuYVHk7fDysFmt
UegG8nZYVHO+eI8nmx9b3Bw7U3OsP4K8LXoqqx74MTeMvC16Rz/S3VocQt4G
K5/oGLo5ryRvg4knL9So9fuTt0GpkTbs5AaRt8aeupipR7LXk7fG0Fffmuo/
jiVvjeris25egiTyPCw61KR2sDmBPA9f/37DxiBiI3keerld2RW1OpS8FV6z
dLNTP7WcvBX2J9pjr5MjvX8rbIxuzyuLYvuNJca7L7l4vSKO5ssSPz27I5Fn
tIW8JR7W1ghuupBO3gIlubzbHpWZ5C3QeaRduWBDNnkLLDQNfTQRLyfPxZdv
3hTmt+aQ56LDF8bPy17lkOcizz3OeKNBDnlz7Ng2X36yV07eHF/M6m3hDuwj
b44qTt3/uZ+YTd4MF5j7fLV8fTZ5M9xuFea5rno3eTPMGP7M0K4vk7wprtHi
v372YCd5U+TviDeYbZRO3hR3bfosxak0ldrnYNIXNbsehMdRfxOsX12Z43ow
lLwJqvbVCwtsA8jPxs6F7QNPbBaTN8amYz/CuvFF5I3x4qMLswaeONL8zMJq
Xu1dP76E5s8IT9nPW/aVgnkj5L14JQ7V9aJ8Q9Rflf9a7ak35Rugst9wnk+u
D3kDzHaJTRSW+ZPXx1nSCCOd1FDyethfXrfZpDGavB6+Ks9eEW2dQF4Xi7uq
437XYutDBy/tXNmVsp32K44O8sb8Rgq+S6fxz8RGAzd/pZZsGv+H2J61KbBp
MJf8h2ijl6V7teMweW3codau5p1QRH4GxraUFrbpHSM/A199X18vzzpB7Zp4
a17zT9sF31D/6ajJ7TXUuFdKXgP3vChb0xlZSX4aeulkyws8qslPxYkrx3uK
fj5HXh23v1DmBtw5T14NJeEb5NN8LpCfgsNa8v2/lteRV0XN8edlK99eJK+M
UTPHDq++dZm8ElaMRtfvq1KQ52Bjhfm4zdGr1D6uSLtRFzKU2Ej9RxVpWenv
e/Y0kR9RlJg4frawppn8W8Vo3BXDDc9ayL9SPO38Mrx15y3yQ4rR8cV3nnnf
pvYBxfxF02QcuEv9nyvsFi2psJnSSf5nRVtyx+M3at3U3q0wXJg5p07WQ9+b
FG0W0Rmygl42fs4O30ND3zs9YO2yc94STfdtnay/LKCpZWKwqoXly8zmN1fu
m4bs92VdxzY5XPZl73dAlh5e2zHF/jgbv+xpitKn9ytT2fPJxudyX97U2kPr
761srHks5ETNEVqfI7JAwb0kmcoxWo+jsgidgtu6K06QH5cZ3ypJNs84RZ4D
We5u+W9PnaJ2JRib6rskW/cU9VeG5+9TCha8P0FeFS52dp2NM2R5U0CS2r/2
fhf7PTWwM8F59c5fk1eHvF+/4C357ivyU+Gje19P/Pq2mPw0OKddXn7mZAF5
DVh6tX3oqP5h8tNhxcuNY9aX88hrQnf+s59/dMwlPwOqv7qn8Zp7kNpnwFoD
sY+kYj/114aA4C9tJw7tJf8hCPlp+28aZJH/ENYMqgQfddpOfiaMFQw2W1/f
TF4HcuKjjgl12X6mA9Xb/33hW6sY9v8Pp2MNb/is2cj2B+DlfSR3rg1g+wcI
Au1675d+zPYXuBrYrlRRAjS/BvCm03DGN0m+NL8G4CuWwK7jvrQ+DCEjYrRF
aUUgeSPwHF3qyFFZyPY/iN2bzL33+Tq2P8L7wx+9E7+LIm8MSlq7fwtankje
GDRCVm9I/S2V/GyoLOrLXBuURd4EpDFnWzuc2f5kAiWLu4MPDuwlPwdKN6T9
6WOYTd4UXKSPzGLss6ndFO59JtesWCan/qaw1dIoro2XQ94MFv5wYcRbJidv
Bm9WzUl3fcN+zwzyHtRc+s6W5ZvDVP0jIcvf7iNvDp9uyzp6rHE/eXOInNct
Hb97gDwXwupeTvmlOIc8FwJ2jowd8GSeC5u89AqvLJCTtwDNvsY3w7PY81mA
slqZ12DALvIW0DsErt80p5G3BP0q5R9FJ1PIW8J3j4/uPrM3mbwlHNx5pfVg
7mbyVtA/3Nfa6xjN6gu4PHLE/vr5SFZ/QKdvbod+RDCrTyD6nO97g3xWf/Hg
j+SzDxsfxbL6BuZ88nWPqi6r36zh5TQfF5PBTaw+glXxmyPCNrB6yBr27+JG
9yex9WAD+q7Lw1TUWf1sA08mqly2arN6ywb2Na1Vzy5i680WeAt+USrjx7D6
DiI6ePLiZfGs/oOIv/TOHx5h9ZgdbJy4ZDJ92//rR4jQEoyty2H1qB20LE0O
0VzH6nN7cF+0p/anqeGsPoVgJeOAxspAVr/CuQDvp/lpQay+Bc2xscQou0hW
/4JDpti/JiqGvAN84HZi+7WiePKO0BCSgkffJZF3BA//wLmfnN1C3hEej5Yv
SVZm8+UE5upB/+o1Ys/rBGrPF7e/rmfvxwluq9Q6lGavIM+H+7nTI/aMe7Dz
AVTclS/Wi/qYnR/gl4TWi0oNQna+gFnP1eZlg4T2Bz6UBdj11GjQeaGbD0vb
3KrPbIuk/UQArgsm4OT38XT+E8D0jbdeLjyZSPuJANLODYoa2jbR+VQAh2rc
mxYpkihfAN+aFtnPbKV6pVsAAY8V0piZCZQvhNHav4ojX8RSvhAejHyfe1uV
1bdCcHvy9aHU2+TThVCTPrTVNimR8oVQ7hQshdyNlC+Ec7WDA963IyhfBCdE
kdaGGUGUL4IfHlQ8e5SxmvJFEFAaKW1NofNR+t/+4fxtn59m9ZQI8s0NfLI0
2flfBOp6QfmFXFbviWFwaHph9252PhPDsLjfR92fnS/E8EdF25nZ6h7sfA1d
LZENHZk+7PwNFQknHZV4tN92i0FrVabzfi+23iRwtI6z+eEBOr/YSuCdOnc0
qnA15UtgS4z4UqOPH+VL4NprqWFC7GrKlwDvD48frHzId0vgm4WXHE5dZuvH
GUbLBlxm/+cTyneGkdV3ubJxEbu/gJzXc62Kny1g9xt/P9/Hdbo9S9j9B7gc
Obv3mtyH3Y+Af5Fw/E6AF7s/gW3vuOHa40vZ/QoUWuZ4noh3YfcvkONX/+Lz
m12T9wnpUmiY/+CCx2l2PyEFhd5wXcg2Cxq/FIY5Ua3iZr7sv0otcdM=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12Hk8VfkbB/BLG0oiSQZl37mu695KP/dJSqgJE7IU2WWnyFCpJEolLaQU
aTFSoXUi91EhqkHFpH1TqUgZrZbfNJ7v/cfL6/s+n3vO95z7nOf71fCLcgmU
5HA4UyU4nJ9/XX9+WoUot1B8fvCcuuhEyc+PEI/dfx67sddCxPn5SRGi8/bt
RhtzQPSfdxWizIldgxtOWw17QyFmXLaOiU7ttP7Pc4QYKiydFatiIB7OF2B2
pZV99HMj8XC+AK2zOqrKrWeLh/MFaDVY9eh5qdOwdxXgQ+c5Omk1HsPeUICq
6rzQ1+rLhz1HgA5WHTWvm5dTviUGrFZS6/AIoHxLfP+u1ejSuFDKt8TSMmX9
SwcCKd8Sn4muLV9s6kv5lui1BxxOc70p3xLVRvbuequ3iPL5mOv3wuPoWRvK
5+OMiIy03ndzKJ+P9Vv7NF8YdlsP5/MxbZyt2E3TjeaHj2rCSmGNacDwfHL4
mPxtVOKAatTwfLZa4AKH9GcfDGJp/i1wxz5PxVNLY2n+LXBzmInO+ZJ4mn8L
LAib6JddvZryLTDhsUt/UGEC5VugtWxkRfDqlZTPwxXqM3v5nDjK5yEnOzjJ
oyuG8nmo0fOQ/7olmvJ5uP/Muh0zIqMon4eP/grImmsTTfk8DAiQtj42MYby
zTFJVBetXxFD+eY42tFh1quiKMo3x0v3mraNXRFE+ebocjefG6rnR/nmGOpR
m9oo50H55qhxceLODFVnyudizMct0u/C5lE+F6/e2nnDpmMx5XPRduw899lj
nCif++/1aPamCkbT/eXiEnnPLx/kBXR/uVi2/dJ8T9ff6H6aYd4H0YBjjBc9
H2YYNV5lbKQzex7McP3JqSqBOu7kTTH05IGgJxMWkzfFw5uc7q7i2ZE3Rb3y
ZNW4s7bkTdBC+teYpDQ38iZYw63L4Wm7kzfBvIHYj/bpfuSNMaYl+/OBCl/y
xnjVMs/XdLo1eWOcco3jMuYNn+bDCGcJR2S7l9vQ9RvhYHKa3JVuLs2nETa4
OLl0RZhTviFWXqu+/nXaEso3RK3UxA+vPPwo3xDPnH+5fm9OEHkDXPPWfV3z
xxjyBqjUGXWljZtE3gBL7WrqMzXXktfHyQ0JvOfv15LXxzwLu7ClXink9XHT
m6xkY+PV5PVwz6KKxgRhEHk91PujpbuD40xeD7/HKtyL1lpA16uLuUazJirm
+9P16uLClx2yKT4r6Xp1sfjbhWaX12vJ66Dwj4aSqt9Tyevg7O2ZSze+Siev
g2OvX7U7HrOVvDbuDl4ld9khk7w2Bn1OzjRr3UZeGy2bNhfvf7iDvBZWT5ew
XfV3Fnkt3Gtoo+KTmU1eC5W7OornNGaT18Qx6vdvp/Vlk9dE68ik+PEPmNfE
Ry9+tOYe20leA88fV6jbFr+dvAYmTDeSBa9M8hr4xq04LvgsO/9pOLnzm+CB
ZQb5abj81tAa52mp5Keh1DW5iiz/tTQ+FY/oGTXKGFA9KVHHAWnx8TViqj8c
dVz2F0c3Qz2SvBq6yyzveybvS14V1RzCfXq3upBXxc0T7LLkon3J/4KuUt6O
e7mh5FXw2bgruQ3eceRVMKdg/EoNyQTyUzCNvyxT/87v5JVRVnfXBoPW9eSV
MStnlr+6dzr5yfhye92T5OBt5JVQp32Fbmp9Fnmlf+9HcNHLrl3kJ+HJ/EeN
O6v3kFdEyR1yHwLac8gros9iEcw7tI/8RLT+lTNFOH0feQWs3FjlmWCzj7wC
5t79XC10zCMvj/IZeYvkxu4nPwHX1Tml3os9SH4Cumfw5hZJFdL4eGzpSLWd
l11Ex8ui9tw5F6qzjpEfh4r2LjqywhLyMrjI5HJqQeFJ8tJYu/L8VmdBGXkp
HNS8GM19Uk5+NO7d66ApsfsM+VHo3qn5I/z4OfIj8dS0iKnSfRfIS6LOza7K
mC2XyEvgD9m3guWml8lzcPdTr6cX/hTT+IC4QVnpzByTGjr+u7g6RPNB0rUr
5L+KH9zRMFp88Rr5PvG9DX/uUGiuI/9JvGat9p6xdg3ke8Td3xNu9oy4SeNv
xac2vGvTNmii4zvESWVztZWiW8g/FW/Yn35vtv8dGm8V81o6JOJ2tdL/tWKX
wXX5yh/+ZufPsfmxrOtL+H02LnoW6yhRs7iFHS+6lJlo+1SnluWLjsYftBiQ
u8C+X/TtbsAWhwuH2fmJ1rfnbEle5Eb1qkd00c5ErHdzH9W3TyK3SQtK5auO
UH3rE9XeSh5I0ioh/1VU+j0gO6P2JPnvoub+RVKqsafJD4gur89yDLh5mjwH
brVuMghxYuMSwBmvUxMz+xQdLwkFJnM/L+kuJT8SzA5ojG6XKiU/CjZWOFpr
LS8hPxqMqsbnc4uPk5eCsnXR6ee92PlKg8Ljhrb+wULyMqC3wmv20uxD5MdB
nnHP6ar3+eRlYU7t48AfQwfIj4elwXAuxnQ/+QkQtLpgX+W+XBqfAIpDB7JU
D+yl4+Vhjvy5wu78XeQVQN8+IvHIuJ3kFcDaW/3o7e4M8hPhfmP/Pl8f9n5R
hDXJhz5uf8Dep4qQm71EFsbYsd8/lBQdHxK2/MbqA5QuCa8KdPRm9QMs1e0O
6vv7sPoC9yqUDOfPDGP1B9Y/7vVfNxTO6hPs/6dGrjY5mNUvuDHd+wV0+bH6
BuJXnRyZQuZVoO5Ez6YhnxBWHyEh8e/k3LRQVj8hpPBCU9yPAFZf4arGObMt
Lqx/UoPb0UV6MpOCWX2GAUeHXxacCmT1G9pvG7TZ/+PJ6jsk44vypNterP5D
imLh0In0Jez9AF2W8da2rkvY+wMiuxv3XExl/ZgGvGi8u/LbCNZfacDUiL2H
F6/5ZE3vJ9D+Z+fThaas/9GEBe1t/HHlHnR/NKH9q4Ou/OgQuh+aMC992p57
8WHktSDsWUSHbXQoeS1oEr76Jb+ceS3g7bKVa1wURV4bRBJ+UxTD/chrQ/xG
bsDiqEDy2jCvK7MjxJvl68CCfpfPb2QjyevAc272jDenV5DXgcj++vf4KIi8
LjT55EGXpDd5Xah8Glx0NsqTvC5EudgXP2y0Z/0JTHKbZdL5ls/6F8hJuTO2
sceS9Tdg0+3fnt0poPnUh01BX09wb3rQfOpDinuBdciFFTT/+uDBPf52tBTr
Zwxgdk9eBi+H9f8GYOARX31/VAJ5A3hQOX1TuTnzhjDK5XxZp1IseUN426yk
qlwRSd4QxDbKX77VRbH+EIasdMe/D2bvdyOYv9a74Lc25o0g8lTE1rJ5keSN
4ahbaqrhH8wbw7HnnfZe9az/N4ZC0Su1jF+ZN4GBYudZu2PZ+sIEhA8Laz3y
2HrHBLSUJFQPKYeQN4W9RTLhiSuXkjeFT+oKc0PcF5I3hSkrX/Yf2c/6WzMY
DFf3WF5hSd4M5K9P0InfokveDCTHOg9Fqhuw/h9mlI0YxCE7tj6AisAv9k0C
Wu+5cqHjjW32pJcutL7jQs/FY3LfNtB6sYQL8rv/56j0PZzWh1ywet5YXHAz
hvLN4V7j0ufeG2Mp3xwOxxWaqTmw588chp6uzZKJC6d8c2ieGTq/1yeM8s1h
W/nc+UF21A+3msMWoz7Pvm5fyufB19TiNvVEWu8a8sClPuHqlW0hlM8D/ceV
kP+DnucUHhysy8u84xVO+TwwNHynod9J/XwrD9rXSOcV3oqjfAtwk9rpP/R1
FeVbgG1bX4uDfTzlW8CRyubtx8vJp1hAgopTseycOMq3gL+aHAZf20ZTvgXE
Hvsw07+c/b74MMhbmHixi+qzIR9C13ikSMSx9Q4frg3pChLF3mx9De5Nsgcn
f/Fn62+IkbU6fSmazQ8fnqZJ8hM9A9n6HSzPqc2a2hPM1vego5dgPl+K1RdL
yPrmkXi+dgXbH4Cl23IvW5Wx+beEKqm4J1KqYWx/AfaPGLlaJB/O9h8gM2SF
0wfbCLY/ASltnPob6yPY/gV0J/fph01i91cAGsGuu5yvs/okgCmbHzZ/bvBl
+yOQbvT7m+RkJ8oXwltJbr+vrpDyhXD1YWVH9RdpyhfCsnc3w34Pmsn2Z2Dt
gj/rAw/Zs/0buFGV1C+Isqf1sxBsrFbeql0Nov8Ds4V0yg==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+2MPZ622GWcVP3D+H7EQi2M=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Protein-Metabolite Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.8}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top50%\"", "\"top1%\"", "\"10xMean\"", 
       "\"20xMean\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9250875731699824`*^9, 3.9250875810377665`*^9}},
 CellLabel->
  "Out[392]=",ExpressionUUID->"aed21955-34b4-4759-be5a-28151f15aa20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ol500c24hmem", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem1", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem10", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem50", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem90", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"hpmem99", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Metabolite-Growth Cross-correlation\>\"", ",", "Black", ",", "16"}],
      "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", "Black", "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "Thick"}], 
       "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", "Thick"}], 
       "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240137340669894`*^9, 3.9240137678775597`*^9}, {
  3.9241230368316574`*^9, 3.924123047120839*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"73f90aca-18a7-4d30-90ed-a4fc60c4dfd2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJw9mHlcjdsaxwsdSeikNJBmmqfd3luT/SApZSqRjpNGkQZKA7tI8yihI8qU
Dk513Bykif1EJ0WGdEORBpXhGpMUOV1uz7r7nz77837fb++71rPW81tb3TvE
2W+cmJiYqriY2I+/rj8+LXzMVzpzKWuLqaC46MeHj3X2xRK9dhYCsR+fWD4W
eQ8vXqJgK/gf78rHoWCdjSVrF4zxenycNDqqfdx15RgvxsfKhHP2ZRvcxvgW
Hp4pN+itOLua/Dycl9efXKfmQn4eWkaVd4862JGfh11LF26bJVQgPw+tdiw6
WRBgLRrz87BZflKg/mdx8nOx2Tsg8ljBKvJzcU1UQmruIk/yc7GQJ3BN+8Ob
/Fw8ftvVybnWk/xcfN19b7rEMVd6fi5u1OqsWvaaT35ztLI5NejnY05+c9xt
PZp3u0+d/OboeOluVuUJB/KbI19ZOuh96Qbym+Mj/qBz8zQf8pujQoGZUqmE
B/k5eOvD4K/7hcQXcbAz0vqFlNCL/ByMtLTIkH0XSH4OStxUbr/eEE5+Dp5V
TxBe7dtBfg6OXGjS2vIgivxmqFV9335YN4r8Zti0Sy6t1CKC/GYoJ36iKEop
nPxm6An6H/ZtDCW/GfrlrjAeWhxKfjN8t25B0PK47eQ3xd61Szsle7eT3xRv
X9ua2ZoaSX5TbJ63wWhr7k7ym+KidLd1HdrR5DfFJ5Xpntmhu8lvioKPUFdm
HU9+E0xJnvTgbHwK+U3QzS2xlFeYRn4TbBfKO09tySC/CV4asnx+4HAG+U3w
tElGZlZ9BvlNMP5EYKKqYib5jFFxbWNedVcm3W+Mex9k3pXrySLeGK/o2HdP
3ppNvBE2Bok1z4vPJt4Iu0bF7weXMt4ID2LiC+v8NOINMftI/MjQvTjiDdHZ
IHCxc7SQeEOMLlflGOREEm+AUqclqzTCQog3wD3QeDcgfAvxBpirq1Prdo3q
t0gfPVJ+fhcaR/Xkqo+3rROv6a5l9aaPDlaSMknyzsTr4e57S4eW1QiI10Or
jsvT3Ne3Xh3j9bCyf8ikfNBBNMbr4gqLnBwZdQvidbFSaevVpB4/8n//7pg0
4nuL6qVIB213bZvx5dYO4nWwPOPigs5Hu4j//v1rVuuHLQnEz0X3zyHputbJ
xM/FMu/ZEib3E4mfixejprx2AsbPwRZ/+bTEslji5yD/eXnP44l7iJ+Dvjt4
s/+o2U28Nt6811WV7b2HeG18pzPLtu0447WxnH/tQkL0HuK1cJXkwSC1Q7uI
18Js2xn7L/lGE6+FmdZdfU+e7CReE51KNU5w9kcQr4l8ee1NFivCiNfEgIDk
vpebAojXQCmlwj1Gbb7Ea2B9Y5nVzkUbiNfAyVfchqqD2fyq44WGtJtvVdj+
pY48sYu1n+XZ/KrjSBs/J9TUl3g1nDwRHz3/ZzPxatijtTtSP52tXzXkXBY+
X+HA5kcV7Rb9eunEcfY+szHBxYfjNofN12x8L/fXDYdsNn4qKPVxv1dNMBvf
Wfi7105r4WgM8bNw/NTDXXfjYoifiZt6y+YN+wiJV0ahambqfC4bH2Xkf7Rq
LnjFxkMJ10zNrJjQeGX+GK+INXsnurl5rKf9XxHflkxc2uXqJRrjFbA64+Xg
uQYfqtcZaBP4RWX60g3Ez8Du0YCsvEnexMvjFMM4l5/KfYmXw9RDFqnz12wj
Xg41j/zLc/4zIfHTUcFLelXOy3jiZdHmjb9nTFY68bJoj+tP/zk3m/if8bjZ
wgrn9QeIl8EJvunj09tziJdBhYlF5mbOh+n6VPxUc9BUT+wE3T8FbdW8Txna
nSJeGg/4fnIUNJwmXgq52haufX7FxE9C/pTuaQfjSomXxHZb/h2V+AvE/4SZ
Q9pvrMUuEy+BD79JlyVEVhI/AeVgZff0kKvEj/s+3x3SnjtriBfHCUMdJU0K
tcSL4dW3pz4OGN2g699EClHu4SUPbtL9X0S605Zd73h/h/gh0RqDm8YllU3E
fxJNCOk4mMz/N/H9IpnJwcvw8gPi34vk/E4EuSq10vVXonXZxYWKyx7T/b2i
11Vy15JU2onvFIlzMt17qtrpeovo4vMIx915T+j736J14XLGnQcfsecXu7E5
5Gtp/D12XfDUNHH6i86b7H5B9+n7NnPM6phfMH3A0maDxzX2/wUqk9ts7xez
8XolEExbfUpioII9v6BIT7dxl10Zez/Bso+bIh87/cXeX/D+wOXjnLA/2fgI
XnbYeQjszrLxE1RXzIyfVneKja9gfDEMvrI6yZ4fCl51PQh9dpTND+TrzLbM
eZzL5g9KFC8Glt0/yOYXziunlk3btpfNP+gXLXnw8n4Cqw9Quh10TFpfyOoH
5jYEye4YjmL1BdlPyx+tDN3O6g96/5L5ZaFyBKtP+Dvq99odDaGsfiFbXbdf
IzmK1Tc45eLK5407WP2D59llPlLBQrY+YCjX33aSWxxbP9D/pD6pQD6RrS9I
DQu7N9KbwtYfhIkZ1w8fSmfrEz7KDBs0Ju5l6xf07pyRHcfZx9Y3hDRYT914
fh9b/6Cg3iY+ccI+tj9A7LhFSfn2GWz/gMgbln5dggS2v0Dq9oRzIj4bH0Vo
Uqken3thM/GK0O/cfb6W/+Uq7V9Q1y8sc3XyZ/sb2H0v7z2SrL8rw9Wepo7f
g4Rsf4RfzO5W7Utn/WgWqEifn2jZFs/2V5jXY2CTH8H6kQoMDT2WqClk/Wg2
RL/U/HOq7f/3bwjn6rlIpoSx/R0ET/5QaU5i+UEN7ue/O7aEy/ZbNWjWeFXv
+mw96x/A+by64LGiI+svUNPUJ3mS58z6D3h89ayrb/Wk91cHpzURA2tigmh8
NCDsjBf/W8F2Gj8NuDVPon2dwU7iNeDT26qHFflhxGtC89sZHbe2exKvCZ+s
YkMrlHjEa0KG7Nu0xDZ71n/h4+ltendy/Vl/BuPRVZ9lvrD8qQXavnJ3B49F
sf4OkUc6+cZBrB9pg8Xdxatr/836vTY8l/Loz3VIYPkB9EZftBROYHlkDhwo
far4bXI6yx8gs6BKrr1uL8sncI57RVf10V6WX0A9S6/3bFoGyzdwu8nn2fD8
TJZ/IORktP3o6XSWj2DTkXyLPPNklp/godbpwr4o9jy64HvuaJCXC+u/uvDT
3ENqHTWUn4t0wamiQGvcBsrbYnqQX9vupTyF5RE9uLanb9tN1XCW/+C657YM
a43tLB/Coeg3OhrSrF70of6AcrC/LevX+lA40CsdVR3L8ie8jbgQ+Wg2y7MG
8LA+sXjVUCLLryDdnWAw/XYSy7fgrf5i3OaRFJZ/wWj4k4TjePa+hnBl61RM
8WR5zwhkYsQv14SxfGcEdrVfV3AhguVvGAhNHRQWBLB8DjVzGrsKQ1g+MgaV
qsyu+ejN8j2MlGgENM33ZfkfpJKkQ9z9Atn5ALqXJz8sfsPOVyaQl/70P8Wy
W9n5AnKXldZVprN8awLZkVmimLgwdj6Bgdb109wns/E0BameqlsB2tvZ+Qby
b0bEHEoNZucfsPJOMTovF8TOR2D4KXz+65HN7PwEjzyaN3+r9mbnKzipv8Ck
uWoVO39BWarwYf0BSxGdz0Dap9H0n0+/0voxg3dTU/ef8do4tr5izcDGoaRo
3nAwrScz8JFa+SE3JWyMbzGDIJcBvpoNW48cCD8XnVPADSc/B3K/thhsTGPr
mQNyrq6JgbKUl2I5YNMSI7Li+pOfA8a50qovD/uQnwOt77+o14X+Qn5z0Jw+
6cbqBjpf6JnDDtWZM6/vX0V+c5C9g5mFUmvJbw5OLsvvKLS5kN8cwsTd410d
l5DfHH76sFz7jaM++bnw3n/NlDUSmux8DwPVqk2VBpbk50J+WsOhex9cyM+F
f54YyGsc9SI/F54p3fYcGfAjPxc4mq2OsQ6b2e8P4G/47t5vR2n/1+NBrLfW
Ed3jvuTnwdlrDoqHdVeQnwd3XinN7U3VJD8Pavr/7nX+eXCsX7TwoCMv4kWe
Mo/9fgI2QXFHrX+zZr+vwNGnFz5n5i1kv78Ax8/gyGs9bfLz4a3Jim6dYlPy
8yHefU/SKNeM6ocP5Uvel0QmmQj+C1PPd5Q=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
+O4XqffZwpr0bUC0ePBgjay86L/Yw3fO
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12HkglNsbB/BJuKlIloQsY+wMxpjRxjzRvkg0NW0qQsi+VxPlliQttJGk
vchFt1Vpntu+SItE29WmRZSUsrT8fl3PmX/88X7erzPnPO95nzNc/0ifQCUO
h2PSi8P5/Vf6+1PrikbPI7PXLPBQFBf9/rii/1xeYP6M0QrO70+qK3b0Trwn
nztS8Z+XumKeOydo1A1uj7d1xf61se43Po6T/Oc5rljv2Xvl96Dxkp58MdY8
EWwd5uEp6ckXo6N999AzGeN7fKoY/QuuJ73xk/V4qRh3WFzg5usv7vG2Ylz3
RXfbso/hlC/G0bqFOTmqSyhfhO8lDy2qeodRvgiFG+/H1slDKF+E8voLjRNH
BVG+CE0KVtTPj1tI+SLMao2VPHwvo3wRXu9nlKg7wJfyXfAYL/lBUn8x5bvg
83UleX9WjaB8F3R4f0FX68wYynfBjxqVnyRpPpTvgq8a3vMbNOZTvguObk3Y
+2qvH+ULcePgE76LLKWUL8QQmaA6/+kcyhfiG5tvc1VWj6N8Icau3XdZaV/b
+Z58IWY+0v7A57n3rBdHiMPi0LjG3bNnvWqd8avFp7pfDzxpfZ3RPyTavz14
Fq2vM2rdMsnJ8plJ6+uMyXN2WqdaS2l9nXGlt4WyxplRlO+MnCEpf+2Z5UL5
ApxuFZjaMs+Dxi9A+ZCd0Yvj5tH4BdgsuzrOtSyYxi/ALwHqM8J3BdP8CFC2
7XXRM/1Imh8Bbm+t3t8/NprmxwnLi0fubNSOpXwn1P3hab5HOYzynXD+7cjk
r8KFlO+Ehb1dDn50G035TjhbmhGkP8uLxu+EO1o2vgwWL6T5cESxUfcLS69g
+v6OaL3V/1J0SCR5R5zgazjOrCiWvAPWfdnfTyktkbwDyoPnTcvasZS8Ay6d
6HpqRXcyeT6GVihX5dYkkOfj9KwFo3cMjiLPxzy+rOp1hT95e7x64Nq3zj6z
ydvj+XPPuzhcT5ofe0zcsmPPpcCJNB92GJA3PHgMbwZ9fzs80l2WKf+X1Zsd
ujeEGyXsoeepyBb7tGlVzVkTSd4Wcw+M2JxlH0/eFic+OhXYfTqZvA32GljQ
GeYlJ2+D9dIrPlGT5ORt8GTCrwUTipi3xpGatTtmayWQt8YXWWub4s2SyVvj
EdH2AJlKKnkrzIseHTt23SryVhjBL11i6JxG3grLJF6ppbPSyFvi+NDTrp62
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
BTu/Ad386aunpbqSXwQ+M7fqTKmYKf4vHdVedg==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Metabolite-Growth Cross-correlation\"", 
        GrayLevel[0], 16, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-4, 4}, {-0.5, 0.6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.924013756644415*^9, 3.924013768852667*^9}, 
   3.924123050125219*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"b7bf02fe-d9a6-489d-bbeb-0062d277bed4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp3000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp6000", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#79b2f3\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#5c98ee\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#407be8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#245be1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e45c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1c33a5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924013849193776*^9, 3.924013968021122*^9}, {
  3.924545422332579*^9, 3.9245455111806602`*^9}, {3.9245543768871765`*^9, 
  3.924554400692226*^9}, {3.9245545328225207`*^9, 3.924554592455695*^9}, {
  3.9245546293051624`*^9, 3.924554660238348*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"7db93024-8464-424c-9502-03b8e69685e2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.4745098039215686, 0.6980392156862745, 0.9529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.2262262397583907`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2262262397583907`]& ,
             TagBoxNote -> "1.2262262397583907"], 
           StyleBox["1.2262262397583907`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2262262397583907`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.3607843137254902, 0.596078431372549, 0.9333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.3107732524268412`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3107732524268412`]& ,
             TagBoxNote -> "1.3107732524268412"], 
           StyleBox["1.3107732524268412`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3107732524268412`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.25098039215686274`, 0.4823529411764706, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.4079250487199733`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4079250487199733`]& ,
             TagBoxNote -> "1.4079250487199733"], 
           StyleBox["1.4079250487199733`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4079250487199733`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1411764705882353, 0.3568627450980392, 0.8823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5227329827127556`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5227329827127556`]& ,
             TagBoxNote -> "1.5227329827127556"], 
           StyleBox["1.5227329827127556`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5227329827127556`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.11764705882352941`, 0.27058823529411763`, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6167798350385083`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6167798350385083`]& ,
             TagBoxNote -> "1.6167798350385083"], 
           StyleBox["1.6167798350385083`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6167798350385083`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                2.6206443088872393`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.6206443088872393`]& ,
             TagBoxNote -> "2.6206443088872393"], 
           StyleBox["2.6206443088872393`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.6206443088872393`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                1.6829432737245273`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6829432737245273`]& ,
             TagBoxNote -> "1.6829432737245273"], 
           StyleBox["1.6829432737245273`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6829432737245273`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.465359477124183, 
                    0.6352941176470588], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.6980392156862745`", ",", 
                    "0.9529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24052287581699347`, 0.3973856209150327, 
                    0.6222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3607843137254902`", ",", "0.596078431372549`", ",", 
                    "0.9333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.3215686274509804, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.25098039215686274`", ",", "0.4823529411764706`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09411764705882353, 0.23790849673202616`, 
                    0.5882352941176471], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1411764705882353`", ",", "0.3568627450980392`", ",", 
                    "0.8823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1803921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.27058823529411763`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07320261437908497, 0.13333333333333336`, 
                    0.43137254901960786`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.10980392156862745`", ",", "0.2`", ",", 
                    "0.6470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9245546393566885`*^9, 3.924554661296238*^9}},
 CellLabel->
  "Out[317]=",ExpressionUUID->"fc64a2df-cc48-4814-93fa-e872ae929f30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Protein yield\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92401403164473*^9, 3.924014053491347*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3dd7bf0c-89bb-40c4-aa11-4fe458585276"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.2219966052808435`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.2219966052808435`]& ,
             TagBoxNote -> "1.2219966052808435"], 
           StyleBox["1.2219966052808435`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.2219966052808435`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.3039337807923903`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3039337807923903`]& ,
             TagBoxNote -> "1.3039337807923903"], 
           StyleBox["1.3039337807923903`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3039337807923903`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.4050738778350105`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4050738778350105`]& ,
             TagBoxNote -> "1.4050738778350105"], 
           StyleBox["1.4050738778350105`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4050738778350105`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.5205511795399191`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.5205511795399191`]& ,
             TagBoxNote -> "1.5205511795399191"], 
           StyleBox["1.5205511795399191`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.5205511795399191`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.6211327842282843`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6211327842282843`]& ,
             TagBoxNote -> "1.6211327842282843"], 
           StyleBox["1.6211327842282843`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6211327842282843`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Protein yield\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240140548286*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"aabf90c8-ae31-42a0-b7cf-004cd4e8348b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp3000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp6000", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite titer\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#79b2f3\>\"", "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#5c98ee\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#407be8\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#245be1\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e45c5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1c33a5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9240141031120057`*^9, 3.9240141277669673`*^9}, {
   3.924545690162039*^9, 3.9245457285724607`*^9}, 3.9245548224485393`*^9},
 CellLabel->
  "In[318]:=",ExpressionUUID->"ccfd6663-7792-421a-af1c-d98c2d5afa64"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.644]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.4745098039215686, 0.6980392156862745, 0.9529411764705882]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.3375861091402161`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.3375861091402161`]& ,
             TagBoxNote -> "1.3375861091402161"], 
           StyleBox["1.3375861091402161`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.3375861091402161`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.3607843137254902, 0.596078431372549, 0.9333333333333333]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.4430008511173313`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.4430008511173313`]& ,
             TagBoxNote -> "1.4430008511173313"], 
           StyleBox["1.4430008511173313`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.4430008511173313`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.25098039215686274`, 0.4823529411764706, 0.9098039215686274]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.6124061679053645`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.6124061679053645`]& ,
             TagBoxNote -> "1.6124061679053645"], 
           StyleBox["1.6124061679053645`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.6124061679053645`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.1411764705882353, 0.3568627450980392, 0.8823529411764706]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.773940314101326}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.773940314101326]& , 
            TagBoxNote -> "1.773940314101326"], 
           StyleBox["1.773940314101326`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.773940314101326, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.11764705882352941`, 0.27058823529411763`, 0.7725490196078432]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.9187750071231306`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.9187750071231306`]& ,
             TagBoxNote -> "1.9187750071231306"], 
           StyleBox["1.9187750071231306`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.9187750071231306`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                3.50530486948415}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 3.50530486948415]& , 
            TagBoxNote -> "3.50530486948415"], 
           StyleBox["3.50530486948415`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[3.50530486948415, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.644]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                2.381387561462218}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 2.381387561462218]& , 
            TagBoxNote -> "2.381387561462218"], 
           StyleBox["2.381387561462218`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[2.381387561462218, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{8.451201747997086, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.39075018208302986`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite titer\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.644]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.31633986928104574`, 0.465359477124183, 
                    0.6352941176470588], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4745098039215686`", ",", "0.6980392156862745`", ",", 
                    "0.9529411764705882`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.4745098039215686, 0.6980392156862745, 
                    0.9529411764705882], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24052287581699347`, 0.3973856209150327, 
                    0.6222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3607843137254902`", ",", "0.596078431372549`", ",", 
                    "0.9333333333333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.9333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1673202614379085, 0.3215686274509804, 
                    0.6065359477124184], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.25098039215686274`", ",", "0.4823529411764706`", ",", 
                    "0.9098039215686274`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.25098039215686274`, 0.4823529411764706, 
                    0.9098039215686274], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09411764705882353, 0.23790849673202616`, 
                    0.5882352941176471], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1411764705882353`", ",", "0.3568627450980392`", ",", 
                    "0.8823529411764706`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.1411764705882353, 0.3568627450980392, 
                    0.8823529411764706], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1803921568627451, 
                    0.5150326797385621], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.27058823529411763`", ",", 
                    "0.7725490196078432`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.27058823529411763`, 
                    0.7725490196078432], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07320261437908497, 0.13333333333333336`, 
                    0.43137254901960786`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.10980392156862745`", ",", "0.2`", ",", 
                    "0.6470588235294118`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.10980392156862745`, 0.2, 0.6470588235294118], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.644`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9240141290575523`*^9, 3.92454573001794*^9, 
  3.924554823919973*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"de11f3ae-2ccd-4458-a7b6-917af9cb24fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "/", 
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "9", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Metabolite PRODUCTIVITY\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.924122940645465*^9, 3.9241229673455763`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a4d1b31b-36bd-41c0-a90c-689e3863fef3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6579999999999999]]], 
        RGBColor[0.982864, 0.7431472, 0.3262672]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
                1.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
            StatusArea[#, 1.]& , TagBoxNote -> "1."], 
           StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
           Style[1., {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
                1.079455456499122}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.079455456499122]& , 
            TagBoxNote -> "1.079455456499122"], 
           StyleBox["1.079455456499122`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.079455456499122, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
                1.088164576252414}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.088164576252414]& , 
            TagBoxNote -> "1.088164576252414"], 
           StyleBox["1.088164576252414`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.088164576252414, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
                1.1237982382370726`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1237982382370726`]& ,
             TagBoxNote -> "1.1237982382370726"], 
           StyleBox["1.1237982382370726`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1237982382370726`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                1.1493134429388874`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1493134429388874`]& ,
             TagBoxNote -> "1.1493134429388874"], 
           StyleBox["1.1493134429388874`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1493134429388874`, {}], "Tooltip"]& ]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6579999999999999]]], 
          RGBColor[
          0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
         TagBox[
          TooltipBox[
           TagBox[
            TagBox[
             DynamicBox[{
               FEPrivate`If[
                CurrentValue["MouseOver"], 
                EdgeForm[{
                  GrayLevel[0.5], 
                  AbsoluteThickness[1.5], 
                  Opacity[0.66]}], {}, {}], 
               
               RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                1.1613638201008425`}, "RoundingRadius" -> 0]}], 
             "DelayedMouseEffectStyle"], StatusArea[#, 1.1613638201008425`]& ,
             TagBoxNote -> "1.1613638201008425"], 
           StyleBox["1.1613638201008425`", {}, StripOnInput -> False]], 
          Annotation[#, 
           Style[1.1613638201008425`, {}], 
           "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny], 
          GrayLevel[0]], {
          LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny], 
            GrayLevel[0]], 
           LineBox[{{0.5487982520029133, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 
              0.}]}], 
           LineBox[{{6.451201747997087, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.43075018208302984`, 0.}, 
     AxesStyle -> Directive[
       GrayLevel[0], 16], CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Metabolite PRODUCTIVITY\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                   "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.924122968858141*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"5b1c883d-ea60-45ed-a910-84016d78b5c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oltyp", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp1", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp10", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp50", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp90", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp99", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp3000", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"hptyp6000", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<10xMean\>\"", ",", "\"\<20xMean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<protein titer\>\""}], " ", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9245308376901712`*^9, 3.9245309241778307`*^9}, {
   3.924530954651969*^9, 3.9245309682937803`*^9}, {3.924531010923421*^9, 
   3.9245310440215554`*^9}, 3.924531156838972*^9, {3.924531481616082*^9, 
   3.924531504450596*^9}, {3.924545534510494*^9, 3.9245455433775997`*^9}, {
   3.9245549230326257`*^9, 3.9245549314133034`*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"b5ce1fd2-b1aa-40f1-8ea8-2d417774fb0a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1:eJxdzH9MzHEcx/FvtxwS+iUk6bq6u65f1++2zPfdZf4w+V0Zw9hyyZbDETGF
0cqPrRkxaSM1vs205Efq5mctyzLat00qGZcfIZWW2vy+99Drs3333Xvvx/up
Wr95aZpCEITCX9/v///PWOqbkPzn1YvXz1tqH1m2Ge2zLMqlq6teHTxgtMsu
sWCte1qf+RjvbeKW7j3i5XUnjBXS7/derAvcFH91czH7z6JZvaDd2+k87/vF
ksGtsztHyvh+UHxuzPMrXyOx/yoOtkZ876i8wn5E3BXWZmu5V8X+m3grKkfb
2XONvUDOSbnXMpfX8N6BUtOtVpcYK98r6OZZ48VZD+6wd6Sul1mZq5T32Y8h
16e7FzqeqWevpGpDYXbppUb242iepz65vLWJ/XgKGMo0VZofs3eiuHPK+PyG
J+ydyeZTM8E83MJ+It2evzX/2N1W9pPIVL5z0Y+0Z+xd6Lgua1iMbee9CzWk
mhU9h1/wvSvpd+w3DRx5yd6Nanpzehblv2LvRl3ZS+bk9dvYu1OHc4IUl/+W
vQclXTi513Koh70HFfko0++UfmI/hRrqBiqzPPrYe1JS7+Mbc10G2HtS9cod
70zhg+yn0pRGB1N31RD7aZRi/bC9bOcI+2lUFhzfnHH0G/vp1FRsWdG8QUi0
ey96rXJrit+oSLR7L9pX8b3kdIZjot3PoGc3Fn441adk702WjwtqTiwbz96b
UlJN2WOXO7OfSbmTv2gOFExm70O33yiKahe7svchXdv0h156N/az/s527wv7
f7P93he8CrwKvAq8H3g/8H7g1eDV4NXg/cH7g/cHHwA+AHwAeA14DXgNeC14
LXgteB14HXgd+EDwgeADwevB68HrwQeBDwIfBD4YfDD4YPAh4EPAh4APBR8K
PhR8GPgw8GHgDaP3egPcG0b7XPASeBm8EA79cOiHQx+8BF4GL0RAPwL6EdAH
L4GXwQuR0I+EfiT0wUvgZfBCFPSjoB8FffASeBm8EA39aOhHQx+8BF4GL8RA
Pwb6MdAHL4GXwQux0I+Ffiz0wUvgZfBC3N/5Jyy/ETw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614]], 
        LineBox[CompressedData["
1:eJxdzg9I1HcYx/Gfzv95p955t0ptd+fpeefdeXr+i2C/Z2dZLlhkaX90IxxO
s5wWFCqBc26TlsuJpaXVGI4avwlGKLZBtmXWHDV149fcCM5S25jUUitMsb/3
UOvzheN4eF7Pm5++oCy70FsQhManv2f//3+udt1bOc9fv7h38osyCtrl8syy
OLN37s32azUujxwV3f+51TubD/B+QuyQ3nesMjW5vpOevX/Fn8ynhR2RR9nf
FVfU/9JTfe0r3k+LeQuPA7/RtvP9fbFmffbuD1pPsp8VW29+NnSsW2I/J2p6
0ouiUjvZL4gXrZZpZcIZ9gKVNk8VB3d38d6Lclf3WQu29/C9N5Xc+nbIWP0D
ex+q+Lq8JPnSOfa+tGHzdNtc64/s/ehSrZ8ru+UC+wAKubP201+HLrIPpO3q
svUfpl9mH0TvKepMDe4B9sFk6+y0VwxeYa+gAzsfrFSPDbJXUnnWvS21+4fZ
h9Lo/ImNltzfeR9Kh5TOzGizzPdhtLXEVeOf9wd7FUUMdTsC5D/Zq+iq4oiq
cdN19mpacfBRV1Osm304bW18vCZad4N9OBkyK//e13eTvYa68o5HjtePs9fS
RMAno0v23GKvpaNjtub+9n/Yv072dR8He2km2S8mhbVj/+622+wX08/r6uof
2e6yX0Jlh78s7eydYr+UzuZW/LYxf4b9Urpjjci/p7rPPoLkvOGByukH7CNJ
UWr+Xgx7yD6SZi4fMccUzLOPom1Zfu/MTi6wX0YR+kO6p1+X4fHLaPmmvrGG
Xq8Mj3+DaqsWclRFr2V4vI52nWkprVvuy3sdFY07C3fY/fleR5qHIYbz0YHs
9eT6a1CZ2byIvZ5un7b3jwQp2eupQ/u5z7aqUPYG2nDB/faEt4q9gcLOFjdF
nVKzN9CAceRd/1wN+2g6eLK1ITxTy/7l7PEvZ483gjeCN4KPAR8DPgZ8LPhY
8LHgTeBN4E3g48DHgY8DbwZvBm8GbwFvAW8BHw8+Hnw8eCt4K3greBt4G3gb
eDt4O3g7+ATwCeATwDte3VsccO941X8EXgIvgxcSoZ8I/UTog5fAy+CFJOgn
QT8J+uAl8DJ4wQl9J/Sd0AcvgZfBC8nQT4Z+MvTBS+Bl8EIK9FOgnwJ98BJ4
GbyQCv1U6KdCH7wEXgYvpEE/Dfpp0AcvgZfBC+kv5ieYDkPY
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922]], 
        LineBox[CompressedData["
1:eJxdzAtMU3cUx/ELU6IMXHlZ5GVbHqUvWkqhLgzvKagJCWZKZKjZfDAYxMeQ
zSwOE5TMseyBCEajzhkim5HrMD6mLo5pmGEgEuvCLosrC1UwgBNiJxOHq/jo
iZu/f3Jzc3I+56suKs8v8RcEof7J9/T//5fdpHIUPHvt4rmu4saz/ZuyfbMs
eoKMrx25UJ3tk24xsKM4M0HzOe9vif8M1r3a3t2QfUx6+m6LJw33Zfu8fezv
ivtzK60hZYd4/5e40PT11XuVh/n+b3Fwp9JQ7X+E/QPx/Iq5Hd01zewnxUNV
tsb+iy3svaI36qC6xnOCvUBl6fWbdpee5r0f9W1soU7dWb73p2r324UTU9+z
n0Zrl4/MqYxoZT+dhqOOVnzz+kX2AbQorOJ3ra2N/QzqzFtzYLvpEvuZNPzO
1tJ3s9rZB9Kq/DalvqqDfRCV6x3zzTcusw+miThDkd/mbvazaKC57IdlFU72
CmrKLbTcKfqF9wpq2fXvmanpPXwfQpVjW4Idw7+yD6VtrswvhcFe9qEUsjTr
ekL0dfZhZN0Q2rX4Axf7cKpOftR6zvUH+3DaMWtr7OLVbvYR1Odav2TIeYP9
bOqp/3mzYtUA+9l0wnNwZZ7+Fnsl7XT/ZLHFDLGPpJU1rZdeFkbYR1KO+1jj
uPpP9nNow+j7Vbqro+yjaF1tt3rMeJf9k7luQtHb4GEfTWkNYR8NBN9jH0PN
4tidUdc4+xiaXOcS1Rfus4+l4g9vX2n/8QH7ONK+tCjr26lJ9nEkRhr2eEu8
7OdSp330qzM9U+xV1Lb04f4rhX45vr2K4hXRdZ/c9M/x3ato45tvxfSfmpbj
82rSf7p+gbc2gL2aPs5fkmctncFeTeW2+Qu/yA1kr6GZO5wrDIeD2GvIYWm6
6dS+wl5DtRHjxSqPgn08fVawq+v4G6Hs40lT4Dj5XkA4+3j6Lrbk8si1CPYJ
1Nv0W5+5Rsk+gcaPDu3NdCrZ/zf7fOLz2ecTwSeCTwKfBD4JvBa8FrwWfDL4
ZPDJ4HXgdeB14PXg9eD14A3gDeAN4I3gjeCN4E3gTeBN4FPAp4BPAW8GbwZv
Bm95ca+3wL3lRb8dvAReBi+kQj8V+qnQBy+Bl8ELVuhboW+FPngJvAxeSIN+
GvTToA9eAi+DF2zQt0HfBn3wEngZvJAO/XTop0MfvAReBi9kQD8D+hnQBy+B
l8ELdujboW+HPngJvAxemPd8fgzmHMac
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]], 
        LineBox[CompressedData["
1:eJxdzA9MlHUcx/HnTogENTyPvyfcHw7vuD8cxx3HraXPN2giDmdjuvVnWatB
aIsynQ510VqJDrSZtNkSFtKxeiDnWgLeFK242JrkRJ/DXJKA5J9FgIhwMLqy
+y7z89uePfvu+/q+9a++VVqmFATh0D/fg///X0Gz7umN/76AuLVB7/tS805B
ZJbFJ/Z0DDcVvV8QkdfF4ZKEM6F9dbwfEa37O3O6TIcLWqUH7464RigMKWI/
ZT8uWp3b9DNvNvL+rrjjmCH0wVPH+H5KlNtspWt3+djPiBt3184dNX/FflZ8
6WL4lXWBNvbz4ufNifXtVSfYC3Q57flJX903vFeQJmb1yvq4k3yvpKK48bLe
tzvYR9HWyt990ot+9tG0prrm3o+vn2H/GCnKPRVF68+xf5wUp/sVc9Hfs19I
n7iejfH0/MA+lsa8t7o3dwXYL6LBGnFi540e9oups9x3yZn8E/sl5Pg5vWqs
6Tz7eEpuXdLbWnqB9/HUGUttevVFvl9KteaVtabGPvYqcnuSPqpZe5m9ikal
1VQSFWS/jAIHz9rPpl5hr6bz5Zl7J2xX2avJ2L5CsFX+yj6BjF3Ov4LdA+wT
aZE/tt7Wfp19IvXXS9W+rCH2SVS803ukrnWYfTJVTM+GU14YYZ9MDXsz9q/K
vMk+heRxY/uq0C32qdR3qSJ4ZOQO+1RKLZ5K+005yl5D3nta7YVdY+yXU+OB
zu451QT75fTFtuCmji132afRgd0bEmpuTLJPp/6jvS3Ht0+xT6fp+YFhrWma
vZb6po9f26MKsdeRjZSTV+xzvNfR5ODpDU9Wz/O9jpqCLSfHr4XZ6+mz2fu3
v/UqCiNeT5sNunfdDcrCiNeTbyDcEaWOKox4Az1jP7hvmS+avYG6Sv7091TG
sDcQ3Zzd4diykH0GlX39ncZ8KI59Bg3dN69LOreYfQYt+DB7pmpBPHsjaQ1l
mk3PLWVvpNyWX/JHT6nYG8n/xxvbb1vU7DPJVRl8rdmXwD6TzO7mq0Prk9hn
0uDLgVNOcwr7FVTsbzkR/jiF/cM54h/OEW8CbwJvAm8GbwZvBp8FPgt8FngL
eAt4C3greCt4K3gbeBt4G3g7eDt4O/hs8Nngs8E7wDvAO8DnPLq35MB9zqP+
PfASeBm84IS+E/pO6IOXwMvghVzo50I/F/rgJfAyeMEFfRf0XdAHL4GXwQtu
6Luh74Y+eAm8DF7Ig34e9POgD14CL4MXPND3QN8DffASeBm8kA/9fOjnQx+8
BF4GL3j/m/8G6gyy1g==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]], 
        LineBox[CompressedData["
1:eJxdzA9Qk3UYwPHXGaI78AaMMSYBAwZsDBj/Nqqz99lQOJSQk3HoHaeVYgVy
g6AsSdI6LvIPnR6kdmmU2uHLgSxaURYRSqQHSIx3miZghOk0j4GAOJCyPWf5
/O7ee++55/N85S+a1uYLGIbZ/8/38P//ZzgWrM/593WyL7xV7AxzLzG4Zp6d
MF1yTzm2y+CSw+zasTZZT/tu3I+y0u823+K2HzA0cA+fnT0/2ThtKzmIfow1
nlJO9Dg+xv04u0pcc+Plkk/xfpLtqJVcW153HP099tpzUffLPevR32cfGC1B
P+5oQD/H1tpk3n3GU+gZSAtyNttbzbhfADtPppa9PtiC9wIwcxXVkdlfoX8C
8rPEXRnft6J3A/8Hm9M2mU6jXwSHNqzsnc5oQ78YFr6RZZo73I5+CbS6i6aa
nupAL4TsjVvr+Ikz6D1gY7nkr4NnO9F7QsJvuXn8z13ol4Linf4vLsydQy+C
exkVn72q68a9CC5YfxnvauzFey8QX6x937e+D703/JG+pv5br3703mDptbZ9
0GhF7wMhOT7l5mwevRh+Kt1TOei0oReDpXH3lsKpS+h9wdp5ZiRcfAW9BJa8
ZLqlfuYqeglcz5WtV1UNofeDspWxd3NvDqOXQv9w/nrRit/RS+F0mWT0w69H
0PtD9YGbQ7IVo+hlkGn9s48fuY5eBrNFxan6b26gXwbJyZuOTjbb0QdAQVqN
oarlNvoAONkxekJ/+Q76JyEzq6Io+qMx9IHwZnn37NB5B/pAmN5W6tAETqAP
gjt5hSJd5V30wWAzbug9J57CfTDMd7xn28NP430wCDyF3eOWGfRyeD6vZvWv
FU70cvBpb5rfd3gOvRzUjle2F/TMow8B5a6Aq1X+C1JcPgTsjqfTP18nSHH5
EDjbY6xcY16Y4vKh8K5ZkHNI6IY+FNb5aI9aji9CHwonPhnQ2lIXow+D4ovL
k9TuQvRhcPu1oplkdw/0YeDbNLP3S7snegVoGn6YMitE6BXgN5tWLcz0Qq+A
y8ojS/fWeqMPhwjn1gE9I0YfDm/rrwynb/NFHw7jbqu37JD6oY+AOg9LvnhA
ij4CSvf3yQtbZOgjoKD5Wflg/TL0kY9ml/9vdvlI4pXEK4lXEq8iXkW8ivgo
4qOIjyJeTbyaeDXx0cRHEx9NfAzxMcTHEB9LfCzxscRrHt+rNORe87jfSTxH
PE88E0f6caQfR/rEc8TzxDPxpB9P+vGkTzxHPE88k0D6CaSfQPrEc8TzxDOJ
pJ9I+omkTzxHPE88k0T6SaSfRPrEc8TzxDNa0teSvpb0ieeI54lndKSvI30d
6RPPEc8TzyQ/mv8Gwfh5TA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]], 
        LineBox[CompressedData["
1:eJxdzA9Qk3UYwPF3GDRsExzj7xhssPFvG/+2AUnxPoxOOyLuwHR5CpFdcWkd
V+qdnEbFIdYusWWLs+xQEIm3NBE7YdKNIhQMuazeYiGICB6QAk7odghatucs
n9/de+8993yer3JzWeHLXgzDWP/57v///0wNiux1/75uVr52WmgrfMPkmXn2
wL4Srtb+rskjR1h56kC1f6YF9+Psjif62Ox7VtOX3P03xe4qX3NyNK0W/Sw7
n3VMfrjxEO5dbLc9+vxLwUfwfp7dudPcvqe3Ab2b1QW1XRFLmtAvsEf7C09s
f59Dv8TWvdC+ae34cfQMFLkvPxkiaMG9ACZUL/p8HdCK915Q+VqG7XPzN+gf
geqPii3rj59B7w2G8cV7w3Pt6H0go1ZmNb/XgV4IpfNbz80VO9D7gm++M1Ai
/Q79clhhc34o6PwevQjKt1fxFvMP6MVQcr5JfFB9Dv0K2L277bAgsAe9P3z1
+NRwc8AF3PtD1PCi3zp5H96vhJEbmrvJ6/vRS6Dm04s1raU/oZfAkRztycUf
L6EPAJ/8ycaGlF/QS6F3kqsyH/sVvRSGZLdPnc7+DX0gDA793M/c+h19EGwT
zzXt6nOiD4LnrWNP5/UOog+GFqNx78zCEPoQsNimt+kiR9CHQM3G0KylzKvo
Q2FZxZYSxZ5R9GFw2bH6atvINfRhcI1vtNVvGEcvg0LHq0sdzuvow0G+QXRQ
+eYE+nAwTHbPtGim0MvBK+K5bL30BvoIEL1VtIZRTKOPgLYyoc6umkUfCZu1
+e6ZvFvoFaAuCN5xosaFewUUKGWRmcO38V4BRSO5rwyZ5tEr4XrXacdQ11/o
lXDorKjibLEbvRLYnqIEu3gBfRTw5Xu/cE3cQR8FrR+/fmDpyhL6KPgso1qf
5MXkeHw01KucF7aECXI8PhpKLZVhuWqvHI+Phk3iiYrGqmXoVdDxjO0MCL3R
q6DE2vn26mYf9CqoXhUZKn5KiF4NFpU9q3nBF70aRFvrA5b3PYZeDbOlftaj
DjH6GBgL75ENOP3Qx8B+16U/7zy6En0MmCp0q/LiJOhjQX43Ul9XFoA+FgYq
n/2k9ZQUfSx0DU45x+KD0MfB/s6LDRsdwejj4KbkDzeYQ9HHQe7NpMQIVxj6
eCjgPpiM+TYcfTyMttZ5pxbL0f83e3zCg9njE4hPIF5DvIZ4DfFa4rXEa4nX
Ea8jXkd8IvGJxCcSn0R8EvFJxCc/vE9IJvfJD/t3iOeI54lnUkg/hfRTSJ94
jnieeCaV9FNJP5X0ieeI54ln9KSvJ3096RPPEc8TzxhI30D6BtInniOeJ54x
kr6R9I2kTzxHPE88k0b6aaSfRvrEc8TzxDPppJ9O+umkTzxHPE88k/Fg/htK
/mBI
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]], 
        LineBox[CompressedData["
1:eJxdzA0w1HkYwPElr4cNeVkv2V1rX1gv+4bMDfvEuSulC+lspYumudBdxSmZ
60537jgUWr2gULoKG6W8XEKUIiGdFUloSd7ymmo7ddftM9fd/mb+859nns/z
pYbu9N+mSiAQ0v/+3v//+zzzKcsD/3kNQsj8sl64aZenYpYKhz/zVInIifNU
yH4heUeay4nuRNwPCZ+J4v3SOtI8iwrfv1Hh5Sftr7XGM9BPCVfsK5ltDsvE
/YyQE2caOLguB+9fCGsfNpVfjTyF/pWwkh//dmQiH71cuEZ/vm7lwbPoF4T5
dLFMQitAT4DfQit0RVlFuFeB0m52XfSZYrxXBcpKfnj+tYvo1cB38PYKM8NS
9OoQky4y1su7jF4DttWtfCEhl6HXApN2CfNCYTl6bag0/bzTx78S/UfgFRC7
hke8il4Xbu73lV+7XoVeD8rWmhn6SarRE4EhF7cafF+LXh8MR67cyyq4jnt9
qGzYsjaqog7vDeDNZM6hhpp69IbQ9l3Eam7XDfSG4BvO48WM30S/BK6Uqz1I
sbiF3gi6CSdvUX1vozcCSXghmZzaiN4Yiow3sXfXNKE3gRhIfl7EakZvAo06
VeLQlLvoTYHqtD7ZVLcVPQmgb/p8/dE29CSYrpfuKM64h94MthZLEuYj29Gb
A2+iV+i75T56cxCQSQlytz/QW0D5nqZibdsO9Jbw7dBeCwMbKXpLCA7uqdhH
70S/FAaD/BbV2D1AbwWE3jyrMo8u9FZQlZKt7RzRjZ4MHrLRPdEVD9FT4MQJ
B7v4yR7cUyBQ51FLKLMX7ymQ0NGyc1T8GD0VfEonx35S7UdPhT3bxH2VV/vR
UyFRJpC1xQygt4bAHBJ5xPcJemvYeiNjWTBJht4aAranBQcMyNDTwFCacyi9
ZBA9DQacHj9eyB9CTwOzsGFL1tGn6G2AdkRtY8nxYfQ2MO+tNiDJfYbeBtxE
u3UPlY6gp4PcMjbWu2UUPR2cmme8vnk3hp4OPjHHPTo2TKBngGZIvLf7hefo
GcDoeVnRRpxCzwCr2qGuqbop9EyQ0Sky9bhp9EzozR7ImvtkBj0TQoafGu8l
zqJnwemQA5T2/ln0LLAgnjG/WT+HngXZ7lWbxRdeoLcFs/Olh9PE8+ht4dda
P72DSS/R28L43XiS80+v0NvB4FfFJ6uTX6O3g8hH61Nis+Xo7eAhFMzZ/v4G
PRsq2BP2Jr1/omdD6qqI2nnzt+jZcIn1Y/Cuje/Q28OnnesOdogIXgpvD1q5
0esTjVS8FN4ekqyW57p1qngpvAOwPP1mNLJV0TsAl7ng2L99EXoHiGKLWxs+
VkPvCMRzYyUluuroHSHiVN4XfnJ19I6gTbhj7/BEA70TpFb2FN7t0ETvBPKI
Xp0b41ronSD4HsV796Q2eg6wEqNLNdV0FHs7DoQb/7DJjamL9xwIWWIp0Vit
p/BxHJhjLKj6pxOxxwGfAPe3v1QsVngpByRBNXlRifrY58LY0bAFjqsB9rmw
8diGGvK4Afa5sHmm0ftcqSH2udCRSZR5HFiCfS5M7AhwJAUZYZ8LDjGXGu+s
MsY+D0y2zIousk2wz4MMG8LLZntT7PNga0FRVh+ZhH0eBPrTylwoZtjnwdi8
u6PQyRz7PJg+si+VLrLAPh8SmJcDMr+2xD4fFg8cn//57FLs8+HS82RS0oQV
9vkQdJh5OtKMgn0+dHlKlrr0UbDPB99qTtv9FCr2BXCFES60XG6NfQF0ZbL5
ZE0a9gUwFts9rt9Bw74AukcuEkm5NtgXwP5H3q30KDr2BRAt0lszEsbAvjMk
VfNKmoKZ2HcGUy71mHULE/sfZkX/w6zoK3mpkie4/N/buSj1XZT6Sr5QyUuV
PMFVqe+q1HdV6iv5QiUvVfKEZf/OfwGnPXCr
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]], 
        LineBox[CompressedData["
1:eJxNzHtUzHkYx/GUUi26qjSp6X6bpmmuIfv71BAmFmFjlaWTUCl23Z0QRSGM
I6uyLicqQyKTXLIKRW5hipTLVFRauWTShdi18/yxzzm/8zvf87yet2NkQugC
XR0dHfm/3/f//ycohx0487+pYJ5tSXa/bLYsSPuuZY5XfVLUj0kK0ko1M3uZ
cHXB8jTav2KM5kwZd9JSHnRC8X3amS1tyl4gg/x7hjXq9Y2ahEzadzLy3KzD
Bff+pPsuJtdCMyna9wj5Huaaf0r8olU55PuY5uDF1voXjpHvZ3ZUVdSt8s4n
r4P1nSuqN8YqaD8A/jkTtpY8P0n3usiIGb36ekQh+YHotRwftKXzNHl9pByv
/nreq4i8AU7JBe2CuLPkDRFfb1jzsFxJ3ghjsx5M7hadI28Mh8MbU+YeLSE/
GHpvLD183C6QH4Kvu6znMwcvkh+KrAsB8UUepeRNoVoX5dFYeZn2pvjNoK90
7sQrdG+GZU1rR3QmlJE3R55s+sU4UTl5cwTblB9lDK6St4DxreGazJar5C1R
fL87PrzmGnlLzKsVD3x25jr5YfiyNLGjt7iCvBVWv/s5++DVSvJW4DiHuLJu
3SBvjX0ry45kt9wkb4M4Dnt9clcVeRusurZHeNzwNvnhKNj3se+S1R3ytmje
23glPeQueVsk6v1+KHnHPfIsVDuMfcd9WE3eDsZ7YyLvpt0nb4eY4ip+he8D
8iPgvDUua1rlA/L2mD1j/2Of5Q/J28Ok10rZ660i7wDlk0MnWltV5NlYZmMo
W6SsoT0bS9sg/iu1lu7ZyJtePGvM5EfkHREUJV0kc3hM3hFY0HcpuvsxeUdc
XjfvCFdVR94J6mS2c3j5E/JO2NYzYeV2ZT15Jyg78w5uLmgg74yQDPH8Rwee
kneGpO521Pr9z8g7Y5T7iK0Ofzwn74LChBnvA0pekHeBSr1HHrFITd4F7FbP
XVM/q8m7wjbrp7AhexrJuyK13fzeMHETeVeku7JiXz9tIu8Gk03q7BeJzeTd
YFTE/jFA+JK8G/iJv0xrffuSvDtOlRU4cXJfkXfHzsaSoYqEFvLuaO9PVpzk
tpL3wMKpU6RcvTbyHrBbzXUxVLWR9wDL2H/O6bzX5D1Rqr6TsS2lnbwnGsb3
lMlj/ybvievpTYmfZW/IeyF/K/NBzOkg74XdXjEye/e35L0wNSxD+szuHXlv
XGkY7bvK4j15b6TtPJs1MPM9eW9Mj5Kmsj0+kOfgVXjEI97ZD+Q52D1XNLJw
Uid5DvjK9tJ4TSd5H6xxZu9ozvhI3gcKnXquoVBD3gfm+/KzDnRoyHOhG5hZ
lJbVRZ6LyR0KuEz9RJ6LGs7L5HMW3eR9Eb09ZMOgqm7yvqhwYy23kPeQ90X+
ycikhoW95HmwuiRjK4P7tHsvHtYEdC1Pd/lM9zwEvVgj67L7ovUbeYjRLy5q
M+mnHg8TO0J2rzX+qvW1PKyt+9YwSu8b9f1wqjAqktHVkWr7fogQKNdvSNKR
avt+OFFadvH8oAFSbd8PXa2psdfkA7Re4YeVAfr2Qba6Wl/rh3eDLecYl+hq
vQ4f89/Y7aibrUd9PqJ/bRxX36NHfT7WaaqTNZkDqc+HcuQSWdJYferzkSyO
jYvr1Kc+H813UodqCgyoL4C0v771ZuQg6gvwqOp8eIq7IfUFmFSywoj3yZD6
AvjNDFN53TaivgCsN0v7k/YbU1+AvrpAbuWKH6gvRJn/mZ2JYYOpL0RVKpPj
xhtCfSE8Z4X7jncZSn0hTGdHsaJcTagvxK6Ip0yLnSn1hQgMTUt7kWdKfRE8
JGscl0jMqC9CxOudx0JvmVFfBHmtyRL1DHPqi8A2Dddd2mdOfRG21WxTKw5Y
UF+EGO8Nja6wpL4YmwtzjZguS+qLkTJY1X3l6DDqizHrlvscTqgV9cXoLzfL
uaxvTX0xXpYIs8OU1tQXY9/mHw3OJdpQX4LKnGPBzhOHU18Cm8XRroksW+pL
8Cld49Xy1pb6ErR43pUdULGoL4FxyKa8phw76kuwt3/Y89jsEdT3Ryh7cdlT
ub30HwBIjNQ=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.7281045751633987, 0.861437908496732, 0.9790849673202614]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.592156862745098, 0.792156862745098, 0.9686274509803922]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 
          0.5254901960784314]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"protein titer\"", TraditionalForm], 
     PlotRange -> {{0, 24.}, {0, 3.3497364562310515`*^15}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"10xMean\"", "\"20xMean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 
                    0.9686274509803922]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4854030501089325, 0.5742919389978214, 
                    0.6527233115468409], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7281045751633987`", ",", "0.861437908496732`", ",", 
                    "0.9790849673202614`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9245309487182508`*^9, 3.924531048848817*^9, 3.9245311585877223`*^9, {
   3.924531500396373*^9, 3.924531504946655*^9}, 3.924545555291422*^9, 
   3.9245549334992933`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"25fc01ff-3cba-4d65-8a50-6dabca112f14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"oltyp", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp1", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp10", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp50", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp90", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp99", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp3000", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}], ",", 
     RowBox[{
      RowBox[{"hptyp6000", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "/", 
      RowBox[{"10", "^", "16"}]}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<metabolite titer\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Openloop\>\"", ",", "\"\<top99%\>\"", ",", "\"\<top90%\>\"", ",", 
      "\"\<top50%\>\"", ",", "\"\<top10%\>\"", ",", "\"\<top1%\>\"", ",", 
      "\"\<hp=10xmean\>\"", ",", "\"\<hp=20xmean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Lighter", "[", 
         RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}], ",", "\n", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92453143524802*^9, 3.9245314437360506`*^9}, {
  3.924531511550308*^9, 3.9245315253844233`*^9}, {3.9245455808734894`*^9, 
  3.9245455858759975`*^9}, {3.928604762825179*^9, 3.9286048394130926`*^9}, {
  3.9286049917160616`*^9, 3.9286050094783945`*^9}, {3.928605090956458*^9, 
  3.9286051610046062`*^9}, {3.928605276161248*^9, 3.928605321560145*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"f64539da-c505-462b-98d7-c27237034492"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd1AlMk2cYB3AQMYTBwhiHiDCbCZsoE9ygMF/3IghhTsY5wgKKSokryCFO
ZQxF1hYUUYrIIEOOwkRWkFNouSqWewVpqZZjtm4cMdQLvHWDbuP90iehSdP8
0vb73u//HLSDCUHRq3R0dHL/e///ufIlD+e20ehHkWNMSXYDezsmZiG9nO3F
r+f24I6z4wWNo9loMd0lnj8XSn2fh+iH1hukOuzH/UmfbVKvLkQ+Zp3hgQnR
1O8vo3Ml7zskbovFYQFfsHZIy5DLY56BZU8i9f8KZGGZzmn89nvsd2hqQb/k
CsovbfSa80umrleFhjXTC1JxKvY8lbH/ViwfyYzVj3ZPn6auX4OOhAU8UvBY
mJ7vMPKzex1ac7VIGV6XQd2vHs2fYDc/e3kWW4TeL6nTa0RdXi78sV/OU/dv
Qq/dYyVWKi7mHnBX5MVcR2cnHOcX7PKo8zQj/rFSU29hPjaMO2ecLGtBrDiG
4MCFQup8QnT/YlZvV10R5iQrd0W4taLR9waN2Pal1HnbkJKTPrbA5mENa2uq
R2k7Wgp09vCsr6DO34FOScsfLJpW4h9y0ps2rhEh0aSHUVl1FfU8NxAnK9Ag
NKMapwwzj7Fdu1DaOVrPYkct9XxdyEDX+mmSUwOmy01zXzJvolnmIjfVtYl6
XjE6qTwye/pkM34+3l7zXbEYiRiFB3lvBNTzdyPa/LVIRnsbblAxBial3Sgl
wT3qV3EnlUcPWiucyGRc6MIJM8Yze1b3IlfHkJmRBDGVTy8qsM3WW3++B29R
t2hE9D4UmRmgj2b6qLz60NGOF1WiHwfx3JNIa+fYfvRKcm/zwL4hKr8BVJTA
1NtyYQRXvjCgV5QMIPtgo2/MLsmoPAeRE/dhtTlXjqP+bggyHx1EVrSNEtHN
O1S+vyNZtGDgk23jeINueHymvgQ5NbYwvlJPUnlL0NVR6fR1xl2sWrM6643b
kNYkf3CR0bUrsYeHtSb1uKV1mGnoTWUpmNRnRGvztZq7/nIwqZdU67l3Q/7Z
zwKT+oEHcj82XGcjg+sv1xNcabZoKW8Bk/qOas0pkNllB4BJvcFR6yo/9VaD
Sf3lWnsWp+xcYoFJP4BpG/z9BTa3tSb9AdaUf7g3UQAm/XIH8rd7HbMpEEz6
B9xRNZQ8pQaTflJAfTbzMorYYNJf4JTaY5dCbMcg7+V+A4c57y43FoJJ/41D
3tdt6/sCwaQfweb0Z51pD8CkPycg79Z+iRsHTPoVLEeXJxZsJyHv5f4FN9xI
vM8Xgkk//wF5e3q/iAoCk/4Gx/da6dk8BJN+vwt5+z42UXDApP/BmyVi25wP
lCvmAWz4dcEW31YwmQ8V5C2N/Vw3GEzmBdwf7OHb9hBM5uce5K0wCz2aASbz
BBbXPHe2MPlzxXyBnR+rhE8jwGTewLytg3jkNzCZP7DJkaa+6pdgMo9/aZ3W
WOx3xgtM5hP85FnmbQYXTOYVvM8lKXynEkzmd0rr4eMRUzYOYDLP4B1CH+bb
42Ay3+CaN07zim4wmXew9XbrE00m0yvmH5yVqr+UsxdM9gH4becT9mE+mOwH
MFMz8c6Xr8BkX8xoPe7Rc9FuF5jsD7DvT7VWq3LBZJ+ABd2FZSolmOyXWa3t
9VkftTuAyb4B5/vE1RacAJP9A/4XfCsLxQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd1A0wlHkcB3AqvSg3pqMOx2lKl2gcvWzl1/2llLtKUuc0K0pKWkSiUnpb
dO0pu4dosFmkSJY2dr2LvN0Wm62NYnN6396LLl3Zu+v/zP5m2pmdnc/s7vP8
n+/vZUrADq8tI/T09AT/vf///PKlZPMrp7AioXK48Ll0hzOh5oJbgKFHSM9K
Un2sK+1iZyIkh57lnZd6M98nQ0Wfm7Otyp+07JxjqxmVDhL++te894HM7zNB
62BXkhG7nfh4/shdpMiGgmmR1Q/twpn/58L0TXG8CJ9Isiqo/7WB8AzU5zs9
8FBFM9c7B1f8vTI/iWOI64GEje2cQtCPjRti3TnAXL8I2IGPPXMKDxNW6syO
kwvE4B05MCizjmPuVwIrTJ/PzWtPIJO8HwnFIy/C6a9bZliLjjH3l4Cn70OY
J04k/E0LVMnbL4H4kP/GfeP4zHnKYMmgsu7tEwExDP3daM/1cuDcEztMHUhm
zieDLPlw7i+OJ0n8nt6lvvMrwMhkvSIwI505byUsY3+oDlqUQbRch/0up6sg
c1eQy+VxQub81bBt9nGPrbxssjfpsGTa6FrQ7j9Rfmp2DvM8dRCl4YQ4GeWR
mGvBUXHz6kEWndP3eHI+83z1UPdK72Tn8nOEpZwoeBd8GYR58Q6SgkLmeRug
J1EkT1l6gQx0VRVty2qAvXoTw+0NS5jnb4Swsl/fhKWUklJ1YOttRSPwaxfK
A5wlTB5X4Kn7tyqT0WVkx32j+ytHNUG5bXaNn76UyacJhLZPBePtKoi9plxb
y2oG1wCe0OtYFZNXMzg5hacuN68lT176WzhyWuBjsc0mg+h6Jr9WWOlqHztu
RAPJHxzLyhW2wqsIzxXHixuZPNvg1JxbN7ZGNZHN/5R6mXa2gb7f433cLS1M
vn+CQBww7S6vjVjrs8OOGsghW6Su42rkTN5yGDNrzFDuoXaiHj2KNzT/KjwY
mXSPc1bB5H8VTJ91p4tmdZKMCRfOcEKuwS6zFPMIlZKpRzvEssP8pmfdJD4T
vS/3nm4HqR8U1wpuMfXpgBNmc30m1HQT02+0PauVHaBJDeVnWfQw9VKAXZLD
WFGBmjz5at3HjVwFNO5jNwSV9TH1U0BJ3tnMSfP6SatghqG55XWo6zgidv3U
z9QTnW/yabKyHE3r26lzfNp1m0RPNK03erN5/mw3DZrWX6mza1bM4mEumvYD
eor16tVSyxs60/5Aa3OmbgiXomm/3NRZbfN+u+0aNO0fdPW5q3v6NWjaTyqd
M+xECRlxaNpf6JjiqJR1Vrd0pv2G9nH8OcdIhqb914V5X7IqaV6Dpv2INmW9
rTn4FE37sxvzrmiRz49H035FKyGz+7XVbcz7c/+iS+vCHxXK0LSf72Derm6D
m73QtL/RYU1mIy2foWm/92De7i+MVfFo2v9oO3mDVdJ3vZj353lAG3qk2btX
oOl8qDFvBWeh/lo0nRd0y1oX98pnaDo/dzFvlYl3ZAKazhO6oWjAcZJxH9b7
83yhHV+oZW980XTe0CKHNtJRgKbzhzaOkDSff4em8/iXzgcvZq36bQmazif6
5dujNwL5aDqvaL+5O9mLe9F0fvt1vhbt2285E03nGb1Itiz4QzSazje6aOiH
V6pGNJ13tIWzxW6J8b0v5h/N228wnLQBTfcB+kPNy7iQQjTdD+hgbff4n/5G
031xX+culyt/2CxF0/2Bdj9SbDZCgKb7BC1tTM9W96Lpfnmg83QD7vdVM9F0
36BTl4UWp+1G0/2D/hfPZOBz
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd1AlM03cUB3A8gA1hYQY8QBioMC90jUhBHvzAiVZRLgkjokOHiwIeCEM6
ghJXQKdsgAroEEQEpojKfR9ylKtAoVUOBVSoIxwTr6rIpNv8/dKX2KRpPmn7
///+733fM/7hiNuPM1VUVOL+e///+elL6hVbZswNgmn5THXbQGtCLQBRjXlS
6PA2UvFrT2KeJBrM5RLdE4Ue7PvzMFJ53Kqo2Js0BpovH519ERINdHhaD/ex
318Gw8qL6+Kd/Iini63ApiMVbOf3nlyvE8D+fw0ucQLqd3KDyPb9gy9UUzJA
n3M/wyrmGLvedVBw1G2NloeSDSei9rT7Z4FaudsHX60T7PrZIFzibX9j8UnC
jV8hTrC6A8nhU0NRRwXsfjmwp9SOrzkWSeZ5DKfcmZUHCtIp9PjjNLt/PliI
yw9xjp8lsXutus77FYB/sPr78fjf2XkKgf/T1qEF72KJxqGzWvzOItAYfy43
aznHzlcC3e5bNhfUXyCR/P6NuyxLoTRVaBAxmsDOWwYBb4SexWsvEYVgTZjd
lXLg+Vzar3MziZ2/AiJNWyy+9E4hP8eczF+qVgWBq0V/kxup7HmqIX+dONPI
IY2EtvkGR1jchUcOk8apKuns+e7Cs9pg0anHGYQrnRv3xrcGcuX1Zm+H/2TP
WwuWRfa2V+dnkdc95dkHkmvhqWODzCUkmz1/HTzu03Gy+eIOyR3Y1/Sgow4W
HUidt0qew+pRD98JLQPvh+eRIzIt2bbZQkjv3uLesqaA1UcIp18fDIqdKiSr
RosUVdwGWJo3sPu3kWJWrwaIHuPoWauVkZEJb32OfyOk800lEucKVr8mGOvS
tjYXV5FM+WfcaylNoH1OVpNef5fVsxnsXfr6qm1qic9UrpuupBmGZGZB+t11
rL4tEJpok9KUICRGM7wOn1IVgYVmwYRjeCOrtwhEc8z/aj3bTAbUZp+ZtGyF
l3xDo8XFIlb/VtArtFi2UredJGneyvA/2AYhO/38LLw6WD/aIXDvEd+0pk7i
Odejpv9KO5i4mlXHOUlZf8QQunlK83P5PaK7QNHnLBWDQN3D1bu6i/WrA9Jn
rOUZ5/aQkS/c/9kj6ICgRdeCeOIHrH8dwO/TMdMy7SdNccs09Aw6wTanN8H/
1iPWz05IyI2eDlv9hGTqfJgvLeqEd8OOTrMyB1l/JbCpyre+DWQkMrHTJNpF
ApGO3ZPeYTLWb7SPXuZah1E07b9U6Q3JofbTAjTNA9rYyNm52OCe0jQfaEXa
kt0BxWial/tKD5i881vuiqb5QVdcb+UPjqJpnrqUTlp5NSopAk3zhQ69HXzB
3bBbaZo3tCdna5pWCZrmr0dpboFhToMrmuYRrct9VRk+hqb57MV6lzaKLCPR
NK9oKVzufWH4AOv9Mb/o3OqA4awSNM3zQ6z3Bge5jxua5ht9WLhwlsE4mua9
D+vNe6bdFYmm+UevFNUaxnzVj/X+OA9oDafEVbxSNJ2PAax3h//6GTvQdF7Q
jTvseGXjaDo/j7DeXToeQVFoOk/o2uzXnHnaj7HfH+cLzXk2UPJyF5rOG/rq
mmYivoGm84fWPprfcPMNms7jE6XD85K3n/4WTecTPfHq1L19sWg6r+jv1wV6
2fej6fwOKt12bNegwQo0nWe0Tckm3/fH0HS+0dmT3zzvqkPTeUfrW+uH5GsP
fTL/6DNhqtMxu9F0H6DfV05EHMxC0/2A9lX0ztnyFk33hUzpHrv6cyYb0XR/
oHm/3F44Mw5N9wm6uO5i6kA/mu6Xp0qbqgq+Ll+BpvsGHb/p0O3EEDTdP+h/
Ab8Hr2U=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd1As01HkUB/CpaDtqdqXU9vA6pYe02NodcvXTg5SskjPZo+fSbhJaItmo
NSjSQRK28UixheRRXk2eeTXegzwnaUhqQ29tsbv9fmfuOTvnzJnzOTPz///+
937v1frJzebAZA6HE/Hv+7/P/78k9uGFWjwPiJzhpnbU3phQC+BgrFJgsmwr
EQW3R2c3h4JKVUdwVAmffR8J39acCstM20uq3FcvH1KIgfnGowtHch3Z74Ww
0JiT+tf0Q8Ru21qBSWMi6LdYXtxR4Mb+fwWKrS8E+/W4E6tf+kYV45PBTHFN
6QN1L3a9a8AJMEwQJh8n6/2C9tU7pwK3dHKPiqsvu346xJrYjv8oOkV4UToN
F41uQrKwIHWi35/dLxNOTolpLSGBZA7/SfzNKdngOKLy5GrNaXb/HLDWVx4o
+i2EhO83aos8dAv+EFg8M7c5x85zG1YZJmi0fxNOlFzOcr2bckEjRqHDvzWC
nS8fxrvOe3TGR5JA756NuwwLYK2vi8mZc1HsvIWwqojr6J0QTSYEeidME+4A
T8iR9vfGsvOLoLnC6my7pZAcD/s9Z/HUIuCPblF72x/PnqcYtr/3Lu5qSiQ+
dU6eAd+XgJOtjoi/KYk9XwmInvkd7n54hfAkKhFvnUrhvqXEdCwhmT1vGSyL
7dvKFfxJXrffST8YVwaDDtUv9CKvs+cvhw/ag3Gz6tJIltSxurOxHBosgldr
62SwetyD1lmWL13tM4mbjCvbqlABXmacTQ65Waw+FZAYtZm7YWUO0R3KnSji
VYJBhNaAbdktVq9KGNK00Ph4LJc8Hd67wMC5CoYHs7essMpn9asGWdwiO22b
QpLyZhrvSnw1pJxxvuHpJ2L1rAEt9+T9K1uKiMPfWTaqzTWwaGTPxrxrJay+
90Hdn1+wlFNGNCfZu55WFIOeS1JouEc5q7cYxmQOX+0fv0ekUxVCxgxrIUlD
d/R2diWrfy2I8yuC/EOryaUZN5KdD9eBir6ob0hwn/WjHvqeH1DVSKwldir8
0p6Eephm57J20uN61p8GUHrkNXNxWiNR/Xqi21rSAL7+LaI9402sX42w1j4k
sNdJQp5+aftxn6AR7Bw1dX1ftrD+NYJ48YyrSxPaSHXEMqX5ak1w0/KLq5t/
bmf9bIL4FqGwit9JUmZ/mivJbYIDJks++bh2s/42Q9T1DYmDWVISGN2kHbqt
GeaIV86tP9/L+t0MnjPfma57+Ig4zE9ZZTbUDDuJttFc88es/xLYJzYf3lkr
I+vjfNaNCySgZXQ0ecBtgOVBAi5ruu5yZQNES9PaOk+tRW6aD/RE0qLdR/LQ
NC+tcku13x9avh1N84MWXav17htC0zy1yX1pxeWgSwFomi+0T4bnBVv1B3LT
vKHtDLYkcfPRNH/tcvNuqWdWbkfTPKJVea/unnyGpvnskPt1QZXYMBBN84qW
gLBjVL1TbppfdFbxkSep+Wia5y6s93qzNw42aJpvtGvFvClqz9E0791Yb4sX
ym2BaJp/9ApxmXqYRg/W+/M8oJV+iNa1KEDT+ZBivRud10zagabzgq7aYWpR
+BxN5+ch1rttNt8jCE3nCV2W/tpgjnIv9vvzfKENXkjzX+5C03lDX9arIQ3X
0XT+0Mq/5lSmvUXTeXwk98nsOKszG9B0PtHDr063OIaj6byi93znbr+uB03n
t0/uOq9dfWo6aDrPaJN8c6cPXmg63+j0Mf2RtnI0nXf0AuMFx3KUH2MeP88/
OuSE4njYbjTdB+gPd4cDDqei6X5AO010TN/8Dk33hUzudtN757U3oun+QFv4
Z8ybHIGm+wSdVx6TKO1B0/3SL/cSRcHSOzpoum/QUeYuGdHH0HT/oP8BXBOX
JA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxd1Ak01XkUB3AJUxpzTKdU9ETRQjJmFHLrF1FvSLZGnVZTmpKSSChnaqyT
OqEUyRKyjEyyZM/y5D2yvcWup0lKSbSoaZOZ6fc7754z75x33vmc997///vf
+71Xe/dhp73ycnJy0f++//v8/0uyLapM28QHbo3bVg7bmhPqYOBFHbWUv7+B
VJzuis0XnwV5T2+v99dc2PcX4MTmVssD4buIwNt4yZBCHBgvdrubFuHGfp8A
HgOTOr6vcidbHFYHrxJehSOFBh+nOB9m/0+DYh4/3/G6N7Hb1/9SMSkdrK1G
q2JEvux6WXDNXVFuRD+AWP4a5trikQ0rE4xLu/mB7Po5wItXGd9sd4qYXNRr
vWSWC1rBGRN7nYPY/W5CsquwKjUghKi5DCblTs6Hhnk9Ae41Yez+BZCZsvqn
QNPTJOpns44LBwohLzdL7PT4DDvPLQg03XE5tv4cUT50RsVfVAT9c/tX9z6P
YucrgYpqu2nJkedJqL/UartpKahr6/eU2cWw85bBGnVpu6fuJTIRbBi4Jrkc
utSXzZrPiWPnrwCl0cxlNcvjSUDkbwU6SpUwPrc8eZpHAnueKlDj7ewPbEki
x5vdfUNWVIP7ZbPOtMKr7PmqYetUrvmQZioxkUyPfuteA4lv/MyTM9LY8/Jg
xCW+OX59OhnrKs/Zn8gDOVPnZv2pmez5a6HkW1ufseEsktfnVt8jrIWNVjlH
VR9ns3rcAfsL1XI+r3LI4QGVgQ0KdfBpX7zcoiW5rD51EBoheGYguEmWDhVN
VJrwoV1HlM1Xy2f14sML86bEwaAC8nR0l4aRhwCenX5+Kk/pFqtfPbjs3zpn
d24RyXgzxSQtqR50UwTvxn1KWD0bwI7/SmPQoYzs+ZjnNFPcAMUh+sPnuBWs
vnfhg2/383SnSqI1aZtnuGIj9Ijzli2yqmb1bgRVJ51e74Aa0qekEPHetAl2
xSYrXGvisfo3gYhj2+lM7pArX/+Z7nGwGQImO+5OEtWxfrTAvkxLM8MgAdky
3aVGmtwCLfNt1E3tG1h/WuFjd/2TBYaNZObsiXv2klY4WvHEfr1BM+uXEEbv
WkgjbVrJ0282fXINFoKr4JGBH1/I+ieEyrZ3bbrjIlIfvVhZnSOCuFjOqSYH
CeunCHYOXrQ4UdlGMmaMz5IUiUDT25IbZ9PB+iuGTWudV8SMdJLQWJHuWQcx
HPSfu/Cr692s32KwJvPDRRG9ZI96xg/WQ2JokkyJiY6Wsv5LYK3v7Nmrqu4T
y8TjFp+DJaDncWaQq/yA5UEC3EJP7rBNP9HWsrcv5rTBJ7XLxseyHrJ8tMHK
Zp2Ads4jMpG6YIdXcRs0qDj+4pX2mOWlHXivdX2BPCF9uu8OLHFshyBu7Qot
w6csP+iKrCb//iE0zVOHzFf0U8KuhKBpvtDHb/jGbNLslJnmDb3FyCZVpQRN
89cls0mh5k2+I5rmET3T5PXtk8/QNJ/dMo+VChpNQ9E0r2gJJHS/1OyRmeYX
nVflNZhdgqZ57pU5ytL6zR4nNM032rNuzmTOMJrm/R7Wmzui2hGKpvlH6zfy
NCPnSbHeX+YBrbwxdim3FE3now/rLfRYOckZTecFLXBewy0bRtP5uY/17pjh
4hOGpvOE5uWMGamp/oX9/jJfaKORvpJX29F03tAphg2k9Q80nT+06pEC/vW3
aDqPD2Q+mZ9o9/taNJ1P9Ojr8Da3KDSdV/TO5d7bLKRoOr/9Mjcf297P0UPT
eUavKlnn/uEYms43Ouf9dy86atF03tEa5hp+BaoPMY9f5h8dEaj4OXIHmu4D
9IfboyEHs9F0P6DdJ7qn/fg3mu6LAZm71tw5r2uFpvsDzQ26MUc+Gk33Cbq4
Nu5qnxRN98sjmRcqBi8q10PTfYO+uO7QjVg/NN0/6H8A6hBE+w==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1: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
eXf+cPk/JuSTHQ==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]], 
        LineBox[CompressedData["
1:eJxdlHs0lOsexxPT2Vs3R6kUdrZoJ932bm+pXz1yS5ZLqWyhqKbkMlEuSe3Q
RKTcRUduyZiQTENGRsadGDNmGAwzzBh3oVKRsPdZ5/nrvGu9613vet73eX6/
3/f7+Wqe97K9uHTJkiWx/9z/ff7/xXeMeaOp7wM/zh/JunL9APrfOxmGTR7q
snMsETOiM+kV7wEkf7L/ziPZ4fV4qFe+08VcOIvqr+3dNqqQDCvucyqtCET8
/RNwou819q68jOyPHSIf5GaA+6U14d6FJPx/FqwPJo4LL1xFVq7SD4S0bFit
LbgXNO+D96NCOFFdU0TxR0a3w1xaPHKhvSjV0dz5Bt4/H/QeGO+00rmF9BN1
OY8MXoKW2vngwMXb+LxCEA1upMR9Ckbr7IbSXsq/gnWkOFmP+x18Ph1iusmX
9o+SUcw5A0G8exFoNi/bouAbiusphvxT5eyHhHtIkRS5MqD1NZCbYsR5GeG4
Pgbw/3z3pMDkPgoNEJk47SsFl9S5292fInG9b2BkWVJK6MuHaJG865Zhehk4
Ge/QmvWKxvUzofeDw9z+1Bh0IzqEvmXZW0DP69zYobG4nwoQla3P3e8ThwLZ
bn53/2CBSRLlSLtrPO6PBd6yH4bzzycgfb5y7Be3SrhcPPmm1iUR91sFycf3
e5y6+AhNd5blX06tAmfaVNDzq0m4/2rgXKrfKSEnI5qY2CDkVoNzsoFPScpj
PI8auChP59Yw/4O8ZCtllgq1IDmQxNIZTMHzqYUTD6LGXTekIr3R14tv9eug
Ro6WSLBNw/Oqgy+9hs9i4tLRyKTzpj0e9XCmds5g7koGnl8DcEpKVmuoZiLK
5x/0s9IaYNXiek/UmInn2Qg6BkbnRoOeogtzNFsVXiO0SuVv3jPIwvN9BwVx
hBu5X7PQZjnHK/cITTDshs5EMZ7heTfB6kzlfOuQbCRepnB/dl8zrKl/z2La
UPD8m8FnmcpxP+0clLLiRbaHJxuIgwHRKUupWI8WOHxn61nTYSqyV7arFKW3
wGkhU/lD+3OsDwc8SyLulDblIpUNiz02fA58Ljb7HvEuD+vFBZH1zb9o3Hw0
surkdxcyF6x3emVN9rzA+v2zPj6rEPm+ADXE/qK4Ub0VLCsGEh7LF2I9W0GR
9XhwVXwhoqydX89/3QpfI2dExr/QsL482NmQPaNaRUOhSa3aD47xICxP9am/
yyusNw8mBprnlhLo6MJGym+mozy46LQlcbqAjvXng3P5uFLz2SJklBp4eIHM
B5PQNInK2mLsBz54GeRUtHCKkeZmG5sS9TYgr0nwsol6jf3RBjH0tW5E2xK0
+FTrjHdJGxB7fucEazCwX9oh5Y+ZiZtTDCTWnnHfdrwdmj7KkYLqSrF/2kFR
4bRa8LM3iEltDpCOtgPacMmiPaIM+0kA1xwoWQ03mChle2ZYyl0BLBfL95K8
y7G/BHC0iVadTnqLAgv8Ek5qdIDnbNytNX4V2G8dMNHc8tnDiIXs91g8Xcno
gH+nP+FS2Szsv04QNt62MT5bifSLNArrjndCEftR4M/TldiPneCgxDhWF1WF
VPQ/lQeNdcJ48PAhG71q7M8u8K0x3H20pRpNl9Y37Qvtgh2HjMcG/WqwX7ug
oCVtqlWzFvHhSdcHDSG82qX7sYhXi/0rhBKLqtqoyDpEq/AeymUIwXhy3uKb
RT32czccIR2fpyo1oBgj088XbLuh6mFSk46oAfu7G+YTQlucXzaiK7Wq8urj
3XBs65ErLyLeYb/3QPiPMweyiE3IynxCSRDaA1a/vX/0p1kz9n8PzLi6lFP3
stH2piqN6J9EIBecmX9sWwvmQQRD7lzlMW0OUrRO0jMvFcFbh6xejXVczIcY
3OxMK+xSuWiE67Ff7oQYIrs8Ag7qtmJexFATwSX+xGxF9ScMzd+Mi6HhRnoK
0ZaH+ekFtanKjvgJHqII1tr5hPXC3dIFHeWHfMxTL6jaWhHidrWhqvzpPeuU
+mCzg/G+qM42zFcfZK16LHQJa0d7JsSMj059QOHlTQgOCDBvfWBwN90+cVqA
Mnc1Is7zPugmDO91oHdg/vpg0sU3JNGvEyldpdflfemDuUMqObsPdmEeJZAR
9esDxeVCFPQq1SrcWALptkZp6lIh5lMCeRuol0msbjT56V4bMUYCWvKJH1bk
9GBeJVD8sWqPJE6Ezv5+zfGwSAL7MiN8R8LEmF8pzMYveoSQexHb30mqriuF
L5vs61mmfZhnKajtlBtgsfvQQYaZ2zd/Keg6Jv4r3EGC+ZYC553vXocxCcqf
3T0lqJaCJ6f76JIQKeZdCtbWpKHtm/rRpgObrtOV+iGNdXiLVlk/5r8fviss
RKw4J0P3bxEWos/0Q4XlOu9bKwZwHvSDonms+lvmAPpWPnnXM7cfrE9EiUyv
DeJ86IdRV+lJlx1DyG2xa/nRr/2gRjtN9x0fwnkhA1N/063ZhcOo07AmTttE
Bnz/4YuHA0ZwfshgeUm85c9mo8j8ToHq0lgZrMybXm2gNobzRAauk1MhNbNj
qKQ6OUMskoEZJdpSKh7H+TIAOXoHExYa3yMdAnlrme4AFJZTtdhlEzhvBuC6
wpjNBsYkSjQjFSRdHwDzIKqKicsUzp8BYJxSkVwamkJ/Awjii10=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[0.01]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
         Thickness[0.01]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
         Thickness[
         0.01]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 16], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"metabolite titer\"", TraditionalForm], 
     PlotRange -> {{0, 2.4*^-15}, {0, 1.5551167385259799`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Openloop\"", "\"top99%\"", "\"top90%\"", "\"top50%\"", "\"top10%\"", 
       "\"top1%\"", "\"hp=10xmean\"", "\"hp=20xmean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    Thickness[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4854030501089325, 0.5742919389978214, 
                    0.6527233115468409], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7281045751633987`", ",", "0.861437908496732`", ",", 
                    "0.9790849673202614`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3947712418300654, 0.5281045751633987, 
                    0.6457516339869281], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9245314446348133`*^9, {3.924531520549653*^9, 3.924531525717411*^9}, 
   3.9245455886927967`*^9, 3.928604842426632*^9, 3.9286049944519386`*^9, {
   3.9286051236192656`*^9, 3.9286051625662313`*^9}, 3.9286053233687983`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"be0b5864-b700-4ec4-97aa-2715d37e0f91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ol500c24hkill", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"ol500c24hkill", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill10", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill10", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill50", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill50", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill90", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill90", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill3000", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill3000", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hpkill6000", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"hpkill6000", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "19"}], "]"}], "]"}]}], "}"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9281904320598264`*^9, 3.9281905277730985`*^9}, {
  3.9281905643899875`*^9, 3.9281906721137323`*^9}, {3.928190715202795*^9, 
  3.9281907921294055`*^9}, {3.9281908618066864`*^9, 3.928190864906065*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"b3f1f871-e7cf-4bbd-9866-fbdde69a877d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  FrameStyle->GrayLevel[0.],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.4854030501089325, 0.5742919389978214, 0.6527233115468409],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7281045751633987`", ",", "0.861437908496732`", ",", 
                    "0.9790849673202614`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7281045751633987, 0.861437908496732, 
                    0.9790849673202614]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.7281045751633987, 0.861437908496732, 0.9790849673202614],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922],
                     RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.3947712418300654, 0.5281045751633987, 0.6457516339869281],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.592156862745098`", ",", "0.792156862745098`", ",", 
                    "0.9686274509803922`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.592156862745098, 0.792156862745098, 0.9686274509803922]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.592156862745098, 0.792156862745098, 0.9686274509803922],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.25882352941176473`, 0.41568627450980394`, 
                    0.6248366013071895],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38823529411764707`", ",", "0.6235294117647059`", ",", 
                    "0.9372549019607843`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38823529411764707`, 0.6235294117647059, 
                    0.9372549019607843]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.38823529411764707`, 0.6235294117647059, 0.9372549019607843],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.13071895424836602`, 0.2797385620915033, 
                    0.5986928104575164],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.19607843137254902`", ",", "0.4196078431372549`", ",", 
                    "0.8980392156862745`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.19607843137254902`, 0.4196078431372549, 
                    0.8980392156862745]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.19607843137254902`, 0.4196078431372549, 0.8980392156862745],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.0784313725490196, 0.1673202614379085, 
                    0.49411764705882355`],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.11764705882352941`", ",", "0.25098039215686274`", ",", 
                    "0.7411764705882353`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.11764705882352941`, 0.25098039215686274`, 
                    0.7411764705882353]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.08104575163398693, 0.13071895424836602`, 
                    0.3764705882352941],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.12156862745098039`", ",", "0.19607843137254902`", ",", 
                    "0.5647058823529412`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.19607843137254902`, 
                    0.5647058823529412]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412],
               Editable->False,
               Selectable->False], ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  
                  FrameStyle->RGBColor[
                   0.06535947712418301, 0.09673202614379087, 
                    0.35032679738562095`],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.09803921568627451`", ",", "0.1450980392156863`", ",", 
                    "0.5254901960784314`"}], "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.09803921568627451, 0.1450980392156863, 
                    0.5254901960784314]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               RGBColor[
               0.09803921568627451, 0.1450980392156863, 0.5254901960784314],
               Editable->False,
               Selectable->False]}], "}"}]}], ",", 
           RowBox[{"AxesStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{
                   {GrayLevel[0], RectangleBox[{0, 0}]}, 
                   {GrayLevel[0], RectangleBox[{1, -1}]}, 
                   {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
                  AspectRatio->1,
                  DefaultBaseStyle->"ColorSwatchGraphics",
                  Frame->True,
                  FrameStyle->GrayLevel[0.],
                  FrameTicks->None,
                  
                  ImageSize->
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                  PlotRangePadding->None],
                 StyleBox[
                  RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance->None,
                BaseStyle->{},
                BaselinePosition->Baseline,
                ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
                DefaultBaseStyle->{},
                Evaluator->Automatic,
                Method->"Preemptive"],
               GrayLevel[0],
               Editable->False,
               Selectable->False], ",", "16"}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"Axes", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"True", ",", "True"}], "}"}]}]}], "]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{114., {5., 15.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{90., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{81., {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 22636616597386809564, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{105., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 22636616597386809564, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{78., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{70., {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 11, 22636616597386809564, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{136., {1., 16.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{121., {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[22636616597386809564 === $SessionID, 
   Out[11], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.9281904687186584`*^9, {3.928190720458418*^9, 3.928190749021968*^9}, 
   3.928190796811675*^9, 3.928190873419424*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c21db6b0-e02a-447d-96d0-b65b5743e9a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"ol500c24hkill", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill10", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill50", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill90", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill99", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill3000", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill3000", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hpkill6000", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"hpkill6000", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Lighter", "[", 
       RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], "]"}], ",", 
      RowBox[{"RGBColor", "[", "\"\<#97caf7\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#639fef\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#326be5\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1e40bd\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#1f3290\>\"", "]"}], ",", "\n", 
      RowBox[{"RGBColor", "[", "\"\<#192586\>\"", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9281909179283285`*^9, 3.928190982055531*^9}, {
  3.9281910351341405`*^9, 3.928191066922082*^9}, {3.92819119590623*^9, 
  3.9281913332414947`*^9}, {3.9281914743651547`*^9, 3.928191479760473*^9}, {
  3.92819309517286*^9, 3.9281930953964596`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"37139ebf-32cc-4dc8-ac2b-31842342e064"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {GrayLevel[0], PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxd0mtIk3EUx/EnL7mVlXNuKy81N7e5Oae7uaXRc1opIZllZYV2tZVWkmVE
lpkE0YWyzBQkkohKevSFQQUVVL4ozRxB8BDdoDf1IoKirNZA7Hbo8vvDGIfz
Od9XT/r6bWXBKEEQWn/8fv7/8/RrzkUFlv1698SCzuNLJkoxPMvinmmrGmPe
jQ/8pq/EZ92JdWO1St6/Fu8WKG9aPPGBHunneysqdLfrzxdPYf9BPPJ5Y2N7
hYr3H8Wzba7W0iI1338W2/0NQWuNhn1YjG7qjGiGdewjYnVf9iP1lmT2o2KK
021XlaaxF+h+vjPuSqGe9+NocfPGh33xBr6Poi6NQVcdm8E+ht7Yn3f6/Wb2
sVSnVrYVX85kP57KewfEwYos9grSfLn3KVDpYK8kr0M/uv9FLvsJpOg/NDL7
jot9PPk2h4WI7GE/iSae+lZx3ORjP5mexG0/oLw2k30CBUbsaeLJWbxPoI7R
cMh2Q+R7FSnyHzT1dc1hn0ilp491jXXMZZ9Ih3tf7j46VMheTdcboopqaD77
JHKpCo2vIsXsk8ie0K3dFy5hr6GDgwu87y4uYq+lE1stlwaby9hrqW2vY8m8
Y0vZ68jQZFpbGipnP5WCq1PKHpesZD+VfOqWr7W6SvbT6H2ovr8+fw37ZBpq
7GkJLV/HPpkuVJ27Gx2oYp9Cw0f6uw9tCLJPJcXT1WdmD21in0r3V1j0dTs2
s08jy86FsQ3BWvbTaczq114qr2M/nQZMt67umrmd/Yw/M3/6sP87/77Xg08H
nw4+HbwBvAG8AbwRvBG8EXwG+AzwGeBN4E3gTeDN4M3gzeAt4C3gLeAzwWeC
zwRvBW8FbwVvA28DbwOfBT4LfBZ4O3g7eDv4bPDZ4LPBO8A7wDvA54DPAZ8D
Pvf/vS0X7nP/983gJfAyeMEJfSf0ndAHL4GXwQsu6Lug74I+eAm8DF5wQ98N
fTf0wUvgZfCCB/oe6HugD14CL4MXvND3Qt8LffASeBm8kAf9POjnQR+8BF4G
L/ig74O+D/rgJfAyeMH/Z/4OYNdo4A==
       "]]}, 
     {RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzHtMjXEcx/FHCqnTzXFOKjrlnM55TufWuXTk9nyVy1zCUko7VKzRtHL/
wxg1tzCEIWYu2fCwTJvLmDGkJcOyxyUS5TJt5jLGmsyl71w+v+3Zs+++r+87
bnZpRqGfIAiVP79f/3+eLu+gX2rW71cnrapdcahY8OdZkZq2KY0z1wakdtNn
0rraTEubuzfvX0oTVGfyr4YGpp6Qf70OadRe6l0VE8T+vaTKv6fq4VPx/qN0
YEd1s7cplO8/S2klQT2XjAln/1UyB5ct/XQjgn2ndL/vnaBNxWr2XVKD5f2S
whQNe4FaCtMXaR2RvO9BdecbxKyMKL73o3ltZbvSj8ew96fnDt+GAncs+wDK
2n7Bfr5Lx74XjRDL2ovK49n3ob2NITW5op59IGWkXAxo/GJg35cm3q37fuad
kX0wmSOmJ4WpzexVtLTJr/XoXAv7EBIrjh2t/2BjH0banOZF9Q8dvA+j18aT
pgE5Tr4Pp84bjzoyu1zsIyhPrsiRb3rYR9Dy2sP+bZe97PtR9NDS4MrWFPZq
WulMdl6xD2evJnfVic3esyPZ96cP76Z/enGJ2Guo9MmVzDIplb2G9OWa4H3t
aey11DNNn26qGcM+kr5WXv2WWz2OfSTFbr/2NKxuPPsBFDr18emB2knso0gs
0Q5+Wj2ZfRQ9yL1uGn5uKvtoKj87esiaoRnsY6hjiia25fk09jEkLl+j3nEq
i/1AuvWm/dydI9nsB1GrZ6u/79oM9oPozbJsqyHcxz6W2icGqsN3z2Kvo6Ij
+yvyTubzXkdfQifUeK2z+V5HF1qOtXTensM+jt56XVLxrkL2cRRSsMXuWz+X
fRxlD7u8saq6iH08+VTC2OiP89nH06MXYlXJ4hL28VRss+1U71nAfjC9mhJQ
umL8QvZ/527/d+72evB68HrwBvAG8AbwCeATwCeAN4I3gjeCN4E3gTeBF8GL
4EXwZvBm8GbwieATwSeCt4C3gLeAt4K3greCt4G3gbeBt4O3g7eDd/y/Nzvg
3vG/Xw1eBq+AF5KgnwT9JOiDl8Er4AUn9J3Qd0IfvAxeAS+4oO+Cvgv64GXw
CnjBDX039N3QBy+DV8ALHuh7oO+BPngZvAJeSIZ+MvSToQ9eBq+AF7zQ90Lf
C33wMngFvDDkz/wDAY01mA==
       "]]}, 
     {RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzH9M1HUcx/EvP75MUYnj8MDD8A4O7jjuuN93WIPvuzMc08xAQVImKT9t
4qVZ/dFPaNRyLK0EHQoDyz/8KkvF5chY5ERBJazdF6Sg1MpWsWmsUMiojPcs
X5/tu+/eez/eT/3GQH55qCAI7/zz3f3/7+lKWkP9Bf++HkkbtyosOBjGsyJV
J/Q+u80m+mfoFSmws3l6zpEI3v8gnRQPnDu/bJb/sHz3/SyZtow0fqWKZH9T
ynQP9XnFubwfl3597Or5NmMU3/8u5fzy/qWarGj2t6WH1FmqJ2pV7KekrtLo
zs3fx7D/U2pdOtbzbkUse4HUO5Yvuh6p4X0IfVyvblo5FMf3ofSlo7xye/8C
9uHU4Dke5hxPYC/S17cm936Wk8g+gkqqPt1+oULHfhYdHh4MF8/o2c+mB3YF
v+iQktlH0rFg7iUaMbCfS2vNwqFn9qeyn0dTO25YDbUm9lEU/lyDxrHbzD6a
DhaNtE8PWngfTc7svj2FK2x8r6LMCVdH4x07+xjylrW8vC/gZB9Ddbu8Q12i
m72axL3anGC3h30sFQ7fvv5bm499LLUkVjXXyYvZz6exvMbK0G8eZq+h2lM3
chr82ew11FezasC+hdjH0Z6Q0+JA8BH28fTqQHz+e0VL2MdT8embvuo7j7Jf
QBv7l/zhOreUvZaqTFn2yc5c9lqy1MgbageXsU+gv6yri49pV7BfSNOPl0zm
169kv5DM5U2lY/F57B+kyWsjdfVv5rNPpOAJ1ev9mtXsE0nsbVK0ZwvYLyL1
pm6qbFzDXkfF3zZPZO98kvc6epteMJz6aB3f62i8vHXUGLWevZ5eLPRXH1z+
FHs9fff8lVz5yAb2etK8MtZz1lzKPonWuCdiL18sY59EkZ98kHu0oYJ9Er1l
H027+kYV+2TafebDjp/anmafTMOBky+1/7iZfTK1fN5t6C0JsDdQU1+/aV7E
VvYGOhByaCpp8Vb2/80zPuXePONTwKeATwWfCj4VvBG8EbwRvAm8CbwJfBr4
NPBp4M3gzeDN4NPBp4NPB28BbwFvAW8FbwVvBZ8BPgN8BngbeBt4G3j7/Xuz
He7t9/vXwMvgFfCCA/oO6DugD14Gr4AXnNB3Qt8JffAyeAW84IK+C/ou6IOX
wSvgBTf03dB3Qx+8DF4BL3ig74G+B/rgZfAKeMELfS/0vdAHL4NXwAs+6Pug
74M+eBm8Al7IvDf/DeXpVLU=
       "]]}, 
     {RGBColor[0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzA9MlHUcx/GHUyEYCBx4J/+5O477w8Fxf4AbYc+X07BGkN5kzNIYKByz
MSyhtUaTMOnPDpZrtEQ2zcy8h7EsGzMs1AqZMUKuPcxakzBNy9X4p2N0ZBnf
ZX5+27Nn331f37emptFTqxAE4cA/373//1561RGFu+LfNyQOH3ht/Kh/Bc+y
qHi+KVgYWOlepj+JI2/ZUmsTQ3l/XRxVO4bvtoW5e6V77zfRej6q/WxUOPtp
0ddYMRIcjOD9rHj+c//XnYci+f622GYP+Mo/WM1+Qfzu0JGBxYYY9oti4JNQ
c/BwLPslMfhVbWDsVyV7gZ4R46Jsm+J5H0Lvd28zdE6s4XsFbS365UqwRc1+
Je1LK1mwlySwX0U3M6OnZhxJ7ENJbe1rLS1PYf8QhXVErK/uSmMfTm1is3dw
hYZ9BB194ouTLo+WfSR1Vat6b3ymYx9F+qmh3XtEPfvVVDmqi757PZN9DI16
A1ZVn5H3MbRr4MOD2nfNfB9LRvvlF0olC3slPXX6Tl3ojRz2SuoxW11bTuSy
j6O5lrrj3nkb+3jyFIqjmm0O9vE0NXbsuHDVyX4NvfL62/Nn9uezV1F3e7Hf
9piLvYp8P5SNXcoqZK+ms4YTPwedRezXUv3ODkVn/SPs19LkwYuXT+0k9gkU
bHlpR9lHxewTSanRNzwZu559IiW7Z/4659vAPonizFEjTZkl7JPpwsv9PeXX
NrJPppDejJSLw4+zT6Evf78wvjheyj6V1hWfGgpTlLNPpUf3lIY3WzexT6Pu
fql2uHkz+3SiQXfduOzhfTp1tJr7pz1b+D6dlqZ7Jlf9UcFeQxs+nigz+SvZ
a+jki9FvvrpvK3sNle4Pu9be+jR7LW1P3nvVcmw7ey3NVnY3ds1VsdfS0rdv
THhd1ex19E1VQtZeXw17Hb33ac3Dqj93sNdRknx6QN1eyz6DiibXzSqtXvYZ
dPjZvlsTC/XsM2jz4Pxt081d7PVEczN+dUgDez3daTkX2bSxkb2ebENn3km6
spt9Jl360XTre9tz7O/Py/7+vOwN4A3gDeCN4I3gjeBN4E3gTeDN4M3gzeCz
wGeBzwJvAW8BbwGfDT4bfDb4HPA54HPAW8FbwVvB5z64N+fCfe6DvhW8BF4G
L9igb4O+DfrgJfAyeMEOfTv07dAHL4GXwQsO6Dug74A+eAm8DF5wQt8JfSf0
wUvgZfBCHvTzoJ8HffASeBm8kA/9fOjnQx+8BF4GLxRAvwD6BdAHL4GXwQuu
/+a/ARecsQU=
       "]]}, 
     {RGBColor[0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzA9MlHUYwPEX7ji5RIJDgfA47//BHff/D8wR78MFkiKI1kHWjbsTlEjl
TxtDWwbLEc7DwmbTrFPUafQ6bRIj1Ms61x8HuFb26qwoWCcWrXIsmyFoGc8s
n9/27t2z5/N8Fesa16yPZRhm9z/fvf//ntzXE+v2/Ps+Zd1PeaLSlwQ486z1
/MGZk61C9xwdY7siZfPv7IrD/TW2MpTi74mI3Me5e2+SfT+yO+2D5Hj0N9hr
Pu3nt9vFuJ9in1iV/seLkvl4f5PVxclC058loL/FlhlaWO5IIvppNs197us3
PUnoZ9lLCV9+E2lIRs/A9st1G68ckOA+BsZrbb7fJ1LwPhYSL+rs1csXoRdC
fPfVzv4LqejjYOuHf64w16ajF8GGluLpE0sy0MdD0b43xOqZxejF0JTw1VDF
7Uz0D8EPlu6rBx6Wo0+A9+7eDf7iUKBfALrDh8XTDUr0iXCms67wmfMq9Ekw
1OiIXDBpcJ8EpwSrdGMDWrxPhgVb9LYCbxZ6CVye+G64Qq5HLwHVs5pNUWEO
+hSYcPb97Es0oV8IYxax922ZBf1CUKcaM18ttaJfBP0jveF1r9nQp4JE550q
mbSjT4VjkTZh0OdEnwatoY7xLTdc6NPBvv9Y+Z1QHvp0KOgPfPxt/VL0j8CO
rc9PuCrz0WdAwXDbWNeGAvQZIG/vrDpUCugXw+DsX25PayF6KYRXu5Ozwm70
UtjxrnRtfloR+kw4Xd8sLN1VjF4Gp2IGCvfIStDLYGYjY9k88jj6JZAX7Y0s
fWsFejl8kTs5OLRzJe7lcKkr2vN6qBzv5cAFneeKGyrQK0BqX+l95chq9AoY
7HgMan5dg14BfVz3LXXZk+iV0PbRT2z1Jx70SninYV5HpacKvRK2CRRBkWAt
ehV8f71Eyo88jV4F/lp9X+ZpL3oVhI9ua64ZqUavhqnyfXz9dj96NZwVVp4J
DQTQqyEg23uxiqlBr4HejFHRskAteg0ENldMnR1dj14DhXvmxXAtdei1EHzh
x0d1hnr0WrgS6zfvn30OvRaaRC/fHP5tE3odRP3j10cFjeh1cNRYJAgfakKv
g/wB5c7jxc3os+7Pc/6/ec5nEZ9NfDbx2cTridcTryfeQLyBeAPxOcTnEJ9D
vJF4I/FG4k3Em4g3EW8m3ky8mXjLg3u9hdxbHvTtxHPE88QzVtK3kr6V9Inn
iOeJZ2ykbyN9G+kTzxHPE8/YSd9O+nbSJ54jnieecZC+g/QdpE88RzxPPOMk
fSfpO0mfeI54nnjGRfou0neRPvEc8TzxTC7p55J+LukTzxHPE8/k3Z//BkBk
R1U=
       "]]}, 
     {RGBColor[
      0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzA1M1HUYwPE/5x0KGN0bKHDSvXHAwb1wd9wBGv+H40UYL2onIQ0VEExh
J5rLlGg1BCNSfCMRt4RZWv01FNIobm68FKXpMulvnG5lBNZgNaewHNCb8czy
+W3//ffs+TxfVWnVM+UChmEO/vM9/P/vKde3C5z5/77P2d1HRm6dXT8PZ54N
ik6sqHQInXP0NjubE3AtTyfC/RgrWZERdMjg6zzNPXzjbFnJ2NWvVs5Hf5d9
o+BBprdpAe7vsWtfjDYEjfvh/RT7pUBy/tkNAegfsD39FbOfzCxEP802uxru
OboD0f/B1l74WvV7rhg9A6/2rM1XuSS494FTh/t27t8ixXsB7FW0F5jaZeiF
IDmw627THTl6EVwYnFiuTQtG7wsVnWfE0Z5F6BfAX2VJZ6dzQ9D7QaeHH1H6
hKH3B+nSQmEIr0C/ECS+YbZDV8LRPwGVymnfrheU6ANh+arddXBAhV4MXa5x
RWGfGvdikB3nd3TM1+K9BKZufnNYVRaBXgqnRUUfX/Pq0EtBlHF51F0RhV4G
23pvhzrkevRyKPKWeoa9MejlcDnFrAy4aEAfBH+ODhv7ek3ogyHFfGPJ0kkz
+mB4x5LTX62woF8EA21jQ/5rrOgXAzc5lC7+wIZ+MZQXHvssUmpHHwLyHd8P
sM0O9KGgsb5SV2JKRB8KObWMz6U7SejDwM/kUV/3LEOvAFm+5113RzJ6BaQ0
HsmLKgb0S2DepWZ4vzoFfTgYq+s7x0450YdDWnrH1WXjqeifAu+nfW5Lajp6
JXzU1uP4+VwG7pWQmpd5YioxE++VUJ3sP1L1QxZ6FWwUFzRo2rPRq4B784w7
tzYXvQpmS3/65cqeFejV8FJS/UH7jZXo1XBu5zrh8zOr0KthX/v5k9/aXeg1
MCxJrQlsXI1eA29/oblpuJ+PXgMJyY2T+7YXoNeCsywhy/xkIXot2Gs2fRcw
+Bx6Lbi8Lxs8rUXoI2CrIHDiRNM69BGwq2Gm/sPVxegj4Lhf20Ty9hL0OpCl
1WxWnSxFr4ORPUdbm37dgF4HdYac1pbscvSRUOwd7Vb1bkQfCcaL+7ucOZvQ
R4LS+freofub0UdB6IBd2NtdiT4Krg++lyVvcaOPAlG2puW3t6rQR0NG65b+
4ltb0UeD8Mc1/kNPb0P/3zzn9Y/mOa8nXk98DPExxMcQH0t8LPGxxBuINxBv
IN5IvJF4I/Em4k3Em4g3P77Xm8m9+XH/GvEc8TzxTBzpx5F+HOkTzxHPE89Y
SN9C+hbSJ54jnieesZK+lfStpE88RzxPPGMjfRvp20ifeI54nngmnvTjST+e
9InniOeJZ+ykbyd9O+kTzxHPE884SN9B+g7SJ54jnieeSXg0/w0nZzdB
       "]]}, 
     {RGBColor[
      0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdzA0w1Hkcx/EtT0s4zyG0i/WwnvZ5ycN+4ooUgyjlIbb0IE1bSUxt3YVL
19Slk5jKY52nmkynUqeYQ9MzU0zNNURdSadGipC463zvutvfzH/+853v6/tm
yzdHJM1kMBi5f32f//95rFUlM/2j/n6tsmN6Hx+uffTP3ClLSYlI5Vuo+U/T
Htm+e2fun5Cr0f65bJWl76nYC2r+NdWf3yvZyxk9/VOG6uQHZSeNCxhIV6f9
kGxLfXpaaL863Q/LBn6Rdxxao0F+VBbOzG/VfqVBfly2S5l99GyGJvlPsuOD
+7OajbXIM3DQ79mV/Hot2s/Azrk7zinXM+l+JnSfqd8+aK9NXh3r+vODfQa0
yWsg4FbQWGejDnlNfNvjOt+gZBZ5Jp71XmIoD+iS18arrsayX/fqkdeBZN3O
GQX79MnrIqq5S6On8Cvyerh0uOHo+jgD8vp41NHXV/negLwB5Ka5sX8cMaS9
AcyKPLiBXkZ0b4jcybi3kpdG5I2QVPa4w6vYmLwRBiJOdHnEm5A3Rpg1dnVz
TMmb4KoOPzRrxJS8Cdhxpy8/bjcjb4ra0fvKsxdmkzdD7XOhoOCUOXkz5Jgq
igqKLMjPRmhJyJOCckvy5rjbOTSuVjeHvDkOZZZ697dZkbfAaHlLUPeoNXlL
ZHOYeRYec8lbIqHyQxvbi0V+Dmpf18RW9LLIWyGk7LvhB7ls8laILErdzw22
JW+NT8as5EQdO/I20HzYYNVx3468DeoX7K9OLbcnPxf5iUNiZyWHPAtemc9S
7qxyoD0LCY+f6sctdqR7FqIXb6pogRN5NkqCMlrq4Uyejfb2Fw9slnDJs+G3
stuqQe5C3hZ7ZqWIS7Ncydti9Yllzjt+diNvixc1dS57XruTt0PyQm7wWwse
eTukzt7mF93CI2+Hl31jnjZpfPL20OyS7VjmISBvj1DDmBzfQQF5e+hzNpYu
vywkz0H2Ff1F274XkecgM+HWpNYaMXkOJDG6m3oXSsg74FzVBnaCUEreARHp
NRfvcj3JO4BboQxRunmRd8SbisPjt73nkXfEkxjLieuR3uQdoTbad1M/w4e8
E8Y2vdp+vsqXvBOyD3TXavf5kXfCm7VJU+XmIO+MkANsz6UtIO+MTPZDn9tp
88k7o6hS2riB70+ei0gbbw3Re3/yXLwMb6ucuBZAnotC5sgR5ZGvybsg8EdO
aeLmBeRdcO2WnseDyIXkXeAUnbTzeEAgeVdcPaMIyfENIu+KPLPzmZfnLyLv
ijD3bTeswoPJu8Gqf7B5MnkxeTfEvBiLb/1hCXk36GY+d9nTGELeHVMTbxWe
H0PJu4NtzZO8Y4eRd0fxmyyf+jth5D0wpyRRa/PucPIe0Ht3r/2YNIK8B/b1
ntHxGY0gz0Ox7zjjcNPS6T2XByWU0rzcSLrngfVtzKj9xqhp/w0PZQp5umvo
MurxUPiU41A6b/m07+RBbO8yNMWLpj4fwxcq92oIVlCfj0jx+Lubviupz8ch
PWlOc2QM9floyGv1HEuLpT4fo23OV86ejqM+HxPpA068p/HUF+CD6GCewiyB
+gLYal6LsmlOoL4AriN+fsNpidQXoPCT99LXfDn1BcjYGvH29/dy6gtwkTnJ
rm1aTX0heuUP6ncfXUN9IbQbGb/d2JpEfSGsmV52PivWUl8IhUZP8WTQOuoL
YeL+U/yCgPXUF0IY2j5VFbSB+iI0qU0aaq1Ipr4IRXXrAi9t30h9EXizzz3W
L06hvgiNKYvCAjs2UV+EYklpnZ7pZuqLcNJ8dxOLr6C+GKd0T+qNdyuoL0bV
yKzrTPEW6n+Zp/tf5um+iu9U8QzJ/z1XotKXqPRVfLWK71TxDKlKX6rSl6r0
VXy1iu9U8QzPf+c/ARwJXTA=
       "]]}, 
     {RGBColor[0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}}, {
     {GrayLevel[0], PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}}, {
     {GrayLevel[0], PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
      PointSize[0.006944444444444445], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
     {GrayLevel[0], PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.7281045751633987, 0.861437908496732, 0.9790849673202614], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.592156862745098, 0.792156862745098, 0.9686274509803922], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.38823529411764707`, 0.6235294117647059, 0.9372549019607843], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.19607843137254902`, 0.4196078431372549, 0.8980392156862745], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.11764705882352941`, 0.25098039215686274`, 0.7411764705882353], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[
      0.12156862745098039`, 0.19607843137254902`, 0.5647058823529412], 
      PointSize[0.006944444444444445], AbsoluteThickness[1.6]}, 
     {RGBColor[0.09803921568627451, 0.1450980392156863, 0.5254901960784314], 
      PointSize[0.006944444444444445], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 16],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24.}, {0, 1.1879573709649937`*^12}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9281909319977283`*^9, 3.9281909594442573`*^9}, {
   3.9281909928998117`*^9, 3.9281910044380655`*^9}, {3.9281910435785837`*^9, 
   3.9281910631884923`*^9}, 3.9281912039855156`*^9, {3.9281912708753185`*^9, 
   3.928191300648336*^9}, 3.9281913353720655`*^9, {3.9281914668948793`*^9, 
   3.9281914814337473`*^9}, 3.928193098323533*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"88d261c2-31c2-4966-8354-bdf678a10ef5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"RandomVariate", "[", 
   RowBox[{"GeometricDistribution", "[", "0.05", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9282441517344294`*^9, 3.9282442138657503`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"af9c2e1d-f7f0-41c4-a605-6c399cf506a4"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.928244161204108*^9, 3.9282442144745913`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"4c0c8521-40fa-4650-9f28-b26c42f51277"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{Automatic, 1272}, {Automatic, -8}},
Magnification:>1.6 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 151, 3, 155, "Title",ExpressionUUID->"ae57e67b-79e3-41cd-8fea-2c2a958474fe"],
Cell[734, 27, 471, 12, 45, "Input",ExpressionUUID->"c397f54f-44bb-480d-89dd-7f58b51ed9ea"],
Cell[1208, 41, 854, 17, 106, "Input",ExpressionUUID->"15c2ecc6-acff-41ad-aff6-86214fa24719"],
Cell[2065, 60, 663, 15, 76, "Input",ExpressionUUID->"f23b05d7-3141-4d9b-b8a0-42a71c42fd2f"],
Cell[2731, 77, 445, 12, 45, "Input",ExpressionUUID->"2d7f7e73-fd9a-4dbc-b789-88d8f2930a6a"],
Cell[CellGroupData[{
Cell[3201, 93, 4098, 110, 256, "Input",ExpressionUUID->"7f94e21d-e414-4157-9610-1485d7f1851e"],
Cell[7302, 205, 136708, 2459, 425, "Output",ExpressionUUID->"6053a0f9-fcb6-4dcd-895f-05e0d3ebf2bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144047, 2669, 4103, 110, 256, "Input",ExpressionUUID->"910f5283-08a4-48d8-9fc0-5e1309e431c8"],
Cell[148153, 2781, 131507, 2374, 425, "Output",ExpressionUUID->"b0a732f6-37a0-4fba-94b1-74ae5da615fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279697, 5160, 3486, 90, 226, "Input",ExpressionUUID->"63e4d3a8-fe19-4527-8665-8ec02ccdcb7d"],
Cell[283186, 5252, 122863, 2234, 418, "Output",ExpressionUUID->"fe406798-99a5-428b-b594-39d13f4cdf14"]
}, Open  ]],
Cell[406064, 7489, 282, 6, 45, "Input",ExpressionUUID->"e312869f-bb70-455d-a241-f03eee791e62"],
Cell[406349, 7497, 282, 6, 45, "Input",ExpressionUUID->"f95a74d8-38ba-46a3-8248-fc206b79dc8d"],
Cell[CellGroupData[{
Cell[406656, 7507, 2787, 71, 226, "Input",ExpressionUUID->"80ea06f0-0527-42b7-9bd7-13c5f250de5b"],
Cell[409446, 7580, 59281, 1163, 434, "Output",ExpressionUUID->"41f81ace-860c-4782-af2d-2bce8af44806"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468764, 8748, 2424, 67, 196, "Input",ExpressionUUID->"a6b8be6b-8a09-4830-950c-1ea35824c549"],
Cell[471191, 8817, 59217, 1161, 419, "Output",ExpressionUUID->"3498c73e-8d1f-498a-b5cd-30195a66dccb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530445, 9983, 2422, 67, 196, "Input",ExpressionUUID->"ac74852b-82f1-45f8-8f02-34f28b0ef391"],
Cell[532870, 10052, 59049, 1154, 419, "Output",ExpressionUUID->"aed21955-34b4-4759-be5a-28151f15aa20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[591956, 11211, 2465, 67, 166, "Input",ExpressionUUID->"73f90aca-18a7-4d30-90ed-a4fc60c4dfd2"],
Cell[594424, 11280, 59124, 1154, 419, "Output",ExpressionUUID->"b7bf02fe-d9a6-489d-bbeb-0062d277bed4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653585, 12439, 2667, 67, 256, "Input",ExpressionUUID->"7db93024-8464-424c-9502-03b8e69685e2"],
Cell[656255, 12508, 37823, 819, 377, "Output",ExpressionUUID->"fc64a2df-cc48-4814-93fa-e872ae929f30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694115, 13332, 1999, 51, 226, "Input",ExpressionUUID->"3dd7bf0c-89bb-40c4-aa11-4fe458585276"],
Cell[696117, 13385, 30110, 651, 377, "Output",ExpressionUUID->"aabf90c8-ae31-42a0-b7cf-004cd4e8348b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[726264, 14041, 2549, 65, 256, "Input",ExpressionUUID->"ccfd6663-7792-421a-af1c-d98c2d5afa64"],
Cell[728816, 14108, 37819, 820, 377, "Output",ExpressionUUID->"de11f3ae-2ccd-4458-a7b6-917af9cb24fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766672, 14933, 2012, 51, 226, "Input",ExpressionUUID->"a4d1b31b-36bd-41c0-a90c-689e3863fef3"],
Cell[768687, 14986, 30106, 651, 385, "Output",ExpressionUUID->"5b1c883d-ea60-45ed-a910-84016d78b5c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798830, 15642, 2297, 50, 286, "Input",ExpressionUUID->"b5ce1fd2-b1aa-40f1-8ea8-2d417774fb0a"],
Cell[801130, 15694, 55079, 1136, 387, "Output",ExpressionUUID->"25fc01ff-3cba-4d65-8a50-6dabca112f14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[856246, 16835, 3671, 89, 316, "Input",ExpressionUUID->"f64539da-c505-462b-98d7-c27237034492"],
Cell[859920, 16926, 61765, 1261, 419, "Output",ExpressionUUID->"be0b5864-b700-4ec4-97aa-2715d37e0f91"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921722, 18192, 4021, 106, 316, "Input",ExpressionUUID->"b3f1f871-e7cf-4bbd-9866-fbdde69a877d"],
Cell[925746, 18300, 31734, 737, 127, "Output",ExpressionUUID->"c21db6b0-e02a-447d-96d0-b65b5743e9a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[957517, 19042, 3816, 99, 316, "Input",ExpressionUUID->"37139ebf-32cc-4dc8-ac2b-31842342e064"],
Cell[961336, 19143, 18279, 325, 353, "Output",ExpressionUUID->"88d261c2-31c2-4966-8354-bdf678a10ef5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979652, 19473, 290, 5, 45, "Input",ExpressionUUID->"af9c2e1d-f7f0-41c4-a605-6c399cf506a4"],
Cell[979945, 19480, 176, 2, 51, "Output",ExpressionUUID->"4c0c8521-40fa-4650-9f28-b26c42f51277"]
}, Open  ]]
}, Open  ]]
}
]
*)

